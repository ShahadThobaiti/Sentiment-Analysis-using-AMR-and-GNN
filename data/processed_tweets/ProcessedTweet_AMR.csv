AMR
"(d / dismiss-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Trump""))
      :ARG1 (q / question-01
            :ARG1 (t / thing
                  :ARG2-of (p2 / price-01
                        :ARG1 (o / oil))))
      :time (p3 / possible-01
            :polarity -
            :ARG1 (n2 / name-01
                  :ARG0 (p4 / person
                        :ARG0-of (r / report-01))
                  :ARG1 (t2 / thing
                        :ARG2-of (p5 / price-01))
                  :medium (t3 / tweet-01)))
      :medium (t4 / tweet-01))"
"(p / possible-01
      :ARG1 (b / buy-01
            :ARG0 (p2 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (g / government-organization
                              :name (n / name
                                    :op1 ""NHS""))
                        :ARG2 (s / staff)))
            :ARG1 (f / food)
            :ARG1-of (c / cause-01
                  :ARG0 (b2 / buy-01
                        :manner (p3 / panic-01))))
      :polarity (a / amr-unknown))"
"(a / announce-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Amazon""))
      :ARG1 (p / plan-01
            :ARG0 c
            :ARG1 (a2 / add-02
                  :ARG0 c
                  :ARG1 (a3 / and
                        :quant 100000
                        :op1 (p2 / position
                              :mod (f / full-time))
                        :op2 (p3 / position
                              :mod (p4 / part-time)))
                  :location (a4 / across
                        :op1 (c2 / country
                              :name (n2 / name
                                    :op1 ""US"")))
                  :purpose (k / keep-up-05
                        :ARG0 c
                        :ARG1 (ii / increase-01
                              :ARG1 (a5 / and
                                    :op1 (c3 / commerce)
                                    :op2 (s / shop-01
                                          :medium (o / online)))
                              :manner (r / rapid))
                        :ARG1-of (c4 / cause-01
                              :ARG0 (l / limit-01
                                    :ARG0 (c5 / coronavirus)))))))"
"(o / or
      :op1 (s / shame
            :domain (p / possible-01
                  :polarity -
                  :ARG1 (h / help-01
                        :ARG0 (s2 / shelf
                              :mod (f / food)
                              :location (s3 / state
                                    :name (n / name
                                          :op1 ""Minnesota"")))
                        :ARG1 (w / waste-01
                              :mod (t / this)))))
      :op2 (p2 / possible-01
            :ARG1 h))"
"(s / scrutinize-01
      :ARG0 (g / government-organization
            :name (n / name
                  :op1 ""US""
                  :op2 ""Senate""))
      :ARG1 (u / use-01
            :ARG0 g
            :ARG1 (k / know-01
                  :ARG0 g
                  :ARG1 (c / crisis
                        :mod (c2 / coronavirus)
                        :ARG1-of (ii / impend-01))
                  :mod (ii2 / insider))
            :ARG2 (s2 / sell-01
                  :ARG0 g
                  :ARG1 (s3 / share)
                  :time (b / before
                        :op1 (p / plummet-01
                              :ARG1 (t / thing
                                    :ARG2-of (p2 / price-01)))))
            :ARG1-of (a / allege-01)))"
"(f / force-01
      :ARG0 (o / outbreak-29
            :ARG1 (c / coronavirus))
      :ARG1 (p / person
            :ARG0-of (a / administrate-01))
      :ARG2 (a2 / act-02
            :ARG0 p
            :time (b / before
                  :op1 (e / expect-01))))"
"(t / talk-01
      :ARG0 (w / we)
      :ARG1 (a / and
            :op1 (a2 / and
                  :op1 (s / store
                        :mod (g / grocery)
                        :mod (l / last))
                  :op2 (r / restrict-01
                        :ARG1 (o / outdoor)))
            :op2 (s2 / stream-03
                  :ARG2 (p / publication
                        :name (n / name
                              :op1 ""MetOpera""))
                  :frequency (r2 / rate-entity-91
                        :ARG3 (t2 / temporal-quantity
                              :quant 1
                              :unit (d / day))))
            :op3 (b / broadcast-01
                  :ARG2 (p2 / publication
                        :name (n2 / name
                              :op1 ""TheTorontoZoo""))
                  :manner (l2 / live))
            :op4 (b2 / broadcast-program
                  :name (n3 / name
                        :op1 ""TigerKing"")
                  :medium (c / company
                        :name (n4 / name
                              :op1 ""Netflix""))))
      :time (c2 / check-in-02
            :ARG0 w
            :mod (t3 / this)
            :frequency r2
            :ARG3 t2
            :quant 1
            :unit (w2 / week)))"
"(a / and
      :op1 (m / make-01
            :ARG0 (c / company
                  :name (n / name
                        :op1 ""SpaceX""))
            :ARG1 (s / sanitizer
                  :beneficiary (h / hand)
                  :poss c))
      :op2 (b / build-01
            :ARG0 c
            :ARG1 (s2 / shield
                  :mod (f / face))
            :purpose (d / donate-01
                  :ARG0 c
                  :ARG2 (f2 / fight-01
                        :ARG1 (c2 / coronavirus)))))"
"(s / say-01
      :ARG0 (s2 / survey
            :name (n / name
                  :op1 ""Kagan""
                  :op2 ""Spring""
                  :op3 ""U.S.""
                  :op4 ""Consumer""
                  :op5 ""Insights"")
            :poss (w / we))
      :ARG1 (ii / increase-01
            :ARG0 (p / pandemic
                  :mod (c / coronavirus))
            :ARG1 (a / appeal-03
                  :ARG0 (c2 / content
                        :mod (v / virtual)
                        :mod (t / type
                              :mod (c3 / certain))))))"
"(e / expect-01
      :ARG0 (p / person
            :ARG0-of (a / analyze-01)
            :ARG0-of (h / have-org-role-91
                  :ARG1 (b / bank
                        :name (n / name
                              :op1 ""UBS""))))
      :ARG1 (h2 / hit-01
            :ARG1 (a2 / and
                  :op1 (g / grow-01
                        :ARG1 (l / loan-01
                              :mod (r / retail)))
                  :op2 (c / collect-01))
            :ARG1-of (c2 / cause-01
                  :ARG0 (a3 / and
                        :op1 (d / distance-01
                              :mod (s / social))
                        :op2 (s2 / spend-01
                              :mod (d2 / discretionary)
                              :ARG1-of (h3 / have-degree-91
                                    :ARG2 (l2 / low-04
                                          :ARG1 s2)
                                    :ARG3 (m / more)))))))"
"(p / possible-01
      :ARG1 (f / find-01
            :ARG1 (a / act-02
                  :ARG0 (c / company
                        :ARG0-of (r / retail-01)
                        :location (c2 / country
                              :name (n / name
                                    :op1 ""UK"")))
                  :topic (p2 / product
                        :name (n2 / name
                              :op1 ""COVID-19""))
                  :mod (l / last))
            :location (u / url-entity
                  :value ""https://www.supermarketmagazine.co.uk/coronavirus-covid-19-latest-actions-uk-retailers.html"")))"
"(r / respond-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Sherrod""
                  :op2 ""Brown"")
            :ARG0-of (h / have-org-role-91
                  :ARG2 (s / senator)))
      :ARG1 (a / and
            :op1 (ii / introduce-02
                  :ARG0 p
                  :ARG1 (l / law
                        :name (n2 / name
                              :op1 ""SmallBusiness""
                              :op2 ""and""
                              :op3 ""Consumer""
                              :op4 ""Debt""
                              :op5 ""Collecting""
                              :op6 ""Emergency""
                              :op7 ""Relief""
                              :op8 ""Act"")))
            :op2 (p2 / propose-01
                  :ARG0 p
                  :ARG1 (a2 / amend-01
                        :ARG1 (l2 / law
                              :name (n3 / name
                                    :op1 ""Fair""
                                    :op2 ""Debt""
                                    :op3 ""Collections""
                                    :op4 "" Practices""
                                    :op5 ""Act"")))))
      :ARG2 (p3 / pandemic
            :name (n4 / name
                  :op1 ""COVID19"")
            :mod (v / virus
                  :mod (c / coronavirus))))"
"(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""DrDenaGrayson""))
      :ARG1 (b / begin-01
            :ARG1 (d / die-01
                  :ARG1 (p2 / person
                        :ARG0-of (w / work-01
                              :ARG1 (g / grocery)))
                  :ARG1-of (c / cause-01
                        :ARG0 (c2 / coronavirus)))
            :ARG0-of (r / raise-01
                  :ARG1 (c3 / concern-01
                        :ARG0 (s2 / safe-01
                              :ARG1 (p3 / person
                                    :ARG0-of (w2 / work-01)
                                    :mod (e / essential)
                                    :mod (t / this))))))
      :time (d2 / date-entity
            :year 2020
            :month 3
            :day 16))"
"(f / foresee-01
      :polarity -
      :ARG0 (o / organization
            :name (n / name
                  :op1 ""Nunavut""))
      :ARG1 (s / short-06
            :ARG2 (f2 / fuel)
            :mod (a / any))
      :ARG1-of (c / cause-01
            :ARG0 (p / pandemic
                  :name (n2 / name
                        :op1 ""COVID-19""))))"
"(s / say-01
      :ARG1 (t / talk-01
            :mode imperative
            :ARG0 (w / we)
            :ARG1 (c / coronavirus))
      :ARG2 (p / person
            :name (n / name
                  :op1 ""Flattenthecurve"")))"
"(m / multi-sentence
      :snt1 (h / have-03
            :ARG0 (s / store
                  :mod (g / grocery))
            :ARG1 (a / and
                  :op1 (p / person
                        :ARG0-of (h2 / have-org-role-91
                              :ARG3 (b / bouncer)))
                  :op2 (l / line)
                  :ARG1-of (r / resemble-01
                        :ARG2 (c / club
                              :mod (d / dance-01)))))
      :snt2 (a2 / and
            :op1 (b2 / be-located-at-91
                  :ARG1 (p2 / person
                        :quant 100
                        :mod (o / only))
                  :ARG2 (s2 / store))
            :op2 (f / full-09
                  :ARG1 (s3 / shelf)
                  :ARG2 (p3 / percentage-entity
                        :value 75))
            :op3 (l2 / limit-01
                  :ARG1 (ii / item
                        :quant (m2 / many))))
      :snt3 (b3 / behave-01
            :ARG0 (e / everyone)
            :ARG1-of (w / well-09)
            :ARG0-of (g2 / give-01
                  :ARG1 (h3 / hope-01
                        :ARG0 (ii2 / i)
                        :ARG1 (f2 / future))
                  :ARG2 ii2)
            :ARG2-of (e2 / except-01
                  :ARG1 (w2 / woman
                        :quant 1
                        :ARG0-of (t / try-01
                              :ARG1 (c2 / cut-02))))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (g / go-02
                  :ARG0 (ii / i)
                  :ARG4 (s / supermarket
                        :ARG1-of (l / local-02))
                  :time (d / date-entity
                        :dayperiod (a2 / afternoon)
                        :mod (t / today)))
            :op2 (f / find-01
                  :polarity -
                  :ARG1 (b / bread)))
      :snt2 (s2 / sure-02
            :ARG0 (ii2 / i)
            :ARG1 (o / out-06
                  :ARG1 (b2 / bread
                        :mod (t2 / this))
                  :ARG2 (d2 / date-entity)
                  :degree (w / well)
                  :condition (g2 / get-01
                        :ARG0 (w2 / we)
                        :ARG1 (s3 / situation
                              :mod (s4 / style
                                    :mod (c / country
                                          :name (n / name
                                                :op1 ""Italy""))))))))"
"(a / ask-02
      :ARG0 (n / nurse
            :ARG0-of (c / care-03
                  :ARG1-of (c2 / critical-03)))
      :ARG1 (s / stop-01
            :ARG0 (p / person)
            :ARG1 (b / buy-01
                  :ARG0 p
                  :ARG1 (f / food
                        :mod (a2 / all))
                  :ARG2 (s2 / supermarket)))
      :ARG2 p
      :purpose (p2 / possible-01
            :ARG1 (b2 / buy-01
                  :ARG0 n
                  :ARG1 (t / thing
                        :ARG1-of (s3 / supply-01))
                  :ARG4 (f2 / family
                        :ARG1-of (h / have-org-role-91
                              :ARG0 n
                              :ARG2 (m / member))))))"
"(p / person
      :name (n / name
            :op1 ""Andrew""
            :op2 ""LaSane"")
      :time (d / date-entity
            :day 18
            :month 3
            :year 2020))"
"(m / multi-sentence
      :snt1 (b / be-located-at-91
            :ARG1 (m2 / mask
                  :name (n / name
                        :op1 ""MadeInChina""
                        :op2 ""#KN95""))
            :ARG2 (h / here)
            :purpose (s / save-02
                  :ARG0 m2
                  :ARG1 (c / country
                        :name (n2 / name
                              :op1 ""America""))))
      :snt2 (g / good-02
            :ARG1 (m3 / mask
                  :mod (t / this))
            :ARG2-of (h2 / have-degree-91
                  :ARG1 m3
                  :ARG3 (m4 / more)
                  :ARG4 (m5 / mask
                        :mod (s2 / string-entity
                              :value ""N95"")))))"
"(p / possible-01
      :ARG1 (b / begin-01
            :ARG1 (t / this)
            :ARG1-of (n / new-01)
            :ARG1-of (ii / instead-of-91
                  :ARG2 (e / end-01
                        :ARG1 (w / world))))
      :polarity (a / amr-unknown))"
"(m / multi-sentence
      :snt1 (s / spread-03
            :ARG0 (s2 / store
                  :mod (g / grocery))
            :ARG1 (p / product
                  :name (n / name
                        :op1 ""COVID-19""))
            :polarity (a / amr-unknown))
      :snt2 (h / have-03
            :ARG0 (w / we)
            :ARG1 (p2 / problem)
            :condition (t / true-01
                  :ARG1 (ii / it))))"
"(m / multi-sentence
      :snt1 (c / crisis
            :mod (e / economy)
            :time (c2 / current))
      :snt2 (s / say-01
            :ARG0 (p / person
                  :mod (c3 / country
                        :name (n / name
                              :op1 ""America""))
                  :quant (n2 / nearly
                        :op1 ""2/3""))
            :ARG1 (a / affect-01
                  :ARG0 (c4 / crisis)
                  :ARG1 p)))"
"(l / let-01
      :ARG1 (p / pray-01
            :ARG0 (w / we
                  :mod (a / all)
                  :ARG1-of (a2 / affect-01
                        :ARG0 (d / disease
                              :name (n / name
                                    :op1 ""CODID-19"")))
                  :ARG2-of (ii / include-01
                        :ARG1 (a3 / and
                              :op1 (p2 / patient)
                              :op2 (p3 / person
                                    :ARG0-of (w2 / work-01
                                          :ARG2 (g / government-organization
                                                :name (n2 / name
                                                      :op1 ""NHS"")))
                                    :ARG0-of (b / brave-02)
                                    :ARG1-of (b2 / brilliant-01)
                                    :poss w)
                              :op3 (p4 / person
                                    :ARG0-of (c / care-03))
                              :op4 (p5 / person
                                    :ARG0-of (w3 / work-01
                                          :ARG2 (e / educate-01)))
                              :op5 (p6 / person
                                    :ARG0-of (d2 / drive-01
                                          :ARG1 (d3 / deliver-01)))
                              :op6 (p7 / person
                                    :ARG0-of (w4 / work-01
                                          :ARG2 (s / supermarket)))
                              :op7 (p8 / person
                                    :ARG1-of (ii2 / isolate-01)
                                    :ARG2-of ii2)
                              :op8 (p9 / person
                                    :ARG0-of (d4 / distancing-01
                                          :ARG2 (s2 / society))))))))"
"(m / multi-sentence
      :snt1 (l / look-02
            :ARG0 (s / store)
            :ARG1 (g / good-02)
            :time (t / today))
      :snt2 m
      :snt3 (f / food
            :quant (p / plenty))
      :snt4 (l2 / limit-01
            :ARG1 (s2 / stock-01
                  :ARG1 (p2 / paper)))
      :snt5 (a / and
            :op1 (c / check-01
                  :polarity -
                  :ARG0 (ii / i)
                  :ARG1 (s3 / sanitizer
                        :mod (h / hand)))
            :op2 (m2 / make-01
                  :ARG0 (ii2 / i)
                  :ARG1 (s4 / sanitizer
                        :mod h)
                  :time (b / before
                        :quant (w / while))))
      :snt6 (p3 / part
            :mod (o / only)
            :ARG0-of (a2 / annoy-01)
            :domain (p4 / person
                  :quant (f2 / few)
                  :ARG1-of (g2 / get-03
                        :ARG2 (c2 / close-10
                              :ARG1 p4
                              :ARG2 ii2))))
      :snt7 (s5 / stay-01
            :mode imperative
            :ARG1 (y / you)
            :ARG3 (a3 / away)
            :mod (e / ew
                  :mode expressive)))"
"(p / possible-01
      :ARG1 (s / shop-01
            :ARG0 (y / you)
            :ARG2 (l / link
                  :location (b / below))
            :time (n / now))
      :ARG1-of (s2 / say-01
            :ARG0 (ii / i)
            :ARG2 (p2 / person
                  :name (n2 / name
                        :op1 ""KronosATI""))))"
"(d / develop-02
      :ARG1 (a / app)
      :ARG3 (c / curb-01
            :ARG0 a
            :ARG1 (t / transmit-01
                  :ARG1 (c2 / coronavirus
                        :mod (n / novel)))))"
"(m / multi-sentence
      :snt1 (r / remind-01
            :ARG1 (o / obligate-01
                  :ARG1 (p / person
                        :ARG0-of (r2 / reside-01)
                        :mod (a / all))
                  :ARG2 (s / stay-01
                        :ARG1 p
                        :ARG3 (h / home)
                        :ARG2-of (e / except-01
                              :ARG1 (a2 / activity-06
                                    :ARG0 p
                                    :mod (e2 / essential)
                                    :example (o2 / or
                                          :op1 (g / go-02
                                                :ARG0 p
                                                :ARG4 (s2 / store
                                                      :mod (g2 / grocery)))
                                          :op2 (p2 / pick-up-04
                                                :ARG0 p
                                                :ARG1 (m2 / medication))))))
                  :ARG1-of (s3 / say-01
                        :ARG0 (o3 / order-01
                              :ARG0 (p3 / person
                                    :name (n / name
                                          :op1 ""Hogan"")
                                    :ARG0-of (h2 / have-org-role-91
                                          :ARG2 (g3 / governor)))
                              :mod (e3 / executive)))))
      :snt2 (s4 / stay-01
            :ARG1 (p4 / person
                  :name (n2 / name
                        :op1 ""StayHomeSaveLives"")))
      :snt3 (p5 / publication
            :name (n3 / name
                  :op1 ""PGCCOVID19"")))"
"(t / thank-01
      :ARG0 (ii / i)
      :ARG1 (p / person
            :name (n / name
                  :op1 ""COVID-19""))
      :ARG2 (t2 / thing
            :ARG2-of (p2 / price-01
                  :ARG1 (g / gas))
            :ARG1-of (c / cheap-02)))"
"(m / multi-sentence
      :snt1 (b / bear-02
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""Bernie""))
            :purpose (m2 / moment
                  :mod (t / this)))
      :snt2 (c / contrast-01
            :ARG1 (p2 / possible-01
                  :polarity -
                  :ARG1 (b2 / beat-03
                        :ARG0 (h / he)
                        :ARG1 (f / fool
                              :ARG0-of (b3 / bumble-01)
                              :ARG1-of (c2 / capable-01
                                    :polarity -
                                    :ARG2 (s / string-01
                                          :ARG0 f
                                          :ARG1 (s2 / sentence)
                                          :manner (t2 / together))
                                    :ARG1-of (r / resemble-01
                                          :ARG2 (p3 / person
                                                :name (n2 / name
                                                      :op1 ""Biden"")
                                                :time (p4 / primary)))))))
            :ARG2 (h2 / have-03
                  :ARG0 h
                  :ARG1 (t3 / thing
                        :ARG2-of (s3 / solve-01)
                        :ARG1-of (r2 / real-04))
                  :location (s4 / shelf
                        :part-of (s5 / supermarket)
                        :ARG1-of (e / empty-02))
                  :ARG1-of (r3 / resemble-01
                        :ARG2 (d / do-02
                              :ARG0 (p5 / person
                                    :mod (e2 / every)
                                    :location (c3 / country
                                          :name (n3 / name
                                                :op1 ""Russia""))
                                    :mod (p6 / political-movement
                                          :name (n4 / name
                                                :op1 ""Communism""))))))))"
"(m / multi-sentence
      :snt1 (s / stay-01
            :mode imperative
            :polite +
            :ARG1 (y / you)
            :location (h / home)
            :condition (p / person
                  :polarity -
                  :ARG0-of (w / work-01)
                  :ARG1-of (k / key-02)
                  :domain y))
      :snt2 (c / contrast-01
            :ARG1 (l / live-01
                  :ARG0 (w2 / we)
                  :time (t / time
                        :ARG1-of (ii / imagine-01
                              :ARG1-of (p2 / possible-01
                                    :polarity -))))
            :ARG2 (m2 / matter-01
                  :ARG1 (ii2 / it)
                  :ARG2 (a / and
                        :op1 l)
                  :op2 (d / die-01)))
      :snt3 (a2 / and
            :op1 (g / go-02
                  :ARG0 (ii3 / i)
                  :ARG4 (w3 / work-01
                        :ARG0 ii3)
                  :beneficiary (y2 / you))
            :op2 (s2 / stay-01
                  :ARG1 y2
                  :location h
                  :beneficiary (ii4 / i)))
      :snt4 (a3 / and
            :op1 (p3 / please)
            :op2 (t2 / thank-01
                  :ARG0 (ii5 / i)
                  :ARG1 y2)))"
"(a / and
      :op1 (s / see-01
            :ARG0 (h / he)
            :ARG1 (g / get-01
                  :ARG0 (m / minimalism)
                  :ARG1 (h2 / hand
                        :mod (u / upper)))
            :mod (a2 / also))
      :op2 (e / expand-01
            :ARG0 m
            :ARG1 (m2 / model-01
                  :ARG1 (b / business)
                  :ARG0-of (t / thrive-01
                        :time (a3 / after
                              :op1 (n / natural-disaster
                                    :name (n2 / name
                                          :op1 ""Corona""))))
                  :ARG2-of (ii / include-01
                        :ARG1 (a4 / and
                              :op1 (c / company
                                    :mod (n3 / native
                                          :mod (d / digital))
                                    :ARG0-of (d2 / direct-02
                                          :ARG1 (p / person
                                                :ARG0-of (c2 / consume-01))))
                              :op2 (s2 / site
                                    :ARG0-of (r / retail-01
                                          :ARG1 (f / fashion))))))))"
"(t / tumble-01
      :ARG0 (l / law
            :name (n / name
                  :op1 ""COVID-19""))
      :ARG1 (p / price-01
            :ARG1 (c / coffee))
      :ARG4 (l2 / low-04
            :ARG1 p
            :mod (r / record)
            :time (b / before
                  :op1 (n2 / now)
                  :duration (t2 / temporal-quantity
                        :quant 10
                        :unit (y / year)))))"
"(m / multi-sentence
      :snt1 (e / emerge-01
            :ARG0 (r / reality
                  :ARG1-of (n / new-01)
                  :topic (r2 / relation-03
                        :ARG0 (s / slash
                              :op1 (p / person
                                    :ARG0-of (c / consume-01))
                              :op2 (p2 / person
                                    :ARG0-of (p3 / provide-01))))))
      :snt2 (t / telehealth
            :mod (j / just
                  :polarity -))
      :snt3 (n2 / normal-02
            :ARG1 (a / and
                  :op1 (m2 / map-01
                        :ARG1 (j2 / journey-01
                              :ARG0 (p4 / patient))
                        :mod (h / home))
                  :op2 (u / use-01
                        :ARG1 (d / data
                              :mod (t2 / that))
                        :ARG2 (d2 / drive-02
                              :ARG0 d
                              :ARG1 (ii / interact-01
                                    :ARG1 (s2 / system
                                          :mod (h2 / healthcare))))))
            :ARG1-of (n3 / new-01))
      :snt4 (s3 / string-entity
            :value ""COVID19"")
      :snt5 (s4 / stay-01
            :location (h3 / home))
      :snt6 (v / virus
            :name (n4 / name
                  :op1 ""Coronavirus"")))"
"(m / multi-sentence
      :snt1 (t / try-01
            :ARG0 (ii / i)
            :ARG1 (h / help-01
                  :ARG0 ii
                  :ARG1 (s / stock-up-02
                        :ARG0 (p / person
                              :location (c / community
                                    :poss ii)
                              :ARG0-of (a / afford-01
                                    :ARG1 s)
                              :ARG1-of (p2 / possible-01
                                    :polarity -)
                              :time (q / quarantine-01
                                    :mod (t2 / this))))
                  :ARG1 (a2 / and
                        :op1 (f / food)
                        :op2 (t3 / toiletry)))
            :ARG2 p)
      :snt2 (d / detail-01
            :ARG1 (a3 / account
                  :poss (ii2 / i))
            :location (h2 / here)
            :mod (c2 / company
                  :name (n / name
                        :op1 ""Oseni""
                        :op2 ""Olamide"")
                  :ARG1-of (n2 / number-01
                        :ARG2 (d2 / date-entity
                              :year 2002
                              :month 7
                              :day 16))
                  :location (b / bank
                        :name (n3 / name
                              :op1 ""Sterling""))))
      :snt3 p2
      :polarity -
      :ARG1 (d3 / do-02
            :ARG0 a2
            :op1 ii2
            :op2 (a4 / alone
                  :domain ii2))
      :ARG1 t2)"
"(s / say-01
      :ARG0 (w / woman
            :ARG0-of (l / look-01
                  :direction (o / over
                        :op1 (s2 / shoulder
                              :part-of (ii / i)))
                  :location (s3 / supermarket)))
      :ARG1 (a / and
            :op1 (t / take-01
                  :ARG0 w
                  :ARG1 (t2 / thing
                        :quant 3)
                  :mod (o2 / only))
            :op2 (p / plenty
                  :beneficiary (e / everyone))
            :ARG0-of (c / cause-01
                  :ARG1 (a2 / and
                        :op1 (b / back-off-11
                              :polite +
                              :mode imperative
                              :ARG0 (y / you))
                        :op2 (r / respect-01
                              :mode imperative
                              :ARG0 y
                              :ARG1 (r2 / rule-01
                                    :ARG3 (d / distance-quantity
                                          :quant 2
                                          :unit (m / meter))))))))"
"(m / mood
      :ARG1-of (b / bad-07)
      :domain (ii / i)
      :time (r / run-02
            :ARG0 (s / someone)
            :direction (b2 / behind
                  :op1 ii))
      :location (s2 / store
            :mod (g / grocery))
      :time (d / date-entity
            :dayperiod (m2 / morning)
            :mod (t / today)))"
"(h / have-condition-91
      :ARG1 (p / possible-01
            :ARG1 (b / become-01
                  :ARG1 (a / and
                        :op1 (v / visit-01
                              :ARG1 (s / supermarket)
                              :ARG1-of (t / time-01))
                        :op2 (r / restrict-01
                              :ARG1 (t2 / transport-01
                                    :ARG1-of (p2 / public-02)))
                        :op3 (h2 / hour
                              :mod (w / work-01)
                              :ARG1-of (a2 / alternate-01)))
                  :ARG2 (n / norm
                        :ARG1-of (n2 / new-01))))
      :ARG2 (f / flatten-01
            :polarity -
            :ARG0 (m / measure-02
                  :ARG0 (c / country
                        :name (n3 / name
                              :op1 ""Australia""))
                  :ARG1 (t3 / thing
                        :name (n4 / name
                              :op1 ""COVID""
                              :op2 19))
                  :mod (l / last))
            :ARG1 (c2 / curve)))"
"(s / say-01
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG1 (s2 / supermarket)
                  :ARG2 (b / boss)))
      :ARG1 (r / remain-01
            :ARG1 (l / limit-01
                  :ARG1 (b2 / buy-01))
            :time (n / now)))"
"(c / cause-01
      :ARG0 (a / and
            :op1 (b / be-located-at-91
                  :ARG1 (w / we
                        :mod (a2 / all))
                  :ARG2 (t / this)
                  :mod (t2 / together))
            :op2 (h / have-degree-91
                  :ARG1 (e / each
                        :ARG1-of (ii / include-91
                              :ARG2 w))
                  :ARG2 (ii2 / important-01
                        :ARG1 e)
                  :ARG3 (e2 / equal)
                  :ARG4 (n / next)))
      :ARG1 (g / go-out-17
            :ARG0 (s / she)
            :ARG1 (w2 / way
                  :poss s)
            :purpose (t3 / thank-01
                  :ARG0 s
                  :ARG1 (p / person
                        :ARG2-of (s2 / staff-01
                              :ARG1 (s3 / supermarket))))
            :ARG1-of (r / resemble-01
                  :polarity -
                  :ARG2 (g2 / government-organization
                        :ARG0-of (g3 / govern-01)
                        :mod (c2 / country
                              :name (n2 / name
                                    :op1 ""UK""))
                        :poss w))))"
"(p / prepare-02
      :ARG0 (b / bank
            :mod (f / food)
            :ARG1-of (l / local-02
                  :ARG2 (c / country
                        :name (n / name
                              :op1 ""Canada""))))
      :ARG2 (ii / increase-01
            :ARG0 (l2 / law
                  :name (n2 / name
                        :op1 ""COVID-19""))
            :ARG1 (d / demand-01)
            :ARG1-of (s / sharp-02)))"
"(r / restrict-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""eBay""))
      :ARG1 (l / listing
            :ARG1-of (n2 / new-01)
            :prep-for (a / and
                  :op1 (p / product
                        :instrument-of (s / sanitize-01
                              :ARG1 (h / hand)))
                  :op2 (p2 / product
                        :instrument-of (m / mask-01
                              :ARG1 (f / face)))))
      :ARG1-of (c2 / cause-01
            :ARG0 (c3 / concern-01
                  :ARG0 (p3 / price-01
                        :ARG1-of (ii / inflate-01)))))"
"(r / recommend-01
      :ARG1 (c / check-01
            :ARG0 (y / you)
            :ARG1 (s / section
                  :mod (p / produce))
            :ARG2 (b / bag))
      :ARG2 y
      :time (f / forget-01
            :ARG0 y
            :ARG1 (g / glove
                  :poss y)
            :location (s2 / store
                  :mod (g2 / grocery))))"
"(m / multi-sentence
      :snt1 (n / need-01
            :ARG0 (y / you)
            :ARG1 (m2 / mask
                  :mod (f / face)
                  :ARG0-of (p / protect-01
                        :ARG2 (v / virus
                              :name (n2 / name
                                    :op1 ""Covid-19""))))
            :polarity (a / amr-unknown))
      :snt2 (c / check-out-05
            :mode imperative
            :ARG0 y
            :ARG1 (m3 / mask
                  :ARG1-of (s / select-01
                        :ARG0 (w / we))
                  :ARG1-of (p2 / price-01
                        :ARG1-of (r / regular-03)))))"
"(s / say-01
      :ARG0 (s2 / source)
      :ARG1 (b / bury-01
            :ARG1 (f / farm
                  :mod (p / poultry)
                  :location (d / district
                        :name (n / name
                              :op1 ""Bulandshahr"")))
            :ARG2 (c / chick
                  :quant (o / over
                        :op1 6000))
            :ARG1-of (r / report-01)
            :manner (l / live-01
                  :ARG0 f)
            :ARG1-of (c2 / cause-01
                  :ARG0 (b2 / become-01
                        :ARG1 (m / maintain-01
                              :ARG1 c)
                        :ARG2 (f2 / feasible
                              :polarity -)
                        :ARG1-of (c3 / cause-01
                              :ARG0 (f3 / fall-01
                                    :ARG1 (t / thing
                                          :ARG2-of (p2 / price-01
                                                :ARG1 (c4 / chicken)))
                                    :ARG2 (d2 / drastic))))))
      :time (d3 / date-entity
            :weekday (t2 / thursday)))"
"(m / multi-sentence
      :snt1 (d / drop-01
            :ARG1 (p / price-01
                  :ARG1 (d2 / data))
            :time (d3 / date-entity
                  :month 4)
            :ARG0-of (c / cause-01
                  :ARG1 (e / expect-01
                        :ARG0 (ii / i)
                        :ARG1 (g / grow-01
                              :ARG1 (r / revenue
                                    :source (d4 / data))
                              :concession (m2 / much
                                    :polarity -)))))
      :snt2 (a / and
            :op1 (d5 / decline-01
                  :ARG1 (r2 / revenue
                        :source (v / voice)))
            :op2 (c2 / change-01
                  :polarity -
                  :ARG0 (p2 / pandemic
                        :name (n / name
                              :op1 ""Covid-19"")
                        :mod (e2 / even))
                  :ARG1 d5)))"
"(m / multi-sentence
      :snt1 (g / go-02
            :ARG0 (y / you)
            :ARG4 (s / supermarket)
            :ARG1-of (ii / include-91
                  :ARG2 (t / thing
                        :quant (f / few)
                        :ARG1-of (d / do-02
                              :ARG0 (w / we)
                              :ARG3 (d2 / distance-01
                                    :ARG0 w
                                    :ARG2 (s2 / society))
                              :ARG1-of (p / possible-01)))))
      :snt2 (c / cause-01
            :ARG0 (o / obligate-01
                  :ARG1 (y2 / you)
                  :ARG2 (v / visit-01
                        :ARG0 y2
                        :ARG1 (s3 / supermarket)
                        :time (f2 / festival
                              :name (n / name
                                    :op1 ""Easter"")
                              :mod (t2 / this))))
            :ARG1 (t3 / tip-05
                  :ARG2 (a / avoid-01
                        :ARG0 y2
                        :ARG1 (g2 / get-01
                              :ARG0 y2
                              :ARG1 (p2 / product
                                    :name (n2 / name
                                          :op1 ""COVID-19""))
                              :time (b / be-located-at-91
                                    :ARG1 y2
                                    :ARG2 (o2 / out-and-about))))
                  :quant (f3 / few)))
      :snt3 (f4 / find-out-03
            :ARG0 (y3 / you)
            :medium (p3 / publication
                  :name (n3 / name
                        :op1 ""Cor""))))"
"(m / multi-sentence
      :snt1 (h / have-03
            :ARG0 (ii / i)
            :ARG1 (v / vacation-01
                  :duration (t / temporal-quantity
                        :quant 170
                        :unit (h2 / hour))
                  :ARG1-of (b / burn-01))
            :time (y / year
                  :mod (t2 / this)))
      :snt2 (g / go-02
            :ARG1 (ii2 / i)
            :ARG4 (a / amr-unknown)
            :time (d / date-entity
                  :year 2020))
      :snt3 (s / store
            :mod (g2 / grocery)
            :mod (a2 / all
                  :polarity -)))"
"(c / complete-01
      :ARG0 (ii / i)
      :ARG1 (t / task
            :poss ii
            :mod (e / essential)
            :ARG2-of (ii2 / include-91
                  :ARG1 (a / and
                        :op1 (p / pharmacy)
                        :op2 (o / office
                              :mod (p2 / post))
                        :op3 (s / store
                              :mod (g / grocery))
                        :op4 (h / home)))))"
"(n / notice-01
      :ARG0 (ii / i)
      :ARG1 (ii2 / increase-01
            :ARG1 (p / price-01
                  :ARG1 (a / and
                        :op1 (f / food
                              :mod (o / other))
                        :op2 (s / supply-01
                              :mod (o2 / other))))))"
"(c / contrast-01
      :ARG1 (p / possible-01
            :ARG1 (g / go-01
                  :ARG1 (t / thing
                        :ARG2-of (p2 / price-01
                              :ARG1 (g2 / gas)))
                  :ARG2 (l / low-04
                        :ARG1 t
                        :ARG3 (m / monetary-quantity
                              :quant 0.99
                              :unit (d / dollar)))))
      :ARG2 (p3 / possible-01
            :ARG1 (g3 / go-01
                  :ARG1 (t2 / thing
                        :ARG2-of (p4 / price-01
                              :ARG1 (p5 / paper
                                    :purpose (t3 / toilet))))
                  :ARG2 (u / up-02
                        :ARG1 t2
                        :ARG4 (r / rate-entity-91
                              :ARG1 (m2 / monetary-quantity
                                    :quant 3.29
                                    :unit (d2 / dollar))
                              :ARG2 (r2 / roll
                                    :quant 1))))))"
"(u / update-01
      :ARG0 (g / government-organization
            :name (n / name
                  :op1 ""FDA""))
      :ARG1 (g2 / guideline
            :poss g
            :beneficiary (s / supermarket))
      :manner (a / ask-02
            :ARG0 g
            :ARG1 (d / discontinue-01
                  :ARG0 (c / company
                        :ARG0-of (e / employ-01))
                  :ARG1 (a2 / and
                        :op1 (b / bar
                              :mod (s2 / salad))
                        :op2 (b2 / buffet)
                        :op3 (s3 / station
                              :ARG0-of (s4 / serve-02
                                    :ARG1 (b3 / beverage)))
                        :ARG0-of (r / require-01
                              :ARG1 (u2 / use-01
                                    :ARG0 (c2 / customer)
                                    :ARG1 (o / or
                                          :op1 (u3 / utensil
                                                :mod (c3 / common))
                                          :op2 (t / thing
                                                :ARG0-of (d2 / dispense-01))))
                              :ARG2 c2)))
            :ARG2 c))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (s / study-01
                  :ARG0 (ii / i)
                  :duration (m2 / most
                        :ARG3-of (ii2 / include-91
                              :ARG2 (d / date-entity
                                    :year 2018)))
                  :mod (f / full-time))
            :op2 (h / have-03
                  :ARG0 ii
                  :ARG1 (ii3 / income
                        :quant (l / little
                              :degree (v / very)))))
      :snt2 (t / take-01
            :ARG0 (ii4 / i)
            :ARG1 (j / job
                  :mod (r / retail-01))
            :time (f2 / final)
            :time (d2 / date-entity
                  :year 2019)
            :time (a2 / after
                  :op1 (f3 / find-01
                        :polarity -
                        :ARG0 ii4
                        :ARG1 (e / employ-01
                              :ARG1 ii4
                              :ARG2 (ii5 / industry
                                    :ARG2-of (f4 / finish-01
                                          :ARG0 ii4
                                          :ARG1 (s2 / school)
                                          :mod (j2 / just)))))))
      :snt3 (c / close-01
            :ARG1 (s3 / store)
            :time (n / now)
            :ARG1-of (c2 / cause-01
                  :ARG0 (l2 / law
                        :name (n2 / name
                              :op1 ""COVID-19"")))))"
"(c / clap-01
      :ARG0 (w / we)
      :beneficiary (p / person
            :ARG0-of (c2 / care-03
                  :ARG1 w))
      :mod (a / again)
      :time (d / date-entity
            :time ""18:00""
            :dayperiod (n / night)
            :mod (t / today)))"
"(l / lose-02
      :ARG0 (c / company
            :name (n / name
                  :op1 ""COCOBOD"")
            :ARG0-of (r / regulate-01
                  :ARG1 (s / sector
                        :mod (c2 / cocoa)
                        :location (c3 / country
                              :name (n2 / name
                                    :op1 ""Ghana"")))))
      :ARG1 (m / monetary-quantity
            :quant 1000000000
            :unit (d / dollar))
      :ARG1-of (c4 / cause-01
            :ARG0 (d2 / drop-01
                  :ARG1 (t / thing
                        :ARG2-of (p / price-01
                              :ARG1 (c5 / cocoa))))))"
"(a / and
      :op1 (w / wash-01
            :mode imperative
            :ARG0 (y / you
                  :part (h / hand))
            :ARG1 h)
      :op2 (o / or
            :op1 (h2 / hoard-01
                  :polarity -
                  :ARG0 y
                  :ARG1 (a2 / and
                        :op1 (f / food)
                        :op2 (p / paper
                              :purpose (t / toilet))))
            :op2 (s / stockpile-01
                  :polarity -
                  :ARG0 y
                  :ARG1 a2))
      :op3 (s2 / stay-01
            :ARG1 y
            :ARG3 (ii / inform-01
                  :ARG1 y
                  :ARG2 (c / coronavirus))))"
"(t / thankful-02
      :ARG0 (w / we)
      :ARG1 (p / person
            :ARG0-of (w2 / work-01)
            :mod (e / essential)
            :ARG2-of (ii / include-01
                  :ARG1 (a / and
                        :op1 (p2 / person
                              :ARG0-of (w3 / work-01
                                    :ARG1 (h / healthcare)))
                        :op2 (p3 / policeman)
                        :op3 (w4 / woman))
                  :op3 (p4 / person
                        :ARG1-of (e2 / employ-01
                              :ARG2 (t2 / transport-01
                                    :ARG1-of (p5 / public-02))))
                  :op4 (p6 / person
                        :ARG0-of (t3 / teach-01))
                  :op5 (p7 / person
                        :ARG0-of (w5 / work-01
                              :ARG1 (e3 / electricity)))
                  :op6 (p8 / person
                        :ARG0-of (c / collect-01
                              :ARG1 (g / garbage)))
                  :op7 (p9 / person
                        :ARG1-of (e4 / employ-01
                              :ARG2 (s / store
                                    :mod (g2 / grocery))))
                  :op8 (p10 / person
                        :ARG1-of (e5 / employ-01
                              :ARG2 (w6 / work-01
                                    :ARG1 (w7 / water))))
                  :op9 (p11 / person
                        :ARG1-of (e6 / employ-01
                              :ARG2 (g3 / government-organization
                                    :name (n / name
                                          :op1 ""ISI""))))
                  :op10 (o / other
                        :quant (m / many))))
      :mod (a2 / all)
      :ARG0-of (k / keep-02
            :ARG1 (r / run-01
                  :ARG0 p
                  :ARG1 (s2 / society
                        :poss w)))
      :time (t4 / today))"
"(e / explore-01
      :ARG0 (s / series
            :mod (t / this))
      :ARG1 (t2 / topic
            :ARG0-of (d / drive-02
                  :ARG1 (c / change-01
                        :ARG1 (a / and
                              :op1 (a2 / attitude
                                    :poss (p / person
                                          :ARG0-of (c2 / consume-01)))
                              :op2 (b / behave-01
                                    :ARG0 p))
                        :ARG1-of (b2 / bring-on-06
                              :ARG0 (p2 / pandemic
                                    :name (n / name
                                          :op1 ""COVID-19"")))))
            :ARG2-of (ii / include-01
                  :ARG1 (a3 / and
                        :op1 (t3 / time
                              :time-of (e2 / expect-01
                                    :ARG0 (p3 / person
                                          :ARG0-of (c3 / consume-01)
                                          :mod (g / globe))
                                    :ARG1 (e3 / end-01
                                          :ARG1 p2
                                          :mod (t4 / this)))))
                  :op2 (t5 / thing
                        :ARG1-of (p4 / prioritize-01
                              :ARG0 p))
                  :op3 (a4 / approach-02
                        :ARG0 p
                        :ARG1 (f / finance
                              :poss p)
                        :manner (a5 / amr-unknown)))))"
(a / amr-empty)
"(m / multi-sentence
      :snt1 (b / buy-01
            :ARG0 (p / person)
            :ARG1 (p2 / pack
                  :quant 2
                  :consist-of (r / roll
                        :quant 24
                        :purpose (t / toilet)))
            :mod (s / still))
      :snt2 (m2 / make-02
            :ARG0 (ii / it)
            :ARG1 (w / wonder-01
                  :ARG0 (y / you)
                  :ARG1 (n / number
                        :quant-of (a / asshole
                              :ARG1-of (h / have-03
                                    :ARG0 (p3 / person)
                                    :ARG1-of (t2 / think-01
                                          :ARG0 p3)))))))"
"(w / well-09
      :ARG1 (ii / industry)
      :time (n / now
            :mod (r / right)))"
"(h / have-03
      :ARG0 (c / company
            :name (n / name
                  :op1 ""IrwinToy""))
      :ARG1 (a / amp
            :mod (s / surgery-01)
            :quant (l / lot)
            :ARG1-of (s2 / sell-01
                  :ARG1-of (p / price-01
                        :ARG2 (r / reasonable-02)))))"
"(a / anticipate-01
      :ARG0 (o / organization
            :name (n / name
                  :op1 ""Regina""
                  :op2 ""Food""
                  :op3 ""Bank""))
      :ARG1 (c / contrast-01
            :ARG1 (a2 / and
                  :op1 (d / demand-01)
                  :op2 (u / use-01)
                  :ARG1-of (h / have-quant-91
                        :ARG3 (m / more)))
            :ARG2 (a3 / and
                  :op1 (s / supply-01)
                  :op2 (d2 / donate-01)
                  :ARG1-of (h2 / have-quant-91
                        :ARG3 (l / less))))
      :ARG1-of (c2 / cause-01
            :ARG0 (l2 / law
                  :name (n2 / name
                        :op1 ""COVID-19""))))"
"(m / multi-sentence
      :snt1 (s / shop-01
            :polarity (a / amr-unknown)
            :ARG0 (y / you)
            :ARG1 (g / grocery))
      :snt2 (p / possible-01
            :ARG1 (s2 / shop-01
                  :ARG0 (p2 / person
                        :mod (e / elderly))
                  :ARG2 (f / facility
                        :name (n / name
                              :op1 ""Food""
                              :op2 ""Bazaar""
                              :op3 ""Supermarket"")
                        :location (r / road
                              :name (n2 / name
                                    :op1 ""Northern""
                                    :op2 ""Boulevard"")))
                  :frequency (r2 / rate-entity-91
                        :ARG3 (t / temporal-quantity
                              :quant 1
                              :unit (d / day)))
                  :time (d2 / date-interval
                        :op1 (d3 / date-entity
                              :time ""7:00"")
                        :op2 (d4 / date-entity
                              :time ""8:00""))))
      :snt3 (o / open-01
            :ARG1 (f2 / facility
                  :name (n3 / name
                        :op1 ""City""
                        :op2 ""Chemist"")
                  :location (r3 / road
                        :name (n4 / name
                              :op1 ""44th""
                              :op2 ""Dr"")))
            :mod (a2 / also))
      :snt4 (l / let-know-07
            :mode imperative
            :ARG0 (y2 / you)
            :ARG1 (p3 / person
                  :mod (s3 / senior)
                  :part-of (l2 / life
                        :poss y2)))
      :snt5 (c / check-01
            :mode imperative
            :ARG0 (y3 / you)
            :ARG1 (s4 / site
                  :poss (w / we))
            :ARG2 (ii / information
                  :mod (m2 / more)
                  :topic (b / business
                        :mod (l3 / law
                              :name (n5 / name
                                    :op1 ""Liability"")))))
      :snt6 (s5 / support-01))"
"(c / cause-01
      :ARG0 (g / go-01
            :polarity -
            :ARG1 (ii / i)
            :ARG4 (s / supermarket)
            :time (u / until
                  :op1 (d / date-entity
                        :weekday (t / tuesday))))
      :ARG1 (t2 / time
            :time-of (a / and
                  :op1 (r / relax-01
                        :ARG1 ii)
                  :op2 (s2 / stay-01
                        :ARG1 ii
                        :location (h / home))
                  :op3 (e / eat-01
                        :ARG0 ii
                        :ARG1 (e2 / egg
                              :mod (f / festival
                                    :name (n / name
                                          :op1 ""Easter"")))))
            :domain (n2 / now)))"
"(m / multi-sentence
      :snt1 (n / need-01
            :ARG0 (a / amr-unknown)
            :ARG1 (g / gas
                  :quant (s / some)))
      :snt2 (c / cause-01
            :ARG0 (d / deal
                  :name (n2 / name
                        :op1 ""CODID-19""))
            :ARG1 (l / low-04
                  :ARG1 (t / thing
                        :ARG2-of (p / price-01)))))"
"(a / and
      :op1 (p / produce-01
            :ARG0 (c / company
                  :location (c2 / county
                        :name (n / name
                              :op1 ""York"")))
            :ARG1 (s / sanitizer
                  :beneficiary (h / hand)))
      :op2 (d / donate-01
            :ARG0 c
            :ARG1 s
            :ARG2 (p2 / person
                  :ARG0-of (r / respond-01
                        :ord (o / ordinal-entity
                              :value 1)))))"
"(g / go-02
      :ARG0 (ii / i)
      :ARG4 (s / section
            :mod (p / produce)
            :part-of (s2 / supermarket
                  :ARG1-of (l / local-02)
                  :location (r / road
                        :name (n / name
                              :op1 ""College""
                              :op2 ""St""))
                  :poss ii))
      :time (d / date-entity
            :dayperiod (m / morning)
            :mod (t / today)))"
"(p / produce-01
      :ARG0 (c / company
            :ARG0-of (m / manufacture-01
                  :ARG1 (p2 / polish
                        :mod (n / nail))))
      :ARG1 (p3 / polish
            :mod (n2 / nail)
            :ARG1-of (b / base-02
                  :ARG2 (a / alcohol)))
      :ARG3 (p4 / person
            :quant 58000
            :ARG0-of (h / have-03
                  :polarity -
                  :ARG1 (h2 / home))
            :ARG0-of (l / live-01
                  :location (c2 / city
                        :name (n3 / name
                              :op1 ""Los""
                              :op2 ""Angeles""))))
      :purpose (a2 / attempt-01
            :ARG0 c
            :ARG1 (h3 / help-01
                  :ARG0 c
                  :ARG1 (s / stop-01
                        :ARG0 c
                        :ARG1 (s2 / spread-02
                              :ARG1 (d / disease))))))"
"(s / struggle-02
      :ARG0 (p / person
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (ii / i)
                  :ARG2 (c / client))
            :quant (m / many)
            :ARG1-of (ii2 / include-91)
            :ARG2-of ii2)
      :ARG1 (k / know-01
            :ARG0 p
            :ARG1 (e / event
                  :mod (n / next)))
      :ARG0-of (c2 / cause-01
            :ARG1 (d / decide-01
                  :ARG0 (w / we)
                  :ARG1 (s2 / start-01
                        :ARG0 w
                        :ARG1 (r / research-01
                              :ARG0 w
                              :ARG1 (ii3 / impact-01
                                    :ARG0 (l / law
                                          :name (n2 / name
                                                :op1 ""COVID-19""))
                                    :ARG1 (b / behave-01
                                          :ARG0 (p2 / person
                                                :ARG0-of (c3 / consume-01)))))))))"
"(t / tell-01
      :ARG0 (ii / i)
      :ARG1 (o / or
            :op1 (s / step-01
                  :ARG1 (m / man
                        :location (b / behind
                              :op1 ii)
                        :ARG1-of (l / line-up-02
                              :location (s2 / store
                                    :mod (g / grocery))))
                  :ARG2 (b2 / back
                        :op1 (d / distance-quantity
                              :quant 2
                              :unit (m2 / meter))))
            :op2 (h / head
                  :ARG0 ii
                  :ARG1 m))
      :ARG2 m)"
"(a / and
      :op1 (e / equip-01
            :ARG0 (y / you)
            :ARG1 (s / school
                  :poss (w / we))
            :ARG2 (t / thing
                  :ARG1-of (r / resemble-01
                        :ARG2 (s2 / school
                              :mod (c / country
                                    :name (n / name
                                          :op1 ""Singapore"")))))
            :condition (w2 / want-01
                  :ARG0 y
                  :ARG1 (u / use-01
                        :ARG0 y
                        :ARG1 c
                        :ARG2 (e2 / example))))
      :op2 (p / possible-01
            :polarity -
            :ARG1 (c2 / compare-01
                  :ARG0 y)
            :condition (h / have-polarity-91
                  :ARG1 e
                  :ARG2 -)))"
"(m / multi-sentence
      :snt1 (h / hear-01
            :ARG0 (ii / i)
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""Michael""
                        :op2 ""Bolton""))
            :ARG2 (r / radio)
            :time (j / just))
      :snt2 (h2 / have-degree-91
            :ARG1 (t / this)
            :ARG2 (g / good-02)
            :ARG3 (m2 / most)
            :ARG5 (p2 / part
                  :part-of (c / crisis))
            :ARG1-of (h3 / have-degree-91
                  :ARG2 (g2 / good-02
                        :ARG1 p2
                        :mod (e / even))
                  :ARG3 (m3 / more)
                  :ARG4 (r2 / reduce-01
                        :ARG1 (m4 / monetary-quantity
                              :ARG2-of (p3 / price-01
                                    :ARG1 (f / fuel)))
                        :mod (h4 / huge)))
            :time (s / so-far)))"
"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (c2 / cause-01
                  :ARG0 (s / shift-01
                        :ARG1 (d / distribute-01)
                        :time (c3 / change-01
                              :ARG1 (d2 / demand-01)))
                  :ARG1 (p / part
                        :mod (l / large)
                        :part-of (s2 / shelf
                              :ARG1-of (e / empty-02)))
                  :mod (j / just))
            :ARG2 (c4 / concern-01
                  :ARG0 (f / factor
                        :mod (p2 / potential)
                        :mod (o / other))))
      :snt2 (h / have-concession-91
            :ARG1 (h2 / hear-01
                  :polarity -
                  :ARG0 (ii / i)
                  :ARG1 (m2 / much)
                  :ARG2 (t / this)
                  :time (r / recent))))"
"(s / say-01
      :ARG0 (p / person
            :ARG1-of (e / expert-01))
      :ARG1 (p2 / possible-01
            :ARG1 (r / remain-01
                  :ARG1 (p3 / price-01
                        :ARG1 (o / oil))
                  :ARG3 (l / low-04
                        :ARG1 p3
                        :ARG2-of (c / compare-01))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (d / decline-01
                              :ARG1 (d2 / demand-01
                                    :mod (g / globe))
                              :location (c3 / country
                                    :name (n / name
                                          :op1 ""US"")
                                    :mod (e2 / especially))
                              :time (s2 / situation
                                    :name (n2 / name
                                          :op1 ""COVID-19"")))))
            :concession (e3 / even-if
                  :op1 (r2 / reach-01
                        :ARG1 (c4 / consensus
                              :topic (c5 / cut-02
                                    :ARG1 (s3 / supply-01)))))))"
"(b / be-temporally-at-91
      :ARG1 (b2 / boycott-01
            :ARG0 (p / person
                  :ARG0-of (c / consume-01)
                  :location (g / globe))
            :ARG1 (p2 / product
                  :ARG1-of (m / make-01
                        :ARG0 (c2 / country
                              :name (n / name
                                    :op1 ""China"")))
                  :mod (a / all)))
      :ARG2 (n2 / now))"
"(ii / interview-01
      :ARG0 (y / you)
      :ARG1 (s / sanitize-01
            :ARG1 (h / hand))
      :polarity (a / amr-unknown)
      :time (d / date-entity
            :year 2020)
      :ARG1-of (c / cause-01
            :ARG0 (l / law
                  :name (n / name
                        :op1 ""COVID-19""))))"
"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (t / try-01
                  :ARG0 (ii / i)
                  :ARG1 (d / discuss-01
                        :ARG0 ii
                        :ARG2 (s / someone)
                        :manner (r / respect-01)
                        :location (s2 / store
                              :mod (g / grocery)))
                  :time (y / yesterday))
            :ARG2 (l / listen-01
                  :polarity -
                  :ARG0 s
                  :ARG1 ii))
      :snt2 (t2 / think-01
            :ARG0 (h / he)
            :ARG1 (a / and
                  :op1 (k / know-01
                        :ARG0 h
                        :ARG1 (e / everything))
                  :op2 (f / fake-02
                        :ARG1 (n / news
                              :mod (a2 / all))))))"
"(n / need-01
      :ARG0 (p / person
            :ARG0-of (s / shop-01
                  :ARG1 (c / clothes
                        :mod (s2 / summer))
                  :medium (o / online)))
      :ARG1 (r / remember-01
            :ARG0 p
            :ARG1 (p2 / possible-01
                  :ARG1 (w / wear-01
                        :polarity -
                        :ARG0 p
                        :ARG1 c
                        :duration (w2 / while)))))"
"(s / show-01
      :ARG1 (p / person
            :name (n / name
                  :op1 ""Richard"")
            :ARG0-of (f / follow-02
                  :ARG1 (p2 / policy-01)
                  :manner (w / wear-01
                        :ARG0 p
                        :ARG1 (g / glove))))
      :location (h / here))"
"(m / multi-sentence
      :snt1 (l / likely-01
            :ARG1 (c / catch-01
                  :ARG0 (y / you)
                  :ARG1 (v / virus)
                  :ARG2 (o / or
                        :op1 (s / supermarket)
                        :op2 (p / person
                              :ARG0-of (d / drive-01
                                    :ARG1 (d2 / deliver-01)))))
            :ARG2-of (h / have-degree-91
                  :ARG1 c
                  :ARG3 (m2 / more)
                  :ARG4 (c2 / catch-01
                        :ARG0 y
                        :ARG1 v
                        :ARG2 (b / be-located-at-91
                              :ARG1 y
                              :ARG2 (p2 / pub)
                              :accompanier (p3 / person
                                    :ARG0-of (h2 / have-rel-role-91
                                          :ARG1 y
                                          :ARG2 (m3 / mate)))))))
      :snt2 (e / expose-01
            :ARG0 v
            :mod (t / this)
            :mod (c3 / coronirus))
      :ARG1 (e2 / equal-01
            :polarity -
            :ARG3 (s2 / society))
      :ARG1-of (r / real-04)
      :ARG1-of (c4 / cause-01
            :ARG0 (t2 / test-01
                  :ARG1 (c5 / celebrity)
                  :ARG2 (p4 / positive)
                  :time (h3 / hole-up-01
                        :ARG0 c5
                        :ARG1 (h4 / hotel
                              :mod (l2 / luxury))))))"
"(g / get-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (s / something
            :mod (e / else))
      :time (s2 / stock-up-02
            :ARG0 y
            :purpose (d / distant-02
                  :mod (s3 / social)))
      :condition (h / have-03
            :ARG0 (ii / item)
            :ARG1 (t / thing
                  :ARG1-of (s4 / symbolize-01
                        :ARG2 (t2 / thing
                              :name (n / name
                                    :op1 ""WIC""))))
            :location (b / beside
                  :op1 (t3 / thing
                        :ARG2-of (p / price-01)))))"
"(s / see-01
      :ARG0 (ii / i)
      :ARG1 (c / cart
            :quant 2
            :ARG1-of (f / full-09
                  :ARG2 (p / product
                        :name (n / name
                              :op1 ""Desperados""))))
      :location (s2 / store
            :mod (g / grocery))
      :time (y / yesterday))"
"(e / encourage-01
      :ARG0 (w / we)
      :ARG1 (p / person
            :ARG1-of (ii / impact-01
                  :ARG0 (a / and
                        :op1 (h / hour
                              :time-of (s / shop-01
                                    :ARG0 p
                                    :ARG2 (s2 / supermarket)))
                        :op2 (c / change-01
                              :ARG1 (s3 / serve-01
                                    :ARG1 (d / deliver-01))))))
      :ARG2 (c2 / contact-01
            :ARG0 p
            :ARG1 (s4 / store
                  :ARG1-of (l / local-02
                        :ARG2 p))
            :purpose (d2 / develop-01
                  :mod (l2 / last))))"
"(e / evidence-01
      :ARG1 (ii / impact-01
            :ARG0 (p / pandemic
                  :mod (c / coronavirus))
            :ARG1 (a / and
                  :op1 (c2 / chain
                        :mod (s / supply-01))
                  :op2 (a2 / access-01
                        :ARG1 (m / market
                              :mod (p2 / person
                                    :ARG0-of (c3 / consume-01))))))
      :time (n / now))"
"(t / turn-01
      :ARG1 (l / light
            :ARG1-of (r / red-02)
            :mod (e / every))
      :ARG2 (g / green-02
            :ARG1 l)
      :manner (e2 / eventual))"
"(a / announce-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Maxine""
                  :op2 ""Waters"")
            :ARG0-of (h / have-org-role-91
                  :ARG1 (c / committee)
                  :ARG2 (c2 / chairman)))
      :ARG1 (p2 / plan-01
            :ARG0 c
            :ARG1 (a2 / and
                  :op1 (s / stimulate-01
                        :mod (f / finance)
                        :mod (c3 / comprehensive))
                  :op2 (r / respond-01
                        :ARG1 (p3 / pandemic
                              :mod (c4 / coronavirus))
                        :ARG2 (p4 / policy-01
                              :ARG2 (p5 / public))))))"
"(h / have-03
      :ARG0 (a / amr-unknown)
      :ARG1 (r / roll-01
            :ARG1 (p / paper
                  :purpose (t / toilet)))
      :ARG1-of (h2 / have-03
            :ARG0 (ii / i)
            :ARG1-of (p2 / possible-01)))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (g / go-02
                  :ARG0 (ii / i)
                  :ARG4 (s / store
                        :mod (g2 / grocery))
                  :mod (j / just)
                  :ord (o / ordinal-entity
                        :value 1
                        :range (t / temporal-quantity
                              :quant 2
                              :unit (w / week))))
            :op2 (o2 / overwhelm-01
                  :ARG0 s
                  :degree (r / really)))
      :snt2 (a2 / and
            :op1 (p / person
                  :ARG1-of (h / have-quant-91
                        :ARG2 (m2 / many)
                        :ARG3 (s2 / so))
                  :part (f / face))
            :op2 (t2 / touch-01
                  :ARG0 p
                  :ARG1 f))
      :snt3 (w2 / want-01
            :ARG0 (ii2 / i)
            :ARG1 (o3 / over-01
                  :ARG1 (t3 / this))
            :mod (j2 / just)))"
"(t / thank-01
      :ARG1 (a / and
            :op1 (p / person
                  :ARG0-of (w / work-01
                        :ARG1 (m / medicine))
                  :poss (w2 / we))
            :op2 (p2 / person
                  :ARG1-of (e / employ-01
                        :ARG0 (s / store
                              :mod (g / grocery))))
            :op3 (p3 / person
                  :ARG0-of (d / drive-01
                        :ARG1 (t2 / truck)))
            :op4 (p4 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (m2 / military
                              :name (n / name
                                    :op1 ""National""
                                    :op2 ""Guard"")))))
      :ARG2 (a2 / and
            :op1 (k / keep-02
                  :ARG1 (t3 / turn-01
                        :ARG1 (w3 / wheel
                              :part-of (c / country
                                    :poss w2))))
            :op2 (s2 / step-up-03
                  :ARG1 (c2 / call-11
                        :ARG1 (d2 / duty)))
            :time (o / outbreak-29
                  :ARG1 (d3 / disease
                        :name n
                        :op1 ""coronavirus""))
            :mod (t4 / this)
            :ARG1-of (ii / include-91
                  :ARG2 (a3 / and
                        :op1 (o2 / organization
                              :name n
                              :op1 ""COVID19""
                              :op2-of ii)))))"
"(m / multi-sentence
      :snt1 (g / get-03
            :ARG1 (p / person
                  :ARG0-of (w / work-01))
            :ARG2 (s / sick-05
                  :ARG1 p))
      :snt2 (n / notice-01
            :ARG0 (y / you)
            :ARG1 (r / remain-01
                  :ARG1 (v / volume
                        :quant-of (s2 / shop-01)
                        :location (s3 / store
                              :ARG1-of (l / local-02)
                              :poss y))
                  :ARG3 (h / high-02
                        :ARG1 v)))
      :snt3 (a / and
            :op2 (a2 / and
                  :op1 (e / exhaust-01
                        :ARG1 (t / team
                              :mod (s4 / store)
                              :poss (w2 / we)
                              :mod (ii / incredible)))
                  :op2 g
                  :ARG1 (p2 / person
                        :ARG0-of (w3 / work-01)
                        :ARG1-of s)))
      :concession (s5 / stable-03
            :ARG1 (f / flow-01
                  :ARG1 (g2 / good))))"
"(m / multi-sentence
      :snt1 (h / have-condition-91
            :ARG1 (p / possible-01
                  :ARG1 (h2 / have-03
                        :ARG0 (t / they)
                        :ARG1 (s / sue-02
                              :ARG1 t
                              :ARG1-of (l / legitimate-02)))
                  :polarity (a / amr-unknown))
            :ARG2 (a2 / and
                  :op1 (r / require-01
                        :ARG1 (w / work-01
                              :ARG0 (p2 / person
                                    :ARG0-of (w2 / work-01
                                          :ARG2 (s2 / store
                                                :ARG1-of (o / open-09
                                                      :ARG2 (p3 / public))))
                                    :mod (r2 / retail-01))
                              :ARG2 s2)
                        :ARG2 p2)
                  :op2 (g / get-01
                        :ARG0 p2
                        :ARG1 (p4 / product
                              :name (n / name
                                    :op1 ""COD-19"")))))
      :snt2 (c / cause-01
            :ARG0 (t2 / think-01
                  :ARG0 (ii / i)
                  :ARG1 (h3 / have-03
                        :ARG0 (y / you)
                        :ARG1 (p5 / person
                              :ARG0-of (h4 / have-rel-role-91
                                    :ARG1 y
                                    :ARG2 (c2 / client))
                              :mod (p6 / potential))
                        :degree (g2 / galore)
                        :ARG1-of c
                        :ARG0 (t3 / this)))))"
"(a / allow-01
      :ARG0 (o / order-01
            :mod (e / executive)
            :mod (l / last))
      :ARG1 (d / deliver-01
            :ARG0 (a2 / and
                  :op1 (b / brewery)
                  :op2 (w / winery)
                  :op3 (b2 / bar)
                  :op4 (r / restaurant))
            :ARG1 (a3 / alcohol)
            :ARG2 (p / person
                  :ARG0-of (c / consume-01))
            :ARG1-of (d2 / direct-02))
      :ARG0-of (c2 / change-01
            :ARG0-of (p2 / provide-01
                  :ARG1 (s / stream-02
                        :ARG1 (r2 / revenue)
                        :ARG2 (b3 / business
                              :ARG1-of (h / hit-01
                                    :ARG0 (c3 / close-01)
                                    :ARG1-of (h2 / hard-02)))
                        :ARG1-of (n / need-01
                              :degree (m / much)))
                  :ARG2 b3
                  :ARG1-of (p3 / possible-01))))"
"(b / begin-01
      :ARG1 (d / decrease-01
            :ARG1 (p / price-01
                  :ARG1 (g / gas))
            :location (ii / island
                  :name (n / name
                        :op1 ""Long""
                        :op2 ""Island""))
            :ARG1-of (e / effect-03
                  :ARG0 (v / virus
                        :name (n2 / name
                              :op1 ""Corona""))
                  :mod (s / side)))
      :ARG1-of (n3 / notice-01
            :ARG0 (y / you)
            :ARG1-of (p2 / possible-01)))"
"(ii / increase-01
      :ARG1 (d / demand-01
            :ARG1 (ii2 / item
                  :mod (s / staple)
                  :example (a / and
                        :op1 (g / grain)
                        :op2 (m / milk)
                        :op3 (ii3 / item
                              :consist-of (p / paper))))
            :location (s2 / store
                  :mod (g2 / grocery)
                  :location (c / country
                        :name (n / name
                              :op1 ""US""))))
      :time (s3 / since
            :op1 (d2 / declare-01
                  :ARG0 (o / organization
                        :name (n2 / name
                              :op1 ""World""
                              :op2 ""Health""
                              :op3 ""Organization""))
                  :ARG2 (p2 / pandemic))))"
"(s / say-01
      :ARG0 (p / publication
            :name (n / name
                  :op1 ""Covid-19""))
      :ARG1 (s2 / say-01
            :ARG0 (p2 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (c / company
                              :name (n2 / name
                                    :op1 ""Godrej""))
                        :ARG2 (o / officer
                              :mod (c2 / chief)
                              :mod (e / executive)
                              :topic (c3 / consume-01))))
            :ARG1 (s3 / see-01
                  :ARG0 (s4 / store
                        :name (n3 / name
                              :op1 ""Kirana""))
                  :ARG1 (r / resurge-01))))"
"(p / possible-01
      :ARG1 (t / try-01
            :ARG0 (y / you)
            :ARG1 (t2 / this))
      :condition (f / find-01
            :ARG0 y
            :ARG1 (b / bare-02
                  :ARG1 (s / shelf
                        :part-of (s2 / supermarket)))))"
"(p / possible-01
      :ARG1 (p2 / provide-01
            :ARG0 (y / you)
            :ARG1 (d / data
                  :topic (n / number
                        :quant-of (p3 / person
                              :ARG1-of (d2 / die-01
                                    :ARG1-of (c / cause-01
                                          :ARG0 (w / work-01
                                                :ARG0 p3
                                                :ARG1 (o / or
                                                      :op1 (s / supermarket)
                                                      :op2 (s2 / store
                                                            :mod (f / food))
                                                      :op3 (c2 / chemist))))
                                    :ARG1-of c
                                    :ARG0 (d3 / disease
                                          :name (n2 / name
                                                :op1 ""Covid-19"")))))))
      :polarity (a / amr-unknown))"
"(m / multi-sentence
      :snt1 (r / right-06
            :ARG1 (w / we)
            :ARG2 (n / need-01
                  :ARG0 w
                  :ARG1 (g / get-back-10
                        :ARG1 (p / process-01
                              :ARG1 (m2 / meat
                                    :poss w))
                        :ARG2 (c / country
                              :name (n2 / name
                                    :op1 ""USA"")))))
      :snt2 (ii / issue-01
            :ARG0 (c2 / company
                  :name (n3 / name
                        :op1 ""Smithfield"")
                  :ARG1-of (ii2 / include-91
                        :ARG2 (c3 / company
                              :ARG0-of (p2 / produce-01
                                    :ARG1 (m3 / meat))
                              :ARG1-of (h / have-degree-91
                                    :ARG2 (l / large)
                                    :ARG3 (m4 / most)
                                    :ARG5 (c4 / country
                                          :name (n4 / name
                                                :op1 ""America""))))))
            :ARG1 (w2 / warn-01
                  :ARG0 c2
                  :ARG1 (p3 / potential
                        :domain (ii3 / impact-01
                              :ARG0 (c5 / coronavirus)
                              :ARG1 (s / supply-01
                                    :ARG2 (s2 / store
                                          :mod (g2 / grocery))))))))"
"(m / multi-sentence
      :snt1 (b / be-located-at-91
            :ARG1 (ii / i)
            :ARG2 (q / queue-01
                  :ARG1 ii
                  :purpose (b2 / buy-01
                        :ARG0 ii
                        :ARG1 (ii2 / item
                              :mod (e / essential))
                        :ARG2 (s / supermarket
                              :ARG1-of (l / local-02)
                              :poss ii))
                  :ARG1-of (h / have-degree-91
                        :ARG2 (s2 / spaced-out)
                        :ARG3 (m2 / most)
                        :ARG5 (q2 / queue-01
                              :ARG1 ii
                              :time (e2 / ever))))
            :time (c / current))
      :snt2 (b3 / be-located-at-91
            :polarity -
            :ARG1 (ii3 / i)
            :ARG2 (s3 / shop)
            :time (s4 / since
                  :op1 (s5 / start-01
                        :ARG1 (l2 / lock-down-06)))))"
"(l / leave-17
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (s / space)
      :beneficiary (a / and
            :op1 y
            :op2 (w / we)))"
"(a / affect-01
      :ARG0 (a2 / and
            :op1 (ii / impact-01
                  :ARG0 (l / law
                        :name (n / name
                              :op1 ""COVID-19"")))
            :op2 (f / fall-01
                  :ARG1 (p / price-01
                        :ARG1 (c / commodity))))
      :ARG1 (r / revenue
            :mod (f2 / finance))
      :ARG2 (n2 / negative-02))"
"(r / resemble-01
      :ARG1 (p / pack
            :consist-of (p2 / paper
                  :purpose (t / toilet))
            :mod (l / last)
            :location (s / store))
      :ARG2 (s2 / song
            :mod (t2 / this)))"
"(l / loot-01
      :ARG1 (s / supermarket
            :poss (ii / i))
      :mod (t / too))"
"(s / send-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (m / monetary-quantity
            :quant 15000
            :unit (d / dollar))
      :ARG2 (ii / i)
      :purpose (p / possible-01
            :ARG1 (a / and
                  :op1 (b / buy-01
                        :ARG0 ii
                        :ARG1 (f / food))
                  :op2 (d2 / die-01
                        :polarity -
                        :ARG1 ii
                        :manner (ii2 / isolate-01
                              :ARG1 ii))))
      :time (b2 / before
            :op1 (g / give-01
                  :ARG0 y
                  :ARG1 m
                  :ARG2 (s2 / someone)
                  :purpose (b3 / build-01
                        :ARG0 s2
                        :ARG1 (a2 / app
                              :name (n / name
                                    :op1 ""COVID-19"")
                              :instrument-of (d3 / detect-01))))))"
"(m / multi-sentence
      :snt1 (g / go-on-15
            :ARG1 (s / scam-01
                  :mod (o / organization
                        :name (n / name
                              :op1 ""COVID-19""))
                  :quant (m2 / multiple))
            :time (n2 / now
                  :mod (r / right)))
      :snt2 (g2 / go-02
            :mode imperative
            :polite +
            :ARG0 (y / you)
            :ARG4 (t / there)
            :purpose (g3 / get-01
                  :ARG0 y
                  :ARG1 (ii / information))))"
"(s / shut-down-05
      :polarity -
      :ARG0 (v / virus)
      :ARG1 (m / mosque
            :location (c / country
                  :name (n / name
                        :op1 ""Pakistan""))))"
"(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""DrDenaGrayson""))
      :time (d / date-entity
            :day 18
            :month 3
            :year 2020))"
"(f / find-01
      :ARG0 (ii / i)
      :ARG1 (t / this)
      :location (c / company
            :name (n / name
                  :op1 ""Target"")))"
"(s / shop-01
      :ARG0 (ii / i)
      :mod (o / online)
      :purpose (g / get-through-13
            :ARG0 ii
            :ARG1 (s2 / stuff
                  :mod (p / product
                        :name (n / name
                              :op1 ""COVID-19""))
                  :mod (t / this)))
      :mod (j / just))"
(a / amr-empty)
"(a / and
      :op1 (w / warn-01
            :ARG0 (g / government-organization
                  :name (n / name
                        :op1 ""FTC""))
            :ARG1 (s / scam-01
                  :ARG1-of (r / relate-01
                        :ARG2 (c / coronavirus)))
            :ARG2 (p / person))
      :op2 (p2 / provide-01
            :ARG0 g
            :ARG1 (t / tip-05
                  :ARG2 (t2 / thing
                        :manner-of (a2 / avoid-01
                              :ARG0 p
                              :ARG1 s)))
            :ARG2 p))"
"(m / meet-03
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Trump"")
            :ARG0-of (h / have-org-role-91
                  :ARG2 (p2 / president)))
      :ARG1 (a / and
            :op1 (p3 / person
                  :ARG0-of (h2 / have-org-role-91
                        :ARG1 (c / company
                              :name (n2 / name
                                    :op1 ""Exxon""))
                        :ARG2 (o / officer
                              :mod (e / executive))))
            :op2 (p4 / person
                  :ARG0-of (h3 / have-org-role-91
                        :ARG1 (c2 / company
                              :name (n3 / name
                                    :op1 ""Chevron""))
                        :ARG2 (o2 / officer
                              :mod (e2 / executive))))
            :op3 (p5 / person
                  :ARG0-of (h4 / have-org-role-91
                        :ARG1 (c3 / company
                              :name (n4 / name
                                    :op1 ""Occidental""
                                    :op2 ""Petroleum""))
                        :ARG2 (o3 / officer
                              :mod (e3 / executive))))
            :op4 (p6 / person
                  :ARG0-of (h5 / have-org-role-91
                        :ARG1 (c4 / company
                              :name (n5 / name
                                    :op1 ""Devil""
                                    :op2 ""Energy""))
                        :ARG2 (o4 / officer
                              :mod (e4 / executive))))
            :op5 (p7 / person
                  :ARG0-of (h6 / have-org-role-91
                        :ARG1 (c5 / company
                              :name (n6 / name
                                    :op1 ""Phillips""
                                    :op2 ""66""))
                        :ARG2 (o5 / officer
                              :mod (e5 / executive))))
            :op6 (p8 / person
                  :name (n7 / name
                        :op1 ""Harold""
                        :op2 ""Hamm"")
                  :ARG0-of (h7 / have-org-role-91
                        :ARG1 (c6 / company
                              :name (n8 / name
                                    :op1 ""Continental""
                                    :op2 ""Resources""))
                        :ARG2 (o6 / officer
                              :mod (e6 / executive))
                        :time (f / former))))
      :time (a2 / after
            :op1 (c7 / call-02
                  :mod (p9 / phone-01)
                  :mod (t / this))))"
"(g / go-02
      :ARG0 (w / we)
      :ARG4 (o / organization
            :name (n / name
                  :op1 ""Sam's""
                  :op2 ""Club""))
      :ARG1-of (c / cause-01
            :ARG0 (n2 / need-01
                  :ARG0 w
                  :ARG1 (p / paper
                        :purpose (t / toilet)))))"
"(m / multi-sentence
      :snt1 (ii / include-01
            :ARG0 (c / company
                  :name (n / name
                        :op1 ""eWay""))
            :ARG1 (c2 / chat-01
                  :medium (w / web)
                  :ARG1-of (d / dedicate-01)
                  :beneficiary (c3 / client)
                  :ARG2-of (a / available-02
                        :time (d2 / date-interval
                              :op1 (d3 / date-entity
                                    :time ""9:00""
                                    :weekday (w2 / wednesday))
                              :op2 (d4 / date-entity
                                    :time ""17:00""
                                    :weekday w2))))
            :time (n2 / now))
      :snt2 (p / possible-01
            :ARG1 (t / track-01
                  :ARG0 (c4 / client)
                  :ARG1 (p2 / progress-01
                        :ARG1 (c5 / case-03
                              :ARG2 c4))
                  :source (l / location
                        :location-of (t2 / they))
                  :frequency (r / rate-entity-91
                        :ARG1 (t3 / temporal-quantity
                              :quant 24
                              :unit (h / hour))
                        :ARG2 (t4 / temporal-quantity
                              :quant 1
                              :unit (d5 / day))
                        :ARG3 (t5 / temporal-quantity
                              :quant 1
                              :unit (w3 / weekday))
                        :ARG4 (t6 / temporal-quantity
                              :quant 7
                              :unit (d6 / day))))
            :mod (a2 / also)))"
"(r / respect-01
      :ARG1 (p / person
            :ARG0-of (w / work-01
                  :ARG2 (s / supermarket))
            :ARG1-of (o / obligate-01
                  :ARG2 (d / deal-01
                        :ARG0 p
                        :ARG2 (c / customer
                              :mod (a / arrogant))
                        :time (p2 / pandemic
                              :name (n / name
                                    :op1 ""Covid-19""))))))"
"(t / test-01
      :ARG0 (m / market)
      :ARG1 (s / support-01)
      :ARG1-of (f / follow-01
            :ARG2 (s2 / slide-01
                  :ARG1 m
                  :ARG2 (m2 / more-than
                        :op1 (p / percentage-entity
                              :value 60))
                  :time (s3 / since
                        :op1 (s4 / start-01
                              :ARG1 (y / year)))
                  :ARG1-of (c / cause-01
                        :ARG0 (ii / impact-01
                              :ARG0 ii
                              :ARG1 (d / demand-01
                                    :mod (g / globe)))))))"
"(m / multi-sentence
      :snt1 (w / watch-01
            :ARG0 (ii / i)
            :ARG1 (a / and
                  :op1 (r / remove-01
                        :ARG0 (p / person
                              :part (h / hand
                                    :ARG1-of (g / glove-01)))
                        :ARG1 (g2 / glove-01)
                        :purpose (u / use-01
                              :ARG0 p
                              :ARG1 (p2 / phone
                                    :poss p))
                        :location (s / store
                              :mod (g3 / grocery)))
                  :op2 (r2 / reapply-02
                        :ARG0 p
                        :ARG1 g2
                        :time (t / then)
                        :location (ii2 / inside-out))))
      :snt2 (a2 / and
            :op1 (p3 / pull-01
                  :ARG0 (t2 / they
                        :part h)
                  :ARG1 (m2 / mask
                        :poss t2)
                  :ARG2 (d / down)
                  :purpose (r3 / read-01
                        :ARG0 t2
                        :ARG1 (l / label-01
                              :ARG1 (p4 / product))))
            :op2 (r4 / reach-01
                  :ARG0 t2
                  :direction (u2 / up)
                  :instrument h
                  :purpose (r5 / reapply-02
                        :ARG0 t2
                        :ARG1 (m3 / mask
                              :poss t2
                              :location (a3 / and
                                    :op1 (ii3 / inside-out)
                                    :op2 (u3 / upside
                                          :op1 d)))))
            :time (t3 / then)))"
"(s / switch-01
      :ARG1 (m / manufacture-01)
      :ARG2 (p / produce-01
            :ARG1 (a / and
                  :op1 (s2 / supply-01
                        :mod (m2 / medicine))
                  :op2 (s3 / sanitize-01
                        :ARG1 (h / hand))
                  :op3 (m3 / mask))
            :subevent-of (b / battle-01
                  :ARG1 (c / coronavirus)
                  :mod (ii / international)))
      :ARG3 (m4 / make-01
            :ARG1 (a2 / and
                  :op1 (c2 / car)
                  :op2 (w / whiskey)
                  :op3 (c3 / cosmetics))))"
"(ii / increase-01
      :ARG1 (t / thing
            :ARG2-of (p / price-01
                  :ARG1 (a / and
                        :op1 (g / good)
                        :op2 (t2 / transport-01))))
      :ARG2 (s / significant-02)
      :location (c / city
            :name (n / name
                  :op1 ""Lagos""))
      :time (s2 / since
            :op1 (b / break-out-30
                  :ARG1 (m / military
                        :name (n2 / name
                              :op1 ""COVID-19"")))))"
"(m / multi-sentence
      :snt1 (c / company
            :name (n / name
                  :op1 ""Walmart"")
            :domain (v / version
                  :ARG1-of (r / retail-01)
                  :mod (v2 / virus
                        :mod (c2 / coronavirus)))
            :ARG0-of (c3 / cause-01
                  :ARG1 (s / shut-down-05
                        :polarity -
                        :ARG1 c
                        :ARG1-of (c4 / cause-01
                              :ARG0 (a / amr-unknown)))))
      :snt2 (a2 / and
            :op1 (p / pack-01
                  :ARG1 (s2 / store))
            :op2 (p2 / practice-01
                  :polarity -
                  :ARG0 (t / they)
                  :ARG1 (d / distance-01
                        :ARG1 t
                        :ARG2 (s3 / social-03)))))"
"(o / or
      :op1 (p / panic-01
            :polarity -
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (b / buy-01
                  :ARG0 y))
      :op2 (h / hoard-01
            :polarity -
            :mode imperative
            :ARG0 y)
      :ARG1-of (c / cause-01
            :ARG0 (g / get-through-13
                  :ARG0 (w / we)
                  :ARG1 (t / this)
                  :manner (t2 / together)))
      :mod (p2 / person
            :name (n / name
                  :op1 ""covid19uk"")))"
"(u / urge-01
      :ARG0 (p / political-party
            :name (n / name
                  :op1 ""Congress""))
      :ARG1 (g / government-organization
            :ARG0-of (g2 / govern-01))
      :ARG2 (s / share-01
            :ARG0 g
            :ARG1 (p2 / profit-01
                  :ARG1 (t / thing
                        :ARG2-of (p3 / price-01
                              :ARG1 (o / oil
                                    :mod (c / crude)))
                        :ARG1-of (l / low-04)))
            :ARG2 (p4 / person)
            :time (l2 / lock-down-06
                  :ARG1-of (c2 / cause-01
                        :ARG0 (a / and
                              :op1 (e / event
                                    :name (n2 / name
                                          :op1 ""Covid_19""))
                              :op2 (d / downturn
                                    :mod (e2 / economy)))))))"
"(h / have-condition-91
      :ARG1 (p / probable
            :domain (f / fine-04
                  :ARG1 (m / miss-02
                        :ARG0 (p2 / person
                              :ARG0-of (w / wear-01
                                    :ARG1 (p3 / pajamas)))
                        :ARG1 (m2 / meal
                              :quant (o / or
                                    :op1 1
                                    :op2 2)))))
      :ARG2 (s / see-01
            :ARG0 (y / you)
            :ARG1 p2
            :ARG2 (s2 / stock-up-02
                  :ARG0 p2
                  :location (s3 / store
                        :mod (g / grocery)))))"
"(s / share-01
      :polite +
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (t / thing
            :ARG1-of (s2 / supply-01)
            :mod (e / extra))
      :ARG2 (p / person
            :ARG1-of (n / neighbor-01
                  :ARG2 y))
      :condition (h / have-03
            :ARG0 y
            :ARG1 t))"
"(m / multi-sentence
      :snt1 (ii / important-01
            :ARG1 (f / feel-01
                  :ARG1 (s / safe-01))
            :ARG2-of (h / have-degree-91
                  :ARG1 f
                  :ARG3 (m2 / more)
                  :ARG4 (e / ever)
                  :ARG1-of (c / cause-01
                        :ARG0 (o / outbreak-29
                              :ARG1 (p / product
                                    :name (n / name
                                          :op1 ""Covid""
                                          :op2 19))
                              :mod (e2 / especially))))
            :topic (d / design-01
                  :ARG0 (y / you)))
      :snt2 (s2 / show-01
            :ARG0 (m3 / map
                  :topic (j / journey-01)
                  :poss (w / we)
                  :ARG1-of (n2 / new-01)
                  :mod (e3 / example))
            :ARG1 (t / thing
                  :manner-of (p2 / put-01
                        :ARG1 (t2 / thing
                              :ARG1-of (w2 / worry-01
                                    :ARG0 (c2 / customer)))
                        :ARG2 (c3 / center
                              :part-of (d2 / design-01
                                    :ARG0 y))))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (g / go-02
                  :ARG0 (ii / i)
                  :ARG4 (s / store
                        :mod (g2 / grocery))
                  :mod (j / just))
            :op2 (s2 / steal-01
                  :ARG0 (p / person
                        :ARG1-of (l / liberal-02)
                        :ARG0-of (d / delving-02
                              :medium (p2 / publication
                                    :name (n / name
                                          :op1 ""Tumblr"")))
                        :mod (s3 / some))
                  :ARG1 (c / cart
                        :poss ii)))
      :snt2 (p3 / possible-01
            :polarity -
            :ARG1 (b / believe-01
                  :ARG1 (a2 / act-01
                        :ARG0 (p4 / person)
                        :ARG1-of (r / resemble-01
                              :ARG2 (t / this)))))
      :snt3 (b2 / blow-out-06
            :mode expressive
            :ARG1 (e / everything)
            :manner (p5 / proportion
                  :polarity -))
      :snt4 p2
      :name (n2 / name
            :op1 ""COVID2019"")
      :snt5 p2
      :name (n3 / name
            :op1 ""Trump2020"")
      :snt6 (b3 / break-out-30
            :ARG1 (v / virus
                  :name (n4 / name
                        :op1 ""Coronavirus""))))"
"(m / multi-sentence
      :snt1 (j / join-04
            :polarity -
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (c / crowd
                  :consist-of (p / person
                        :ARG0-of (b / buy-01
                              :ARG1 (g / grocery)
                              :manner (p2 / panic-01)))))
      :snt2 (c2 / check-out-05
            :mode imperative
            :ARG0 (y2 / you)
            :ARG1 (s / store
                  :mod (g2 / grocery)
                  :mod (a / alternative)
                  :mod (t / this)
                  :ARG1-of (t2 / try-01
                        :ARG0 y2
                        :ARG1-of (p3 / possible-01)
                        :ARG1-of (ii / instead-of-91)))))"
"(g / glimmer-01
      :ARG1 (h / hopeful-03
            :ARG1 (p / possible-01
                  :ARG1 (d / do-02
                        :ARG0 (y / you)
                        :ARG1 (s / something)
                        :ARG2 (p2 / prevent-01
                              :ARG0 y
                              :ARG1 (a / and
                                    :op1 (d2 / doom)
                                    :op2 (g2 / gloom))))))
      :quant (s2 / some)
      :ARG1-of (c / come-03
            :polarity -
            :ARG2 (b / bottle
                  :mod (p3 / pill))
            :ARG1-of (c2 / contrast-01
                  :ARG2 (c3 / come-03
                        :ARG1 h
                        :ARG2 (s3 / section
                              :mod (p4 / produce)
                              :part-of (s4 / store
                                    :mod (g3 / grocery)))))))"
"(t / think-01
      :ARG0 (p / person
            :mod (t2 / this))
      :ARG1 (s / spread-03
            :ARG0 (t3 / thing
                  :source (o / overseas)
                  :ARG1-of (b / buy-01
                        :ARG0 (y / you)
                        :location (s2 / supermarket)))
            :ARG1 (p2 / program
                  :name (n / name
                        :op1 ""COVID-19""))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (p / possible-01
                  :ARG1 (s / shop-01
                        :ARG0 (y / you)
                        :ARG1 (s2 / supply
                              :mod (p2 / product
                                    :name (n / name
                                          :op1 ""COVID-19"")))
                        :location (o / online)))
            :op2 (d / deliver-01
                  :ARG0 (w / we)
                  :ARG1 s2
                  :ARG2 (l / location
                        :poss (y2 / you))
                  :manner a
                  :op1 (s3 / safe-01)
                  :op2 (c / convenient)))
      :snt2 (p3 / possible-01
            :ARG1 (p4 / pay-01
                  :ARG0 (y3 / you)
                  :instrument (o2 / or
                        :op1 (c2 / company
                              :name (n2 / name
                                    :op1 ""Visa""))
                        :op2 (c3 / company
                              :name (n3 / name
                                    :op1 ""Mastercard"")))
                  :location (u / url-entity
                        :value ""https://www.covid19supplies.com""))))"
"(m / multi-sentence
      :snt1 (t / take-advantage-02
            :ARG0 (b / business
                  :ARG1-of (l / local-02))
            :ARG1 (p / pandemic
                  :mod (c / coronavirus))
            :ARG2 (r / raise-01
                  :ARG0 b
                  :ARG1 (p2 / price-01
                        :ARG1 (a / and
                              :op1 (p3 / product
                                    :mod (h / health))
                              :op2 (p4 / product
                                    :mod (h2 / hygiene))
                              :mod (b2 / basic)))))
      :snt2 (o / or
            :op1 (l2 / learn-01
                  :polarity -
                  :ARG0 (t2 / they)
                  :ARG1 (r2 / role
                        :mod (c2 / central)
                        :poss t2
                        :ARG0-of (c3 / contribute-01
                              :ARG2 (f / fight-01
                                    :ARG1 (s / spread-02
                                          :ARG1 (v / virus))))))
            :op2 (m2 / master-01
                  :polarity -
                  :ARG0 t2
                  :ARG1 r2)))"
"(m / multi-sentence
      :snt1 (m2 / mention-01
            :ARG0 (w / we)
            :ARG1 (t / thing
                  :manner-of (ii / impact-01
                        :ARG0 (t2 / thing
                              :name (n / name
                                    :op1 ""COVID2019""))
                        :ARG1 (s / shop
                              :mod (m3 / mom-and-pop))))
            :time (y / yesterday))
      :snt2 (c / confirm-01
            :ARG0 (c2 / company
                  :name (n2 / name
                        :op1 ""amazon"")
                  :mod (g / giant
                        :mod (e / e-commerce)))
            :ARG1 (d / drive-02
                  :ARG0 (v / virus
                        :name (n3 / name
                              :op1 ""coronavirus""))
                  :ARG1 (d2 / demand-01
                        :ARG1-of (h / high-02
                              :mod (u / usual
                                    :polarity -)))
                  :ARG0-of (c3 / cause-01
                        :ARG1 (h2 / hire-01
                              :ARG0 c2
                              :ARG1 (p / person
                                    :quant 100000
                                    :ARG1-of (e2 / employ-01)))))
            :time (t3 / today))
      :snt3 (g2 / good-02
            :ARG1 (n4 / news)
            :ARG2 (p2 / person
                  :ARG1-of (e3 / employ-01
                        :polarity -)
                  :ARG0-of (s2 / serve-01
                        :ARG1 (a / and
                              :op1 (h3 / hospitality)
                              :op2 (f / food))))))"
"(w / want-01
      :ARG0 (t / they)
      :ARG1 (m / meet-02
            :ARG0 t
            :ARG1 (s / someone
                  :ARG0-of (s2 / see-01
                        :ARG1 (p / paper
                              :purpose (t2 / toilet))))))"
"(m / multi-sentence
      :snt1 (e / expert-01
            :ARG1 (p / person
                  :ARG0-of (s / scam-01))
            :ARG2 (a / and
                  :op1 (s2 / shift-01
                        :ARG0 p
                        :ARG1 (t / tactic
                              :poss p))
                  :op2 (c / change-01
                        :ARG0 p
                        :ARG1 (m2 / message-01
                              :ARG0 p))
                  :purpose (c2 / catch-03
                        :ARG0 p
                        :ARG1 (y / you)
                        :ARG2 (g / guard-01
                              :polarity -
                              :ARG0 y))))
      :snt2 (t2 / true-01
            :ARG1 (t3 / this)
            :mod (e2 / especially)
            :ARG1-of (c3 / cause-01
                  :ARG0 (t4 / take-advantage-02
                        :ARG0 (t5 / they)
                        :ARG1 (a2 / anxiety
                              :ARG1-of (c4 / cause-01
                                    :ARG0 (s3 / scam-01
                                          :ARG0 (g2 / government-organization
                                                :ARG0-of (g3 / govern-01))
                                          :mod (ii / imposter)
                                          :time (c5 / current))))))))"
"(c / clear-01
      :ARG0 (b / buy-01
            :ARG1 (e / egg)
            :manner (p / panic-01)
            :ARG1-of (c2 / cause-01
                  :ARG0 (c3 / coronavirus)))
      :ARG1 (s / shelf)
      :ARG0-of (l / leave-13
            :ARG1 (k / know-01
                  :polarity -
                  :ARG0 (m / market
                        :mod (e2 / egg))
                  :ARG1 (t / thing
                        :ARG1-of (c4 / come-01)))))"
"(s / side
      :ARG1-of (b / bright-02)
      :poss (p / panic-01
            :ARG0 (b2 / buy-01
                  :ARG0 (p2 / person)
                  :ARG1 (f / food
                        :mod (a / all))))
      :domain (g / get-01
            :ARG0 (ii / i)
            :ARG1 (b3 / body
                  :mod (b4 / beach)
                  :ARG1-of (w / want-01
                        :polarity -
                        :ARG0 ii
                        :time (e / ever)))))"
"(m / multi-sentence
      :snt1 (r / release-01
            :ARG0 (g / government-organization
                  :ARG0-of (g2 / govern-01)
                  :mod (f / federal))
            :ARG1 (ii / information
                  :ARG0-of (s / state-01
                        :ARG1 (d / disease
                              :name (n / name
                                    :op1 ""COVID-19"")
                              :mod (r2 / respire-01)
                              :ARG1-of (c / contagious-02
                                    :degree (h / high-02))))))
      :snt2 (a / ask-02
            :ARG0 (t / they)
            :ARG1 (a2 / and
                  :op1 (s2 / sanitize-01
                        :ARG0 (p / person
                              :part (h2 / hand))
                        :ARG1 h2
                        :ARG1-of (f2 / frequent-02
                              :ARG2-of (h3 / have-degree-91
                                    :ARG1 s2
                                    :ARG3 (e / equal)
                                    :ARG4 (p2 / possible-01
                                          :ARG1 s2))))
                  :op2 (a3 / avoid-01
                        :ARG0 p
                        :ARG1 (ii2 / interact-01
                              :ARG0 p
                              :ARG1 (h4 / human)))
                  :op3 (c2 / cover-01
                        :ARG0 p
                        :ARG1 (f3 / face)
                        :time (w / whenever
                              :op1 (s3 / sneeze-01
                                    :ARG0 p))))
            :ARG2 p
            :purpose (h5 / help-01
                  :ARG0 t
                  :ARG1 (p3 / prevent-01
                        :ARG1 (s4 / spread-02
                              :ARG1 (d2 / disease))))))"
"(ii / include-91
      :ARG1 (p / person
            :ARG1-of (e / employ-01
                  :ARG0 (s / store
                        :mod (g / grocery))))
      :ARG2 (h / hero
            :ARG1-of (r / real-04))
      :ARG3 (s2 / some)
      :time (n / now
            :mod (r2 / right)))"
"(d / distant-02
      :ARG1 (s / society)
      :location (ii / island
            :name (n / name
                  :op1 ""Ibiza""))
      :location (s2 / supermarket
            :location (c / city
                  :name (n2 / name
                        :op1 ""Santa""
                        :op2 ""Eularia""))))"
"(m / multi-sentence
      :snt1 (s / sweep-06
            :ARG0 (ii / i)
            :ARG1 (s2 / supermarket)
            :location (c / city
                  :name (n / name
                        :op1 ""Alaldi""))
            :frequency (r / rate-entity-91
                  :ARG3 (t / temporal-quantity
                        :quant 1
                        :unit (w / week)))
            :prep-with (s3 / sun
                  :mod (c2 / cape)
                  :ARG1-of (h / have-quant-91
                        :polarity -
                        :ARG2 (m2 / many)
                        :ARG3 (s4 / so)
                        :ARG1-of (p / possible-01))))
      :snt2 (v / virus
            :mod (c3 / city
                  :name (n2 / name
                        :op1 ""Corona"")))
      :snt3 (v2 / virus
            :mod c3)
      :snt4 (p2 / product
            :name (n3 / name
                  :op1 ""Covid-19""))
      :snt5 (ii2 / isolate-01
            :ARG1 (s5 / self))
      :snt6 s
      :ARG0 (s6 / supermarket)
      :snt7 (u / update-02
            :ARG2 (v3 / virus
                  :mod c3))
      :snt8 (c4 / city
            :name (n4 / name
                  :op1 ""Corona""))
      :snt9 (s7 / state
            :name (n5 / name
                  :op1 ""NH"")))"
"(o / out-05
      :ARG1 (p / person
            :ARG0-of (c / consume-01))
      :ARG2 (l / luck)
      :condition (s / say-01
            :ARG0 (p2 / person
                  :ARG0-of (h / host-01))
            :ARG1 (r / refund-01
                  :polarity -)))"
"(l / learn-01
      :ARG0 (w / we)
      :ARG1 (m / man
            :age (t / temporal-quantity
                  :quant 71
                  :unit (y / year))
            :mod (c / county
                  :name (n / name
                        :op1 ""Kent""))
            :ARG1-of (d / die-01
                  :ARG1-of (c2 / cause-01
                        :ARG0 (d2 / disease
                              :name (n2 / name
                                    :op1 ""COVID-19"")))))
      :ord (o / ordinal-entity
            :value 1)
      :domain (t2 / this))"
"(m / multi-sentence
      :snt1 (w / work-01
            :ARG0 (ii / i)
            :ARG2 (s / supermarket)
            :ARG0-of (c / cause-01
                  :ARG1 (p / person
                        :ARG0-of (w2 / work-01)
                        :ARG1-of (k / key-02)
                        :domain ii))
            :polarity (a / amr-unknown))
      :snt2 (t / turd
            :ARG1-of (w3 / wipe-01
                  :ARG0 (y / you)
                  :ARG2 (s2 / shoe
                        :poss y)
                  :time (b / before
                        :op1 (n / now)
                        :quant (f / few
                              :op1 (t2 / temporal-quantity
                                    :quant 1
                                    :unit (d / day)))))
            :domain (ii2 / i)))"
"(v / video
      :ARG1-of (s / simple-02
            :degree (r / really))
      :domain (t / this)
      :purpose (e / ensure-01
            :ARG1 (d / defeat-01
                  :polarity -
                  :ARG0 (y / you)
                  :ARG1 (p / point-03
                        :mod (w / whole))
                  :time (t2 / take-off-07
                        :ARG0 y
                        :ARG1 (g / glove))
                  :condition (w2 / wear-01
                        :ARG0 y
                        :ARG1 (a / and
                              :op1 g
                              :op2 (m / mask)))))
      :ARG0-of e)"
"(m / multi-sentence
      :snt1 (w / want-01
            :ARG0 (y / you)
            :ARG1 (s / shut-down-05
                  :ARG1-of (c / complete-02)
                  :location (c2 / country
                        :name (n / name
                              :op1 ""Ghana"")
                        :location-of (d / depend-01
                              :ARG0 (p / person
                                    :quant (m2 / majority))
                              :ARG1 (v / visit-01
                                    :ARG0 p
                                    :ARG1 (s2 / supermarket)
                                    :manner (h / hand-to-mouth))))))
      :snt2 (d2 / die-01
            :ARG1-of (r / relate-01
                  :ARG2 (h2 / hunger-01))
            :location c2
            :ARG1-of (h3 / have-quant-91
                  :ARG3 (m3 / more)
                  :ARG4 (d3 / die-01
                        :location (c3 / city
                              :name (n2 / name
                                    :op1 ""Covid-19""))))
            :condition (s3 / shut-down-05
                  :ARG0 (w2 / we)
                  :ARG1-of (c4 / complete-02))))"
"(a / and
      :op1 (g / go-02
            :ARG0 (ii / i)
            :ARG4 (s / store
                  :mod (g2 / grocery)))
      :op2 (c / contrast-01
            :ARG1 (h / have-03
                  :ARG0 s
                  :ARG1 (a2 / and
                        :op1 (m / milk)
                        :op2 (b / bread)
                        :op3 (p / paper
                              :purpose (t / toilet))))
            :ARG2 (h2 / have-03
                  :polarity -
                  :ARG0 s
                  :ARG1 (o / or
                        :op1 (f / fruit)
                        :op2 (v / vegetable)
                        :ARG1-of (f2 / fresh-04)))))"
"(ii / impact-01
      :ARG0 (l / load-up-02
            :ARG1 (y / you)
            :ARG2 (f / food
                  :ARG1-of (p / process-01))
            :time (t / time
                  :mod (t2 / this)))
      :ARG1 (s / system
            :ARG1-of (ii2 / immune-02)
            :poss y)
      :ARG2 (n / negative-02)
      :mod (o / only)
      :condition l)"
"(s / significant-02
      :ARG1 (ii / impact-01
            :ARG0 (p / pandemic
                  :mod (c / coronavirus))
            :ARG1 (m / market
                  :mod (g / genomics
                        :mod (p2 / person
                              :ARG0-of (c2 / consume-01))))
            :time (d / date-entity
                  :year 2020))
      :ARG1-of (c3 / cause-01
            :ARG0 (ii2 / include-91
                  :ARG1 (a / and
                        :op1 (c4 / company
                              :name (n / name
                                    :op1 ""23andMe""
                                    :op2 ""Inc.""))
                        :op2 (c5 / company
                              :name (n2 / name
                                    :op1 ""Helix""
                                    :op2 ""OpCo""
                                    :op3 ""LLC""))
                        :op3 (c6 / company
                              :name (n3 / name
                                    :op1 ""MyHeritage""
                                    :op2 ""Ltd""))
                        :op4 (c7 / company
                              :name (n4 / name
                                    :op1 ""Pathway""
                                    :op2 ""Genomics"")))
                  :ARG2 (c8 / company
                        :ARG0-of (l / lead-02
                              :mod (t / top))))))"
"(h / hold-04
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Trump"")
            :ARG0-of (h2 / have-org-role-91
                  :ARG2 (p2 / president)))
      :ARG1 (c / call-02
            :ARG0 p
            :ARG1 (p3 / person
                  :ARG0-of h2
                  :ARG1 (s / store
                        :mod (g / grocery))
                  :ARG2 (e / executive))
            :quant (o / over
                  :op1 24))
      :mod (p4 / phone)
      :time (d / date-entity
            :month 3
            :day 15)
      :purpose (d2 / discuss-01
            :ARG0 p
            :ARG1 (d3 / demand-01
                  :ARG1 (a / and
                        :op1 (f / food)
                        :op2 (s2 / supply-01
                              :mod (o2 / other)))
                  :ARG1-of (g2 / go-on-15))
            :ARG2 p3))"
"(p / possible-01
      :polarity (a / amr-unknown)
      :ARG1 (o / overwhelm-01
            :ARG0 (f / food
                  :ARG1-of (b / buy-01
                        :ARG1-of (c / cause-01
                              :ARG0 (p2 / panic-01))))
            :ARG1 (p3 / plant
                  :mod (b2 / biogas))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (t / tough-02
                  :ARG1 (f / few
                        :op1 (t2 / temporal-quantity
                              :quant 1
                              :unit (y / year)))
                  :ARG2 (p / person
                        :ARG0-of (p2 / produce-01
                              :ARG1 (c / cattle))
                        :location (s / state
                              :name (n / name
                                    :op1 ""Nebraska"")))
                  :ARG1-of (c2 / continue-01))
            :op2 (c3 / cause-01
                  :ARG0 (f2 / flood-01)
                  :ARG1 (a2 / and
                        :op1 (d / die-01
                              :ARG1 (c4 / cattle))
                        :op2 (ii / increase-01
                              :ARG1 (c5 / cost-01
                                    :ARG1 (p3 / produce-01))))
                  :time (d2 / date-entity
                        :year 2019)))
      :snt2 (a3 / and
            :op1 (l / low-04
                  :ARG1 (p4 / price-01
                        :ARG1 (c6 / cattle))
                  :time (n2 / now)
                  :ARG2-of (h / have-degree-91
                        :ARG1 p4
                        :ARG3 (m2 / more)))
            :op2 (u / up-02
                  :ARG1 (a4 / and
                        :op1 (f3 / feed-01)
                        :op2 (e / expend-01))
                  :time (n3 / now))
            :op3 (r / rise-01
                  :ARG1 (t3 / tax-01
                        :ARG3 (p5 / property))
                  :mod (m3 / most)
                  :time (n4 / now))
            :time (d3 / date-entity
                  :year 2020)))"
"(e / expect-01
      :ARG0 (c / company)
      :ARG1 (g / grow-01
            :ARG1 (r / revenue
                  :source (g2 / group
                        :mod (b / business
                              :mod (p / person
                                    :ARG0-of (c2 / consume-01)))
                        :poss c))
            :manner (f / fast-02))
      :concession (a / and
            :op1 (p2 / pandemic)
            :op2 (r2 / restrict-01
                  :ARG0 (g3 / government-organization
                        :ARG0-of (g4 / govern-01
                              :ARG1 (c3 / country
                                    :name (n / name
                                          :op1 ""US"")))))))"
"(c / cause-01
      :ARG0 (a / amr-unknown)
      :ARG1 (a2 / and
            :op1 (b / bore-02
                  :ARG0 (s / shop-01
                        :ARG2 (s2 / supermarket))
                  :degree (s3 / so))
            :op2 (e / event
                  :polarity -
                  :domain s)
            :time (d / day
                  :mod (t / this))))"
"(p / possible-01
      :ARG1 (c / change-01
            :ARG0 (s / sanitizer
                  :instrument-of (h / hand))
            :ARG1 (l / level
                  :mod (p2 / ph)
                  :mod (s2 / skin))
            :ARG0-of (m / make-02
                  :ARG1 (h2 / have-degree-91
                        :ARG1 (y / you)
                        :ARG2 (v / vulnerable-01
                              :ARG1 y
                              :ARG2 (c2 / coronavirus))
                        :ARG3 (m2 / more))))
      :polarity (a / amr-unknown))"
"(h / help-01
      :ARG0 (d / distillery
            :name (n / name
                  :op1 ""Pacifica""))
      :ARG1 (f / fight-01
            :ARG0 d
            :ARG1 (p / pandemic
                  :mod (c / coronavirus)))
      :manner (m / make-01
            :ARG0 d
            :ARG1 (s / sanitizer
                  :beneficiary (h2 / hand))))"
"(m / multi-sentence
      :snt1 (p / price-01
            :ARG1 (g / gas)
            :ARG2 (a / amr-unknown)
            :ARG3 (e / everyone))
      :snt2 (s / see-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (p2 / price-01
                  :ARG1 (g2 / gas)
                  :ARG1-of (l / low-04
                        :degree (s2 / such)))
            :time (t / time
                  :ARG1-of (l2 / long-03))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (d / drop-01
                  :ARG1 (p / price-01
                        :ARG1 (o / oil))
                  :ARG2 (s / significant-02))
            :op2 (a2 / ask-02
                  :ARG0 (p2 / person
                        :name (n / name
                              :op1 ""Jason""
                              :op2 ""Kenney"")
                        :ARG0-of (h / have-org-role-91
                              :ARG1 (p3 / province
                                    :name (n2 / name
                                          :op1 ""Alberta""))
                              :ARG2 (p4 / premier)))
                  :ARG1 (b / bail-out-02
                        :ARG0 (g / government-organization
                              :ARG0-of (g2 / govern-01))
                        :ARG1 (ii / industry
                              :mod (o2 / oil))
                        :mod (l / large)))
            :time (a3 / after
                  :op1 (b2 / break-out-30
                        :ARG1 (o3 / organization
                              :name (n3 / name
                                    :op1 ""COVID-19"")))))
      :snt2 (j / join-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (m2 / movement-07
                  :ARG1 (s2 / say-01
                        :ARG1 (n4 / no)
                        :ARG2 (b3 / bail-out-02
                              :mod (t / this))))))"
"(l / link-01
      :ARG2 (ii / information
            :topic (a / and
                  :op1 (t / thing
                        :manner-of (c / communicate-01
                              :ARG1 (t2 / thing
                                    :name (n / name
                                          :op1 ""COVID-19""))
                              :ARG2 (c2 / child)))
                  :op2 (t3 / thing
                        :manner-of (m / manage-01
                              :ARG1 (s / stress-02)))
                  :op3 (t4 / thing
                        :manner-of (t5 / talk-01
                              :ARG2 c2))))
      :quant (s2 / some)
      :location (h / here))"
"(a / add-02
      :ARG0 (t / they)
      :ARG1 (p / price-01
            :ARG3 (p2 / product
                  :name (n / name
                        :op1 ""COVID-19"")
                  :mod (p3 / pandemic)))
      :ARG2 (o / order-02
            :ARG0 t
            :ARG1 (e / equipment)))"
"(s / say-01
      :ARG0 (ii / i)
      :ARG1 (c / cause-01
            :ARG0 (l / law
                  :name (n / name
                        :op1 ""CODID-19""))
            :ARG1 (t / this
                  :location (t2 / throughout
                        :op1 (c2 / country))))
      :ARG2 (p / person
            :name (n2 / name
                  :op1 ""vjchaudhary"")
            :ARG0-of (h / have-rel-role-91
                  :ARG2 (u / uncle))))"
"(m / multi-sentence
      :snt1 (g / go-02
            :ARG0 (ii / i)
            :ARG4 (s / supermarket)
            :ARG1-of (c / cause-01
                  :ARG0 (o / out-05
                        :ARG1 ii
                        :ARG2 (p / product
                              :name (n / name
                                    :op1 ""Lysol"")))))
      :snt2 (s2 / say-01
            :ARG1 (t / today
                  :polarity -)
            :ARG2 (p2 / person
                  :name (n2 / name
                        :op1 ""Rona""))))"
"(r / rise-01
      :ARG1 (p / price-01
            :ARG1 (s / stock
                  :poss (g / group
                        :mod (w / watch
                              :mod (l / luxury)))))
      :time (s2 / slow-01
            :ARG1 (s3 / spread-02
                  :ARG1 (v / virus
                        :name (n / name
                              :op1 ""Coronavirus"")))))"
"(b / buy-01
      :ARG0 (y / you)
      :ARG1 (t / they)
      :ARG3 (r / rate
            :ARG1-of (s / same-01))
      :purpose (m / make-05
            :ARG0 y
            :ARG1 (k / kill-01)
            :time (f / future)))"
"(m / multi-sentence
      :snt1 (m2 / matter-01
            :polarity -
            :ARG1 (t / thing
                  :frequency-of (a / ask-02
                        :ARG1 (p / panic-01
                              :polarity -
                              :ARG0 (b / buy-01
                                    :ARG0 (p2 / person)
                                    :ARG1 (a2 / and
                                          :op1 (f / food)
                                          :op2 (e / essential
                                                :mod (o / other)))))
                        :ARG2 p2)))
      :snt2 (p3 / petrified
            :domain (t2 / they)
            :mod (s / still)))"
"(w / want-01
      :ARG0 (ii / i)
      :ARG1 (s / sanitizer
            :poss (y / you)
            :domain ii)
      :location (w2 / world
            :mod (t / this)
            :ARG1-of (f / full-09
                  :ARG2 (v / virus
                        :name (n / name
                              :op1 ""Corona"")))))"
"(m / multi-sentence
      :snt1 (l / love-01
            :ARG0 (ii / i)
            :ARG1 (b / book
                  :name (n / name
                        :op1 ""Keep""
                        :op2 ""Cooking""
                        :op3 ""and""
                        :op4 ""Carry""
                        :op5 ""On"")
                  :source (p / person
                        :name (n2 / name
                              :op1 ""Jamie""
                              :op2 ""Oliver"")))
            :ARG1-of (c / cause-01
                  :ARG0 (s / say-01
                        :ARG0 p
                        :ARG1 (p2 / possible-01
                              :ARG1 (s2 / substitute-01
                                    :ARG0 (y / you)
                                    :ARG1 (ii2 / ingredient)
                                    :ARG2 (ii3 / ingredient
                                          :ARG1-of (h / have-03
                                                :ARG0 y
                                                :location (c2 / cupboard))))))))
      :snt2 (m2 / make-01
            :ARG0 (ii4 / i)
            :ARG1 (d / dal
                  :mod (c3 / curry)
                  :mod (a / aubergine)
                  :poss p)
            :accompanier (f / flatbread
                  :mod (c4 / city
                        :name (n3 / name
                              :op1 ""Herby"")))
            :time (d2 / date-entity
                  :dayperiod (n4 / night)
                  :mod (t / today))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (g / go-02
                  :ARG0 (ii / i)
                  :ARG4 (s / store
                        :mod (g2 / grocery))
                  :time (b / before
                        :op1 (n / now)
                        :quant (a2 / about
                              :op1 (t / temporal-quantity
                                    :quant 1
                                    :unit (m2 / month)))))
            :op2 (g3 / get-01
                  :ARG0 ii
                  :ARG1 (b2 / box
                        :consist-of (p / product
                              :name (n2 / name
                                    :op1 ""Raisin""
                                    :op2 ""Bran""))
                        :consist-of (b3 / bag
                              :quant 2
                              :mod (h / huge))
                        :ARG1-of (ii2 / instead-of-91
                              :ARG2 (v / version
                                    :name (n3 / name
                                          :op1 ""Risin""
                                          :op2 ""Bran""
                                          :op3 ""Crunch"")
                                    :mod (d / delicious))))
                  :manner (a3 / accidental)))
      :snt2 (a4 / and
            :op1 (b4 / be-located-at-91
                  :ARG1 (ii3 / i)
                  :ARG2 (b5 / bag
                        :ord (o / ordinal-entity
                              :value 1))
                  :mod (s2 / still))
            :op2 (r / refuse-01
                  :ARG0 ii3
                  :ARG1 (w / waste-01
                        :ARG0 ii3
                        :ARG1 (ii4 / it)))
            :snt3 (s3 / struggle-02
                  :ARG1-of (r2 / real-04))))"
"(a / announce-01
      :ARG0 (g / government-organization
            :ARG0-of (g2 / govern-01))
      :ARG1 (f / fund-01
            :ARG1 (o / organization
                  :ARG0-of (r / redistribute-01
                        :ARG1 (f2 / food)))
            :ARG2 (m / monetary-quantity
                  :quant 2500000
                  :unit (p / pound))
            :purpose (h / help-01
                  :ARG1 (a2 / and
                        :op1 (r2 / reduce-01
                              :ARG0 o
                              :ARG1 (w / waste-01
                                    :ARG1 f2))
                        :op2 (r3 / redistribute-01
                              :ARG0 o
                              :ARG1 (s / stock
                                    :mod (s2 / surplus)
                                    :quant (u / up-to
                                          :op1 (m2 / mass-quantity
                                                :quant 14000
                                                :unit (t / ton))))
                              :time (o2 / outbreak-29
                                    :ARG1 (d / disease
                                          :name (n / name
                                                :op1 ""coronavirus"")))))
                  :ARG2 o)))"
"(o / or
      :op1 (s / sneeze-01
            :ARG0 (y / you
                  :part (e / elbow
                        :ARG1-of (b / bend-01))))
      :op2 (c / cough-01
            :ARG0 y
            :destination (o2 / or
                  :op1 (t / tissue)
                  :op2 e)))"
"(r / recommend-01
      :ARG1 (w / wear-01
            :polarity -
            :ARG0 (y / you)
            :ARG1 (g / glove)
            :location (s / supermarket)))"
"(p / possible-01
      :ARG1 (r / reveal-01
            :ARG0 (n / newspaper
                  :name (n2 / name
                        :op1 ""The""
                        :op2 ""Sun""))
            :ARG1 (c / cash-in-03
                  :ARG0 (p2 / person
                        :ARG0-of (d / deal-02
                              :ARG1 (c2 / cannabis)))
                  :ARG1 (p3 / pandemic
                        :mod (c3 / coronavirus))
                  :manner (s / soar-01
                        :ARG1 (t / thing
                              :ARG2-of (p4 / price-01
                                    :ARG1 (d2 / drug)))
                        :ARG1-of (c4 / cause-01
                              :ARG0 (s2 / sit-01
                                    :ARG1 (p5 / person
                                          :ARG0-of (u / use-01))
                                    :ARG2 (h / home)
                                    :manner (p6 / pay-01
                                          :ARG2 p5
                                          :degree (f / full))))))))"
"(s / sneeze-01
      :ARG0 (p / person
            :location (b / behind
                  :op1 (ii / i)))
      :location (s2 / store
            :name (n / name
                  :op1 ""Pavillions"")
            :mod (g / grocery))
      :location (a / all-over
            :op1 (a2 / and
                  :op1 (g2 / gum)
                  :op2 (c / candy)))
      :ARG0-of (c2 / cause-01
            :ARG1 (g3 / give-01
                  :ARG0 ii
                  :ARG1 (l / look-01
                        :ARG0 ii
                        :ARG1 (m / move-01
                              :polarity -
                              :mode imperative
                              :ARG0 (y / you)))
                  :ARG2 (t / they))))"
"(w / wear-01
      :ARG0 (m / man)
      :ARG1 (m2 / mask
            :ARG0-of (p / protect-01))
      :time (c / carry-01
            :ARG0 m
            :ARG1 (p2 / paper
                  :purpose (t / toilet))
            :location (o / outside
                  :op1 (s / supermarket
                        :location (c2 / city
                              :name (n / name
                                    :op1 ""Brussels"")
                              :location (c3 / country
                                    :name (n2 / name
                                          :op1 ""Belgium""))))))
      :time (d / date-entity
            :day 18
            :month 3
            :year 2020))"
"(c / continue-01
      :ARG0 (a / and
            :op1 (p / person
                  :ARG0-of (d / drive-01))
            :op2 (t / team
                  :ARG0-of (o / operate-01))
            :poss (w / we))
      :ARG1 (s / service-05
            :ARG0 a
            :ARG1 (c2 / customer
                  :poss w
                  :ARG2-of (ii / include-91
                        :ARG1 (a2 / and
                              :op1 (p2 / product
                                    :mod p
                                    :ARG0-of (c3 / consume-01)))
                        :op2 (p3 / partner-01
                              :ARG0 w
                              :ARG1 (r / retail-01))
                        :mod (e / especially))))
      :purpose (e2 / ensure-01
            :ARG0 a
            :ARG1 (d2 / do-02
                  :ARG0 w
                  :ARG1 (e3 / everything
                        :ARG1-of (p4 / possible-01))
                  :ARG2 (h / help-01
                        :ARG0 w
                        :ARG1 (f / fight-01
                              :ARG1 (c4 / challenge-01
                                    :ARG0 (v / virus
                                          :name (n / name
                                                :op1 ""Covid-19""))
                                    :ARG1 w
                                    :mod (a3 / all)))))))"
(a / amr-empty)
"(a / and
      :op1 (p / produce-01
            :ARG0 (c / company
                  :name (n / name
                        :op1 ""Syngenta""))
            :ARG1 (s / sanitizer
                  :beneficiary (h / hand)
                  :quant (m / mass-quantity
                        :quant 50
                        :unit (t / ton))))
      :op2 (d / donate-01
            :ARG0 c
            :ARG1 m))"
"(m / multi-sentence
      :snt1 (m2 / miss-02
            :mode imperative
            :polarity -
            :ARG0 (y / you)
            :ARG1 (o / opportunity
                  :mod (c / cook-01
                        :ARG0 y
                        :ARG1 (t / thing
                              :ARG1-of (d / do-02
                                    :ARG0 (c2 / chef
                                          :ARG1-of (a / admire-01
                                                :ARG0 y))
                                    :location (r / restaurant
                                          :poss c2))))))
      :snt2 (m3 / make-01
            :ARG0 (ii / i)
            :ARG1 (s / stew
                  :consist-of (b / bean
                        :ARG1-of (w / white-03))
                  :accompanier (a2 / and
                        :op1 (p / prawn)
                        :op2 (s2 / squid
                              :mod (b2 / baby))
                        :op3 (c3 / cod))))
      :snt3 (p2 / possible-01
            :ARG1 (s3 / send-01
                  :ARG0 (w2 / we)
                  :ARG1 (e / everything)
                  :ARG2 (h / home
                        :poss (y2 / you))))
      :snt4 (o2 / or
            :op1 (a3 / ask-01
                  :mode imperative
                  :ARG0 (y3 / you)
                  :ARG1 (p3 / price-01)
                  :ARG2 ii
                  :medium (m4 / message-01
                        :ARG0 y3
                        :ARG2 ii
                        :ARG1-of (d2 / direct-02)))
            :op2 (g / go-02
                  :mode imperative
                  :ARG0 y3
                  :ARG4 (w3 / website))))"
"(o / open-09
      :ARG1 (s / supermarket)
      :time (n / now)
      :purpose (d / deliver-01
            :ARG1 s
            :time (a / after
                  :op1 (d2 / date-entity
                        :dayperiod (n2 / night))))
      :purpose (h / help-01
            :ARG0 s
            :ARG1 (m / meet-01
                  :ARG0 s
                  :ARG1 (d3 / demand-01
                        :time (c / current)))))"
"(c / contrast-01
      :ARG1 (ii / impress-01
            :ARG0 (ii2 / introduce-02
                  :ARG0 (s / supermarket)
                  :ARG1 (t / time
                        :ARG1-of (s2 / special-02)
                        :beneficiary (p / person
                              :ARG1-of (h / have-degree-91
                                    :ARG2 (o / old)
                                    :ARG3 (m / more)))))
            :ARG1 (ii3 / i))
      :ARG2 (n / need-01
            :ARG1 (a / available-02
                  :ARG1 (p2 / person
                        :mod (t2 / that)
                        :ARG1-of (m2 / mean-02
                              :ARG2 (ii4 / isolate-01
                                    :ARG0 p2)))
                  :ARG2 (s3 / shop-01
                        :ARG0 p2
                        :medium (o2 / online)
                        :quant (m3 / more)))
            :ARG2-of (s4 / serious-01)))"
"(p / possible-01
      :ARG1 (w / work-01
            :ARG0 (y / you)
            :ARG1-of (h / hard-02
                  :ARG2-of (h2 / have-degree-91
                        :ARG1 w
                        :ARG3 (t / too))))
      :condition (f / find-01
            :ARG0 y
            :ARG1 (d / dream-01
                  :ARG0 y
                  :ARG1 (a / and
                        :op1 (p2 / product
                              :purpose (c / clean-01))
                        :op2 (ii / index
                              :mod (m / market
                                    :mod (s / stock)))))))"
"(w / wear-01
      :polarity (a / amr-unknown)
      :ARG0 (y / you)
      :ARG1 (a2 / and
            :op1 (m / mask)
            :op2 (g / glove))
      :time (g2 / go-02
            :ARG0 y
            :ARG4 (s / store
                  :mod (g3 / grocery))))"
"(m / multi-sentence
      :snt1 (h / have-concession-91
            :ARG1 (a / and
                  :op1 (b / buy-01
                        :ARG0 (p / person
                              :ARG0-of (ii / invest-01))
                        :time (d / dip-01
                              :ARG1 (m2 / market)))
                  :op2 (l / lead-03
                        :ARG0 (f / flow-01
                              :ARG1 (p2 / product
                                    :name (n / name
                                          :op1 ""SIP""))
                              :ARG1-of (s / steady-01))
                        :ARG2 (f2 / flow-01
                              :ARG1 (f3 / fund
                                    :mod (e / equity))
                              :ARG1-of (h2 / have-degree-91
                                    :ARG2 (l2 / large)
                                    :ARG3 (m3 / most)
                                    :ARG5 (f4 / flow-01
                                          :ARG1 f3
                                          :frequency (r / rate-entity-91
                                                :ARG3 (t / temporal-quantity
                                                      :quant 1
                                                      :unit (m4 / month))))))))
            :ARG2 (w / worry-01
                  :ARG0 (p3 / pandemic
                        :mod (c / coronavirus))))
      :snt2 (a2 / and
            :op1 (j / join-in-05
                  :ARG0 (p4 / person
                        :ARG0-of (ii2 / invest-01))
                  :ARG1 (r2 / rush-01
                        :ARG1 (g / gold)
                        :manner (h3 / hedge-01)))
            :op2 (t2 / track-01
                  :ARG0 p4
                  :ARG1 (g2 / gain-01
                        :ARG1 (p5 / price-01
                              :ARG1 (m5 / metal
                                    :ARG1-of (y / yellow-02)))
                        :ARG1-of (s2 / sharp-02)))
            :mod (a3 / also)))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (o / organization
                  :name (n / name
                        :op1 ""lebfoodbank""))
            :ARG1 (ii / increase-01
                  :ARG1 (d / demand-01
                        :ARG1 (b / box
                              :mod (f / food)))
                  :ARG2 (p / percentage-entity
                        :value 50)
                  :time (l / lockdown
                        :mod (e / event
                              :name (n2 / name
                                    :op1 ""COVID_19"")))))
      :snt2 (c / critical-02
            :ARG1 (ii2 / initiative
                  :mod (c2 / community))
            :purpose (e2 / ensure-01
                  :ARG0 ii2
                  :ARG1 (a / access-01
                        :ARG0 (p2 / person
                              :mod (a2 / all))
                        :ARG1 (f2 / food)
                        :location (c3 / country
                              :name (n3 / name
                                    :op1 ""Lebanon"")
                              :location-of (l2 / live-02
                                    :ARG0 (p3 / population
                                          :ARG1-of (ii3 / include-91
                                                :ARG2 (p4 / population)
                                                :ARG3 (p5 / percentage-entity
                                                      :value 30)))
                                    :ARG1 (b2 / below
                                          :op1 (p6 / poor
                                                :mod (n4 / nation)))))))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (t / turn-01
                  :ARG0 (p / program
                        :name (n / name
                              :op1 ""COVID-19""))
                  :ARG1 (a2 / and
                        :op1 (s / serve-01
                              :ARG1 (f / food))
                        :op2 (ii / industry
                              :mod (h / hospitality)))
                  :direction (u / upside
                        :op1 (d / down)))
            :op2 (t2 / turn-01
                  :ARG0 (b / business
                        :quant (m2 / many))
                  :ARG1 (o / option
                        :mod (t3 / take-out-11
                              :mod (o2 / only)))))
      :snt2 (e / ensure-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (s2 / stay-01
                  :ARG1 y
                  :ARG3 (t4 / top
                        :poss (d2 / demand-01
                              :ARG1 (a3 / and
                                    :op1 (s3 / serve-01
                                          :ARG1 (f2 / food))
                                    :op2 (d3 / deliver-01)))))
            :manner (s4 / stock-up-02
                  :ARG0 y
                  :ARG1 (c / container
                        :mod (e2 / extra)
                        :purpose s3))))"
"(p / possible-01
      :polarity -
      :ARG1 (f / find-01
            :ARG1 (t / thermometer)
            :time (n / now
                  :mod (r / right)))
      :degree (n2 / near)
      :ARG1-of (r2 / regardless-91
            :ARG2 (o / or
                  :op1 (s / shop-01
                        :ARG0 (y / you)
                        :medium (o2 / online))
                  :op2 (g / go-02
                        :ARG0 y
                        :ARG4 (s2 / store)
                        :ARG1-of (d / direct-02)))))"
"(a / advertise-01
      :ARG1 (s / spray-01
            :ARG1 (d / disinfectant
                  :ARG0-of (c / counter-01
                        :ARG1 (b / bacterium))))
      :domain (t / this))"
"(r / recommend-01
      :ARG1 (w / work-01
            :ARG0 (e / executive
                  :quant (m / more))
            :ARG2 (f / floor)
            :time (b / before
                  :op1 (c / charge-05
                        :ARG1 e))))"
(a / amr-empty)
"(c / concern-01
      :ARG0 (a / and
            :op1 (ii / impact-01
                  :ARG0 (c2 / city
                        :name (n / name
                              :op1 ""Covid-19""))
                  :ARG1 (s / secure-02
                        :ARG1 (f / food)))
            :op2 (t / thing
                  :manner-of (m / minimize-01
                        :ARG1 ii
                        :location (c3 / community
                              :ARG1-of (l / local-02)
                              :poss (w / we)))))
      :ARG1 w
      :ARG1-of (d / deep-02))"
"(p / possible-01
      :ARG1 (c / complain-01
            :ARG0 (y / you)
            :ARG2 (g / government-organization
                  :name (n / name
                        :op1 ""Consumer""
                        :op2 ""Financial""
                        :op3 ""Protection""
                        :op4 ""Bureau"")))
      :condition (w / worry-02
            :ARG0 y
            :ARG1 (p2 / pay-01
                  :ARG0 y
                  :ARG1 (b / bill-01
                        :ARG2 y))))"
"(t / time
      :domain (t2 / this)
      :purpose (a / and
            :op1 (f / focus-01
                  :ARG0 (y / you)
                  :ARG2 y)
            :op2 (l / leave-14
                  :ARG0 y
                  :ARG1 (e / everyone
                        :mod (e2 / else))
                  :ARG2 (a2 / alone)))
      :condition (b / be-located-at-91
            :polarity -
            :ARG1 y
            :ARG2 (s / supermarket)
            :purpose (f2 / fight-01
                  :ARG0 y
                  :ARG2 (p / produce
                        :poss y
                        :mod (o / organic)))))"
"(r / raise-01
      :ARG0 (b / business
            :mod (c / continent
                  :name (n / name
                        :op1 ""Asia""))
            :ARG2-of (ii / include-01
                  :ARG1 (a / and
                        :op1 (s / shop
                              :mod (h / halal)
                              :mod (c2 / country
                                    :name (n2 / name
                                          :op1 ""Pakistan"")))
                        :op2 (s2 / shop
                              :mod (h2 / halal)
                              :mod (c3 / country
                                    :name (n3 / name
                                          :op1 ""India"")))
                        :op3 (s3 / shop
                              :mod (h3 / halal)
                              :mod (c4 / country
                                    :name (n4 / name
                                          :op1 ""Bangladesh""))))))
      :ARG1 (p / price-01
            :ARG1 (t / thing
                  :ARG1-of (e / eat-01)))
      :time (g / grow-01
            :ARG1 (p2 / panic-01
                  :ARG0 (v / virus
                        :name (n5 / name
                              :op1 ""CoronaVirus""))))
      :ARG2 (m / more-than
            :op1 (t2 / times
                  :quant 5)))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (r / route
                  :name (n / name
                        :op1 ""Ma3Route""))
            :ARG1 (m2 / make-02
                  :ARG0 (a / and
                        :op1 (c / cycleway)
                        :op2 (r2 / route
                              :mod (p / pedestrian)))
                  :ARG1 (a2 / and
                        :op1 (h / have-degree-91
                              :ARG1 (t / transport-01)
                              :ARG2 (r3 / resilience)
                              :ARG3 (m3 / more))
                        :op2 (h2 / have-degree-91
                              :ARG1 t
                              :ARG2 (f / fair-01
                                    :ARG1 t)
                              :ARG3 (m4 / more))))
            :ARG2 (p2 / person
                  :name (n2 / name
                        :op1 ""MwaiKibaki""))
            :time (d / date-entity
                  :day 25
                  :month 3
                  :year 2020))
      :snt2 (ii / immune-02
            :ARG1 (t2 / they)
            :ARG2 (p3 / price-01
                  :ARG1 (o / oil))))"
"(g / get-01
      :ARG0 (c / country
            :name (n / name
                  :op1 ""America""))
      :ARG1 (t / taste-01
            :ARG0 c
            :ARG1 (p / political-movement
                  :name (n2 / name
                        :op1 ""socialism""))
            :accompanier (c2 / coronavirus)))"
"(a / and
      :op1 (c / contain-01
            :ARG0 (s / sanitizer
                  :purpose (h / hand)
                  :mod (t / this))
            :ARG1 (a2 / alcohol
                  :quant (p / percentage-entity
                        :value 75)))
      :op2 (k / kill-01
            :ARG0 s
            :ARG1 (g / germ
                  :quant (p2 / percentage-entity
                        :value 99)))
      :op3 (c2 / come-01
            :ARG1 (ii / it)
            :accompanier (a3 / and
                  :op1 (v / volume-quantity
                        :quant 500
                        :unit (m / milliliter))
                  :op2 (v2 / volume-quantity
                        :quant 100
                        :unit (m2 / milliliter))
                  :op3 (v3 / volume-quantity
                        :quant 2
                        :unit (m3 / milliliter))))
      :op4 (ii2 / include-01
            :ARG1 (d / deliver-01
                  :ARG0 (c3 / company
                        :name (n / name
                              :op1 ""Fedex""))
                  :ARG2-of (l / local-02))
            :ARG2 ii))"
"(w / worth-02
      :ARG1 (s / something
            :domain (t / this))
      :ARG2 (r / read-01
            :ARG0 (a / and
                  :op1 (p / person
                        :ARG2-of (s2 / staff-01
                              :ARG1 (h / hospital)))
                  :op2 (p2 / person
                        :ARG0-of (h2 / have-org-role-91
                              :ARG2 (p3 / paramedic)))
                  :op3 (p4 / person
                        :ARG0-of (w2 / work-01
                              :ARG1 (s3 / society)))
                  :op4 (p5 / person
                        :ARG0-of (c / counsel-01))
                  :op5 (r2 / repair-01
                        :ARG1 (s4 / service
                              :mod (e / emergency)))
                  :op6 (g / grocery)
                  :op7 (p6 / person
                        :ARG1-of (e2 / employ-01
                              :ARG2 (s5 / store
                                    :mod (r3 / retail-01)
                                    :mod (e3 / essential))))
                  :op8 (a2 / anyone
                        :ARG1-of (f / forget-01
                              :ARG0 (ii / i)))
                  :op9 (a3 / and
                        :op1 (p7 / person
                              :ARG0-of (h3 / have-rel-role-91
                                    :ARG1 ii
                                    :ARG2 (f2 / friend)))
                        :op2 (p8 / person
                              :ARG0-of (h4 / have-rel-role-91
                                    :ARG1 ii
                                    :ARG2 (f3 / family)))))
            :ARG1 s))"
"(d / delay-01
      :ARG1 (ii / ingredient
            :mod (o / only)
            :part-of (p / paper
                  :purpose (t / toilet))
            :domain (p2 / pulp))
      :location (b / border)
      :ARG0-of (c / cause-01
            :ARG1 (s / short-06
                  :ARG2 (s2 / supply-01))))"
"(m / multi-sentence
      :snt1 (t / take-advantage-02
            :ARG0 (s / scam-01)
            :ARG1 (f / fear-01
                  :ARG1 (v / virus
                        :mod (c / coronavirus))))
      :snt2 (v2 / visit-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (a / and
                  :op1 (w / website
                        :mod (o / organization
                              :name (n / name
                                    :op1 ""FTC"")))
                  :op2 (w2 / website
                        :mod (o2 / organization
                              :name (n2 / name
                                    :op1 ""CFPB""))))
            :purpose (l / learn-01
                  :ARG0 y
                  :ARG1 (t2 / thing
                        :ARG1-of (l2 / look-01
                              :ARG0 y)))))"
"(t / think-01
      :polarity -
      :ARG0 (ii / i)
      :ARG1 (r / relieve-01
            :ARG0 (f / find-01
                  :ARG0 ii
                  :ARG1 (a / and
                        :op1 (p / paper
                              :purpose (t2 / toilet))
                        :op2 (p2 / product
                              :name (n / name
                                    :op1 ""Purell"")))
                  :location (s / store))
            :ARG1 ii
            :degree (s2 / so))
      :time (e / ever))"
"(u / use-01
      :ARG1 (r / rabbi)
      :ARG2 (p / paper
            :purpose (t / toilet))
      :ARG1-of (c / cause-01
            :ARG0 (r2 / run-out-05
                  :ARG1 p
                  :ARG2 (p2 / person))))"
(a / amr-empty)
"(m / multi-sentence
      :snt1 (s / shame-01
            :ARG1 (a / and
                  :op1 (y / you)
                  :op2 (c / company
                        :name (n / name
                              :op1 ""eBay""))
                  :op3 (c2 / company
                        :name (n2 / name
                              :op1 ""eBay""
                              :op2 ""Canada"")))
            :ARG2 (a2 / allow-01
                  :ARG0 a
                  :ARG1 (s2 / sell-01
                        :ARG1 (a3 / and
                              :op1 (s3 / sanitize-01
                                    :ARG1 (h / hand))
                              :op2 (p / product
                                    :name (n3 / name
                                          :op1 ""Lysol""))
                              :op3 (p2 / product
                                    :ARG0-of (c3 / clean-01)))
                        :ARG3 (p3 / price
                              :ARG1-of (h2 / high-02)))
                  :ARG0-of (g / gouge-02
                        :ARG2 (ii / individual
                              :ARG0-of (n4 / need-01
                                    :ARG1 a3
                                    :time (p4 / pandemic
                                          :name (n5 / name
                                                :op1 ""Covid""
                                                :op2 19)))))))
      :snt2 (s4 / shut-down-05
            :ARG0 (p5 / platform
                  :ARG0-of (s5 / sell-01)
                  :mod (o / other))
            :ARG1 (t / type-03
                  :ARG1 (s6 / sell-01)
                  :mod (t2 / this))
            :ARG1-of (w / wrong-02
                  :degree (s7 / so))))"
"(m / multi-sentence
      :snt1 (d / decide-01
            :ARG0 (w / we)
            :ARG1 (a / and
                  :op1 (ii / invest-01
                        :ARG0 w
                        :ARG2 (s / series
                              :consist-of (s2 / study-01
                                    :ARG1 (s3 / sentiment
                                          :mod (p / person
                                                :ARG0-of (c / consume-01))
                                          :topic (p2 / product
                                                :name (n / name
                                                      :op1 ""COVID-19"")))))
                        :op2 (r / release-01
                              :ARG0 w
                              :ARG1 (a2 / and
                                    :op1 s2
                                    :op2 (d2 / data
                                          :ARG0-of (u / underlie-01
                                                :ARG1 s3)))
                              :ARG1-of (f / free-03))))
            :snt2 (c2 / complete-01
                  :ARG1 (s4 / study-01
                        :quant 2
                        :ARG1 (a3 / and
                              :op1 (c3 / country
                                    :name (n2 / name
                                          :op1 ""UK""))
                              :op2 (c4 / country
                                    :name (n3 / name
                                          :op1 ""U.S.""))))
                  :snt3 (c5 / cover-01
                        :ARG0 (s5 / study-01
                              :mod (n4 / next))
                        :ARG1 (c6 / country
                              :quant 13)))))"
"(s / say-01
      :ARG1 (s2 / serious-01
            :ARG1 (t / this))
      :ARG2 (f / folk
            :ARG1-of (s3 / stay-01
                  :location (h / home))
            :ARG0-of (v / vote-01)))"
"(w / wonder-01
      :ARG0 (ii / i)
      :ARG1 (n / number
            :quant-of (p / person
                  :ARG0-of (w2 / work-01
                        :ARG2 (s / slash
                              :op1 (s2 / supermarket)
                              :op2 (s3 / shop)))
                  :ARG0-of (c / catch-01
                        :ARG1 (v / virus)
                        :time (s4 / since
                              :op1 (c2 / continue-01
                                    :ARG0 p
                                    :ARG1 w2))))))"
"(h / have-manner-91
      :ARG1 (s / suppose-02
            :ARG1 (t / thing
                  :ARG2-of (p / price-01
                        :ARG1 (g / gas))
                  :ARG1-of (h2 / have-degree-91
                        :ARG2 (l / low-04
                              :ARG1 t)
                        :ARG3 (m / more)))
            :ARG2 (m2 / make-02
                  :ARG0 t
                  :ARG1 (f / feel-01
                        :ARG0 (w / we)
                        :ARG1 (g2 / good-02
                              :ARG2-of h2
                              :ARG1 f
                              :ARG3 m))))
      :time (a / and
            :op1 (j / job
                  :polarity -)
            :op2 (s2 / supply-01
                  :polarity -
                  :ARG1 (m3 / medicine))
            :op3 (m4 / money
                  :polarity -))
      :ARG2 (a2 / amr-unknown))"
"(m / multi-sentence
      :snt1 (t / thank-01
            :mode expressive
            :ARG1 (a / and
                  :op1 (h / hero)
                  :op2 (p / person
                        :ARG2-of (s / staff-01
                              :ARG1 (s2 / store
                                    :mod (g / grocery)))
                        :mod (l / logistics))
                  :mod (a2 / all)))
      :snt2 (s3 / stay-01
            :mode imperative
            :polite +
            :ARG1 (y / you)
            :location (h2 / home)
            :condition (s4 / sick-05
                  :ARG1 y)
            :purpose (p2 / possible-01
                  :ARG1 (d / do-02
                        :ARG0 (e / everyone
                              :ARG0-of (h3 / have-org-role-91
                                    :ARG1 s2
                                    :ARG2 (m2 / member)))
                        :ARG1 (j / job
                              :poss e))))
      :snt3 (q / quarantine-01
            :mode expressive)
      :snt4 (b / break-out-30
            :ARG1 (v / virus
                  :name (n / name
                        :op1 ""Coronavirus"")))
      :snt5 (v2 / virus
            :name (n2 / name
                  :op1 ""Coronavirus"")))"
"(b / be-located-at-91
      :ARG1 (e / episode
            :ord (o / ordinal-entity
                  :value 12)
            :part-of (v / video
                  :name (n / name
                        :op1 ""Saudi""
                        :op2 ""Arabia""
                        :op3 ""#Coronavirus""
                        :op4 ""Vlog"")
                  :poss (ii / i)))
      :ARG2 (p / publication
            :name (n2 / name
                  :op1 ""YouTube""))
      :time (n3 / now))"
"(w / work-01
      :ARG0 (c / country
            :name (n / name
                  :op1 ""Australia""))
      :ARG1 (p / prevent-01
            :ARG0 c
            :ARG1 (c2 / close-01
                  :ARG1 (a / abattoir)
                  :ARG2-of (f / force-01))
            :condition (t / test-01
                  :ARG1 (o / or
                        :op1 (p2 / person
                              :quant 1
                              :ARG1-of (e / employ-01))
                        :op2 (p3 / person
                              :quant (m / more-than
                                    :op1 1)
                              :ARG1-of (e2 / employ-01)))
                  :ARG2 (p4 / positive)
                  :ARG3 (d / disease
                        :name (n2 / name
                              :op1 ""COVID-19"")))))"
"(t / time
      :time-of (s / survive-01)
      :domain (ii / it))"
"(c / cause-01
      :ARG0 (p / present-02
            :ARG1 (c2 / cost-01
                  :ARG1 (h / healthcare))
            :ARG2 (m / mind
                  :part-of (w / we))
            :degree (v / very))
      :ARG1 (w2 / worry-02
            :ARG0 (b / bill-01
                  :ARG2 w
                  :ARG3 (m2 / medicine))
            :ARG1 w))"
"(b / begin-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""The""
                  :op2 ""Valens""
                  :op3 ""Company""))
      :ARG1 (p / produce-01
            :ARG0 c
            :ARG1 (s / sanitizer
                  :beneficiary (h / hand))
            :purpose (h2 / help-01
                  :ARG0 c
                  :ARG1 (c2 / combat-01
                        :ARG0 c
                        :ARG1 (p2 / pandemic
                              :name (n2 / name
                                    :op1 ""COVID-19""))))))"
"(r / recommend-01
      :ARG1 (l / limit-01
            :ARG0 (y / you)
            :ARG1 (a / amount
                  :quant-of (a2 / and
                        :op1 (m / meat)
                        :op2 (p / produce)
                        :op3 (ii / item
                              :mod (f / food)
                              :ARG1-of (d / demand-01
                                    :ARG1-of (h / high-02))
                              :mod (o / other)
                              :ARG1-of (b / buy-01
                                    :ARG0 y)))))
      :ARG2 y)"
"(m / multi-sentence
      :snt1 (h / have-03
            :ARG0 (c / commission
                  :topic (p / person
                        :ARG0-of (c2 / consume-01)))
            :ARG1 (h2 / hotline
                  :location-of (p2 / possible-01
                        :ARG1 (r / report-01
                              :ARG0 (c3 / customer)
                              :ARG1 (p3 / price-01
                                    :mod (a / any)
                                    :ARG1-of (h3 / hike-02
                                          :ARG0 (r2 / retailer)))))))
      :snt2 (f / face-01
            :ARG0 (c4 / company
                  :ARG1-of (f2 / find-01
                        :location (s / side
                              :ARG1-of (w / wrong-03
                                    :ARG2 (l / law)))))
            :ARG1 (p4 / penalize-01
                  :ARG1 c4)))"
"(n / need-01
      :ARG0 (p / person
            :name (n2 / name
                  :op1 ""Jason""))
      :ARG1 (r / roll-01
            :ARG0 p
            :ARG1 (p2 / paper
                  :mod (t / toilet))))"
"(t / thank-01
      :ARG1 (p / person
            :ARG0-of (w / work-01)
            :mod (e / essential)
            :ARG0-of (w2 / work-01
                  :mod (s / still)
                  :time (p2 / pandemic
                        :mod (c / coronavirus)))
            :mod (a / all)))"
"(a / and
      :op1 (g / go-02
            :ARG0 (ii / i)
            :ARG4 (s / supermarket))
      :op2 (s2 / surprise-01
            :ARG0 (n / number
                  :quant-of (p / person
                        :age (o / over
                              :op1 (t / temporal-quantity
                                    :quant 70
                                    :unit (y / year)))
                        :ARG0-of (s3 / shop-01
                              :location (a2 / aisle
                                    :ARG1-of (c / crowd-01
                                          :degree (v / very))))))
            :ARG1 ii))"
"(e / exceed-01
      :polarity -
      :ARG0 (t / thing
            :ARG2-of (p / price-01
                  :ARG1 (b / bottle
                        :mod (p2 / product
                              :name (n / name
                                    :op1 ""handsanitizer""))
                        :quant (v / volume-quantity
                              :quant 200
                              :unit (m / milliliter)))
                  :ARG3 (r / retail-01)))
      :ARG1 (m2 / monetary-quantity
            :quant 100
            :unit (r2 / rupee))
      :location (c / country
            :name (n2 / name
                  :op1 ""India""))
      :time (u / until
            :op1 (d / date-entity
                  :year 2020
                  :month 6
                  :day 30)))"
"(e / extend-02
      :mode imperative
      :polite +
      :ARG0 (y / you)
      :ARG2 (p / person
            :ARG2-of (s / staff-01
                  :ARG1 (ii / interact-01
                        :ARG0 (c / customer)
                        :ARG1 (s2 / supermarket)))))"
"(p / price-01
      :ARG1 (g / gasoline
            :ARG1-of (r / regular-03)
            :ARG1-of (u / unleaded-02))
      :ARG2 (r2 / rate-entity-91
            :ARG1 (m / monetary-quantity
                  :quant 1.49
                  :unit (d / dollar))
            :ARG2 (v / volume-quantity
                  :quant 1
                  :unit (g2 / gallon)))
      :location (f / facility
            :name (n / name
                  :op1 ""Sam's""
                  :op2 ""Club"")
            :location (o / off
                  :op1 (r3 / road
                        :name (n2 / name
                              :op1 ""Rice""
                              :op2 ""Avenue"")))
            :location (c / city
                  :name (n3 / name
                        :op1 ""Houston""))))"
"(a / and
      :op1 (s / select-01
            :ARG1 (ii / i)
            :ARG3 (s2 / shopper
                  :mod (g / grocery)
                  :beneficiary (f / family
                        :poss ii))
            :time (e / event
                  :name (n / name
                        :op1 ""COVID-19"")))
      :op2 (s3 / start-01
            :ARG0 ii
            :ARG1 (c / cry-02
                  :ARG0 ii
                  :location (m / middle
                        :part-of (s4 / store))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (k / know-01
                              :polarity -
                              :ARG0 ii
                              :ARG1 (l / location
                                    :location-of (b / bread)))))
            :time (t / today)))"
"(m / multi-sentence
      :snt1 (t / think-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Brian""
                        :op2 ""Elder""
                        :op3 ""Roofing""))
            :ARG1 (a / and
                  :op1 (p2 / person
                        :ARG0-of (w / work-01
                              :ARG1 (h / healthcare)))
                  :op2 (p3 / person
                        :ARG0-of (d / drive-01
                              :ARG1 (d2 / deliver-01)))
                  :op3 (p4 / person
                        :ARG1-of (e / employ-01
                              :ARG2 (s / store
                                    :mod (g / grocery))))
                  :op4 (p5 / person
                        :ARG1-of (e2 / employ-01
                              :ARG2 (r / restaurant)))
                  :op5 (p6 / person
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 (c / community)
                              :ARG2 (m2 / member)))
                  :ARG0-of (c2 / continue-01
                        :ARG1 (w2 / work-01
                              :ARG0 a
                              :ARG1-of (h3 / hard-02)
                              :time (e3 / event
                                    :name (n2 / name
                                          :op1 ""COVID-19""))))
                  :mod (a2 / all)))
      :snt2 (a3 / appreciate-02
            :ARG1 (y / you)))"
"(p / possible-01
      :ARG1 (a / and
            :op1 (g / go-02
                  :ARG0 (ii / i)
                  :ARG4 (b / beach)
                  :time (a2 / after))
            :op2 (t / try-01
                  :ARG0 ii
                  :ARG1 (f / find-01
                        :ARG0 ii
                        :ARG1 (g2 / gold
                              :quant (s / some
                                    :quant (m / more)))
                        :ARG2 (s2 / sand)))))"
"(m / multi-sentence
      :snt1 (e / essential
            :domain (f / find-01
                  :ARG1 (s / spot
                        :location (n / near-02
                              :ARG2 (y / you)))
                  :ARG1-of (e2 / easy-05
                        :degree (q / quite))
                  :condition (f2 / fish-01
                        :polarity -
                        :ARG0 y
                        :source (j / jetty))))
      :snt2 (l / likely-01
            :ARG1 (p / pass-on-19
                  :ARG0 (p2 / person)
                  :ARG1 (c / car-make
                        :name (n2 / name
                              :op1 ""Covid""
                              :op2 19))
                  :time (f3 / fish-01
                        :ARG0 p2))
            :ARG2-of (h / have-degree-91
                  :ARG1 p
                  :ARG3 (l2 / less)
                  :ARG4 (g / go-02
                        :ARG0 p2
                        :ARG4 (s2 / supermarket)
                        :mod (e3 / essential)))))"
"(m / multi-sentence
      :snt1 (p / possible-01
            :polarity -
            :ARG1 (a / and
                  :op1 (s / see-01
                        :ARG0 (s2 / store)
                        :ARG1 (p2 / person
                              :ARG0-of (b / buy-01
                                    :mod (b2 / bulk))))
                  :op2 (c / cancel-01
                        :ARG0 s2
                        :ARG1 (p3 / purchase-01
                              :ARG0 p2)
                        :time (c2 / checkout)
                        :purpose (a2 / allow-01
                              :ARG0 s2
                              :ARG1 (b3 / buy-01
                                    :ARG0 (s3 / slash
                                          :op1 (o / other)
                                          :op2 (p4 / person
                                                :mod (e / elderly)))
                                    :ARG1 (s4 / slash
                                          :op1 (f / food)
                                          :op2 (e2 / essential))))))
            :condition (h / have-03
                  :ARG0 (e3 / everyone)
                  :ARG1 (c3 / card
                        :mod (l / loyalty)
                        :mod (s5 / supermarket)))
            :polarity (a3 / amr-unknown))
      :snt2 (t / think-01
            :mod (j / just)))"
"(a / and
      :op1 (s / scroll-01
            :ARG1 (e / email-01
                  :ARG1-of (s2 / speak-01
                        :ARG0 (c / corporate))
                  :quant (m / most)
                  :location (p / product
                        :name (n / name
                              :op1 ""COVID-19"")))
            :ARG1-of (q / quick-02))
      :op2 (d / delete-01
            :ARG1 e))"
"(m / multi-sentence
      :snt1 (s / scramble-01
            :ARG0 (b / bank
                  :mod (f / food))
            :ARG1 (k / keep-up-05
                  :ARG0 b
                  :ARG1 (a / and
                        :op1 (p / person
                              :ARG0-of (v / volunteer-01)
                              :ARG1-of (h / have-quant-91
                                    :ARG3 (l / less)))
                        :op2 (p2 / price-01
                              :ARG1-of (h2 / have-degree-91
                                    :ARG2 (h3 / high-02
                                          :ARG1 p2)
                                    :ARG3 (m2 / more)))))
            :ARG1-of (c / cause-01
                  :ARG0 (ii / increase-01
                        :ARG1 (d / demand-01
                              :ARG1 b))))
      :snt2 (o / order-01
            :ARG1 (c2 / customer)
            :ARG2 (s2 / shelter-01
                  :ARG1 c2
                  :manner (ii2 / in-place))))"
"(w / work-01
      :ARG2 (s / supermarket)
      :time (p / pandemic
            :name (n / name
                  :op1 ""COVID-19"")))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (g / government-organization
                              :name (n / name
                                    :op1 ""DOJ""))
                        :ARG2 (s2 / spokeswoman)))
            :ARG1 (r / receive-01
                  :ARG0 g
                  :ARG1 (t / tip-05
                        :ARG1 g
                        :ARG2 (u / use-01
                              :ARG0 (b / business
                                    :name (n2 / name
                                          :op1 ""Bend""
                                          :op2 ""NSA"")
                                    :poss (p2 / person
                                          :name (n3 / name
                                                :op1 ""Johnson"")))
                              :ARG1 (s3 / sign)
                              :ARG2 (c / claim-01
                                    :ARG0 b
                                    :ARG1 (c2 / cure-01
                                          :ARG2 (d / disease
                                                :name (n4 / name
                                                      :op1 ""COVID-19"")))
                                    :mod (f / false))))
                  :medium (h2 / hotline
                        :mod (p3 / person
                              :ARG0-of (c3 / consume-01))
                        :poss g)))
      :snt2 (p4 / prevent-01
            :ARG0 (s4 / settle-02)
            :ARG1 (c4 / clinic)
            :ARG2 (c5 / claim-01
                  :ARG0 c4
                  :ARG1 (t2 / thing
                        :ARG1-of (a / approve-01
                              :polarity -
                              :ARG0 (g2 / government-organization
                                    :name (n5 / name
                                          :op1 ""FDA""))))
                  :time (e / ever))))"
"(m / multi-sentence
      :snt1 (p / possible-01
            :polarity -
            :ARG1 (g / get-01
                  :ARG0 (ii / i)
                  :ARG1 (g2 / grocery))
            :duration (t / temporal-quantity
                  :quant 2
                  :unit (w / week)))
      :snt2 (c / contrast-01
            :ARG1 (t2 / try-01
                  :ARG0 (ii2 / i)
                  :ARG1 (s / shop-01
                        :ARG0 ii2
                        :medium (o / online)))
            :ARG2 (s2 / stock-01
                  :polarity -
                  :ARG1 (e / everything)))
      :snt3 (a / and
            :op1 (c2 / call-02
                  :ARG0 (ii3 / i)
                  :ARG1 (a2 / agency
                        :topic (a3 / age-01))
                  :purpose (s3 / see-01
                        :ARG0 ii3
                        :ARG1 (t3 / thing
                              :ARG2-of (h / help-01)
                              :ARG2-of (a4 / available-02))))
            :op2 (t4 / tell-01
                  :ARG0 a2
                  :ARG1 (s4 / suspend-01
                        :ARG1 (p2 / program
                              :mod (a5 / all)))
                  :ARG2 ii3)))"
"(m / multi-sentence
      :snt1 (c / case-04
            :quant 11
            :ARG1 (c2 / coronavirus)
            :ARG1-of (n / new-01)
            :location (c3 / country
                  :name (n2 / name
                        :op1 ""Kenya""))
            :time (n3 / now)
            :ARG0-of (b / bring-01
                  :ARG1 (t / total-01
                        :ARG2 208)))
      :snt2 (a / advise-01
            :ARG0 (ii / i)
            :ARG1 (p / person
                  :mod c3)
            :ARG2 (a2 / and
                  :op1 (c4 / care-04
                        :ARG0 p
                        :ARG1 (d / distance-01
                              :ARG0 p
                              :ARG2 (s / society))
                        :degree (v / very))
                  :op2 (w / wear-01
                        :ARG0 p
                        :ARG1 (f / facemask)
                        :time (a3 / all))
                  :op3 (s2 / stock-up-02
                        :ARG0 p
                        :ARG1 (f2 / food
                              :ARG1-of (h / have-quant-91
                                    :ARG3 (e / enough)))
                        :location (h2 / home))))
      :snt3 (s3 / stay-01
            :mode imperative
            :ARG1 (y / you)
            :location h2)
      :purpose (p2 / prevent-01
            :ARG0 y
            :ARG1 (s4 / spread-02
                  :ARG1 (v2 / virus))))"
"(s / say-01
      :ARG0 (w / we)
      :ARG1 (f / fool
            :domain (t / they)))"
"(ii / implement-01
      :ARG0 (s / supermarket
            :mod (c / country
                  :name (n / name
                        :op1 ""Denmark"")))
      :ARG1 (t / thing
            :ARG2-of (s2 / solve-01)
            :ARG0-of (d / distance-01))
      :purpose (h / help-01
            :ARG0 s
            :ARG1 (p / prevent-01
                  :ARG1 (s3 / spread-02
                        :ARG1 (d2 / disease
                              :name (n2 / name
                                    :op1 ""coronavirus""))))))"
"(r / recommend-01
      :polarity (a / amr-unknown)
      :ARG1 (q / queue-01
            :ARG1 (y / you)
            :ARG2 (s / supermarket)))"
"(h / help-01
      :ARG0 (s / sue-02)
      :ARG1 (ii / increase-01
            :ARG0 s
            :ARG1 (a / and
                  :op1 (t / transparency)
                  :op2 (e / ethics))
            :location (b / broadcast-program
                  :name (n / name
                        :op1 ""Fox""
                        :op2 ""News"")))
      :medium (u / url-entity
            :value ""https://t.co/VfyY0zP6OZ""))"
"(a / and
      :op1 (c / condemn-01
            :ARG0 (w / we)
            :ARG1 (g / gouge-02
                  :ARG2 (p / price-01))
            :ARG1-of (s / strong-02))
      :op2 (p2 / price-01
            :ARG1 w
            :ARG1-of (p3 / post-01)
            :ARG1-of (n / normal-02)))"
"(f / follow-02
      :mode imperative
      :polite +
      :ARG0 (y / you)
      :ARG1 (ii / i)
      :medium (p / publication
            :name (n / name
                  :op1 ""TikTok""))
      :ARG2-of (s / say-01
            :ARG0 ii
            :ARG2 (p2 / person
                  :name n
                  :op1 ""thelizzy_snyder"")))"
"(o / open-01
      :ARG1 (s / supermarket
            :name (n / name
                  :op1 ""Asda"")
            :location (c / city-district
                  :name (n2 / name
                        :op1 ""Waleside"")
                  :part-of (c2 / city
                        :name (n3 / name
                              :op1 ""London""))))
      :purpose (s2 / shop-01
            :ARG0 (y / you))
      :time (d / date-entity
            :time ""6:00""))"
"(m / multi-sentence
      :snt1 (h / have-03
            :polarity -
            :ARG0 (w / we)
            :ARG1 (f / flyer
                  :mod (s / sell-01))
            :time (d / date-interval
                  :op1 (d2 / date-entity
                        :month 3
                        :day 29
                        :year 2020)
                  :op2 (d3 / date-entity
                        :month 4
                        :day 4
                        :year 2020)))
      :snt2 (t / thank-01
            :ARG0 (ii / i)
            :ARG1 (y / you)
            :ARG2 (u / understand-01
                  :ARG0 y)))"
"(w / way
      :ARG1-of (h / have-degree-91
            :ARG2 (g / good-02)
            :ARG3 (m / most))
      :manner-of (a / avoid-01
            :ARG0 (y / you)
            :ARG1 (c / catch-01
                  :ARG0 y
                  :ARG1 (d / disease
                        :name (n / name
                              :op1 ""Coronavirus""))
                  :location (s / supermarket)))
      :domain (m2 / minimize-01
            :ARG0 y
            :ARG1 (r / risk-01
                  :ARG0 y)))"
"(t / try-01
      :ARG0 (y / you)
      :ARG1 (s / say-01
            :ARG0 y
            :ARG1 (c / catch-01
                  :ARG0 (s2 / shop-01
                        :medium (o / online))
                  :ARG1 (s3 / sell-01
                        :ARG1 (p / product
                              :name (n / name
                                    :op1 ""Covid-19""))
                        :mod (a / all))))
      :polarity (a2 / amr-unknown))"
"(n / next
      :domain (a / amr-unknown)
      :prep-for (p / price-01
            :ARG1 (h / home))
      :prep-amid (l / law
            :name (n2 / name
                  :op1 ""COVID-19"")))"
"(m / multi-sentence
      :snt1 (v / view-01
            :mode imperative
            :polite +
            :ARG0 (y / you)
            :ARG1 (r / release-01
                  :mod (p / press)
                  :ARG1-of (a / attach-01)
                  :topic (u / update-02
                        :ARG2 (p2 / product
                              :name (n / name
                                    :op1 ""COVID-19""))
                        :location (c / city
                              :name (n2 / name
                                    :op1 ""San""
                                    :op2 ""Dimas""))
                        :time (a2 / as-of
                              :op1 (d / date-entity
                                    :month 3
                                    :day 18
                                    :year 2020)))))
      :snt2 (ii / include-01
            :ARG1 (ii2 / information
                  :topic (a3 / and
                        :op1 (h / hour
                              :mod (s / store
                                    :mod (g / grocery)))
                        :op2 (r2 / restaurant)
                        :op3 (m2 / more)))
            :ARG2 (r3 / release-01
                  :mod (p3 / press))))"
"(c / contrast-01
      :ARG1 (ii / ironic
            :domain (l / low-04
                  :ARG1 (t / thing
                        :ARG2-of (p / price-01
                              :ARG1 (g / gas)))
                  :time (m / multiple
                        :op1 (t2 / temporal-quantity
                              :quant 1
                              :unit (y / year)))))
      :ARG2 (p2 / possible-01
            :polarity -
            :ARG1 (g2 / go-02
                  :ARG0 (w / we)
                  :ARG4 (a / anywhere)
                  :time (n / now
                        :mod (r / right)))))"
"(b / buy-01
      :ARG0 (p / person)
      :ARG1 (p2 / paper
            :purpose (t / toilet))
      :ARG1-of (c / cause-01
            :ARG0 (f / fear-01
                  :ARG0 p
                  :ARG1 (c2 / coronavirus))))"
"(s / see-01
      :ARG0 (t / television)
      :ARG1 (r / resurge-01
            :time (t2 / this))
      :mod (d / definite)
      :ARG0-of (s2 / show-01
            :ARG1 (p / possible-01
                  :ARG1 (ii / impact-01
                        :ARG0 (t3 / thing
                              :ARG1-of (a / act-01
                                    :ARG0 (y / you)
                                    :time t2
                                    :direction (a2 / and
                                          :op1 (s3 / staff)
                                          :op2 (e / et-cetera))))
                        :ARG1 (m / move-01
                              :direction (f / forward))
                        :degree (g / great)))
            :mod (j / just)))"
"(s / sicken-01
      :ARG0 (t / think-01
            :ARG1 (a / and
                  :op1 (p / person
                        :name (n / name
                              :op1 ""Merkel""))
                  :op2 (r / roll
                        :mod (b / bog)
                        :poss p))))"
"(n / need-01
      :ARG0 (s / someone)
      :ARG1 (b / build-01
            :ARG0 s
            :ARG1 (e / extend-01
                  :ARG1 (s2 / shop-01
                        :medium (o / online))
                  :ARG0-of (a / allow-01
                        :ARG1 (p / purchase-01
                              :ARG0 (y / you)
                              :ARG1 (d / duplicate-01
                                    :ARG1 (ii / item))
                              :ARG4 (h / household
                                    :ARG1-of (f / fortunate-01
                                          :polarity -
                                          :ARG2-of (h2 / have-degree-91
                                                :ARG1 h
                                                :ARG3 (l / less))))
                              :ARG1-of (b2 / base-02
                                    :ARG2 (l2 / list-01
                                          :ARG0 h
                                          :purpose (s3 / shop-01
                                                :ARG0 h))))))))"
"(s / say-01
      :ARG0 (ii / i)
      :ARG1 (r / rise-up-03
            :mode imperative
            :ARG0 (a / and
                  :op1 (p / person
                        :ARG1-of (e / employ-01
                              :ARG0 (s2 / store
                                    :mod (g / grocery))))
                  :op2 (p2 / person
                        :ARG0-of (d / drive-01
                              :ARG1 (d2 / deliver-01)))
                  :op3 (p3 / person
                        :ARG0-of (w / work-01
                              :ARG1 (h / healthcare)))
                  :op4 (p4 / person
                        :ARG0-of (w2 / work-01
                              :ARG1 (s3 / sanitation)))))
      :ARG2 a
      :medium (p5 / publication
            :name (n / name
                  :op1 ""Coronavirus"")))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (e / exist-01
                  :ARG1 (o / organization
                        :name (n / name
                              :op1 ""COVID-19""))
                  :mod (s / still))
            :op2 (d / drop-out-04
                  :ARG0 (p / person
                        :name (n2 / name
                              :op1 ""Bernie""
                              :op2 ""Sanders""))
                  :ARG1 (r / race-02
                        :ARG0 p
                        :ARG2 (p2 / president))))
      :snt2 (s2 / shop-01
            :ARG0 (ii / i)
            :medium (o2 / online)))"
"(g / gift-01
      :ARG0 (p / person
            :ARG0-of (h / host-01))
      :ARG1 (p2 / paper
            :mod (t / toilet))
      :time (d / date-entity
            :year 2020))"
"(m / multi-sentence
      :snt1 (d / disappoint-01
            :ARG0 (h / have-03
                  :ARG0 (c / company
                        :name (n / name
                              :op1 ""Publix"")
                        :ARG1-of (ii / include-91
                              :ARG2 (ii2 / industry
                                    :mod (m2 / main)
                                    :ARG0-of (p / profit-01
                                          :ARG1 (p2 / person
                                                :ARG0-of (c2 / consume-01)
                                                :mod c
                                                :name n
                                                :op1 ""Coronavirus"")))))))
      :ARG1 (s / sign
            :location (r / register
                  :poss c)
            :ARG0-of (s2 / state-01
                  :ARG1 (a / allow-01
                        :polarity -
                        :ARG0 c
                        :ARG1 (c3 / cash
                              :direction (b / back)))))
      :ARG1 (ii3 / i)
      :snt2 (m3 / money
            :polarity (a2 / amr-unknown)
            :mod (a3 / all)
            :ARG1-of (m4 / make-05
                  :ARG0 (y / you
                        :mod a3)))
      :ARG1-of (r2 / real-04))"
"(m / multi-sentence
      :snt1 (w / watch-01
            :ARG0 (ii / i)
            :ARG1 (n / nurse
                  :ARG0-of (c / care-03
                        :ARG1-of (c2 / critical-03))
                  :ARG0-of (c3 / cry-02
                        :ARG1-of (c4 / cause-01
                              :ARG0 (e / empty-02
                                    :ARG1 (s / shelf
                                          :location (s2 / supermarket))))))
            :time (g / get-01
                  :ARG0 ii
                  :ARG1 (v / virus))
            :medium (b / broadcast-program
                  :name (n2 / name
                        :op1 ""BBC""
                        :op2 ""News""))
            :mod (j / just))
      :snt2 (r / remember-01
            :ARG0 (y / you)
            :ARG1 (n3 / need-01
                  :ARG0 y
                  :ARG1 (p / person
                        :ARG1-of (r2 / resemble-01
                              :ARG2 n))
                  :purpose (l / look-after-07
                        :ARG0 p
                        :ARG1 y
                        :time g))
            :mod (j2 / just)
            :condition (ii2 / include-91
                  :ARG1 y
                  :ARG2 (o / or
                        :op1 (p2 / person
                              :ARG0-of (s3 / stockpile-01)
                              :mod (s4 / selfish)
                              :mod (f / fucking
                                    :mode expressive))
                        :op2 (p3 / person
                              :ARG0-of (p4 / profit-01)
                              :mod s4
                              :mod f)))))"
"(m / multi-sentence
      :snt1 (c / come-01
            :ARG1 (d / detail))
      :snt2 (d2 / decide-01
            :ARG0 (w / we)
            :ARG1 (c2 / continue-01
                  :ARG0 w
                  :ARG1 (p / program
                        :time (d3 / date-entity
                              :year 2020))
                  :manner (p2 / program
                        :mod (ii / interactive)
                        :mod (o / online))
                  :purpose (m2 / minimize-01
                        :ARG0 w
                        :ARG1 (r / risk-01
                              :ARG2 (h / healthy)))))
      :snt3 (a / and
            :op1 (a2 / adjust-01
                  :ARG0 (w2 / we)
                  :ARG1 (m3 / monetary-quantity
                        :ARG2-of (p3 / price-01)))
            :op2 (p4 / put-03
                  :ARG0 w2
                  :ARG1 (e / experience-01
                        :ARG1-of (c3 / condense-01)
                        :ARG0-of (ii2 / inspire-01
                              :ARG2-of (h2 / have-degree-91
                                    :ARG1 e
                                    :ARG3 (e2 / equal)
                                    :ARG4 c2)))
                  :ARG2 (t / together)))
      :snt4 (c4 / come-01
            :ARG1 (d4 / detail
                  :quant (m4 / more))))"
"(w / worry-02
      :ARG0 (p / person
            :mod (c / country
                  :name (n / name
                        :op1 ""Australia"")))
      :ARG1 (b / bill-01
            :quant (l / less
                  :quant (o / one)))
      :time (r / roll-out-02
            :ARG0 (c2 / company
                  :ARG0-of (p2 / provide-01
                        :ARG1 (e / energy)))
            :ARG1 (m / measure-02
                  :ARG0 c2
                  :ARG1 (s / support-01
                        :ARG0 (c3 / coronavirus)
                        :ARG1 (c4 / customer
                              :ARG0-of (f / face-01
                                    :ARG1 (h / hardship))))
                  :ARG1-of (n2 / new-01)))
      :time (m2 / month
            :mod (t / this)))"
"(s / seem-01
      :ARG1 (p / put-03
            :ARG0 (s2 / supermarket)
            :ARG1 (p2 / price-01
                  :ARG0 s2)
            :ARG2 (u / up-02
                  :ARG1 p2))
      :ARG2 (ii / i))"
"(c / cut-back-05
      :ARG0 (c2 / company
            :name (n / name
                  :op1 ""Loom""))
      :ARG1 (p / price-01)
      :ARG2-of (r / respond-01
            :ARG0 c2
            :ARG1 (c3 / coronavirus)))"
"(a / and
      :op1 (s / start-01
            :ARG2 (t / top-02
                  :ARG1 (ii / it)
                  :ARG2 (m / monetary-quantity
                        :quant 100
                        :unit (p / pound))))
      :op2 (n / need-01
            :ARG1 (h / have-degree-91
                  :ARG1 ii
                  :ARG2 (h2 / high-02
                        :ARG1 ii)
                  :ARG3 (m2 / more
                        :quant (m3 / much))))
      :domain (a2 / and
            :op1 (d / disgust-01
                  :ARG0 (w / waste-01
                        :ARG1 (f / food
                              :ARG1-of (g / go-08
                                    :ARG2 (b / bad-07))
                              :ARG1-of (e / expire-01))))
            :op2 (c / criminal-03
                  :ARG2 w)
            :op3 (d2 / deprive-01
                  :ARG1 (g2 / get-01
                        :ARG0 (p2 / person
                              :quant (m4 / many))
                        :ARG1 (p3 / product
                              :quant (s2 / some)
                              :mod (e2 / essential)))
                  :ARG2 p2
                  :ARG0-of (c2 / cause-01
                        :ARG1 (p4 / push-01
                              :ARG1 (p5 / price)
                              :ARG2 (u / up))))))"
"(m / multi-sentence
      :snt1 (p / pull-on-06
            :ARG1 (ii / i)
            :ARG2 (g / gun)
            :time (g2 / go-02
                  :ARG0 ii
                  :ARG4 (s / store
                        :mod (g3 / grocery)))
            :ARG1-of (c / cause-01
                  :ARG0 (b / be-located-at-91
                        :ARG1 ii
                        :ARG2 (b2 / blindspot
                              :poss (h / he)))))
      :snt2 (m2 / moral-02
            :ARG1 (s2 / story)
            :ARG2 (k / kind-01
                  :mode imperative
                  :ARG0 (y / you)))
      :snt3 (d / day
            :ord (o / ordinal-entity
                  :value 1)
            :mod (l / log)
            :poss (p2 / person
                  :ARG0-of (h2 / have-org-role-91
                        :ARG2 (c2 / captain)))))"
"(f / face-01
      :ARG0 (a / and
            :op1 (c / country
                  :ARG0-of (e / export-01
                        :ARG1 (o / oil))
                  :location (w / world-region
                        :name (n / name
                              :op1 ""Middle""
                              :op2 ""East"")))
            :op2 (c2 / country
                  :location (w2 / world-region
                        :name (n2 / name
                              :op1 ""Central""
                              :op2 ""Asia""))))
      :ARG1 (c3 / challenge-01
            :ARG2 (a2 / and
                  :op1 (p / price-01
                        :ARG1 (o2 / oil)
                        :ARG1-of (p2 / plunge-01))
                  :op2 (g / glut-01
                        :ARG1 (s / supply-01))
                  :ARG2-of (a3 / add-02
                        :ARG1 (p3 / product
                              :name (n3 / name
                                    :op1 ""COVID19""))))
            :ARG1-of (d / double-01)))"
"(s / stock-up-02
      :ARG0 (f / family)
      :ARG1 (a / and
            :op1 (f2 / food)
            :op2 (t / thing
                  :ARG1-of (s2 / supply-01)))
      :location (h / home)
      :time (c / continue-01
            :ARG0 (m / military
                  :name (n / name
                        :op1 ""COVID-19""))
            :ARG1 (s3 / strike-01
                  :ARG0 m
                  :ARG1 (f3 / fear-01
                        :location (n2 / nation)))))"
"(m / multi-sentence
      :snt1 (a / argue-01
            :ARG0 (ii / industry)
            :ARG1 (w / wrong-02
                  :ARG1 (e / enforce-01
                        :ARG1 (l / law
                              :name (n / name
                                    :op1 ""CCPA"")
                              :mod (s / state
                                    :name (n2 / name
                                          :op1 ""California""))
                              :topic (p / private-02)))
                  :ARG1-of (c / cause-01
                        :ARG0 (p2 / pandemic
                              :name (n3 / name
                                    :op1 ""COVID19"")))))
      :snt2 (d / disagree-01
            :ARG0 (w2 / we)))"
"(r / recommend-01
      :ARG1 (t / thank-01
            :ARG1 (c / chain
                  :mod (s / supermarket)
                  :poss (w / we))
            :ARG2 (a / and
                  :op1 (p / plan-01
                        :ARG0 c
                        :ARG1 (e / emergency))
                  :op2 (s2 / support-01
                        :ARG0 c
                        :ARG1 (a2 / and
                              :op1 (g / group
                                    :ARG1-of (v / vulnerable-01))
                              :op2 (p2 / person
                                    :ARG2-of (s3 / staff-01
                                          :ARG0 (g2 / government-organization
                                                :name (n / name
                                                      :op1 ""NHS"")))))))))"
"(a / and
      :op1 (f / find-01
            :ARG0 (ii / i)
            :ARG1 (t / this)
            :location (a2 / aisle
                  :mod (p / paper
                        :purpose (t2 / toilet)))
            :time (b / before
                  :op1 (n / now)
                  :quant (f2 / few
                        :op1 (t3 / temporal-quantity
                              :quant 1
                              :unit (d / day)))))
      :op2 (s / sum-up-01
            :ARG0 t
            :ARG1 (t4 / thing
                  :ARG1-of (f3 / feel-01
                        :ARG0 ii))
            :ARG1-of (r / real-04)))"
"(d / drink-01
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG1 (d2 / district)
                  :ARG2 (o / officer
                        :mod (m / medicine)))
            :location (c / city
                  :name (n / name
                        :op1 ""Anantapur"")))
      :ARG1 (s / sanitizer)
      :ARG1-of (ii / instead-of-91
            :ARG2 (d3 / drink-01
                  :ARG0 p
                  :ARG1 (w / water))))"
"(m / multi-sentence
      :snt1 (r / reduce-01
            :ARG0 (c / company
                  :name (n / name
                        :op1 ""Harbor""
                        :op2 ""Freight""))
            :ARG1 (h / hour
                  :mod (s / store
                        :poss c))
            :ARG4 (d / date-interval
                  :op1 (d2 / date-entity
                        :time ""8:00""
                        :weekday (m2 / monday))
                  :op2 (d3 / date-entity
                        :time ""16:00""
                        :weekday (s2 / saturday))))
      :snt2 (e / encourage-01
            :ARG1 (c2 / customer)
            :ARG2 (s3 / shop-01
                  :ARG0 c2
                  :ARG2 (u / url-entity
                        :value ""https://t.co/Y"")
                  :medium (o / online))
            :mod (a / also)
            :ARG1-of (c3 / cause-01
                  :ARG0 (l / law
                        :name (n2 / name
                              :op1 ""COVID-19"")))
            :time (d4 / date-interval
                  :op1 (d5 / date-entity
                        :time ""9:00""
                        :weekday (s4 / sunday))
                  :op2 (d6 / date-entity
                        :time ""17:00""
                        :weekday s4))))"
"(a / achieve-01
      :ARG0 (b / brand
            :mod (c / company
                  :name (n / name
                        :op1 ""CPG"")))
      :ARG1 (p / purpose)
      :manner (a2 / aid-01
            :ARG0 b
            :ARG1 (f / fight-01
                  :ARG1 (o / organization
                        :name (n2 / name
                              :op1 ""COVID-19"")))))"
"(m / multi-sentence
      :snt1 (c / close-01
            :ARG1 (r / restaurant)
            :time (d / date-entity
                  :time ""19:00""
                  :weekday (m2 / monday))
            :purpose (h / help-01
                  :ARG0 r
                  :ARG1 (s / stop-01
                        :ARG0 r
                        :ARG1 (s2 / spread-02
                              :ARG1 (d2 / disease
                                    :name (n / name
                                          :op1 ""COVID-19""))))))
      :snt2 (o / out-01
            :ARG1 (f / fan
                  :mod (f2 / food
                        :ARG1-of (f3 / fast-02)))
            :manner (f4 / force)
            :purpose (p / product
                  :name (n2 / name
                        :op1 ""Big""
                        :op2 ""Mac"")
                  :mod (f5 / final))
            :time (b / before
                  :op1 (s3 / shut-down-05))))"
"(d / drive-02
      :ARG0 (p / person
            :ARG0-of (s / stockpile-01)
            :mod (a / accidental))
      :ARG1 (s2 / short-06
            :ARG2 (s3 / supermarket)))"
"(f / fall-01
      :ARG1 (t / thing
            :ARG2-of (p / price-01)
            :location (c / continent
                  :name (n / name
                        :op1 ""Asia"")))
      :ARG4 (b / back)
      :time (d / date-entity
            :weekday (t2 / thursday)
            :time-of (p2 / postpone-01
                  :ARG1 (v / vote-01
                        :ARG0 (g / government-organization
                              :name (n2 / name
                                    :op1 ""Senate""))
                        :ARG1 (p3 / package
                              :mod (l / large)
                              :ARG0-of (s / stimulate-01)
                              :ARG1-of (d2 / design-01
                                    :ARG3 (h / help-01
                                          :ARG0 p3
                                          :ARG1 (e / economy
                                                :mod (c2 / country
                                                      :name (n3 / name
                                                            :op1 ""US""))
                                                :ARG0-of (s2 / struggle-02)))))))))"
"(m / multi-sentence
      :snt1 (ii / idea
            :purpose (s / stop-01
                  :ARG1 (p / person
                        :ARG0-of (h / hoard-01))
                  :location (s2 / supermarket
                        :location (c / country
                              :name (n / name
                                    :op1 ""UK""))))
            :domain (p2 / play-11
                  :ARG1 (p3 / plead-01
                        :ARG0 (p4 / person
                              :name (n2 / name
                                    :op1 ""Dawn"")))
                  :medium (ii2 / intercom)
                  :location (s3 / supermarket
                        :mod (e / every))
                  :frequency (r / rate-entity-91
                        :ARG3 (t / temporal-quantity
                              :quant 5
                              :unit (m2 / minute)))))
      :snt2 (s4 / slash
            :op1 (m3 / make-02
                  :ARG0 (ii3 / it)
                  :ARG1 (s5 / shame-02
                        :ARG0 ii3
                        :ARG1 (p5 / person)))
            :op2 (c2 / change-01
                  :ARG0 ii3
                  :ARG1 (b / behave-01
                        :ARG0 p5)))
      :snt3 (r2 / remove-01
            :ARG1 (c3 / cart
                  :purpose (s6 / shop-01)
                  :ARG1-of (h2 / have-degree-91
                        :ARG2 (l / large)
                        :ARG3 (m4 / most)))
            :purpose (p6 / possible-01
                  :ARG1 (h3 / have-03
                        :ARG0 (e2 / everyone)
                        :ARG1 (s7 / slash
                              :op1 (b2 / basket
                                    :quant 1)
                              :op2 (t2 / thing
                                    :ARG1-of (p7 / possible-01)))
                        :mod (o / only)))
            :mod (a / also)))"
(p / pandemic)
"(d / deliver-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Brad""
                  :op2 ""Paisley""))
      :ARG1 (g / grocery
            :ARG1-of (f / free-03))
      :ARG2 (p2 / person
            :mod (e / elderly))
      :time (p3 / pandemic
            :mod (c / coronavirus)))"
"(m / multi-sentence
      :snt1 (l / lucky
            :domain (ii / i)
            :ARG1-of (c / cause-01
                  :ARG0 (r / risk-01
                        :ARG0 (h / he)
                        :ARG2 (t / trip-03
                              :ARG0 h
                              :ARG1 (s / supermarket)))))
      :snt2 (t2 / think-01
            :polarity -
            :ARG0 (ii2 / i)
            :ARG1 (w / want-01
                  :ARG0 (h2 / he)
                  :ARG1 (s2 / spend-02
                        :ARG0 h2
                        :ARG1 (t3 / time
                              :ARG1-of (h3 / have-degree-91
                                    :ARG2 (l2 / long-03
                                          :ARG1 s2)
                                    :ARG3 (m2 / more
                                          :mod (a / any))
                                    :ARG4 (n / need-01)))
                        :location (t4 / there)))))"
"(m / multi-sentence
      :snt1 (d / decide-01
            :ARG0 (ii / i)
            :ARG1 (b / ban-01
                  :ARG0 ii
                  :ARG1 (m2 / movement-07
                        :ARG0 (p / person
                              :quant 5
                              :ARG0-of (h / have-rel-role-91
                                    :ARG1 (w / we)
                                    :ARG2 (f / family)))
                        :ARG1 (b2 / bowel)
                        :mod (a / all))
                  :time (t / this))
            :ARG1-of (b3 / bold-02))
      :snt2 (a2 / allow-01
            :ARG1 (d2 / dry-08
                  :ARG1 (d3 / drip)
                  :mod (o / only))))"
"(d / demand-01
      :ARG0 (p / person
            :ARG0-of (r / reside-01
                  :ARG1 (c / city
                        :name (n / name
                              :op1 ""Lagos""))))
      :ARG1 (d2 / distribute-01
            :ARG1 (f / food)
            :quant (m / more))
      :time (c2 / continue-01
            :ARG1 (p2 / pandemic
                  :name (n2 / name
                        :op1 ""COVID-19""))))"
"(j / join-04
      :mode imperative
      :polite +
      :ARG0 (y / you)
      :ARG1 (w / we)
      :ARG2 (u / update-02
            :ARG1 w
            :ARG2 (a / and
                  :op1 (ii / insight
                        :mod (l / last))
                  :op2 (ii2 / impact-01
                        :ARG0 (v / virus
                              :name (n / name
                                    :op1 ""COVID-19""))
                        :mod (o / overall)))))"
"(a / and
      :op1 (g / grow-01
            :ARG1 (w / worth-01
                  :ARG1 (p / person
                        :name (n / name
                              :op1 ""Jeff""
                              :op2 ""Bezos""))
                  :ARG1-of (n2 / net-02))
            :ARG2 (m / monetary-quantity
                  :quant 5000000000
                  :unit (d / dollar)))
      :op2 (g2 / go-01
            :ARG1 (c / cap-01
                  :ARG1 (m2 / market
                        :poss (c2 / company
                              :name (n3 / name
                                    :op1 ""Amazon""))))
            :ARG2 (m3 / monetary-quantity
                  :quant 500000000
                  :unit (d2 / dollar))
            :direction (u / up))
      :op3 (d3 / donate-01
            :ARG0 p
            :ARG1 (m4 / monetary-quantity
                  :quant 100000000
                  :unit (d4 / dollar)))
      :duration (t / temporal-quantity
            :quant 5
            :unit (d5 / day)))"
"(c / change-01
      :polarity -
      :ARG1 (m / mystery
            :poss (a / and
                  :op1 (s / supermarket)
                  :op2 (p / person
                        :ARG0-of (s2 / shop-01))))
      :beneficiary (ii / infant
            :ARG0-of (o / obligate-01
                  :ARG2 (g / get-01
                        :ARG0 ii
                        :ARG1 (n / news
                              :mod (p2 / product
                                    :name (n2 / name
                                          :op1 ""COVID-19""))
                              :ARG1-of (h / have-degree-91
                                    :ARG2 (n3 / new-01
                                          :ARG1 n)
                                    :ARG3 (m2 / most)))))))"
"(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Wayne""
                  :op2 ""Baskin"")
            :ARG0-of (h / have-org-role-91
                  :ARG1 (c / company
                        :name (n2 / name
                              :op1 ""Booktopia"")
                        :mod (o / online)
                        :mod (c2 / country
                              :name (n3 / name
                                    :op1 ""Australia"")))
                  :ARG2 (a / and
                        :op1 (o2 / officer
                              :mod (d / deputy)
                              :mod (c3 / chief))
                        :op2 (o3 / officer
                              :mod (c4 / chief)
                              :mod (t / technical)))))
      :ARG1 (h2 / hit-01
            :ARG0 c
            :ARG1 (t2 / target
                  :mod (b / budget)
                  :poss c)
            :ARG1-of (c5 / cause-01
                  :ARG0 (ii / increase-01
                        :ARG1 (d2 / demand-01
                              :ARG1 (b2 / book
                                    :quant (s2 / some)))))))"
"(m / multi-sentence
      :snt1 (w / work-01
            :ARG0 (p / person
                  :ARG0-of (l / lead-02
                        :ARG1 (o / organization
                              :name (n / name
                                    :op1 ""Food""
                                    :op2 ""Bank"")))
                  :location (c / county
                        :name (n2 / name
                              :op1 ""Kitsap""
                              :op2 ""County"")))
            :ARG1 (k / keep-02
                  :ARG0 p
                  :ARG1 (p2 / provide-01
                        :ARG0 p
                        :ARG1 (g / grocery)))
            :time (p3 / protect-01
                  :ARG0 p
                  :ARG1 (a / and
                        :op1 (p4 / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG1 p
                                    :ARG2 (c2 / client)))
                        :op2 (p5 / person
                              :ARG0-of (v / volunteer-01
                                    :ARG2 p)))))
      :snt2 (e / expect-01
            :ARG0 (t / they)
            :ARG1 (s / skyrocket-01
                  :ARG1 (d / demand-01
                        :ARG1 (s2 / serve-01
                              :ARG0 t))
                  :time (m2 / multiple
                        :op1 (t2 / temporal-quantity
                              :quant 1
                              :unit (m3 / month))
                        :ARG1-of (c3 / come-01)))))"
"(a / affect-01
      :ARG0 (s / sanitize-01
            :ARG1 (h / hand))
      :ARG1 (d / depress-01
            :ARG1 (r / respire-01)
            :ARG1-of (s2 / sound-01
                  :ARG2 (t / thing
                        :ARG1-of (r2 / resemble-01
                              :ARG2 (s3 / syndrome
                                    :name (n / name
                                          :op1 ""Acute""
                                          :op2 ""Respiratory""
                                          :op3 ""Distress""
                                          :op4 ""Syndrome""))
                              :degree (l / lot)))))
      :mod (s4 / side))"
"(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Dr.""
                  :op2 ""Sifiso""
                  :op3 ""Ntombela"")
            :ARG0-of (h / have-org-role-91
                  :ARG1 (o / organization
                        :name (n2 / name
                              :op1 ""NAMC""))
                  :ARG2 (c / chief
                        :mod (e / economist))))
      :ARG1 (e2 / evidence-01
            :polarity -
            :ARG1 (c2 / cause-01
                  :ARG0 (e3 / event
                        :name (n3 / name
                              :op1 ""Covid19""))
                  :ARG1 (e4 / emergency
                        :mod (s2 / security
                              :mod (f / food))
                        :location (c3 / country
                              :name (n4 / name
                                    :op1 ""South""
                                    :op2 ""Africa""))))))"
"(b / bring-01
      :ARG0 (a / and
            :op1 (d / disrupt-01
                  :ARG1 (s / supply-01
                        :ARG1 (f / food))
                  :ARG1-of (s2 / significant-02))
            :op2 (s3 / short-06
                  :ARG0-of (a2 / accompany-01
                        :ARG1 d)))
      :ARG1 (a3 / and
            :op1 (p / panic-01)
            :op2 (r / riot-01)
            :op3 (v / violence))
      :ARG2 (c / country
            :quant (s4 / some)))"
"(p / point
      :ARG2-of (t / tip-01
            :ARG1 (c / coronavirus))
      :domain (s / store
            :mod (g / grocery)))"
"(m / multi-sentence
      :snt1 (e / eat-01
            :ARG0 (k / kid)
            :quant (l / lot)
            :time (ii / isolate-01
                  :ARG1 k))
      :snt2 (b / buy-01
            :polarity -
            :ARG0 (ii2 / i)
            :manner (p / panic-01)
            :condition (s / see-01
                  :ARG0 (y / you)
                  :ARG1 ii2
                  :location (s2 / store
                        :mod (g / grocery))))
      :snt3 (a / and
            :op1 (l2 / lazy
                  :domain (ii3 / i))
            :op2 (e2 / eat-01
                  :ARG0 (k2 / kid
                        :mod (t / this))
                  :ARG1 (r / rate-entity-91
                        :ARG1 (f / food
                              :quant (a2 / about
                                    :op1 (m2 / mass-quantity
                                          :quant 20
                                          :unit (p2 / pound))))
                        :ARG2 (t2 / temporal-quantity
                              :quant 1
                              :unit (d / day)))))
      :snt4 (s3 / surprise-01
            :ARG0 (n / need-01
                  :polarity -
                  :ARG0 (ii4 / i)
                  :ARG1 (p3 / paper
                        :purpose (t3 / toilet)
                        :mod (m3 / more)))
            :ARG1 ii4)
      :snt5 (v / virus
            :mod (c / coronavirus)))"
"(m / multi-sentence
      :snt1 (n / no)
      :snt2 (r / recommend-01
            :ARG1 (u / unite-01
                  :ARG1 (w / world)
                  :purpose (l / lower-05
                        :ARG0 w
                        :ARG1 (p / price-01
                              :ARG1 (o / oil))))))"
"(a / and
      :op1 (w / wait-01
            :ARG1 (p / person
                  :quant 19
                  :ARG0-of (s / shop-01))
            :ARG2 (e / enter-01
                  :ARG0 p
                  :ARG1 (s2 / store
                        :mod (g / grocery)
                        :location (c / city
                              :name (n / name
                                    :op1 ""Toronto"")
                              :location (c2 / country
                                    :name (n2 / name
                                          :op1 ""Canada""))))))
      :op2 (p2 / practice-01
            :ARG0 p
            :ARG1 (d / distance-01
                  :ARG1 p
                  :ARG2 (s3 / society)
                  :manner (l / leave-14
                        :ARG0 p
                        :ARG1 (s4 / space
                              :ARG1-of (s5 / significant-02)
                              :location (b / between
                                    :op1 (p3 / person
                                          :mod (e2 / each))))))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (d / deal-01
                  :mode imperative
                  :polite +
                  :ARG0 (y / you)
                  :ARG1 (o / organization
                        :name (n / name
                              :op1 ""SPARInt"")))
            :op2 (f / fine-01
                  :mode imperative
                  :polite +
                  :ARG0 y
                  :ARG1 (p / percentage-entity
                        :value 10
                        :ARG3-of (ii / include-91
                              :ARG2 (t / turnover
                                    :poss o
                                    :frequency (r / rate-entity-91
                                          :ARG3 (t2 / temporal-quantity
                                                :quant 1
                                                :unit (y2 / year))))))
                  :ARG2 o))
      :snt2 (f2 / fix-02
            :ARG0 (t3 / they)
            :ARG1 (t4 / thing
                  :ARG2-of (p2 / price-01))
            :location (c / country
                  :name (n2 / name
                        :op1 ""South""
                        :op2 ""Africa""))
            :time (s / since
                  :op1 (p3 / pandemic
                        :name (n3 / name
                              :op1 ""COVID-19"")))))"
"(s / stockpile-01
      :ARG0 (c / country
            :name (n / name
                  :op1 ""China""))
      :ARG1 (a / around
            :op1 (p / piece
                  :quant 2400000000
                  :consist-of (e / equipment
                        :ARG3-of (p2 / protect-01)
                        :ARG2-of (ii / include-01
                              :ARG1 (m / mask
                                    :quant (m2 / more-than
                                          :op1 24000000000))))))
      :duration (t / temporal-quantity
            :quant 2
            :unit (m3 / month)
            :mod (j / just)))"
(a / amr-empty)
"(m / multi-sentence
      :snt1 (c / close-01
            :ARG1 (s / store
                  :ARG0-of (r / retail-01)
                  :poss (w / we))
            :time (u / until
                  :op1 (r2 / resolve-01
                        :ARG1 (ii / issue-02
                              :ARG0 (p / product
                                    :name (n / name
                                          :op1 ""CODID""
                                          :op2 19))))))
      :snt2 (p2 / possible-01
            :ARG1 (p3 / purchase-01
                  :ARG0 (y / you)
                  :mod (s2 / still)
                  :medium (o / online
                        :example (a / and
                              :op1 (u2 / url-entity
                                    :value ""https://t.co/TOT5rf758o"")
                              :op2 (u3 / url-entity
                                    :value ""https://t.co/xc3ISkm4cM""))))))"
"(w / work-01
      :ARG0 (t / team
            :ARG0-of (s / support-01
                  :ARG1 (c / community)))
      :ARG1 (e / ensure-01
            :ARG0 t
            :ARG1 (r / receive-01
                  :ARG0 (p / person
                        :ARG0-of (c2 / consume-01)
                        :poss (w2 / we))
                  :ARG1 (s2 / service
                        :ARG1-of (n / need-01
                              :ARG0 p))
                  :ARG2-of (r2 / respond-01
                        :ARG1 (p2 / pandemic
                              :name (n2 / name
                                    :op1 ""Covid-19"")))))
      :ARG1-of (h / hard-02))"
"(m / multi-sentence
      :snt1 (c / concern-02
            :ARG1 (c2 / court
                  :mod (a / all)
                  :location (c3 / city
                        :name (n / name
                              :op1 ""Delhi""))))
      :snt2 (c4 / contrast-01
            :ARG1 (s / stop-01
                  :ARG1 (f / function-01
                        :ARG0 (c5 / court
                              :mod (a2 / all)
                              :location c3)))
            :ARG2 (f2 / function-01
                  :ARG0 (c6 / court
                        :mod (p / person
                              :ARG0-of (c7 / consume-01))
                        :mod (a3 / all))
                  :ARG1-of (c8 / cause-01
                        :ARG0 (a4 / and
                              :op1 (r / regulate-01
                                    :polarity -
                                    :ARG0 (g / government-organization
                                          :name (n2 / name
                                                :op1 ""High""
                                                :op2 ""Court""))
                                    :ARG1 c6)
                              :op2 (c9 / come-01
                                    :ARG1 c6
                                    :ARG4 (u / under
                                          :op1 (j / jurisdiction
                                                :poss (g2 / government-organization
                                                      :name (n3 / name
                                                            :op1 ""Food""
                                                            :op2 ""and""
                                                            :op3 ""Supply""
                                                            :op4 ""Ministry"")
                                                      :mod (g3 / government-organization
                                                            :ARG0-of (g4 / govern-01
                                                                  :ARG1 c3)))))))))
            :snt3 (c10 / cause-01
                  :ARG1 (p2 / pass-05
                        :mode imperative
                        :polite +
                        :ARG0 (y / you)
                        :ARG1 (d / direct-01
                              :ARG1-of (n4 / need-01))
                        :ARG2 (a5 / all
                              :ARG1-of (c11 / concern-02))))))"
"(m / multi-sentence
      :snt1 (h / handle-01
            :ARG0 (c / company)
            :ARG1 (ii / increase-01
                  :ARG1 (d / demand-01
                        :ARG1 (a / and
                              :op1 (p / poultry
                                    :mod (m2 / meat))
                              :op2 (e / egg)))
                  :ARG1-of (s / sharp-02))
            :ARG2 (a2 / and
                  :op1 (a3 / accelerate-01
                        :ARG1 (o / open-01
                              :ARG1 (w / warehouse
                                    :ARG1-of (n / new-01))))
                  :op2 (r / run-01
                        :ARG1 (f / facility
                              :ARG1-of (e2 / exist-01))))
            :manner (a4 / amr-unknown))
      :snt2 (s2 / study-01
            :ARG1 (a5 / and
                  :op1 (m3 / manage-01
                        :ARG1 (c2 / chain
                              :mod (s3 / supply-01)))
                  :op2 (r2 / respond-01
                        :ARG1 (c3 / crisis)))
            :ARG1-of (b / brilliant-01))
      :time (d2 / date-entity
            :time ""24:7""))"
"(ii / identify-01
      :ARG1 (t / threshold
            :ARG1-of (k / key-02))
      :time (e / evolve-01
            :ARG1 (o / outbreak-29)))"
"(o / offer-01
      :ARG0 (n / newspaper
            :name (n2 / name
                  :op1 ""Thailand""
                  :op2 ""Post""))
      :ARG1 (r / rate
            :ARG1-of (r2 / reduce-01))
      :purpose (p / promote-02
            :ARG0 n
            :ARG1 (s / shop-01
                  :location (o2 / online)
                  :quant (m / more))
            :prep-amid (t / threaten-01
                  :ARG0 (p2 / product
                        :name (n3 / name
                              :op1 ""Covid-19"")))))"
"(w / wait-01
      :ARG1 (d / dog)
      :location (ii / in-front-of
            :op1 (s / supermarket
                  :location (c / country
                        :name (n / name
                              :op1 ""Croatia"")))))"
"(s / surprise-01
      :ARG0 (h / hike-02
            :polarity -
            :ARG1 (p / price)
            :direction (u / up)
            :condition (c / consider-02
                  :ARG1 (s2 / situation)))
      :ARG1 (ii / i))"
"(s / shift-01
      :ARG0 (b / bank
            :mod (f / food))
      :ARG1 (m / model-01
            :ARG0 b
            :ARG1 (d / distribute-01
                  :ARG0 b))
      :ARG2-of (r / respond-01
            :ARG1 (a / and
                  :op1 (p / pandemic
                        :name (n / name
                              :op1 ""Covid19""))
                  :op2 (d2 / demand-01
                        :ARG1-of (s2 / soar-01
                              :ARG4 (s3 / sky))))))"
"(o / offer-01
      :ARG0 (a / and
            :op1 (p / person
                  :name (n / name
                        :op1 ""Bryan""
                        :op2 ""Balvaneda"")
                  :ARG0-of (s / study-01
                        :ARG1 (p2 / psychology
                              :mod (c / clinic))
                        :mod (g / graduate)))
            :op2 (ii / i))
      :ARG1 (t / thing
            :ARG1-of (s2 / suggest-01
                  :ARG0 a
                  :purpose (c2 / cope-01
                        :time (t2 / time
                              :ARG1-of (c3 / challenge-01)
                              :mod (t3 / this))))
            :quant (s3 / some)))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Wanda""
                        :op2 ""Vazquez"")
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (g / governor)))
            :ARG1 (s2 / serious-02
                  :ARG1 (t / this))
            :time (d / date-entity
                  :weekday (s3 / saturday)))
      :snt2 (c / contrast-01
            :ARG1 (m2 / measure-02
                  :ARG0 (g2 / government-organization
                        :ARG0-of (g3 / govern-01))
                  :ARG1 (h2 / help-01
                        :ARG0 g2
                        :ARG1 (c2 / curb-01
                              :ARG0 g2
                              :ARG1 (s4 / spread-01
                                    :ARG1 (v / virus)))))
            :ARG2 (w / worsen-01
                  :ARG0 (ii / it)
                  :ARG1 (t2 / thing)
                  :mod (o / only)
                  :condition (g4 / go-02
                        :ARG0 (c3 / citizen)
                        :ARG4 (s5 / supermarket)
                        :manner (m3 / mass))
                  :mod (o2 / only))))"
"(u / update-02
      :ARG2 (a / and
            :op1 (a2 / ask-02
                  :li 1
                  :ARG0 (h / hospital)
                  :ARG1 (r / raise-01
                        :ARG0 (s / state)
                        :ARG1 (p / price-01)
                        :duration (t / temporary))
                  :ARG2 s)
            :op2 (r2 / reopen-01
                  :li 2
                  :polarity -
                  :ARG0 (p2 / person
                        :name (n / name
                              :op1 ""Trump""))
                  :ARG1 (e / enroll-01
                        :ARG1 (p3 / person
                              :mod (t2 / that)
                              :ARG1-of (c / cover-01
                                    :polarity -))
                        :ARG1-of (o / open-09)))
            :op3 (f / fire-02
                  :li 3
                  :ARG0 h
                  :ARG1 (s2 / slash
                        :op1 (d / doctor)
                        :op2 (n2 / nurse))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (s3 / speak-out-03
                              :ARG0 s2
                              :ARG1 (l / lack-01
                                    :ARG1 (t3 / thing))))))
      :time (w / week
            :mod (t4 / this))
      :mod (f2 / fuck
            :mode expressive))"
"(g / get-01
      :ARG0 (y / you)
      :ARG1 (ii / itis)
      :ARG2 (e / eat-01
            :ARG0 y
            :ARG1 (f / food
                  :ARG1-of (w / worth-01
                        :ARG2 (t / temporal-quantity
                              :quant 3
                              :unit (w2 / week))
                        :ARG3 y))
            :duration (b / between
                  :op1 (t2 / temporal-quantity
                        :quant 3
                        :unit (d / day))
                  :op2 (t3 / temporal-quantity
                        :quant 4
                        :unit (d2 / day))
                  :mod (b2 / business))))"
"(n / need-01
      :polarity -
      :ARG1 (s / say-01
            :ARG1 (c / cause-01
                  :ARG0 (t / this)
                  :ARG1 (f / feel-01
                        :ARG0 (p / person)
                        :ARG1-of (s2 / strong-02)
                        :quant (s3 / some)))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (l / look-01
                  :ARG0 (g / generation
                        :time (f / future)
                        :consist-of (a2 / and
                              :op1 (s / scientist
                                    :ARG0-of (b / behave-01))
                              :op2 (p / person
                                    :ARG0-of (s2 / study-01
                                          :ARG1 (p2 / psychology)))))
                  :ARG1 (p3 / panic-01
                        :ARG0 (v / virus
                              :mod (c / coronavirus)))
                  :direction (b2 / back))
            :op2 (u / use-01
                  :ARG0 g
                  :ARG1 p3
                  :ARG2 (e / exemplify-01
                        :ARG0 p3
                        :ARG1 (ii / idiocy
                              :mod (h / hysterical)))))
      :snt2 (h2 / hope-01
            :ARG0 (ii2 / i)
            :ARG1 (ii3 / include-01
                  :ARG0 (t / they)
                  :ARG1 (v2 / video
                        :topic (r / raid-01
                              :ARG0 (p4 / person
                                    :ARG0-of (h3 / hoard-01)
                                    :mod (s3 / selfish)
                                    :mod (t2 / that))
                              :ARG1 (s4 / shelf
                                    :part-of (s5 / supermarket)))))
            :mod (o / only)))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (w / we)
            :ARG1 (s2 / sorry-01
                  :ARG1 w
                  :degree (v / very))
            :ARG2 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 w
                        :ARG2 (m2 / mom))))
      :snt2 (a / and
            :op1 (c / craze-01
                  :ARG0 (p2 / paper
                        :purpose (t / toilet))
                  :ARG1 (p3 / person)
                  :ARG1-of (c2 / cause-01
                        :ARG0 (c3 / coronavirus)))
            :op2 (l / like-02
                  :ARG0 (w2 / we)
                  :ARG1 (c4 / come-01
                        :ARG1 w2
                        :ARG4 (h2 / home)))))"
"(t / thank-01
      :ARG1 (y / you)
      :ARG2 (c / cooperate-01
            :ARG0 y))"
"(m / multi-sentence
      :snt1 (a / agree-01
            :ARG0 (e / everyone)
            :ARG1 (s / strategy
                  :ARG1-of (u / useful-05
                        :ARG2 (f / fight-01
                              :ARG1 (o / organization
                                    :name (n / name
                                          :op1 ""COVID-19""))))
                  :domain (d / distance-01
                        :ARG2 (s2 / society)))
            :concession-of (a2 / animal
                  :ARG0-of (s3 / socialize-01
                        :degree (v / very))
                  :domain (h / human)))
      :snt2 (b / become-01
            :ARG1 (w / we)
            :ARG2 (a3 / animal
                  :mod (k / kind
                        :mod (a4 / amr-unknown)))
            :condition (s4 / socialize-01
                  :polarity -
                  :ARG0 w)))"
"(l / leave-17
      :ARG1 (f / food
            :quant (p / plenty))
      :location (s / store))"
"(m / multi-sentence
      :snt1 (a / awful
            :degree (t / truly)
            :domain (g / go-02
                  :ARG0 (y / you)
                  :ARG4 (s / shop
                        :location (c / country
                              :name (n / name
                                    :op1 ""France"")))
                  :time (w / weekend
                        :mod (l / last))))
      :snt2 (a2 / and
            :op1 (a3 / and
                  :op1 (e / empty-02
                        :ARG1 (s2 / supermarket)
                        :mod (a4 / almost))
                  :op2 (s3 / stock-01
                        :ARG1 s2
                        :ARG1-of (f / full-09))
                  :time (t2 / today))
            :op2 (g2 / give-01
                  :ARG0 (p / person
                        :quant (f2 / few)
                        :location (h / here))
                  :ARG1 (s4 / space
                        :quant (l2 / lot))
                  :ARG2 (y2 / you)))
      :snt3 (p2 / pass-03
            :ARG1 (m2 / mayhem)
            :location (t3 / thing
                  :location-of (y3 / you))))"
"(c / close-01
      :ARG1 (s / store
            :mod (g / grocery)
            :ARG2-of (ii / include-01
                  :ARG1 (a / and
                        :op1 (c2 / company
                              :name (n / name
                                    :op1 ""Trader""
                                    :op2 ""Joe's""))
                        :op2 (c3 / company
                              :name (n2 / name
                                    :op1 ""BJ's""
                                    :op2 ""Wholesale""
                                    :op3 ""Club"")))))
      :time (f / festival
            :name (n3 / name
                  :op1 ""Easter""))
      :ARG1-of (c4 / cause-01
            :ARG0 (l / law
                  :name (n4 / name
                        :op1 ""COVID-19""))))"
"(m / multi-sentence
      :snt1 (s / safe-01
            :ARG1 (b / ban-01
                  :ARG0 (c / company
                        :name (n / name
                              :op1 ""PriceChopper""))
                  :ARG1 (b2 / bag
                        :ARG1-of (d / dispose-01))
                  :time (p / pandemic
                        :mod (c2 / coronavirus)))
            :polarity (a / amr-unknown)
            :ARG1-of (r / real-04))
      :snt2 (r2 / recommend-01
            :ARG1 (p2 / pay-01
                  :polarity -
                  :ARG0 (w / we)
                  :ARG3 (b3 / bag
                        :consist-of (p3 / paper))
                  :mod (e / either))))"
"(m / multi-sentence
      :snt1 (l / listen-01
            :mode imperative
            :polite +
            :ARG0 (y / you)
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""Dr.""
                        :op2 ""Catherine""
                        :op3 ""Motherway"")))
      :snt2 (n2 / need-01
            :ARG0 (w / we)
            :ARG1 (v / voice
                  :quant (m2 / more)
                  :ARG1-of (r / resemble-01
                        :ARG2 (v2 / voice
                              :poss (s / she))))
            :location (c / country
                  :name (n3 / name
                        :op1 ""Britain""))))"
"(m / multi-sentence
      :snt1 (t / tell-01
            :polarity -
            :ARG0 (d / data
                  :source (p / phone
                        :mod (c / cell)))
            :ARG1 (s / story
                  :mod (w / whole)))
      :snt2 (d2 / drive-01
            :ARG0 (ii / i)
            :ARG1 (s2 / store
                  :mod (g / grocery))
            :duration (t2 / temporal-quantity
                  :quant 15
                  :unit (m2 / minute))
            :location (s3 / state
                  :name (n / name
                        :op1 ""Virginia"")))
      :snt3 (d3 / drive-01
            :duration (t3 / temporal-quantity
                  :quant 25
                  :unit (m3 / minute))
            :destination (t4 / take-out-11
                  :location (r / restaurant)))
      :snt4 (d4 / drive-01
            :ARG0 (p2 / person
                  :mod (c2 / country
                        :name (n2 / name
                              :op1 ""America""))
                  :mod (r2 / rural))
            :medium (a / and
                  :op1 (p3 / publication
                        :name (n3 / name
                              :op1 ""smerconish""))
                  :op2 (p4 / publication
                        :name (n4 / name
                              :op1 ""CNN""))
                  :op3 (p5 / publication
                        :name (n5 / name
                              :op1 ""Covid_19""))
                  :op4 (p6 / publication
                        :name (n6 / name
                              :op1 ""Stayathome"")))))"
"(c / cause-01
      :ARG0 (p / person
            :ARG1-of (c2 / come-01
                  :ARG3 (c3 / city
                        :name (n / name
                              :op1 ""Taftan"")))
            :ARG1-of (q / quarantine-01
                  :location (c4 / city
                        :name (n2 / name
                              :op1 ""Sukkkur""))))
      :ARG1 (s / spike-01
            :ARG1 (c5 / case-04
                  :ARG1 (d / disease
                        :name (n3 / name
                              :op1 ""Coronavirus""))
                  :location (c6 / country
                        :name (n4 / name
                              :op1 ""Pakistan""))))
      :mod (m / main))"
"(m / multi-sentence
      :snt1 (c / change-01
            :ARG0 (p / person
                  :ARG0-of (s / scam-01))
            :ARG1 (t / tactic
                  :poss p)
            :manner (c2 / constant))
      :snt2 (l / learn-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (t2 / thing
                  :manner-of (p2 / possible-01
                        :ARG1 (p3 / protect-01
                              :ARG0 y
                              :ARG1 y
                              :ARG2 (f / fall-07
                                    :ARG1 y
                                    :ARG2 (p4 / prey-01
                                          :ARG0 (s2 / scheme-01
                                                :ARG0 p)
                                          :ARG1 y)))))))"
"(m / multi-sentence
      :snt1 (r / release-01
            :ARG1 (a / article
                  :ARG1-of (n / new-01)
                  :topic (c / commit-01
                        :ARG1 (c2 / company
                              :ARG0-of (r2 / retail-01)
                              :ARG1-of (a2 / authorize-01
                                    :ARG0 (p / program
                                          :name (n2 / name
                                                :op1 ""SNP""))))
                        :ARG2 (e / encourage-01
                              :ARG0 c2
                              :ARG1 (p2 / person
                                    :ARG0-of (c3 / consume-01)
                                    :mod (h / healthy))
                              :ARG2 (p3 / purchase-01
                                    :ARG0 p2)
                              :location (a3 / among
                                    :op1 (p4 / population
                                          :ARG1-of (v / vulnerable-01))))
                        :degree (s / so)))
            :time (t / today))
      :snt2 (a4 / and
            :op1 (b / break-19
                  :mode imperative
                  :ARG0 (y / you)
                  :ARG1 (s2 / stress-02
                        :ARG0 p
                        :name (n3 / name
                              :op1 ""COVID-19 ) ) :ARG1 you ) ) :op2 ( access-01 :mode imperative :ARG0 you :ARG1 article :manner ( use-01 :ARG0 you :ARG1 ( link :mod ( this ) :mod ( url-entity :value "")))))"
"(m / multi-sentence
      :snt1 (g / go-02
            :ARG0 (c / company
                  :name (n / name
                        :op1 ""Covid-19""))
            :direction (a / away)
            :time (s / soon
                  :mod (a2 / anytime))
            :polarity (a3 / amr-unknown))
      :snt2 (s2 / start-01
            :ARG0 (ii / i)
            :ARG1 (s3 / see-01
                  :ARG0 ii
                  :ARG1 (r / rise-01
                        :ARG1 (p / price-01
                              :ARG1 (a4 / and
                                    :op1 (g2 / gas)
                                    :op2 (s4 / stock
                                          :mod (o / other))))
                        :mod (a5 / again)))))"
"(h / have-03
      :ARG0 (s / supermarket)
      :ARG1 (w / way
            :mod (c / creative)
            :manner-of (c2 / combat-01
                  :ARG0 s
                  :ARG1 (h2 / hoard-01
                        :time (p / pandemic
                              :name (n / name
                                    :op1 ""Covid-19""))))))"
"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (r / remain-01
                  :ARG1 (f / facility
                        :name (n / name
                              :op1 ""The""
                              :op2 ""Beckley""
                              :op3 ""Auto""
                              :op4 ""Mall""))
                  :ARG3 (o / open-09
                        :ARG1 f
                        :ARG3 (c2 / customer)))
            :ARG2 (l / limit-01
                  :ARG1 (o2 / operate-01
                        :ARG0 f)))
      :snt2 (ii / implement-01
            :ARG0 (t / they)
            :ARG1 (w / way
                  :manner-of (p / purchase-01
                        :ARG0 (c3 / customer)
                        :ARG1 (c4 / car)
                        :ARG2 (h / home)))
            :purpose (a / accommodate-01
                  :ARG0 t
                  :ARG1 c3)
            :mod (a2 / also)))"
"(m / multi-sentence
      :snt1 (t / thank-01
            :ARG0 (g / government-organization
                  :name (n / name
                        :op1 ""NHS""))
            :ARG1 (p / person
                  :name (n2 / name
                        :op1 ""LadBabyOfficial"")))
      :snt2 (k / keep-02
            :ARG0 (w / we)
            :ARG1 (w2 / work-01
                  :ARG0 w
                  :manner (h / hard)
                  :purpose (p2 / put-out-10
                        :ARG0 w
                        :ARG1 (s / stock
                              :ARG1-of (h2 / have-quant-91
                                    :ARG2 (m2 / much)
                                    :ARG3 (e / equal)
                                    :ARG4 (p3 / possible-01
                                          :ARG1 p2))))))
      :snt3 (r / risk-01
            :ARG0 (p4 / person
                  :ARG0-of (h3 / have-org-role-91
                        :ARG1 (s2 / supermarket)
                        :ARG2 (m3 / member))
                  :quant (e2 / every)
                  :ARG2-of (ii / include-91
                        :ARG1 (a / and
                              :op1 (p5 / person
                                    :ARG0-of (c / clean-01))
                              :op2 (p6 / person
                                    :ARG0-of (s3 / stock-01
                                          :ARG1 (s4 / shelf))))))
            :ARG2 (l / life
                  :poss p4)
            :purpose p3
            :ARG1 (h4 / have-03
                  :ARG0 (y / you)
                  :ARG1 (a2 / and
                        :op1 (p7 / product)
                        :op2 (f / food)
                        :ARG1-of (w3 / want-01
                              :ARG0 y))))
      :snt4 (s5 / stay-01
            :mode imperative
            :ARG1 y))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (c / company
                  :name (n / name
                        :op1 ""Sainsbury's""))
            :ARG1 (a / and
                  :op1 (p / prioritize-01
                        :ARG0 c
                        :ARG1 (p2 / person
                              :ARG1-of (v / vulnerable-01)
                              :mod (e / elderly))
                        :ARG2 (d / deliver-01
                              :ARG0 c
                              :medium (o / online)))
                  :op2 (l / limit-01
                        :ARG0 c
                        :ARG1 (p3 / person)
                        :ARG2 (b / buy-01
                              :ARG0 p3
                              :ARG1 (ii / item
                                    :quant 3
                                    :ARG1-of (ii2 / include-91
                                          :ARG2 (ii3 / item
                                                :mod (a2 / any)
                                                :ARG1-of (s2 / single-02))))
                              :mod (o2 / only)))))
      :snt2 (ii4 / idea
            :polarity (a3 / amr-unknown)
            :ARG1-of (g / good-02)
            :poss c
            :domain (t / this)))"
"(w / weaponize-01
      :ARG0 (w2 / woman
            :ARG1-of (h / have-degree-91
                  :ARG2 (o / old)
                  :ARG3 (m / more)))
      :ARG1 (s / symptom
            :poss w2
            :mod (d / disease
                  :name (n / name
                        :op1 ""influenza"")))
      :manner (a / and
            :op1 (c / come-01
                  :ARG1 w2
                  :ARG4 (ii / i))
            :op2 (t / take-01
                  :ARG0 w2
                  :ARG1 (s2 / spot
                        :poss ii))))"
"(n / name-01
      :ARG1 (b / band)
      :ARG2 (p / person
            :name (n2 / name
                  :op1 ""Loneliest""
                  :op2 ""Man""
                  :op3 ""at""
                  :op4 ""the""
                  :op5 ""Supermarket""))
      :mod (g / great)
      :time (a / after
            :op1 (c / coronavirus)))"
"(m / multi-sentence
      :snt1 (g / go-02
            :ARG0 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (ii / i)
                        :ARG2 (w / wife)))
            :ARG4 (s / store
                  :mod (g2 / grocery))
            :purpose (g3 / get-01
                  :ARG0 p
                  :ARG1 (v / vegetable
                        :ARG1-of (f / fresh-04)
                        :quant (s2 / some)))
            :time (a / after
                  :op1 (w2 / work-01
                        :ARG0 p))
            :time (t / today))
      :snt2 (w3 / wear-01
            :ARG0 (s3 / she)
            :ARG1 (a2 / and
                  :op1 (s4 / scrubs
                        :poss s3)
                  :op2 (c / coat
                        :mod (l / lab)
                        :poss s3)))
      :snt3 (s5 / say-01
            :ARG0 s3
            :ARG1 (a3 / avoid-01
                  :ARG0 (p2 / person)
                  :ARG1 s3
                  :ARG1-of (r / resemble-01
                        :ARG2 (h2 / have-03
                              :ARG0 s3
                              :ARG1 (d / disease
                                    :name (n / name
                                          :op1 ""Plague"")))))))"
"(c / continue-01
      :ARG1 (d / decline-01
            :ARG1 (c2 / confidence
                  :poss (p / person
                        :ARG0-of (c3 / consume-01))))
      :time (b / bring-01
            :ARG0 (s / spread-02
                  :ARG1 (p2 / program
                        :name (n / name
                              :op1 ""COVID-19"")))
            :ARG1 (a / and
                  :op1 (c4 / country)
                  :op2 (e / economy
                        :mod (g / globe)))
            :ARG2 (s2 / standstill)))"
"(h / have-03
      :ARG0 (s / supermarket
            :ARG1-of (o / open-09)
            :mod (a / all))
      :ARG1 (l / line
            :location (r / relative-position
                  :quant (d / distance-quantity
                        :quant 6
                        :unit (f / foot))
                  :direction (a2 / apart))))"
"(m / multi-sentence
      :snt1 (r / recommend-01
            :ARG1 (m2 / mandatory
                  :domain (w / wear-01
                        :ARG1 (c / cover-01
                              :ARG1 (f / face))
                        :location (ii / inside
                              :op1 (s / store
                                    :mod (a / any)))
                        :purpose (t / try-01
                              :ARG1 (m3 / minimize-01
                                    :ARG1 (s2 / spread-02
                                          :ARG1 (d / droplet
                                                :location (f2 / face))))))))
      :snt2 (r2 / recommend-01
            :ARG1 (t2 / this
                  :beneficiary (c2 / child)
                  :mod (t3 / too))))"
"(m / multi-sentence
      :snt1 (r / reason
            :polarity -
            :ARG0-of (c / cause-01
                  :ARG1 (h / hoard-01))
            :ARG1-of (s / say-01
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""Dr.""
                              :op2 ""MicheleBorba""))
                  :time (d / date-entity
                        :day 12
                        :month 3
                        :year 2020)))
      :snt2 (a / allow-01
            :ARG1 (g / go-02
                  :ARG0 (w / we)
                  :ARG4 (s2 / supermarket)
                  :frequency (r2 / rate-entity-91
                        :ARG3 (t / temporal-quantity
                              :quant 1
                              :unit (d2 / day))))
            :condition (n2 / need-01
                  :ARG0 w
                  :ARG1 g)
            :location (c2 / country
                  :name (n3 / name
                        :op1 ""Italy""))))"
"(s / say-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""eMarketer""))
      :time (d / date-entity
            :day 25
            :month 6
            :year 2020))"
"(ii / include-01
      :ARG1 (r / report-01
            :ARG0 (a / and
                  :op1 (p / publication
                        :name (n / name
                              :op1 ""Strait""
                              :op2 ""Reporter""))
                  :op2 (p2 / publication
                        :name (n2 / name
                              :op1 ""Pictou""
                              :op2 ""Advocate""))
                  :op3 (p3 / publication
                        :name (n3 / name
                              :op1 ""Truro""
                              :op2 ""Hub""
                              :op3 ""Now"")))
            :ARG1 (t / thing
                  :manner-of (s / step-up-03
                        :ARG1 (c / company
                              :name (n4 / name
                                    :op1 ""Stanfield's""))
                        :purpose (a2 / and
                              :op1 (f / fill-01
                                    :ARG0 c
                                    :ARG1 (s2 / shelf))
                              :op2 (a3 / advise-01
                                    :ARG0 c
                                    :ARG1 (p4 / person
                                          :ARG0-of (c2 / consume-01))
                                    :time (s3 / safe-01
                                          :polarity -
                                          :ARG1 (h / home)))))))
      :ARG2 (r2 / round-up-02
            :ARG0 (m / magazine
                  :name (n5 / name
                        :op1 ""Halifax""
                        :op2 ""Magazine""))
            :ARG1 (p5 / publication
                  :name (n6 / name
                        :op1 ""COVID-19""))
            :time (t2 / today)))"
"(c / contrast-01
      :ARG1 (h / have-03
            :ARG0 (a / and
                  :op1 (c2 / company
                        :name (n / name
                              :op1 ""Kohl's""))
                  :op2 (c3 / company
                        :name (n2 / name
                              :op1 ""J.C.""
                              :op2 ""Penney""))
                  :op3 (c4 / company
                        :name (n3 / name
                              :op1 ""Macy's""))
                  :mod (a2 / all))
            :ARG1 (p / person
                  :ARG0-of (w / work-01)
                  :ARG1-of (l / lay-off-02
                        :ARG1-of (c5 / cause-01
                              :ARG0 (g / government-organization
                                    :ARG0-of (g2 / govern-01))))))
      :ARG2 (r / reduce-01
            :ARG0 (c6 / company
                  :name (n4 / name
                        :op1 ""Container""
                        :op2 ""Store""))
            :ARG1 (a3 / and
                  :op1 (h2 / hour
                        :mod (s / store))
                  :op2 (p2 / pay-01
                        :ARG2 (e / executive)))))"
"(r / release-01
      :ARG0 (p / psychologist
            :mod (p2 / person
                  :ARG0-of (c / consume-01)))
      :ARG1 (d / detail
            :topic (t / thing
                  :ARG1-of (k / know-01
                        :ARG0 (b / business)
                        :ARG1-of (n / need-01
                              :ARG0 b
                              :time (p3 / pandemic
                                    :name (n2 / name
                                          :op1 ""COVID-19"")))))))"
"(s / show-01
      :ARG0 (a / animation
            :mod (t / this))
      :ARG1 (d / distance
            :extent-of (p / possible-01
                  :ARG1 (t2 / travel-01
                        :ARG0 (c / cough-01
                              :ARG0 (p2 / person
                                    :ARG1-of (ii / infect-01
                                          :ARG2 (d2 / disease
                                                :name (n / name
                                                      :op1 ""Covid-19"")))))
                        :location (s2 / supermarket)))))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG1 (s2 / see-01
                  :ARG0 (w / we)
                  :ARG1 (e / event))
            :ARG2 (p / person
                  :name (n / name
                        :op1 ""Trump"")))
      :snt2 (s3 / serious-01
            :polarity (a / amr-unknown)
            :ARG1 (y / you)
            :ARG2 (t / that
                  :ARG0-of (c / convince-01
                        :polarity -
                        :ARG1 (p2 / person)
                        :ARG2 (l / live-01
                              :ARG0 p2
                              :manner (f / fear-01
                                    :ARG0 p2))
                        :ARG1-of (c2 / cause-01
                              :ARG0 (a2 / and
                                    :op1 (s4 / secure-02
                                          :polarity -
                                          :ARG1 (j / job))
                                    :op2 (m2 / money
                                          :polarity -)
                                    :op3 (p3 / possible-01
                                          :polarity -
                                          :ARG1 (f2 / find-01
                                                :ARG0 y
                                                :ARG1 (f3 / food)
                                                :location (s5 / store
                                                      :mod (g / grocery)
                                                      :ARG1-of (l2 / local-02)
                                                      :poss y)
                                                :mod (e2 / even)))))))))"
(a / amr-empty)
"(s / say-01
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG1 (p2 / province
                        :name (n / name
                              :op1 ""Newfoundland""
                              :op2 ""and""
                              :op3 ""Labrador""))
                  :ARG2 (p3 / premier)))
      :ARG1 (ii / impact-01
            :ARG0 (a / and
                  :op1 (c / coronavirus
                        :ARG1-of (n2 / new-01))
                  :op2 (d / drop-01
                        :ARG1 (p4 / price-01
                              :ARG1 (o / oil))))
            :ARG1 p2
            :mod (s2 / severe)))"
"(m / multi-sentence
      :snt1 (d / decide-01
            :ARG0 (a / authority
                  :mod (c / country
                        :name (n / name
                              :op1 ""Thailand"")))
            :ARG1 (c2 / close-01
                  :ARG0 a
                  :ARG1 (a2 / and
                        :op1 (m2 / mall
                              :mod (s / shop-01))
                        :op2 (m3 / market)
                        :location (c3 / city
                              :name (n2 / name
                                    :op1 ""Bangkok""))
                        :mod (a3 / all))
                  :ARG1-of (e / effect-03
                        :time (d2 / date-entity
                              :month 4
                              :day 12))))
      :snt2 (e2 / except-01
            :ARG1 (a4 / and
                  :op1 (s2 / supermarket)
                  :op2 (s3 / store
                        :mod (g / grocery))
                  :op3 (s4 / store
                        :mod (d3 / drug))
                  :ARG1-of (o / open-09
                        :mod (s5 / still))))
      :snt3 (p / possible-01
            :ARG1 (o2 / operate-01
                  :ARG1 (r / restaurant
                        :location (ii / inside))
                  :purpose (t / take-away-05
                        :ARG1 r
                        :mod (o3 / only))
                  :time (a5 / after
                        :op1 (d4 / date-entity
                              :time ""19:00"")))))"
"(e / eye-01
      :ARG0 (y / you
            :mod (a / all))
      :ARG1 (p / paper
            :mod (t / toilet)
            :mod (t2 / that))
      :location (w / work)
      :mod (t3 / too))"
(a / amr-empty)
"(e / everything
      :ARG1-of (k / know-01
            :ARG0 (y / you)
            :ARG1-of (n / need-01
                  :ARG0 y)
            :time (p / pandemic
                  :mod (c / coronavirus)))
      :topic (s / slot
            :purpose (d / deliver-01
                  :ARG2 (s2 / supermarket))))"
"(m / multi-sentence
      :snt1 (t / tolerate-01
            :polarity -
            :ARG1 (g / gouge-02
                  :ARG1 (p / price)))
      :snt2 (r / report-01
            :polite +
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (ii / it)
            :ARG2 (g2 / government-organization
                  :name (n / name
                        :op1 ""Consumer""
                        :op2 ""Affairs""
                        :op3 ""Department""))
            :condition (s / see-01
                  :ARG0 y
                  :ARG1 ii)))"
"(r / roll-01
      :ARG1 (p / person
            :ARG0-of (p2 / pioneer-01))
      :condition (s / see-01
            :ARG0 p
            :ARG1 (t / thing
                  :manner-of (p3 / panicker-01
                        :ARG0 (w / we)
                        :ARG1 (o / obligate-01
                              :ARG1 w
                              :ARG2 (a / and
                                    :op1 (s2 / stay-01
                                          :ARG1 w
                                          :location (h / home))
                                    :op2 (w2 / work-01
                                          :ARG0 w
                                          :location h)
                                    :op3 (c / cook-01
                                          :ARG0 w
                                          :ARG1 (m / meal
                                                :poss w))
                                    :op4 (a2 / and
                                          :op1 (c2 / care-03
                                                :ARG0 w
                                                :ARG1 (p4 / person
                                                      :ARG0-of (h2 / have-rel-role-91
                                                            :ARG1 w
                                                            :ARG2 (c3 / child))))
                                          :op2 (e / educate-01
                                                :ARG0 w
                                                :ARG1 p4)))))))
      :location (g / grave
            :poss p))"
"(a / and
      :op1 (c / correct-01
            :ARG0 (m / monetary-quantity
                  :ARG2-of (p / price-01
                        :ARG1 (s / silver)))
            :ARG1 (l / low-04
                  :ARG1 m
                  :duration (t / temporal-quantity
                        :quant 11
                        :unit (y / year))))
      :op2 (e / enroute-00
            :ARG1 m
            :ARG2 (a2 / and
                  :op1 (l2 / level
                        :mod (r / rate-entity-91
                              :ARG1 (m2 / monetary-quantity
                                    :quant 8
                                    :unit (d / dollar))
                              :ARG2 (o / ounce)))
                  :op2 (l3 / low-04
                        :ARG1 m
                        :ARG1-of (s2 / see-01
                              :time (c2 / crisis
                                    :mod (f / finance)
                                    :mod (g / globe)
                                    :time (d2 / date-entity
                                          :year 2008)))))))"
"(e / extend-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Bed""
                  :op2 ""Bath""
                  :op3 ""&""
                  :op4 ""Beyond""))
      :ARG1 (c2 / close-01
            :ARG0 c
            :ARG1 (s / store
                  :poss c))
      :ARG2 (u / until
            :op1 (d / date-entity
                  :month 5
                  :day 2)))"
"(m / multi-sentence
      :snt1 (t / thank-01
            :ARG1 (a / and
                  :op1 (p / person
                        :ARG0-of (c / clerk-01
                              :ARG1 (s / store
                                    :mod (g / grocery))))
                  :op2 (p2 / person
                        :ARG0-of (w / work-01
                              :ARG1 (d / deliver-01)))
                  :op3 (p3 / person
                        :ARG0-of (c2 / clean-01))
                  :op4 (a2 / anyone
                        :mod (e / else)
                        :location (l / line
                              :mod (f / front)
                              :poss (p4 / pandemic
                                    :name (n / name
                                          :op1 ""COVID-19""))))
                  :mod (a3 / all)))
      :snt2 (a4 / and
            :op1 (d2 / do-02
                  :ARG0 (y / you
                        :mod (a5 / all))
                  :ARG1 (j / job
                        :ARG0-of (a6 / amaze-01)))
            :op2 (a7 / appreciate-02
                  :ARG1 y
                  :degree (v / very))))"
"(n / nation
      :ARG0-of (m / make-02
            :ARG1 (h / high-02
                  :ARG1 (m2 / monetary-quantity
                        :ARG2-of (p / price-01))
                  :time (n2 / need-01
                        :ARG1 m2
                        :ARG2-of (h2 / have-degree-91
                              :ARG1 m2
                              :ARG3 (m3 / most)))))
      :ARG0-of (t / tolerate-01
            :polarity -
            :ARG1 (b / being
                  :mod (a / another)))
      :ARG0-of (c / care-01
            :polarity -
            :ARG1 (b2 / being
                  :ARG0-of (d / deserve-01
                        :ARG1 h)))
      :ARG0-of (p2 / progress-01
            :ARG1-of (p3 / possible-01
                  :polarity -
                  :mod (j / just)
                  :time (u / until
                        :op1 (l / learn-01
                              :ARG0 n
                              :ARG1 (t2 / thing
                                    :manner-of (p4 / progress-01
                                          :ARG1 (n3 / nation
                                                :ARG1-of (g / good-02))))))))
      :domain (w / we))"
"(s / shop-01
      :polarity -
      :ARG0 (ii / i)
      :ARG1 (o / outfit
            :mod (c / cute))
      :ARG2 (o2 / online)
      :time (p / pandemic
            :mod (c2 / coronavirus)))"
"(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (d / donate-01
                  :ARG0 (y / you)
                  :ARG1 (ii / item)
                  :ARG2 (t / thing
                        :name (n / name
                              :op1 ""WISHLIST"")
                        :poss (w / we))
                  :purpose (s / support-01
                        :ARG0 ii
                        :ARG1 (p2 / person
                              :ARG1-of (h / have-degree-91
                                    :ARG2 (v / vulnerable-01
                                          :ARG1 p2)
                                    :ARG3 (m2 / most)))
                        :time (n2 / now
                              :mod (r / right)))))
      :snt2 (n3 / need-01
            :ARG1 (a / and
                  :op1 (m3 / milk
                        :mod (f / formula))
                  :op2 (n4 / nappy)
                  :op3 (w2 / wipe
                        :mod (b / baby))
                  :op4 (p3 / product
                        :mod (s2 / sanitary))
                  :op5 (f2 / food
                        :beneficiary (p4 / pet)))
            :ARG1-of (u / urgent-02)))"
"(m / multi-sentence
      :snt1 (o / obligate-01
            :ARG1 (p / person
                  :mod (c / country
                        :name (n / name
                              :op1 ""Canada""))
                  :quant (m2 / many))
            :ARG2 (c2 / calculate-01
                  :ARG0 p
                  :ARG1 (t / thing
                        :ARG1-of (m3 / moral-02)
                        :ARG1-of (o2 / out-06
                              :ARG2 (o3 / ordinary)
                              :degree (w / well))
                        :example (o4 / or
                              :op1 (r / responsible-03
                                    :ARG1 (g / go-02
                                          :ARG4 (s / store
                                                :mod (g2 / grocery))))
                              :op2 (r2 / responsible-03
                                    :polarity -
                                    :ARG1 g)))))
      :snt2 (s2 / say-01
            :ARG0 (p2 / philosopher
                  :quant 1)
            :ARG1 (t2 / tire-out-01
                  :ARG0 (t3 / that)
                  :ARG1 (w2 / we))))"
"(ii / increase-01
      :ARG0 (o / outbreak-29
            :ARG1 (d / disease
                  :name (n / name
                        :op1 ""COVID-19"")))
      :ARG1 (c / cost-01
            :ARG1 (p / produce-01))
      :ARG0-of (a / affect-01
            :ARG1 (t / thing
                  :ARG2-of (p2 / price-01
                        :ARG1 (f / food))
                  :location (m / market))))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG1 (h / hi)
            :ARG2 (t / there))
      :snt2 (s2 / start-01
            :ARG0 (w / we)
            :ARG1 (p / provide-01
                  :ARG0 w
                  :ARG1 (a / and
                        :op1 (p2 / product
                              :name (n / name
                                    :op1 ""Turbo""
                                    :op2 ""Hubs""))
                        :op2 (p3 / product
                              :name (n2 / name
                                    :op1 ""Turbo""
                                    :op2 ""Sticks""))
                        :op3 (d / device
                              :name (n3 / name
                                    :op1 ""MiFi"")))
                  :ARG2 (a2 / and
                        :op1 (c / customer
                              :mod (b / business
                                    :mod (s3 / small))
                              :poss w)
                        :op2 (c2 / customer
                              :mod (p4 / person
                                    :ARG0-of (c3 / consume-01))))
                  :purpose (a3 / assist-01
                        :ARG0 w
                        :ARG1 (p5 / person
                              :ARG0-of (w2 / work-01
                                    :location (h2 / home)
                                    :time (s4 / situation
                                          :mod (p6 / product
                                                :name (n4 / name
                                                      :op1 ""COVID-19""))))))
                  :ARG3 (r / rate-entity-91
                        :ARG1 (u / use-01
                              :ARG1 a
                              :mod (d2 / domestic)
                              :quant (a4 / area-quantity
                                    :quant 10
                                    :unit (g / gigabyte))
                              :mod (e / extra))
                        :ARG2 (t2 / temporal-quantity
                              :quant 1
                              :unit (m2 / month)))
                  :ARG1-of (c4 / charge-01
                        :polarity -
                        :mod (a5 / additional)))
            :time (d3 / date-entity
                  :month 3
                  :day 19)))"
"(s / see-01
      :ARG1 (p / pick-01
            :ARG0 (p2 / person
                  :ARG0-of (s2 / shop-01))
            :ARG1 (s3 / section
                  :mod (m / meat)
                  :ARG1-of (e / empty-02
                        :degree (n / near)))
            :time (s4 / stock-up-02
                  :ARG0 p2
                  :ARG1 (t / thing
                        :ARG1-of (s5 / supply-01))
                  :time (p3 / pandemic)
                  :location (s6 / store
                        :mod (g / grocery)
                        :location (c / city
                              :name (n2 / name
                                    :op1 ""San""
                                    :op2 ""Francisco"")
                              :location (s7 / state
                                    :name (n3 / name
                                          :op1 ""CA""))))))
      :time (d / date-entity
            :year 2020
            :month 3
            :day 16)
      :source (n4 / newspaper
            :name (n5 / name
                  :op1 ""The""
                  :op2 ""Washington""
                  :op3 ""Post"")))"
"(c / contrast-01
      :ARG1 (ii / insist-01
            :ARG0 (g / government-organization
                  :ARG0-of (g2 / govern-01))
            :ARG1 (m / measure-02
                  :mod (s / strict)))
      :ARG2 (l / lower-05
            :polarity -
            :ARG0 (g3 / government-organization
                  :name (n / name
                        :op1 ""Energy""
                        :op2 ""Regulatory""
                        :op3 ""Commission""))
            :ARG1 (p / price-01
                  :ARG1 (f / fuel))
            :time (y / yet)))"
"(s / say-01
      :ARG1 (w / work-01
            :ARG0 (w2 / we)
            :ARG1 (k / keep-01
                  :ARG0 w2
                  :ARG1 (s2 / stock-01
                        :ARG1 (c / club
                              :poss w2)
                        :ARG2 (a / and
                              :op1 (p / product
                                    :consist-of (p2 / paper))
                              :op2 (s3 / supply
                                    :purpose (c2 / clean-01))
                              :op3 (ii / item
                                    :mod (o / other))
                              :ARG1-of (p3 / price-01
                                    :ARG1-of (f / fair-01))))))
      :ARG2 (p4 / person
            :name (n / name
                  :op1 ""Alicia"")))"
"(m / multi-sentence
      :snt1 (ii / impact-01
            :ARG0 (v / virus
                  :name (n / name
                        :op1 ""coronavirus""))
            :ARG1 (a / and
                  :op1 (f / foodsecurity)
                  :op2 (n2 / nutrition)
                  :op3 (p / poor)
                  :op4 (d / develop-02)))
      :snt2 (f2 / feature-01
            :ARG0 (ii2 / issue
                  :name (n3 / name
                        :op1 ""IFPRI""
                        :op2 ""Insights""
                        :op3 ""Special""
                        :op4 ""Issue""))
            :ARG1 (a2 / analyze-01
                  :ARG0 (a3 / and
                        :op1 (p2 / person
                              :name (n4 / name
                                    :op1 ""RobVos26"")
                              :ARG0-of (h / have-org-role-91
                                    :ARG1 (w / we)
                                    :ARG2 (p3 / person
                                          :ARG1-of (e / expert-01))))
                        :op2 (p4 / person
                              :name (n5 / name
                                    :op1 ""ShenggenFan""))
                        :op3 (p5 / person
                              :name (n6 / name
                                    :op1 ""Kevin""
                                    :op2 ""Chen""))
                        :op4 (p6 / person
                              :name (n7 / name
                                    :op1 ""Xiaobo""
                                    :op2 ""Zhang""))
                        :op5 (m2 / more)))))"
"(m / multi-sentence
      :snt1 (h / have-03
            :ARG0 (w / website
                  :name (n / name
                        :op1 ""Consumers""
                        :op2 ""Protection""))
            :ARG1 (a / advise-01
                  :ARG2 (r / right-05
                        :ARG1 (y / you)
                        :ARG2 (c / consume-01
                              :ARG0 y))
                  :time (p / pandemic
                        :name (n2 / name
                              :op1 ""COVID""
                              :op2 19)
                        :mod (c2 / coronavirus))))
      :snt2 (a2 / address-02
            :ARG0 (q / question-01
                  :ARG1-of (a3 / ask-01
                        :ARG1-of (f / frequent-02)))
            :ARG1 (a4 / and
                  :op1 (ii / issue-02
                        :ARG0 (t / travel-01
                              :mod (r2 / retail-01))
                        :ARG1 (t2 / tenancy))
                  :op2 (m2 / more)))
      :snt3 (u / update-01
            :ARG1 (ii2 / information)
            :ARG1-of (r3 / regular-02)
            :ARG1-of (c3 / cause-01
                  :ARG0 (a5 / available-02
                        :ARG2 (g / guide-01
                              :ARG1-of (n3 / new-01))))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (w / work-01
                  :ARG0 (ii / i)
                  :ARG1 (r / retail-01)
                  :ARG2 (s / store
                        :mod (s2 / sporting-good)
                        :ARG1-of (m2 / major-02))
                  :time (o / overnight))
            :op2 (f / find-02
                  :ARG0 ii
                  :ARG1 (b / boggle-01
                        :ARG0 (m3 / mind)
                        :ARG1 (o2 / obligate-01
                              :ARG1 (w2 / we)
                              :ARG2 (b2 / be-located-at-91
                                    :ARG1 w2
                                    :ARG2 (h / here))
                              :mod (s3 / still)))))
      :snt2 (w3 / woman
            :location (h2 / here)
            :age (b3 / between
                  :op1 (t / temporal-quantity
                        :quant 70
                        :unit (y / year))
                  :op2 (t2 / temporal-quantity
                        :quant 89
                        :unit (y2 / year)))
            :ARG0-of (l / live-01
                  :accompanier (p / person
                        :ARG0-of (h3 / have-rel-role-91
                              :ARG1 w3
                              :ARG2 (m4 / mother)))
                  :mod (a2 / also)))
      :snt3 (c / come-01
            :mode imperative
            :ARG1 (p2 / person
                  :name (n / name
                        :op1 ""Come"")))
      :snt4 (g / guy
            :mod (a3 / another)
            :ARG0-of (h4 / have-rel-role-91
                  :ARG1 (p3 / person
                        :ARG0-of (w4 / work-01
                              :ARG2 (d / department
                                    :mod (e / emergency))))
                  :ARG2 (g2 / girlfriend))))"
"(s / say-01
      :ARG0 (g / government-organization
            :ARG0-of (g2 / govern-01
                  :ARG1 (p / province
                        :name (n / name
                              :op1 ""Quebec""))))
      :ARG1 (r / roll-out-02
            :ARG0 g
            :ARG1 (p2 / plan
                  :topic (e / educate-01)
                  :accompanier (r2 / resource
                        :mod (o / online))))
      :time (y / yesterday))"
"(e / expect-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Fitch""
                  :op2 ""Solutions""))
      :ARG1 (d / decrease-01
            :ARG1 (p / price-01
                  :ARG1 (o / oil
                        :source (p2 / palm)))
            :ARG2 (s / slight)
            :ARG3 (l / level
                  :time (c2 / current))
            :time (a / after
                  :op1 (n2 / now)
                  :quant (b / between
                        :op1 (t / temporal-quantity
                              :quant 3
                              :unit (m / month))
                        :op2 (t2 / temporal-quantity
                              :quant 6
                              :unit (m2 / month))))
            :ARG1-of (c3 / cause-01
                  :ARG0 (f / fall-01
                        :ARG1 (d2 / demand-01
                              :ARG1 o)
                        :ARG1-of (c4 / cause-01
                              :ARG0 (p3 / pandemic
                                    :name (n3 / name
                                          :op1 ""Covid-19"")))))))"
"(s / support-01
      :ARG0 (w / we)
      :ARG1 (o / organization
            :ARG0-of (r / redistribute-01
                  :ARG1 (f / food)))
      :instrument (f2 / fund
            :quant 2500000)
      :purpose (a / and
            :op1 (h / help-01
                  :ARG1 (r2 / redistribute-01
                        :ARG1 (s2 / stock
                              :mod (s3 / surplus)
                              :quant (u / up-to
                                    :op1 (m / mass-quantity
                                          :quant 14000
                                          :unit (t / ton))))
                        :time (o2 / outbreak-29
                              :ARG1 (d / disease
                                    :name (n / name
                                          :op1 ""coronavirus"")))))
            :op2 (r3 / reduce-01
                  :ARG1 (w2 / waste-01
                        :ARG1 f))))"
"(ii / increase-01
      :ARG1 (p / price-01
            :ARG1 (p2 / product
                  :mod (p3 / petroleum)))
      :time (a / after
            :op1 (s / series
                  :consist-of (r / roll-back-05
                        :ARG1-of (c / cause-01
                              :ARG0 (e / effect-03
                                    :ARG0 (l / law
                                          :name (n / name
                                                :op1 ""COVID-19""))))))))"
"(m / multi-sentence
      :snt1 (e / encourage-01
            :ARG0 (w / we)
            :ARG1 (y / you)
            :ARG2 (s / safe-01
                  :ARG1 y
                  :location (a / area
                        :mod (o / other))
                  :mod (a2 / also))
            :ARG1-of (c / cause-01
                  :ARG0 (d / diligent
                        :domain (p / person
                              :quant (m2 / many))
                        :topic (h / health
                              :poss p))))
      :snt2 (c2 / cause-01
            :ARG0 (b / become-01
                  :ARG1 (s2 / scam-01)
                  :ARG2 (p2 / prevail-02
                        :ARG1 s2
                        :ARG2-of (h2 / have-degree-91
                              :ARG1 s2
                              :ARG3 (m3 / more)))
                  :time (s3 / stress-02))
            :ARG1 (a3 / and
                  :op1 (c3 / check-out-05
                        :polite +
                        :mode imperative
                        :ARG0 y
                        :ARG1 (ii / information
                              :source (g / government-organization
                                    :name (n / name
                                          :op1 ""FTC""))
                              :topic (s4 / scam-01
                                    :mod (v / virus))))
                  :op2 (s5 / stay-01
                        :mode imperative
                        :ARG1 y
                        :ARG3 (s6 / safe-01
                              :ARG1 y)))))"
"(m / multi-sentence
      :snt1 (s / see-01
            :ARG0 (b / bank
                  :mod (f / food))
            :ARG1 (d / drop-01
                  :ARG1 (d2 / donate-01
                        :ARG0 (s2 / store
                              :ARG1-of (l / local-02)
                              :mod (g / grocery))))
            :ARG1-of (c / cause-01
                  :ARG0 (l2 / leave-13
                        :ARG0 (p / person
                              :ARG0-of (s3 / shop-01)
                              :ARG1-of (p2 / panic-01))
                        :ARG1 (s4 / shelf
                              :quant (m2 / more)
                              :ARG1-of (b2 / bare-02)))))
      :snt2 (a / affect-01
            :ARG0 (t / this)
            :ARG1 (e / everyone
                  :ARG2-of (ii / instead-of-91
                        :ARG1 (r / region
                              :mod (c2 / certain)
                              :mod (j / just))))))"
"(f / fall-01
      :ARG1 (p / price-01
            :ARG1 (d / diamond))
      :time (d2 / date-entity
            :month 3)
      :ARG1-of (c / cause-01
            :ARG0 (l / lead-03
                  :ARG0 (c2 / coronavirus)
                  :ARG2 (d3 / decline-01
                        :ARG1 (e / economy
                              :mod (g / globe))
                        :mod (d4 / dramatic)))))"
"(s / show-01
      :ARG0 (d / data
            :source (p / person
                  :ARG0-of (c / consume-01)))
      :ARG1 (t / think-01
            :ARG0 (p2 / person
                  :ARG1-of (ii / include-91
                        :ARG2 (p3 / person
                              :mod (c2 / country
                                    :name (n / name
                                          :op1 ""Australia"")))
                        :ARG3 (p4 / percentage-entity
                              :value 42)))
            :ARG1 (n2 / now
                  :ARG1-of (g / good-02
                        :ARG2 (b / buy-01
                              :ARG0 p2
                              :ARG1 (p5 / property))))
            :concession (c3 / challenge-01
                  :ARG1-of (p6 / present-01
                        :ARG0 (l / law
                              :name (n3 / name
                                    :op1 ""COVID""
                                    :op2 19))))))"
"(g / grow-01
      :ARG1 (s / sell-01
            :ARG1 (s2 / supermarket)
            :location (c / country
                  :name (n / name
                        :op1 ""Japan"")))
      :time (d / date-entity
            :month 2)
      :ARG1-of (c2 / cause-01
            :ARG0 (b / buy-01
                  :ARG0 (p / person
                        :ARG0-of (c3 / consume-01))
                  :ARG1 (f / food
                        :quant (m / more)
                        :ARG1-of (e / eat-01
                              :location (h / home)))
                  :time (o / outbreak-29
                        :name (n2 / name
                              :op1 ""COVID-19""))))
      :manner (p2 / pace
            :ARG1-of (h2 / have-degree-91
                  :ARG2 (f2 / fast-02
                        :ARG1 p2)
                  :ARG3 (m2 / most)
                  :ARG5 (o2 / over
                        :op1 (t / temporal-quantity
                              :quant 4
                              :unit (y / year))))))"
"(a / and
      :op1 (m / make-02
            :ARG0 (t / thing
                  :ARG2-of (s / sanction-02
                        :ARG0 (c / country
                              :name (n / name
                                    :op1 ""United""
                                    :op2 ""States""))
                        :ARG1 (c2 / country
                              :name (n2 / name
                                    :op1 ""Iran""))))
            :ARG1 (d / difficult
                  :domain (a2 / access-01
                        :ARG0 (p / person
                              :location c2)
                        :ARG1 (m2 / medication))))
      :op2 (r / raise-01
            :ARG0 t
            :ARG1 (t2 / thing
                  :ARG2-of (p2 / price-01
                        :ARG1 (a3 / and
                              :op1 (f / food)
                              :op2 (r2 / rent))))
            :mod (a4 / also)))"
"(l / leave-13
      :ARG0 (u / use-01
            :ARG0 (p / person
                  :ARG1-of (ii / include-91
                        :ARG2 (p2 / person
                              :mod (c / country
                                    :name (n / name
                                          :op1 ""Kenya"")))
                        :ARG3 (m / majority)))
            :ARG1 (p3 / product
                  :mod (k / kind
                        :mod (a / all)))
            :ARG2 (s / sanitize-01)
            :location (c2 / city
                  :name (n2 / name
                        :op1 ""Matatus"")
                  :mod (e / especially)))
      :ARG1 (p4 / problem
            :topic (s2 / skin))
      :time (a2 / after
            :op1 (p5 / pandemic
                  :mod (c3 / coronavirus))))"
"(m / multi-sentence
      :snt1 (s / supply-01
            :ARG0 (w / we)
            :ARG1 (t / thing
                  :name (n / name
                        :op1 ""PPE"")
                  :quant (l / lot)
                  :ARG2-of (ii / include-01
                        :ARG1 (a / and
                              :op1 (m2 / mask)
                              :op2 (g / glove)
                              :op3 (s2 / shield
                                    :mod (f / face))
                              :op4 (c / clothe-01
                                    :ARG3-of (p / protect-01))
                              :op5 (g2 / goggles)
                              :op6 (t2 / thermometer)
                              :op7 (s3 / sanitize-01
                                    :ARG1 (h / hand))))))
      :snt2 (c2 / contact-01
            :polite +
            :mode imperative
            :ARG0 (a2 / anyone)
            :ARG1 (ii2 / i)
            :condition (w2 / want-01
                  :ARG0 a2
                  :ARG1 (b / buy-01
                        :ARG0 a2
                        :ARG1 (t3 / they)))))"
"(p / prepare-02
      :ARG0 (b / bank
            :mod (f / food)
            :location (s / state
                  :name (n / name
                        :op1 ""New""
                        :op2 ""Brunswick"")))
      :ARG2 (d / demand-01
            :ARG1 (a / assist-01
                  :ARG2 (f2 / food))
            :ARG1-of (h / have-quant-91
                  :ARG3 (t / times
                        :quant 2)))
      :time (b2 / break-out-30
            :name (n2 / name
                  :op1 ""COVID-19"")))"
"(u / update-02
      :ARG2 (ii / increase-01
            :ARG1 (r / rent
                  :mod (b / base)))
      :time (y / yesterday))"
"(a / and
      :op1 (d / disrupt-01
            :ARG0 (o / outbreak-29
                  :ARG1 (c / coronavirus))
            :ARG1 (c2 / chain
                  :mod (s / supply-01)
                  :mod (g / globe)))
      :op2 (c3 / cause-01
            :ARG0 o
            :ARG1 (c4 / change-01
                  :ARG1 (b / behave-01
                        :ARG0 (p / person
                              :ARG0-of (c5 / consume-01))))))"
"(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Adam""))
      :time (d / date-entity
            :day 28
            :month 3
            :year 2020))"
"(w / wrong-04
      :ARG1 (p / person
            :name (n / name
                  :op1 ""Dana""
                  :op2 ""White""))
      :ARG2 (s / say-01
            :ARG0 p
            :ARG1 (h / have-degree-91
                  :ARG1 (c / come-01
                        :ARG1 (a / anyone)
                        :ARG4 (e / event
                              :poss p))
                  :ARG2 (s2 / safe-01
                        :ARG0 c)
                  :ARG3 (m / more)
                  :ARG4 (o / or
                        :op1 (s3 / stay-01
                              :ARG1 a
                              :location (h2 / home))
                        :op2 (g / go-02
                              :ARG0 a
                              :ARG4 (s4 / store
                                    :mod (g2 / grocery)))))))"
"(n / number
      :value 19
      :name (n2 / name
            :op1 ""COVID19""))"
"(c / cause-01
      :ARG0 (s / spread-03
            :ARG1 (c2 / coronavirus))
      :ARG1 (ii / increase-01
            :ARG0 s
            :ARG1 (m / monetary-quantity
                  :ARG2-of (p / price-01
                        :ARG1 (s2 / supply-01
                              :ARG1 (m2 / medicine))))
            :ARG1-of (c3 / cause-01
                  :ARG0 (s3 / struggle-02
                        :ARG0 (p2 / produce-01)
                        :ARG1 (m3 / meet-01
                              :ARG0 p2
                              :ARG1 (d / demand-01
                                    :ARG1 p2))))))"
"(m / multi-sentence
      :snt1 (w / work-01
            :location (h / home)
            :mod (p / product
                  :name (n / name
                        :op1 ""Digital""
                        :op2 ""Human""
                        :op3 ""CVID-19"")))
      :snt2 (m2 / meet-03
            :mod (c / conference)
            :mod (c2 / call-02))
      :snt3 (o / order-02
            :ARG1 (o2 / or
                  :op1 (t / take-01
                        :ARG3 (h2 / home))
                  :op2 (d / deliver-01
                        :ARG3 h2))
            :manner (t2 / telecommunication))
      :snt4 (s / shop-01
            :medium (o3 / online)
            :manner (l / live)))"
"(m / multi-sentence
      :snt1 (s / supress-01
            :ARG0 (o / order
                  :ord (o2 / ordinal-entity
                        :value 2)
                  :mod (e / executive)
                  :ARG1-of (s2 / sign-01
                        :ARG0 (p / person
                              :name (n / name
                                    :op1 ""Murphy"")
                              :ARG0-of (h / have-org-role-91
                                    :ARG2 (g / governor)))))
            :ARG1 (r / regulate-01
                  :ARG0 (a / and
                        :op1 (c / county)
                        :op2 (p2 / pharmacy)
                        :ARG1-of (l / local-02))
                  :mod (a2 / all)))
      :snt2 (c2 / contrast-01
            :ARG1 (p3 / possible-01
                  :ARG1 (a3 / and
                        :op1 (w / walk-01
                              :ARG0 (p4 / person
                                    :ARG0-of (r2 / reside-01))
                              :location (o3 / outside))
                        :op2 (r3 / run-02
                              :ARG0 p4
                              :location (o4 / outside))
                        :mod (s3 / still)))
            :ARG2 (n2 / need-01
                  :ARG0 p4
                  :ARG1 (c3 / continue-01
                        :ARG0 p4
                        :ARG1 (p5 / practice-01
                              :ARG0 p4
                              :ARG1 (d / distance-01
                                    :ARG1 p4
                                    :ARG2 (s4 / society))))
                  :condition (o5 / or
                        :op1 (g2 / go-02
                              :ARG0 p4
                              :ARG4 (o6 / or
                                    :op1 (o7 / outside)
                                    :op2 (s5 / store
                                          :mod (g3 / grocery))))
                        :op2 g2
                        :ARG0 p4
                        :ARG4 o6))
            :time (p6 / pandemic
                  :name (n3 / name
                        :op1 ""Covid-19""))))"
"(m / multi-sentence
      :snt1 (d / disgust-01
            :ARG0 (a / allow-01
                  :ARG1 (r / resell-01
                        :ARG0 (p / person)
                        :ARG1 (p2 / paper
                              :purpose (t / toilet))
                        :ARG3 (c / company
                              :name (n / name
                                    :op1 ""eBay""))
                        :ARG4 (m2 / monetary-quantity
                              :ARG2-of (p3 / price-01)
                              :ARG1-of (ii / inflate-01)))))
      :snt2 (n2 / need-01
            :ARG1 (e / end-01
                  :ARG1 (t2 / this)
                  :time (n3 / now)
                  :time (b / before
                        :op1 (h / have-degree-91
                              :ARG2 (l / late)
                              :ARG3 (t3 / too)))))
      :snt3 (a2 / affect-01
            :ARG0 (t4 / this)
            :ARG1 (ii2 / item
                  :mod (s / supermarket)
                  :mod (o / other))
            :mod (a3 / as-well)))"
"(m / multi-sentence
      :snt1 (s / start-01
            :ARG0 (p / person)
            :ARG1 (s2 / steal-01
                  :ARG0 p
                  :ARG1 (a / and
                        :op1 (s3 / sanitizer
                              :source (h / hospital))
                        :op2 (f / food
                              :source (b / bin
                                    :location (s4 / supermarket)
                                    :location-of (d / donate-01)))))
            :time (t / think-01
                  :ARG0 (y / you)
                  :ARG1 (p2 / possible-01
                        :polarity -
                        :ARG1 (s5 / sink-01
                              :ARG1 (p3 / person)
                              :ARG4 (l / low-04
                                    :ARG1 p3
                                    :mod (a2 / any)
                                    :ARG2-of (h2 / have-degree-91
                                          :ARG1 p3
                                          :ARG3 (m2 / more)))))))
      :snt2 (s6 / selfish
            :degree (b2 / beyond)
            :domain (y2 / you
                  :mod (c / country
                        :name (n / name
                              :op1 ""UK""))))
      :snt3 (s7 / stay-01
            :ARG1 (y3 / you)
            :ARG3 (c2 / classy-02
                  :ARG1 y3)))"
"(s / say-01
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG1 (c / country
                        :name (n / name
                              :op1 ""England""))
                  :ARG2 (p2 / person
                        :ARG1-of (e / expert-01))))
      :ARG1 (b / beautiful-02
            :ARG1 (v / view-01
                  :source (c2 / country
                        :name (n2 / name
                              :op1 ""Ireland""))))
      :time (d / date-entity
            :day 18
            :month 3
            :year 2020))"
"(s / sentence
      :mod (p / proper
            :polarity -)
      :domain (t / this))"
"(c / contrast-01
      :ARG1 (a / and
            :op1 (p / panic-01
                  :ARG1 (ii / i
                        :part (s / stomach))
                  :degree (m / mild)
                  :time (n / now
                        :mod (r / right))
                  :ARG1-of (h / honest-01))
            :op2 (p2 / possible-01
                  :polarity -
                  :ARG1 (s2 / sleep-01
                        :ARG0 ii
                        :ARG1-of (w / well-09))
                  :ARG1-of (c2 / cause-01
                        :ARG0 p)))
      :ARG2 (c3 / contrast-01
            :ARG1 (h2 / hurt-02
                  :ARG1 s
                  :degree (b / bit
                        :ARG0-of (s3 / surprise-01)))
            :ARG2 (k / know-01
                  :polarity -
                  :ARG0 ii
                  :ARG1 (t / truth-value
                        :polarity-of (c4 / cause-01
                              :ARG0 (o / or
                                    :op1 (s4 / slash
                                          :op1 (f / food
                                                :ARG1-of (s5 / suffice-01
                                                      :polarity -))
                                          :op2 (d / drink-01))
                                    :op2 (s6 / sick-05
                                          :ARG0 (p3 / product
                                                :name (n2 / name
                                                      :op1 ""COVID-19""))
                                          :ARG1 ii)
                                    :op3 (b2 / bug
                                          :mod (s7 / stomach))
                                    :op4 (a2 / amr-unknown)))))))"
"(m / multi-sentence
      :snt1 (p / person
            :name (n / name
                  :op1 ""Covid19Behave"")
            :ARG1-of (r / resemble-01
                  :ARG2 (h / have-03
                        :ARG0 (e / everyone)
                        :ARG1 (p2 / person
                              :name (n2 / name
                                    :op1 ""Covid"")))))
      :snt2 (s / solve-01
            :ARG1 (t / this)
            :location (c / community))
      :snt3 (p3 / possible-01
            :polarity -
            :ARG1 (d / do-02
                  :ARG0 (m2 / medic)
                  :ARG1 (m3 / miracle)))
      :snt4 p3
      :ARG1 (c2 / cause-01
            :ARG0 (a / and
                  :op1 (g / go-02
                        :ARG4 (s2 / supermarket))
                  :op2 (c3 / cough-01
                        :instrument (h2 / handle
                              :part-of (t2 / trolley))))
            :ARG1 (u / use-01
                  :ARG1 (b / bed
                        :mod (ii / intensive)
                        :mod (h3 / hospital)))))"
"(m / multi-sentence
      :snt1 (ii / include-91
            :ARG1 (t / thing
                  :name (n / name
                        :op1 ""COVID2019""))
            :ARG2 (p / plan-01
                  :ARG0 (t2 / they)))
      :snt2 (m2 / mean-01
            :ARG1 (s / say-01
                  :ARG1 (a / and
                        :op1 (ii2 / in-for
                              :op1 (m3 / monetary-quantity
                                    :quant 1
                                    :unit (p2 / penny)))
                        :op2 (ii3 / in-for
                              :op1 (m4 / monetary-quantity
                                    :quant 1
                                    :unit (p3 / pound)))))
            :ARG2 (p4 / possible-01
                  :ARG1 (d / do-02
                        :ARG0 (y / you)
                        :ARG1 (s2 / something)
                        :mod (a2 / as-well)
                        :extent (a3 / all-the-way))
                  :condition (d2 / do-02
                        :ARG0 y
                        :ARG1 s2))))"
"(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (o / outbreak-29
                  :ARG1 (o2 / organization
                        :name (n / name
                              :op1 ""COVID-19"")))
            :ARG1 (t / transform-01
                  :ARG0 o
                  :ARG1 (b / behave-01
                        :ARG0 (c2 / customer))
                  :manner (d / drastic)
                  :ARG0-of c
                  :ARG1 (t2 / turn-14
                        :ARG0 (c3 / customer
                              :quant (m2 / many))
                        :ARG1 (s / shop-01
                              :ARG0 c3
                              :medium (o3 / online)
                              :ARG1-of (ii / instead-of-91
                                    :ARG2 (s2 / shop-01
                                          :ARG0 c3
                                          :ARG2 (s3 / store
                                                :mod (b2 / brick-and-mortar)))))
                        :time (n2 / now))))
      :snt2 (c4 / clear-06
            :polarity -
            :ARG1 (t3 / thing
                  :ARG2-of (a / affect-01
                        :ARG0 (s4 / shift-01
                              :mod (t4 / this))
                        :duration (t5 / term
                              :ARG1-of (l / long-03))))
            :time (y / yet)))"
"(a / and
      :op1 (c / cancel-01
            :ARG0 (r / railway)
            :ARG1 (t / train
                  :quant 84
                  :mod (m / more)))
      :op2 (h / hike-01
            :ARG0 r
            :ARG1 (m2 / monetary-quantity
                  :ARG2-of (p / price-01
                        :ARG1 (t2 / ticket
                              :mod (p2 / platform)))))
      :ARG2-of (r2 / respond-01
            :ARG0 r
            :ARG1 (o / outbreak-29
                  :ARG1 (d / disease
                        :name (n / name
                              :op1 ""coronavirus"")))))"
"(m / multi-sentence
      :snt1 (a / acquire-01
            :ARG0 (c / country
                  :name (n / name
                        :op1 ""Saudi""
                        :op2 ""Arabia""))
            :ARG1 (s / stake
                  :mod (c2 / company
                        :name (n2 / name
                              :op1 ""Carnival""))
                  :quant (p / percentage-entity
                        :value 8.2)
                  :ARG1-of (m2 / mean-01
                        :ARG2 (a2 / approximately
                              :op1 (s2 / share-01
                                    :quant 43500000)))))
      :snt2 (a3 / and
            :op1 (p2 / price-01
                  :ARG1 (s3 / share-01)
                  :ARG2 (m3 / monetary-quantity
                        :ARG1-of (l / low-04
                              :degree (v / very))))
            :op2 (l2 / lose-02
                  :ARG0 (s4 / stock)
                  :ARG1 (p3 / percentage-entity
                        :value 81
                        :ARG3-of (ii / include-91
                              :ARG2 (v2 / value)))
                  :time (s5 / since
                        :op1 (b / begin-01
                              :ARG1 (y / year)))
                  :time (s6 / since
                        :op1 (s7 / struggle-02
                              :ARG0 (ii2 / industry
                                    :mod (c3 / cruise-01))
                              :ARG1 (c4 / company
                                    :name (n3 / name
                                          :op1 ""Coronav"")))))))"
"(c / confront-01
      :ARG0 (s / see-01
            :ARG1 (d / distance
                  :extent-of (p / possible-01
                        :ARG1 (t / travel-01
                              :ARG0 (c2 / cough-01
                                    :ARG0 (p2 / person))
                              :time (ii / infect-01
                                    :ARG1 p2))))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (e / employ-01
                  :ARG0 (s / supermarket
                        :name (n / name
                              :op1 ""Giant"")
                        :location (s2 / state
                              :name (n2 / name
                                    :op1 ""VA"")))
                  :ARG1 (p / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 (ii / i)
                              :ARG2 (s3 / sister))))
            :op2 (w / want-01
                  :ARG0 p
                  :ARG1 (p2 / petition-01
                        :ARG0 p
                        :ARG1 s
                        :ARG2 (p3 / pay-01
                              :ARG2 p
                              :ARG3 (e2 / endanger-01)))))
      :snt2 (o / or
            :op1 (t / thing
                  :ARG1-of (t2 / think-01)
                  :mod (a2 / any))
            :op2 (t3 / thing
                  :ARG2-of (d / direct-01)
                  :mod a2)))"
"(m / manage-02
      :ARG0 (ii / i)
      :ARG1 (o / obtain-01
            :ARG0 ii
            :ARG1 (b / bag
                  :quant 2
                  :mod (b2 / big)
                  :consist-of (c / catfood))
            :ARG2 (s / supermarket
                  :location (a / area)
                  :ARG1-of (h / have-degree-91
                        :ARG2 (b3 / busy-01
                              :ARG1 s)
                        :ARG3 (m2 / most)))
            :time (a2 / after
                  :op1 (l / leave-11
                        :ARG0 ii
                        :ARG1 (w / work-01
                              :ARG0 ii)))))"
"(a / and
      :op1 (g / go-out-17
            :ARG1 (p / person
                  :quant (m / more))
            :source (h / house
                  :poss p))
      :op2 (c / crowd-01
            :ARG1 (s / shop))
      :ARG0-of (p2 / pose-02
            :ARG1 (h2 / hazard
                  :ARG1-of (s2 / serious-02)
                  :topic (t / transmit-01
                        :ARG1 (p3 / product
                              :name (n / name
                                    :op1 ""COVID-19"")))))
      :condition (s3 / stay-01
            :ARG1 (p4 / platform
                  :mod (c2 / commerce))
            :ARG3 (s4 / shut-01
                  :ARG1 p4)))"
"(g / guide-01
      :ARG0 (o / organization
            :name (n / name
                  :op1 ""The""
                  :op2 ""Consumer""
                  :op3 ""Data""
                  :op4 ""Industry""
                  :op5 ""Association""))
      :ARG1 (a / and
            :op1 (p / person
                  :ARG0-of (l / lend-01))
            :op2 (p2 / person
                  :ARG0-of (r / repay-01))
            :ARG0-of (r2 / report-01
                  :ARG1 (ii / information
                        :topic (p3 / person
                              :ARG0-of (c / consume-01)
                              :poss-of (a2 / account
                                    :ARG1-of (ii2 / impact-01
                                          :ARG0 (l2 / law
                                                :name (n2 / name
                                                      :op1 ""COVID-19"")))))))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (a2 / access-01
                  :ARG0 (p / person
                        :ARG0-of (w / work-01
                              :ARG1 (c / construct-01))
                        :mod (w2 / we))
                  :ARG1 (w3 / water
                        :ARG1-of (r / run-01))
                  :ARG1-of (r2 / rare-02))
            :op2 (h / have-03
                  :polarity -
                  :ARG0 p
                  :ARG1 (s / sanitizer
                        :instrument-of (h2 / hand))
                  :time (e / ever
                        :mod (a3 / almost))))
      :snt2 (s2 / suppose-02
            :ARG1 (w4 / we)
            :ARG2 (f / flatten-01
                  :ARG0 w4
                  :ARG1 (c2 / curve))
            :manner (a4 / amr-unknown)))"
"(m / multi-sentence
      :snt1 (d / discuss-01
            :ARG0 (a / article
                  :mod (t / this))
            :ARG1 (s / short-06
                  :ARG2 (p / paper
                        :purpose (t2 / toilet))))
      :snt2 (t3 / talk-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (p2 / product
                  :name (n / name
                        :op1 ""Royal""
                        :op2 ""Flush"")
                  :mod (c / coronavirus)))
      :snt3 (s2 / stay-01
            :location (h / home)))"
"(c / contrast-01
      :ARG1 (t / try-01
            :ARG0 (ii / i
                  :part (h / hand))
            :ARG1 (m / make-01
                  :ARG0 ii
                  :ARG1 (t2 / thing
                        :instrument-of (s / sanitize-01
                              :ARG1 h)
                        :poss ii)))
      :ARG2 (e / end-up-03
            :ARG1 ii
            :ARG2 (s2 / shoot-01
                  :ARG1 (j / jello)
                  :ARG1-of (ii2 / instead-of-91
                        :ARG2 m))))"
"(c / cause-01
      :ARG0 (v / virus
            :name (n / name
                  :op1 ""covid19"")
            :mod (c2 / coronavirus))
      :ARG1 (c3 / charge-01
            :ARG0 (p / person
                  :ARG0-of (k / keep-01
                        :ARG1 (s / shop))
                  :quant (s2 / some))
            :ARG1 (m / monetary-quantity
                  :ARG1-of (h / have-quant-91
                        :ARG3 (m2 / more)
                        :ARG4 (m3 / monetary-quantity
                              :ARG2-of (p2 / price-01)
                              :ARG1-of (m4 / mark-02))))
            :manner (g / greed)))"
"(a / and
      :op2 (s / store
            :name (n / name
                  :op1 ""TheApp_Store"")))"
"(a / announce-01
      :ARG0 (g / government-organization
            :name (n / name
                  :op1 ""Ministry""
                  :op2 ""of""
                  :op3 ""Economy"")
            :mod (c / country
                  :name (n2 / name
                        :op1 ""UAE"")))
      :ARG1 (d / discount-02
            :ARG0 g
            :ARG1 (t / thing
                  :ARG2-of (p / price-01
                        :ARG1 (s / service
                              :quant (s2 / several)
                              :poss g
                              :purpose (s3 / support-01
                                    :ARG0 g
                                    :ARG1 (c2 / company)
                                    :time (p2 / pandemic
                                          :mod (c3 / coronavirus))))))))"
"(t / thank-01
      :ARG0 (ii / i)
      :ARG1 (y / you)
      :ARG2 (s / support-01
            :ARG0 y
            :ARG1 ii
            :topic (a / and
                  :op1 (g / gouge-02
                        :ARG0 (p / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG1 ii
                                    :ARG2 (d / doctor)))
                        :ARG2 (m / monetary-quantity
                              :ARG2-of (p2 / price-01)))
                  :op2 (c / charge-01
                        :ARG0 p
                        :ARG1 (m2 / monetary-quantity
                              :ARG1-of (ii2 / include-91
                                    :ARG2 (m3 / monetary-quantity
                                          :ARG3-of (p3 / pay-01
                                                :ARG3 (t2 / telehealth)))
                                    :ARG3 (t3 / times
                                          :quant 5)))
                        :ARG1-of (c2 / cause-01
                              :ARG0 (l / law
                                    :name (n / name
                                          :op1 ""COVID-19"")))))))"
"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (b / buy-01
                  :polarity -
                  :ARG0 (w / we)
                  :ARG1 (f / food)
                  :manner (p / panic-01)
                  :ARG1-of (s / say-01
                        :ARG0 (ii / i)
                        :ARG2-of (g / glad-02
                              :ARG0 ii)))
            :ARG2 (p2 / possible-01
                  :ARG1 (a / accept-01
                        :ARG1 (s2 / stockpile-01
                              :ARG1 (b2 / book)))
                  :polarity (a2 / amr-unknown)))
      :snt2 (p3 / plan-01
            :ARG0 (w2 / we)
            :ARG1 (v / visit-01
                  :ARG0 w2
                  :ARG1 (l / library)
                  :time (a3 / after
                        :op1 (s3 / school))
                  :purpose (g2 / get-01
                        :ARG0 w2
                        :ARG1 (b3 / book
                              :quant (f2 / few))
                        :condition (o / open-09
                              :ARG1 l
                              :mod (s4 / still)))))
      :snt3 (p4 / promise-01
            :ARG0 (w3 / we)
            :ARG2 (l2 / leave-behind-18
                  :ARG0 w3
                  :ARG1 (s5 / some
                        :quant-of (b4 / book))
                  :beneficiary (o2 / other))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (w / work-01
                  :ARG0 (ii / i)
                  :ARG2 (s / store
                        :ARG1-of (e / essential-02)))
            :op2 (c / come-04
                  :ARG1 ii
                  :ARG2 (c2 / contact-01
                        :ARG0 ii
                        :ARG1 (p / person
                              :quant (l / lot)))
                  :concession (g / glad-02
                        :ARG0 (p2 / paycheck)
                        :ARG1 ii)))
      :snt2 (c3 / cause-01
            :ARG0 (l2 / live-01
                  :ARG0 (ii2 / i)
                  :manner (a2 / alone))
            :ARG1 (a3 / affect-01
                  :polarity -
                  :ARG0 (ii3 / it)
                  :ARG1 ii2
                  :degree (m2 / much)
                  :time (o / once
                        :op1 (g2 / get-05
                              :ARG1 ii2
                              :ARG2 (h / home))))))"
"(a / and
      :op1 (d / day
            :ord (o / ordinal-entity
                  :value 3)
            :part-of (l / lock-down-06
                  :ARG1 (c / country
                        :name (n / name
                              :op1 ""Spain""))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (p / pandemic
                              :name (n2 / name
                                    :op1 ""COVID-19""))))
            :domain (t / this))
      :op2 (g / go-02
            :ARG0 (w / we)
            :ARG4 (s / supermarket)))"
"(l / look-02
      :polarity -
      :ARG0 (y / year
            :mod (t / this))
      :ARG1 (g / good-02))"
"(m / multi-sentence
      :snt1 (w / wake-up-02
            :mode imperative
            :ARG0 (y / you)
            :ARG1 y)
      :snt2 (b / be-located-at-91
            :ARG1 (a / and
                  :op1 (p / product
                        :mod (d / design-01
                              :ARG1 (g / graphic))
                        :ARG1-of (n / new-01))
                  :op2 (p2 / product
                        :mod (m2 / market-01
                              :mod (d2 / digital))
                        :ARG1-of (n2 / new-01))
                  :mod (a2 / all))
            :ARG2 (h / here))
      :snt3 (d3 / develop-02
            :ARG0 (w2 / we)
            :ARG1 (m3 / monetary-quantity
                  :ARG2-of (p3 / price-01)
                  :ARG1-of (n3 / new-01))
            :purpose (h2 / help-01
                  :ARG0 m3
                  :ARG1 (a3 / affect-01
                        :ARG0 (v / virus
                              :mod (c / coronirus))
                        :ARG1 (e / everyone)))
            :time (t / time))
      :snt4 (t2 / text-01
            :mode imperative
            :ARG0 y
            :ARG1 (p4 / phone-number-entity
                  :value ""2162565118"")
            :purpose (g2 / get-01
                  :ARG0 y)))"
"(c / contrast-01
      :ARG1 (k / know-01
            :ARG0 (ii / i)
            :ARG1 (w / we
                  :mod (a / all)
                  :mod (d / diverse
                        :mod (w2 / wonderful))
                  :mod (t / talent
                        :quant (m / multiple))))
      :ARG2 (h / have-03
            :ARG0 (p / person
                  :mod (c2 / country
                        :name (n / name
                              :op1 ""America"")))
            :ARG1 (t2 / time
                  :mod (d2 / difficult)
                  :purpose (f / form-01
                        :ARG0 p
                        :ARG1 (l / line)
                        :location (s / store
                              :mod (g / grocery))))
            :ARG0-of (c3 / cause-01
                  :ARG1 (c4 / count-01
                        :mode imperative
                        :ARG0 (y / you)
                        :ARG1 ii
                        :ARG2 (o / one
                              :ARG0-of (b / believe-01
                                    :ARG1 (p2 / possible-01
                                          :ARG1 (n2 / night
                                                :ARG1-of (d3 / dark-02)
                                                :ARG1-of (l2 / long-03)
                                                :mod (s2 / soul)
                                                :time (a2 / after
                                                      :op1 (n3 / now)
                                                      :quant (b2 / between
                                                            :op1 (t3 / temporal-quantity
                                                                  :quant 4
                                                                  :unit (w3 / week))
                                                            :op2 (t4 / temporal-quantity
                                                                  :quant 6
                                                                  :unit (w4 / week))))))))))))"
"(ii / increase-01
      :ARG1 (s / sell-01
            :ARG1 (f / food
                  :ARG1-of (p / perish-01
                        :ARG1-of (p2 / possible-01
                              :polarity -))))
      :ARG2 (s2 / significant-02)
      :location (c / country
            :name (n / name
                  :op1 ""United""
                  :op2 ""States""))
      :time (d / date-entity
            :month 3
            :mod (t / this))
      :ARG1-of (c2 / cause-01
            :ARG0 (f2 / fear-01
                  :ARG0 (p3 / person
                        :ARG0-of (c3 / consume-01))
                  :ARG1 (e / event
                        :name (n2 / name
                              :op1 ""covid19"")))))"
"(r / recommend-01
      :ARG0 (g / government-organization
            :name (n / name
                  :op1 ""Centers""
                  :op2 ""for""
                  :op3 ""Disease""
                  :op4 ""Control""))
      :ARG1 (o / or
            :op1 (c / cancel-01
                  :ARG0 (p / person
                        :mod (c2 / country
                              :name (n2 / name
                                    :op1 ""America"")))
                  :ARG1 (g2 / gather-03
                        :ARG0 p
                        :quant (a / at-least
                              :op1 50)))
            :op2 (p2 / postpone-01
                  :ARG0 p
                  :ARG1 g2)
            :time (a2 / after
                  :op1 (n3 / now)
                  :duration (t / temporal-quantity
                        :quant 8
                        :unit (w / week))))
      :ARG2 p)"
"(m / multi-sentence
      :snt1 (j / job
            :poss (p / person
                  :name (n / name
                        :op1 ""Evers"")
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (g / governor)))
            :domain (e / ensure-01
                  :ARG0 p
                  :ARG1 (a / and
                        :op1 (s / safe-01
                              :ARG1 (e2 / elect-01))
                        :op2 (f / free-04
                              :ARG1 e2)
                        :op3 (f2 / fair-01
                              :ARG1 e2)
                        :mod (a2 / also)))
            :polarity (a3 / amr-unknown))
      :snt2 (c / cause-01
            :ARG0 (a4 / amr-unknown)
            :ARG1 (p2 / panic-01
                  :ARG0 (p3 / primary
                        :time (u / upcoming))
                  :ARG1 (p4 / person
                        :name (n2 / name
                              :op1 ""Evers"")
                        :ARG0-of h
                        :ARG2 (g2 / governor)))
            :degree (s2 / such))
      :snt3 (h2 / have-concession-91
            :ARG1 (g3 / go-02
                  :ARG0 (p5 / person)
                  :ARG4 (b / buy-01
                        :ARG0 p5
                        :ARG1 (a5 / and
                              :op1 (f3 / food)
                              :op2 (t / thing
                                    :ARG1-of (n3 / need-01)
                                    :mod (o / other))))
                  :frequency (r / rate-entity-91
                        :ARG3 (t2 / temporal-quantity
                              :quant 1
                              :unit (d / day))))
            :ARG2 (m2 / military
                  :name (n4 / name
                        :op1 ""COVID""))
            :ARG1-of (k / know-01
                  :ARG0 (y / you))))"
"(t / turn-14
      :ARG0 (p / person)
      :ARG1 (c / commerce)
      :ARG1-of (c2 / cause-01
            :ARG0 (a / anxiety
                  :topic (l / law
                        :name (n / name
                              :op1 ""COVID-19"")))))"
"(m / multi-sentence
      :snt1 (s / suggest-01
            :ARG0 (ii / i)
            :ARG1 (t / triple-01
                  :polarity -
                  :ARG0 (c / company
                        :name (n / name
                              :op1 ""UnitedAirlines""))
                  :ARG1 (m2 / monetary-quantity
                        :ARG2-of (p / price-01
                              :ARG0 c
                              :ARG1 (p2 / person
                                    :ARG0-of (a / attempt-01
                                          :ARG1 (c2 / come-01
                                                :ARG1 p2
                                                :ARG3 (c3 / country
                                                      :name (n2 / name
                                                            :op1 ""USA""))
                                                :direction (b / back)
                                                :source (c4 / country
                                                      :mod (o / other))))))))
            :condition (w / want-01
                  :ARG0 c
                  :ARG1 (b2 / bail-out-02
                        :ARG1 c)))
      :snt2 p2
      :name (n3 / name
            :op1 ""Covid_19""))"
"(m / multi-sentence
      :snt1 (l / landslide)
      :snt2 (w / win-01
            :ARG0 (p / paper
                  :purpose (t / toilet))
            :ARG1 (a / award
                  :name (n / name
                        :op1 ""MVP"")
                  :time (d / date-entity
                        :year 2020))
            :manner (l2 / landslide)))"
"(c / cause-01
      :ARG0 (o / obligate-01
            :ARG1 (ii / i)
            :ARG2 (c2 / cancel-01
                  :ARG0 ii
                  :ARG1 (p / plan-01
                        :ARG0 ii
                        :ARG1 (h / holiday
                              :mod (b / big))
                        :mod (a / all))
                  :time (d / date-entity
                        :month 4))
            :ARG1-of (c3 / cause-01
                  :ARG0 (e / event
                        :name (n / name
                              :op1 ""Covid_19""))))
      :ARG1 (s / shop-01
            :ARG0 ii
            :medium (o2 / online)
            :quant (s2 / some)))"
"(g / get-01
      :ARG0 (a / and
            :op1 (p / person
                  :name (n / name
                        :op1 ""taradome22""))
            :op2 (ii / i))
      :ARG1 (b / basket
            :mod (e / egg)
            :poss (w / we)))"
"(e / expect-01
      :ARG1 (r / rise-01
            :ARG1 (p / price-01
                  :ARG1 (c / corn))
            :ARG1-of (c2 / cause-01
                  :ARG0 (p2 / plan-01
                        :ARG0 (p3 / person
                              :ARG0-of (f / farm-01)
                              :location (s / state
                                    :name (n / name
                                          :op1 ""Ohio"")))
                        :ARG1 (p4 / plant-01
                              :ARG0 p3
                              :ARG1 (c3 / corn
                                    :ARG1-of (h / have-quant-91
                                          :ARG3 (m / more
                                                :quant (p5 / percentage-entity
                                                      :value 32))
                                          :ARG4 (p6 / plant-01
                                                :time (y / year
                                                      :mod (l / last))))))))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (s / scramble-01
                  :ARG0 (s2 / state
                        :name (n / name
                              :op1 ""Montana""))
                  :ARG1 (f / find-01
                        :ARG0 s2
                        :ARG1 (s3 / supply-01
                              :ARG1 (m2 / medicine)
                              :mod (b / basic))))
            :op2 (f2 / force-01
                  :ARG1 s2
                  :ARG2 (p / pay-01
                        :ARG0 s2
                        :ARG1 (p2 / price-01
                              :ARG1 s3
                              :mod (e / exorbitant)))
                  :ARG1-of (r / resemble-01
                        :ARG2 (s4 / state
                              :quant (m3 / many)
                              :mod (o / other)))))
      :snt2 (e2 / exemplify-01
            :ARG0 (s5 / sell-01
                  :ARG1 (m4 / mask
                        :mod (s6 / surgery-01)
                        :ARG1-of (c / cost-01
                              :ARG2 (m5 / monetary-quantity
                                    :quant 1
                                    :unit (d / dollar)
                                    :ARG1-of (m6 / mean-01
                                          :ARG2 (p3 / product-of
                                                :op1 5
                                                :op2 (m7 / monetary-quantity
                                                      :quant 1
                                                      :unit (d2 / dollar)))))
                              :time (u / use-03)))
                  :time (n2 / now))))"
"(m / multi-sentence
      :snt1 (f / focus-01
            :ARG0 (s / supermarket)
            :ARG2 (p / product
                  :ARG1-of (k / key-02))
            :ARG1-of (ii / instead-of-91
                  :ARG2 (r / range-01
                        :ARG1-of (w / wide-02))))
      :snt2 (t / tell-01
            :ARG0 (s2 / supermarket
                  :quant 1)
            :ARG1 (c / cut-back-05
                  :ARG0 s2
                  :ARG1 (p2 / pasta
                        :mod (s3 / style))
                  :ARG3 (s4 / size
                        :quant 20)
                  :ARG4 s3
                  :quant 6))
      :ARG2 (n / newspaper
            :name (n2 / name
                  :op1 ""Guardian"")))"
"(e / event
      :mod (t / this)
      :location (p / pandemic)
      :ARG1-of (m / mean-01
            :ARG2 (r / realize-01
                  :ARG0 (y / you)
                  :ARG1 (c / come-01
                        :ARG1 (t2 / train
                              :name (n / name
                                    :op1 ""Karma""
                                    :op2 ""Corona""))
                        :ARG4 (w / way
                              :poss y)
                        :time (g / go-06
                              :ARG0 y
                              :ARG1 (a / against
                                    :op1 (l / law
                                          :mod (n2 / nature))))))))"
"(b / buy-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (t / thing
            :ARG1-of (n / need-01
                  :ARG0 y)
            :mod (o / only))
      :ARG4 (s / store
            :mod (g / grocery)))"
"(p / possible-01
      :ARG1 (h / help-01
            :ARG0 (b / bank
                  :poss (y / you))
            :ARG1 (g / get-through-13
                  :ARG0 y
                  :ARG1 (p2 / product
                        :name (n / name
                              :op1 ""Covid-19"")))
            :ARG2 y
            :manner (p3 / provide-01
                  :ARG0 b
                  :ARG1 (ii / information
                        :mod (t / this)))))"
"(m / multi-sentence
      :snt1 (a / agree-01
            :ARG0 (ii / i)
            :ARG1 (e / everything
                  :ARG1-of (s / say-01
                        :time (j / just))
                  :ARG2-of (e2 / except-01
                        :ARG1 (b / be-located-at-91
                              :ARG1 (p / paper
                                    :purpose (t / toilet))
                              :ARG2 (s2 / supermarket)
                              :time (t2 / tomorrow)))))
      :snt2 (a2 / and
            :op1 (b2 / be-located-at-91
                  :polarity -
                  :ARG1 (p2 / paper
                        :purpose (t3 / toilet))
                  :ARG2 (s3 / store
                        :mod (a3 / any)
                        :location (a4 / area
                              :poss (ii2 / i)))
                  :time (d / day
                        :mod (a5 / any)))
            :op2 (n / need-01
                  :ARG1 (ii3 / investigate-01
                        :ARG0 (s4 / someone)
                        :ARG1 b2
                        :time (ii4 / immediate)))))"
"(s / stop-01
      :ARG1 (s2 / sell-01
            :ARG1 (m / magazine)
            :location (s3 / street)
            :mod (b / business))
      :time (w / wake
            :op1 (c / crisis
                  :name (n / name
                        :op1 ""COVID""
                        :op2 19))))"
"(n / news
      :mod (t / top)
      :topic (t2 / thing
            :manner-of (a / avoid-01
                  :ARG1 (c / criminal-organization
                        :name (n2 / name
                              :op1 ""COVID-19""))
                  :location (s / supermarket))))"
"(a / and
      :op1 (g / go-02
            :ARG0 (ii / i)
            :ARG4 (a2 / and
                  :op1 (s / supermarket)
                  :op2 (p / pharmacy)
                  :op3 (s2 / store
                        :mod (g2 / grocery)))
            :purpose (p2 / pick-up-04
                  :ARG0 ii
                  :ARG1 (s3 / stuff
                        :mod (b / basic)
                        :ARG1-of (n / need-01
                              :ARG0 ii))))
      :op2 (l / learn-01
            :ARG0 ii
            :ARG1 (c / cause-01
                  :ARG0 (b2 / be-located-at-91
                        :ARG1 (c2 / carrot)
                        :ARG2 (p3 / plenty))
                  :ARG1 (l2 / like-01
                        :ARG0 (n2 / no-one)
                        :ARG1 (c3 / carrot)))))"
"(m / multi-sentence
      :snt1 (h / hurt-01
            :ARG1 (w / winery
                  :location (p / province
                        :name (n / name
                              :op1 ""Niagara"")))
            :time (e / epidemic))
      :snt2 (r / reduce-01
            :ARG1 (w2 / winery
                  :quant (m2 / majority
                        :mod (v / vast)))
            :ARG4 (s / sell-01
                  :ARG0 w2
                  :medium (o / online)
                  :mod (o2 / only)))
      :snt3 (l / list-01
            :ARG1 (t / thing
                  :manner-of (a / and
                        :op1 (b / buy-01
                              :ARG0 (y / you)
                              :ARG1 (w3 / wine
                                    :source p))
                        :op2 (k / keep-02
                              :ARG0 y
                              :ARG1 (v2 / viable
                                    :domain (ii / industry
                                          :mod p)))))
            :location (h2 / here))
      :snt4 (h3 / happy-01
            :mode expressive
            :ARG1 (s2 / shop-01)))"
"(a / article
      :mod (t / this)
      :ARG2-of (ii / interest-01)
      :topic (a2 / and
            :op1 (w / waste-01
                  :ARG1 (f / food))
            :op2 (s / security
                  :mod f))
      :time (e / event
            :name (n / name
                  :op1 ""COVID-19""))
      :source (m / magazine
            :name (n2 / name
                  :op1 ""National""
                  :op2 ""Geographic"")))"
"(r / round-up-02
      :ARG1 (h / headline
            :time (t / today))
      :location (h2 / here))"
"(a / and
      :op1 (c / child
            :mod (s / stubborn)
            :poss (c2 / continent
                  :name (n / name
                        :op1 ""Europe""))
            :domain (c3 / country
                  :name (n2 / name
                        :op1 ""UK"")))
      :op2 (ii / include-01
            :ARG0 (o / organization
                  :name (n3 / name
                        :op1 ""EU""))
            :ARG1 c3
            :ARG2 (s2 / scheme-01
                  :ARG1 (s3 / supply-01
                        :ARG1 (v / ventilator)))
            :mod (y / yet)
            :mod (s4 / still)))"
"(a / and
      :op1 (f / fall-01
            :ARG1 (g / grow-01
                  :ARG1 (g2 / globe))
            :ARG2 (a2 / amr-unknown)
            :ARG2-of (r / result-01
                  :ARG1 (a3 / and
                        :op1 (e / event
                              :name (n / name
                                    :op1 ""Covid-19""))
                        :op2 (c / collapse-01
                              :ARG1 (p / price-01
                                    :ARG1 (o / oil))))))
      :op2 (o2 / outlook
            :poss (w / we)
            :topic (r2 / recover-01
                  :ARG1 (e2 / economy))
            :domain (a4 / amr-unknown)))"
"(p / presume-01
      :ARG1 (a / ask-01
            :ARG0 (n / newspaper
                  :name (n2 / name
                        :op1 ""Daily""
                        :op2 ""Express""))
            :ARG1 (a2 / affect-01
                  :ARG0 (v / virus
                        :name (n3 / name
                              :op1 ""Coronavirus""))
                  :ARG1 (p2 / price-01
                        :ARG1 (h / house)))))"
"(c / capture-01
      :ARG0 (m / meme)
      :ARG1 (h / humor
            :part-of (a / and
                  :op1 (s / sport
                        :poss (k / kid))
                  :op2 (p / persevere-01
                        :ARG0 k)))
      :medium (h2 / here)
      :time (m2 / moment
            :ord (o / ordinal-entity
                  :value 3)
            :mod (l / levity)
            :beneficiary (o2 / organization
                  :name (n / name
                        :op1 ""COVID-19""))))"
"(p / pivot-01
      :ARG1 (b / business
            :example (c / company
                  :name (n / name
                        :op1 ""JRiegerCo"")))
      :ARG2 (r / respond-01
            :ARG0 b
            :ARG1 (n2 / need-01
                  :ARG0 (p2 / person
                        :ARG0-of (c2 / consume-01
                              :ARG1 b)))
            :time (c3 / crisis)))"
"(a / ask-02
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG1 (s / state
                        :name (n / name
                              :op1 ""Utah""))
                  :ARG2 (g / governor)))
      :ARG1 (w / wear-01
            :ARG0 (p2 / person
                  :mod s)
            :ARG1 (m / mask
                  :ARG0-of (p3 / protect-01)
                  :ARG1-of (p4 / personal-02))
            :time (e / enter-01
                  :ARG0 p2
                  :ARG1 (s2 / store
                        :mod (r / retail-01))
                  :mod (a2 / any)))
      :ARG2 p2)"
"(r / recommend-01
      :ARG1 (a / and
            :op1 (e / explicit-03
                  :ARG1 (b / bail-out-02
                        :ARG1 (c / coronavirus)))
            :op2 (h / hide-01
                  :polarity -
                  :ARG0 (c2 / cut-02
                        :ARG1 (t / tax-01
                              :ARG3 (s / small-molecule
                                    :name (n / name
                                          :op1 ""CO2""))))
                  :ARG1 b)))"
"(s / see-01
      :ARG0 (a / and
            :op1 (l / luggage)
            :op2 (c / camera)
            :op3 (s2 / swimsuit
                  :mod (m / man))
            :mod (a2 / all))
      :ARG1 (d / dip-01
            :ARG1 (s3 / sell-01
                  :ARG1 a)))"
"(o / or
      :op1 (o2 / out-05
            :ARG1 (a / and
                  :op1 (m / mask)
                  :op2 (s / sanitizer))
            :ARG2 (s2 / stock-01
                  :ARG1 a
                  :location (m2 / market)))
      :op2 (s3 / sell-01
            :ARG1 a
            :ARG3 (t / thing
                  :ARG2-of (p / price-01
                        :ARG1 a)
                  :ARG1-of (h / have-quant-91
                        :ARG3 (m3 / more)
                        :ARG4 (t2 / thing
                              :ARG2-of (p2 / price-01)
                              :ARG1-of (s4 / standard-02)))))
      :concession (c / cap-01
            :ARG0 (g / government-organization
                  :ARG0-of (g2 / govern-01))
            :ARG1 (t3 / thing
                  :ARG2-of (p3 / price-01))
            :ARG1-of (ii / impose-01
                  :ARG0 g)))"
"(e / explain-01
      :ARG1 (t / thing
            :manner-of (ii / impact-01
                  :ARG0 (c / coronavirus)
                  :ARG1 (p / price-01
                        :ARG1 (g / gas)))))"
"(f / find-01
      :ARG0 (ii / i)
      :ARG1 (p / paper
            :purpose (t / toilet)
            :mod (s / square))
      :location (c / company
            :name (n / name
                  :op1 ""eBay"")))"
"(s / story
      :ARG0-of (ii / inquire-01
            :ARG1 (a / and
                  :op1 (t / truth-value
                        :polarity-of (p / possible-01
                              :ARG1 (l / live-01
                                    :ARG0 (c / coronavirus)
                                    :location (r / refrigerator)
                                    :duration (t2 / temporal-quantity
                                          :quant (a2 / amr-unknown)
                                          :op2-of a))))
                  :condition p)))"
"(ii / impact-01
      :ARG0 (v / virus)
      :ARG2-of (h / have-degree-91
            :ARG1 v
            :ARG3 (m / more)
            :ARG4 (a / and
                  :op1 (m2 / market
                        :mod (s / stock))
                  :op2 (t / thing
                        :ARG2-of (p / price-01
                              :ARG1 (c / cattle)))
                  :mod (j / just))))"
"(m / multi-sentence
      :snt1 (d / distance-01
            :ARG1 (ii / i)
            :ARG2 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 ii
                        :ARG2 (s / son)))
            :mod (s2 / social)
            :duration (t / temporal-quantity
                  :quant 6
                  :unit (d2 / day))
            :prep-without (t2 / temporal-quantity
                  :quant 37
                  :unit (m2 / minute)
                  :duration-of (g / go-02
                        :ARG0 ii
                        :ARG4 (s3 / store
                              :mod (g2 / grocery)))))
      :snt2 (c / cry-02
            :ARG0 (ii2 / i)
            :time (a / after
                  :op1 (e / event))
            :manner (s4 / stand-01
                  :ARG1 ii2
                  :ARG2 (o / over
                        :op1 (s5 / sink
                              :poss ii2)))))"
"(r / receive-01
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG1 (s / supermarket)
                  :ARG3 (c / cashier))
            :location (c2 / country
                  :name (n / name
                        :op1 ""South""
                        :op2 ""Africa"")))
      :ARG1 (b / bonus
            :mod (m / monetary-quantity
                  :quant 102000000
                  :unit (r2 / rand)))
      :ARG3 (w / work-01
            :ARG0 p
            :time (p2 / pandemic
                  :name (n2 / name
                        :op1 ""Covid-19""))))"
"(m / multi-sentence
      :snt1 (s / step-01
            :ARG0 (ii / i)
            :ARG2 (o / out)
            :purpose (g / get-01
                  :ARG0 ii
                  :ARG1 (f / food))
            :time (a / after
                  :op1 (ii2 / isolate-01
                        :ARG1 ii
                        :ARG2 ii
                        :duration (t / temporal-quantity
                              :quant 7
                              :unit (d / day)))))
      :snt2 (g2 / good-02
            :ARG1 (s2 / see-01
                  :ARG0 ii
                  :ARG1 (s3 / supermarket
                        :location (c / city
                              :name (n / name
                                    :op1 ""Carrefour""))
                        :ARG1-of (l / local-02
                              :ARG2 ii)
                        :ARG0-of (p / put-03
                              :ARG1 (m2 / measure-02
                                    :ARG0 s3
                                    :ARG1 (d2 / distance-01
                                          :ARG2 (c2 / counter
                                                :location-of (c3 / check-01))
                                          :mod (p2 / physical))
                                    :mod (ii3 / in-place))))))
      :snt3 (s4 / seem-01
            :ARG1 (a2 / abide-01
                  :ARG0 (p3 / person)
                  :ARG1 (r / rule))
            :location (a3 / aisle))
      :snt4 (ii4 / item
            :quant (m3 / most)))"
"(f / feel-01
      :ARG0 (ii / i)
      :ARG1 (p / play-01
            :ARG0 ii
            :ARG1 (g / game
                  :name (n / name
                        :op1 ""Hunger""
                        :op2 ""Games"")))
      :ARG1-of (c / cause-01
            :ARG0 (f2 / form-01
                  :ARG1 (l / line)
                  :time (a / already)
                  :location (o / outside
                        :op1 (s / store
                              :mod (g2 / grocery))))))"
"(n / need-01
      :ARG0 (w / we)
      :ARG1 (h / help-01
            :ARG0 (y / you)
            :ARG1 (f / feed-01
                  :ARG0 w
                  :ARG2 (n2 / nation))))"
"(e / enforce-01
      :ARG0 (s / supermarket
            :quant (m / many))
      :ARG1 (p / policy-01
            :ARG0 s
            :ARG1 (l / limit-01
                  :ARG1 (r / rate-entity-91
                        :ARG1 (ii / item
                              :quant 2)
                        :ARG2 (p2 / purchase-01
                              :ARG0 (c / customer))))))"
"(a / affect-01
      :ARG0 (m / memo)
      :ARG1 (e / economy
            :mod (w / world)))"
"(h / have-degree-91
      :ARG1 (a / and
            :op1 (p / person
                  :ARG0-of (w / work-01
                        :ARG2 (g / government-organization
                              :name (n / name
                                    :op1 ""NHS""))))
            :op2 (p2 / person
                  :ARG0-of (w2 / work-01
                        :ARG2 (s / supermarket))))
      :ARG2 (v / value-01
            :ARG1 a)
      :ARG3 (m / most)
      :ARG5 (m2 / member
            :part-of (s2 / society)))"
"(c / call-03
      :ARG0 (p / person
            :ARG0-of (c2 / campaign-01))
      :ARG1 (s / suspend-01
            :ARG1 (s2 / ship-01
                  :ARG1 (a / animal
                        :ARG0-of (l / live-01))
                  :source (c3 / continent
                        :name (n / name
                              :op1 ""Europe""))
                  :mod (a2 / all))
            :purpose (e / ease-02
                  :ARG1 (s3 / strain-01
                        :ARG0 (d / disease
                              :name (n2 / name
                                    :op1 ""Coronavirus""))
                        :ARG1 (t / trade-01
                              :ARG1 (m / meat))))))"
"(m / multi-sentence
      :snt1 (t / tough-02
            :ARG0 (p / pandemic
                  :name (n / name
                        :op1 ""COVID-19""))
            :ARG1 (e / everyone
                  :ARG2-of (ii / include-91
                        :ARG1 (b / bank
                              :mod (f / food)
                              :location-of (ii2 / increase-01
                                    :ARG1 (d / demand-01
                                          :ARG1 (f2 / food)))
                              :mod (e2 / especially)))))
      :snt2 (u / underway
            :domain (d2 / drive-04
                  :ARG1 (f3 / food)
                  :ARG1-of (n2 / new-01)
                  :ARG0-of (h / hope-01
                        :ARG1 (e3 / ease-02
                              :ARG1 (b2 / burden))))))"
"(p / possible-01
      :ARG1 (r / remain-01
            :ARG1 (p2 / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (p3 / person
                              :ARG0-of (w / work-01
                                    :mod (k / key)))
                        :ARG2 (c / child)))
            :location (s / school)
            :time (w2 / week
                  :mod (n / next))))"
"(s / set-02
      :ARG0 (g / government-organization
            :name (n / name
                  :op1 ""The""
                  :op2 ""Consumer""
                  :op3 ""Affairs""
                  :op4 ""Ministry""))
      :ARG1 (g2 / guideline
            :topic (a / advertise-01
                  :location (a2 / around
                        :op1 (l / law
                              :name (n2 / name
                                    :op1 ""COVID-19"")))))
      :purpose (p / prevent-01
            :ARG0 g
            :ARG1 (c / claim-01
                  :mod (f / false))))"
"(n / need-01
      :polarity -
      :ARG1 (w / worry-02
            :ARG0 (y / you)
            :ARG1 (t / thing
                  :ARG2-of (r / recommend-01
                        :ARG1 (b / be-located-at-91
                              :ARG1 y
                              :ARG2 (r2 / relative-position
                                    :op1 (l / line-up-02
                                          :ARG2 (s / supermarket))
                                    :direction (a / apart))))))
      :ARG1-of (c / cause-01
            :ARG0 (h / have-03
                  :ARG0 (p / person
                        :mod (c2 / country
                              :name (n2 / name
                                    :op1 ""Denmark"")))
                  :ARG1 (t2 / thing
                        :ARG2-of (s2 / solve-01
                              :ARG0 p
                              :ARG1 b
                              :mod (d / design))
                        :ARG1-of (s3 / simple-02)))))"
"(c / cause-01
      :ARG0 (s / suppose-02
            :ARG1 (p / person)
            :ARG2 (g / go-02
                  :ARG0 p
                  :ARG4 (c2 / company
                        :name (n / name
                              :op1 ""Argos""))
                  :part-of (s2 / shop-01
                        :ARG0 p
                        :ARG1 (f / food))
                  :ARG1-of (c3 / check-01
                        :ARG0 (p2 / police)
                        :ARG1-of (s3 / start-01
                              :ARG0 p2
                              :time (n2 / now))))
            :mod (o / only))
      :ARG1 (h / have-polarity-91
            :ARG2 -))"
"(m / multi-sentence
      :snt1 (v / vulnerable-01
            :ARG1 (p / person
                  :mod (e / elderly))
            :ARG2 (s / scam-01)
            :time (u / use-01
                  :ARG0 p
                  :ARG1 (c / computer))
            :mod (e2 / especially))
      :snt2 (a / and
            :op1 (s2 / share-01
                  :polite +
                  :mode imperative
                  :ARG0 (y / you)
                  :ARG1 (l / link
                        :mod (t / this))
                  :ARG2 (p2 / person
                        :ARG1-of (k / know-02
                              :ARG0 y)
                        :mod (o / old))
                  :op2 (r / recommend-01
                        :mode imperative
                        :polite +
                        :ARG0 y
                        :ARG1 (s3 / subscribe-01
                              :ARG0 p2
                              :ARG1 (b / blog-01
                                    :ARG0 (g / government-organization
                                          :name (n / name
                                                :op1 ""FTC""))
                                    :medium (u2 / url-entity
                                          :value ""https://www.consumer.gov/blog.html"")))
                        :ARG2 p2))))"
"(m / mean-01
      :polarity -
      :ARG1 (s / suppose-02
            :ARG1 (w / we)
            :ARG2 (a / apart
                  :op1 (d / distance-quantity
                        :quant 6
                        :unit (f / foot))
                  :location (s2 / store
                        :mod (g / grocery))))
      :ARG2 (p / possible-01
            :polarity -
            :ARG1 (a2 / and
                  :op1 (c / contact-01
                        :ARG0 w
                        :manner (e / eye))
                  :op2 (s3 / say-01
                        :ARG0 w
                        :ARG1 (h / hello))
                  :ARG1-of (r / resemble-01
                        :ARG2 (b / being
                              :mod (h2 / human)
                              :ARG1-of (n / normal-02)
                              :mod (f2 / fucking
                                    :mode expressive)))))
      :mod (j / just))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (o / offer-01
                  :ARG0 (ii / i)
                  :ARG1 (p / price-01
                        :ARG1-of (r / reduce-01)))
            :op2 (a2 / available-02
                  :ARG2 (t / team
                        :ARG0-of (r2 / respond-01)
                        :poss ii)
                  :frequency (r3 / rate-entity-91
                        :ARG1 (t2 / temporal-quantity
                              :quant 24
                              :unit (h / hour))
                        :ARG2 (t3 / temporal-quantity
                              :quant 1
                              :unit (d / day)))))
      :snt2 (t4 / take-01
            :ARG0 (ii2 / i)
            :ARG1 (a3 / and
                  :op1 (p2 / product
                        :name (n / name
                              :op1 ""Cashapp""))
                  :op2 (p3 / product
                        :name (n2 / name
                              :op1 ""Venmo""))
                  :op3 (p4 / product
                        :name (n3 / name
                              :op1 ""Zelle""))
                  :op4 (p5 / product
                        :name (n4 / name
                              :op1 ""Paypal"")))))"
"(s / sell-01
      :ARG1 (p / potato)
      :location (c / city
            :name (n / name
                  :op1 ""Hyderabad""))
      :ARG1-of (p2 / price-01
            :ARG2 (r / rate-entity-91
                  :ARG1 (m / monetary-quantity
                        :quant 90
                        :unit (r2 / rupee))
                  :ARG2 (m2 / mass-quantity
                        :quant 1
                        :unit (k / kilogram)))
            :ARG1-of (d / decide-01
                  :ARG0 (m3 / mafia))
            :time (n2 / now)))"
"(c / call-03
      :ARG0 (p / person
            :ARG0-of (a / advocate-01))
      :ARG1 (q / qualify-02
            :ARG1 (a2 / and
                  :op1 (p2 / person
                        :ARG0-of (w / work-01
                              :ARG1 (s / store
                                    :mod (g / grocery))))
                  :op2 (p3 / person
                        :ARG0-of (w2 / work-01
                              :ARG1 (p4 / process-01
                                    :ARG1 (f / food)))))
            :ARG2 (c2 / care-03
                  :ARG1 (c3 / child)
                  :mod (e / emergency)
                  :ARG1-of (s2 / same-01)
                  :ARG2-of (a3 / available-02
                        :ARG1 (p5 / person
                              :ARG0-of (w3 / work-01
                                    :ARG1 (m / medicine))
                              :mod (f2 / front-line)))))
      :time (c4 / close-01
            :ARG1 (a4 / and
                  :op1 (s3 / school)
                  :op2 (c5 / center
                        :mod (c6 / care-03
                              :ARG1 (c7 / child))))
            :ARG2-of (r / respond-01
                  :ARG1 (p6 / pandemic
                        :mod (v / virus)))))"
"(a / and
      :op1 (r / read-01
            :ARG0 (ii / i)
            :ARG1 (b / book
                  :name (n / name
                        :op1 ""Becoming"")
                  :poss (y / you)))
      :op2 (p / possible-01
            :ARG1 (r2 / relate-01
                  :ARG1 ii
                  :ARG2 (f / fear-01
                        :ARG0 y
                        :ARG1 (h / have-05
                              :ARG0 y
                              :ARG1 (c / child
                                    :ARG0-of (h2 / have-03
                                          :ARG1 (a2 / allergy
                                                :mod (f2 / food)))))))))"
"(m / multi-sentence
      :snt1 (s / seem-01
            :ARG1 (h / have-talking-point-07
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""Trump""))
                  :ARG1 (a / and
                        :op1 (h2 / head-02
                              :ARG0 (t / truck
                                    :ARG1-of (l / load-01
                                          :ARG2 (s2 / sanitize-01
                                                :ARG1 (h3 / hand))))
                              :ARG1 (s3 / state
                                    :name (n2 / name
                                          :op1 ""NY"")))
                        :op2 (b / be-located-at-91
                              :ARG1 (s4 / ship
                                    :mod (h4 / hospital))
                              :ARG2 (c / coast
                                    :mod (e / each))))
                  :mod (m2 / main))
            :time (w / watch-01
                  :ARG1 (c2 / conference
                        :mod (p2 / press)
                        :frequency (r / rate-entity-91
                              :ARG3 (t2 / temporal-quantity
                                    :quant 1
                                    :unit (d / day))))))
      :snt2 (g / guess-01
            :ARG0 (ii / i)
            :ARG1 (s5 / solve-01
                  :ARG1 (p3 / problem))
            :polarity (a2 / amr-unknown))
      :snt3 (v / virus
            :mod (c3 / coronavirus)))"
"(p / possible-01
      :ARG1 (g / get-01
            :ARG0 (p2 / person
                  :mod (c / country
                        :name (n / name
                              :op1 ""America"")))
            :ARG1 (m / mask)
            :ARG2 (a / amr-unknown))
      :ARG1-of (c2 / cause-01
            :ARG0 (a2 / and
                  :op1 (s / supply-01
                        :ARG0 (s2 / store)
                        :ARG1 (m2 / mask)
                        :ARG2 (t / thing
                              :mod (c3 / close-to
                                    :op1 (t2 / thing
                                          :quant 0))))
                  :op2 (d / drive-02
                        :ARG0 (p3 / person
                              :ARG0-of (h / hoard-01))
                        :ARG1 (t3 / thing
                              :ARG2-of (p4 / price-01))
                        :ARG2 (u / up)))))"
"(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (e / expect-01
                  :ARG0 (o / one)
                  :ARG1 (r / rise-01
                        :ARG1 (t / terminate-01
                              :ARG1 (d / deal-01
                                    :ARG2 (a / and
                                          :op1 (c / company)
                                          :op2 (c2 / company))))
                        :ARG1-of (c3 / cause-01
                              :ARG0 (r2 / rout-02
                                    :ARG1 (m2 / market
                                          :mod (c4 / coronavirus))
                                    :ARG0-of (d2 / drop-01
                                          :ARG1 (p2 / price-01
                                                :ARG1 (s / stock
                                                      :poss (c5 / company)))))))))
      :snt2 (c6 / contrast-01
            :ARG2 (s2 / see-01
                  :polarity -
                  :ARG0 (w / we)
                  :ARG1 (t2 / that)
                  :time (y / yet))))"
"(p / possible-01
      :ARG1 (h / help-01
            :ARG0 (a / all)
            :ARG1 (f / flatten-01
                  :ARG0 a
                  :ARG1 (c / curve-01)
                  :manner (a2 / and
                        :op1 (r / remain-01
                              :ARG1 a
                              :location (ii / indoors))
                        :op2 (l / limit-01
                              :ARG0 a
                              :ARG1 (c2 / contact-01
                                    :ARG0 a
                                    :ARG1 (o / other)))
                        :op3 (w / wash-01
                              :ARG0 a
                              :ARG1 (h2 / hand
                                    :part-of (w2 / we))
                              :ARG1-of (r2 / regular-02))
                        :op4 (m / maintain-01
                              :ARG0 a
                              :ARG1 (s / standard
                                    :topic (h3 / hygiene
                                          :ARG1-of (p2 / personal-02))
                                    :ARG1-of (g / good-02)))))))"
"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (l / lower-05
                  :ARG0 (a / and
                        :op1 (c2 / company
                              :name (n / name
                                    :op1 ""Whole""
                                    :op2 ""Foods""))
                        :op2 (c3 / company
                              :name (n2 / name
                                    :op1 ""Nordstrom"")))
                  :ARG1 (p / price-01
                        :ARG1 (ii / inventory
                              :mod (o / online)
                              :mod (e / entire)
                              :poss a))
                  :mod (e2 / even))
            :ARG2 (l2 / like-02
                  :ARG0 a
                  :ARG1 (p2 / pay-01
                        :ARG0 (ii2 / i)
                        :ARG1 (m2 / monetary-quantity
                              :quant 8
                              :unit (d / dollar))
                        :ARG3 (h / hot-dog))
                  :polarity (a2 / amr-unknown))
            :mod (p3 / person
                  :mode expressive
                  :name (n3 / name
                        :op1 ""Jesus"")))
      :snt2 (c4 / come-on-25
            :mode imperative
            :ARG1 (a3 / and
                  :op1 (c5 / company
                        :name (n4 / name
                              :op1 ""Amazon""))
                  :op2 (p4 / person
                        :name (n5 / name
                              :op1 ""Jeff""
                              :op2 ""Bezos"")))
            :ARG0-of (c6 / cause-01
                  :ARG1 (k / kid-01
                        :ARG0 a3
                        :ARG1 ii2))))"
"(ii / impact-01
      :ARG0 (c / cut-02
            :ARG0 (a / and
                  :op1 (s / state
                        :name (n / name
                              :op1 ""Texas""))
                  :op2 (c2 / country
                        :name (n2 / name
                              :op1 ""Saudi""
                              :op2 ""Arabia""))
                  :op3 (c3 / country
                        :name (n3 / name
                              :op1 ""Russia""))
                  :mod (a2 / all))
            :ARG1 (p / produce-01)
            :ARG2 (p2 / percentage-entity
                  :value 10))
      :ARG1-of (s2 / significant-02)
      :condition c)"
"(r / ready-01
      :ARG1 (ii / i)
      :ARG2 (s / start-01
            :ARG0 ii
            :ARG1 (s2 / shop-01
                  :ARG0 ii
                  :ARG3 (d / date-entity
                        :year 2020))))"
"(m / multi-sentence
      :snt1 (r / recommend-01
            :ARG1 (w / worry-02
                  :polarity -
                  :ARG0 (y / you)
                  :ARG1 (f / food))
            :condition (h / have-03
                  :ARG0 y
                  :ARG1 (m2 / money))
            :domain (l / line
                  :mod (b / bottom)))
      :snt2 (c / contrast-01
            :ARG1 (r2 / recommend-01
                  :ARG1 (b2 / buy-01
                        :ARG0 (y2 / you)
                        :ARG1 (f2 / food)
                        :manner (n / normal-02)))
            :ARG2 (r3 / recommend-01
                  :ARG1 (c2 / consider-02
                        :ARG0 y2
                        :ARG1 (d / donate-01
                              :ARG0 y2
                              :ARG2 (p / person
                                    :ARG0-of (a / afford-01
                                          :ARG1 (b3 / buy-01
                                                :ARG0 p
                                                :ARG1 f2)
                                          :ARG1-of (p2 / possible-01
                                                :polarity -))))
                        :mod (a2 / also)))))"
"(c / cause-01
      :ARG0 (c2 / combine-01
            :ARG1 (o / or
                  :op1 (y / yield
                        :li 1
                        :ARG1-of (h / have-degree-91
                              :ARG2 (h2 / high-02
                                    :ARG1 y)
                              :ARG3 (m / more)))
                  :op2 (p / price
                        :li 2
                        :ARG1-of (h3 / have-degree-91
                              :ARG2 (h4 / high-02
                                    :ARG1 p)
                              :ARG3 (m2 / more)))
                  :op3 (a / aid-01
                        :li 3
                        :ARG0 (g / government-organization
                              :ARG0-of (g2 / govern-01))
                        :ARG1-of (r / resemble-01
                              :ARG2 (p2 / pay-01
                                    :ARG3 (p3 / program
                                          :name (n / name
                                                :op1 ""Market""
                                                :op2 ""Facialilitation""
                                                :op3 ""Program""))
                                    :time (b / before
                                          :op1 (n2 / now)
                                          :duration (t / temporal-quantity
                                                :quant 2
                                                :unit (y2 / year))))))))
      :ARG1 (p4 / possible-01
            :ARG1 (h5 / have-degree-91
                  :ARG1 (r2 / return-06)
                  :ARG2 (g3 / good-02
                        :ARG1 r2)
                  :ARG3 (m3 / more)
                  :ARG4 (p5 / project-02
                        :ARG1 r2
                        :time (c3 / current)
                        :location (b2 / budget
                              :mod (d / date-entity
                                    :year 2020))))))"
"(c / change-01
      :ARG1 (a / and
            :op1 (a2 / attitude
                  :poss (p / person
                        :ARG0-of (c2 / consume-01)))
            :op2 (h / habit
                  :mod (m / media))
            :op3 (e / expect-01
                  :ARG0 p))
      :time (p2 / pandemic
            :name (n / name
                  :op1 ""COVID-19"")))"
"(m / multi-sentence
      :snt1 (n / need-01
            :ARG0 (ii / i)
            :ARG1 (a / assist-01
                  :ARG1 ii))
      :snt2 (a2 / and
            :op1 (w / work-01
                  :ARG0 (p / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 (p2 / person
                                    :ARG0-of (h2 / have-rel-role-91
                                          :ARG1 (ii2 / i)
                                          :ARG2 (m2 / mom)))
                              :ARG2 (b / boyfriend)))
                  :ARG2 (s / store
                        :mod (r / retail-01)))
            :op2 (d / diagnose-01
                  :ARG1 (p3 / person
                        :ARG0-of (h3 / have-rel-role-91
                              :ARG1 p
                              :ARG2 (c / co-worker)))
                  :ARG2 (d2 / disease
                        :name (n2 / name
                              :op1 ""COVID-19""))
                  :time (j / just)))
      :snt3 (c2 / contrast-01
            :ARG1 (q / quarantine-01
                  :polarity -
                  :ARG0 (t / they)
                  :ARG1 (p4 / person
                        :ARG1-of (e / employ-01))
                  :duration (t2 / temporal-quantity
                        :quant 2
                        :unit (w2 / week)))
            :ARG2 (s2 / send-03
                  :ARG0 t
                  :ARG1 p4
                  :ARG2 (s3 / store
                        :mod (o / other)))))"
"(o / okay-01
      :ARG0 (ii / i)
      :ARG1 (l / lock-down-06)
      :time (u / until
            :op1 (f / find-out-03
                  :ARG0 ii
                  :ARG1 (n / need-01
                        :ARG0 (w / we)
                        :ARG1 (p / permit-01
                              :ARG0 (p2 / police)
                              :ARG1 (o2 / or
                                    :op1 (g / go-02
                                          :ARG0 w
                                          :ARG4 o2
                                          :op1 (s / supermarket)
                                          :op2 (p3 / pharmacy)))
                              :op2 (p4 / put-out-10
                                    :ARG0 w
                                    :ARG1 (r / rubbish
                                          :poss w)))
                        :ARG2 w
                        :ARG1-of (s2 / start-01
                              :time (d / date-entity
                                    :day 4))))))"
"(w / warn-01
      :ARG0 (p / police)
      :ARG1 (t / trend-01
            :ARG1 (m / media
                  :mod (s / social))
            :ARG0-of (d / disturb-01)
            :ARG1-of (n / new-01)))"
"(d / dream-01
      :ARG0 (ii / i)
      :ARG1 (p / possible-01
            :ARG1 (s / stroll-01
                  :ARG0 ii
                  :ARG2 (a / aisle
                        :mod (e / every)
                        :ARG1-of (s2 / single-02)
                        :part-of (s3 / store-01
                              :ARG1 (g / grocery)))
                  :direction (d2 / down)))
      :time (d3 / date-entity
            :dayperiod (n / night)
            :mod (y / yesterday)))"
"(m / multi-sentence
      :snt1 (d / do-02
            :ARG0 (ii / i)
            :ARG1 (a / and
                  :op1 (ii2 / intro
                        :mod (p / publication
                              :name (n / name
                                    :op1 ""YouTube"")))
                  :op2 (s / sell-01
                        :mod (o / outro)))
            :ARG3 (o2 / or
                  :op1 (p2 / person
                        :ARG0-of (h / have-org-role-91
                              :ARG1 p
                              :ARG2 (p3 / publication
                                    :name (n2 / name
                                          :op1 ""YouTube""))
                              :ARG0 (p4 / person
                                    :ARG0-of (h2 / have-org-role-91
                                          :ARG1 p3
                                          :ARG2 (p5 / publication
                                                :name (n3 / name
                                                      :op1 ""YouTube""))
                                          :time (c / current))))
                        :ARG1-of (b / be-temporally-at-91
                              :ARG2 (u / upcoming)))
                  :op2 p4)
            :time (c2 / current))
      :snt2 (p6 / price-01
            :ARG2 (m2 / monetary-quantity
                  :quant 1
                  :unit (d2 / dollar)))
      :mod (h3 / hey
            :mode expressive))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (w / work-01
                  :ARG0 (ii / i)
                  :ARG2 (j / job
                        :ARG1-of (n / new-01)
                        :poss ii)
                  :duration (t / temporal-quantity
                        :quant 2
                        :unit (w2 / week))
                  :time (b / before
                        :op1 (l / lock-down-06)))
            :op2 (p / pay-01
                  :ARG2 ii
                  :ARG3 (d / do-02
                        :ARG0 ii
                        :ARG1 (n2 / nothing))
                  :time (n3 / now)))
      :snt2 (b2 / bad-07
            :polarity -
            :ARG1 (ii2 / it)
            :ARG1-of (c / cause-01
                  :ARG0 (a2 / and
                        :op1 (h / have-03
                              :ARG0 (ii3 / i)
                              :ARG1 (k / kid))
                        :op2 (s / see-01
                              :polarity -
                              :ARG0 ii3
                              :ARG1 (a3 / anyone)
                              :mod (a4 / anyway))))
            :ARG2-of (h2 / have-degree-91
                  :ARG1 ii2
                  :ARG3 (t2 / too))))"
"(a / and
      :op1 (f / fight-01
            :ARG0 (w / we
                  :mod (a2 / all))
            :ARG1 (d / disease
                  :name (n / name
                        :op1 ""Covid-19""
                        :op2 ""Deadly""
                        :op3 ""Virus""))
            :location (g / globe))
      :op2 (u / use-01
            :ARG0 (p / person
                  :ARG0-of (b / blackmarket-01))
            :ARG1 (p2 / platform
                  :poss (y / you))
            :ARG2 (s / sell-01
                  :ARG0 p
                  :ARG1 (a3 / and
                        :op1 (m / mask)
                        :op2 (s2 / sanitizer))
                  :ARG3 (m2 / monetary-quantity
                        :ARG1-of (h / high-02
                              :degree (v / very))
                        :ARG2-of (p3 / price-01)))
            :ARG0-of (ii / ignore-01
                  :ARG1 (n2 / notification
                        :source (g2 / government-organization
                              :ARG0-of (g3 / govern-01
                                    :ARG1 (c / country
                                          :name (n3 / name
                                                :op1 ""India""))))
                        :time (d2 / date-entity
                              :month 3
                              :day 19
                              :year 2002)))))"
"(f / false
      :domain (c / claim-01
            :ARG1 (c2 / contrast-01
                  :ARG1 (s / shelf
                        :ARG1-of (s2 / stock-01
                              :ARG1-of (w / well-09))
                        :mod (f2 / food
                              :mod (v / vegan)))
                  :ARG2 (c3 / clear-out-05
                        :ARG1 (ii / item
                              :mod (f3 / food)
                              :mod (o / other))
                        :time (r / round-05
                              :ARG1 (b / buy-01
                                    :purpose (p / panic-01)
                                    :time (c4 / coronavirus
                                          :mod (n / novel))))))))"
"(b / be-temporally-at-91
      :ARG2 (s / start-01
            :ARG0 (s2 / shop
                  :ARG1-of (l / local-02
                        :ARG2 (y / you)))
            :ARG1 (c / charge-01
                  :ARG0 s2
                  :ARG1 (p / price
                        :mod (e / exorbitant)))))"
"(m / multi-sentence
      :snt1 (l / lesson
            :ARG1-of (l2 / learn-01
                  :ARG0 (w / we)
                  :time (m2 / midst
                        :op1 (p / publication
                              :name (n / name
                                    :op1 ""Covid_19""))))
            :ARG1-of (k / key-02)
            :mod (s / some))
      :snt2 (n2 / need-01
            :li 2
            :ARG0 (w2 / we)
            :ARG1 (s2 / state
                  :ARG0-of (r / resiliate-01)
                  :mod (s3 / society)))
      :snt3 (m3 / matter-01
            :li 4
            :ARG1 (s4 / science))
      :snt4 (b / backbone
            :poss (s5 / society)
            :domain (p2 / person
                  :ARG0-of (w3 / work-01
                        :ARG1 (h / health)))))"
"(m / multi-sentence
      :snt1 (a / announce-01
            :ARG0 (c / company
                  :name (n / name
                        :op1 ""FINEOS""))
            :ARG1 (l / launch-01
                  :ARG0 c
                  :ARG1 (p / product
                        :name (n2 / name
                              :op1 ""COVID-19"")
                        :instrument-of (c2 / calculate-01
                              :ARG1 (l2 / leave-15
                                    :ARG3-of (p2 / pay-01))))))
      :snt2 (p3 / possible-01
            :ARG1 (l3 / learn-01
                  :ARG0 (p4 / person
                        :ARG0-of (c3 / consume-01))
                  :ARG1 (a2 / amount
                        :quant-of (l4 / leave-15
                              :ARG3-of (p5 / pay-01))
                        :ARG1-of (a3 / apply-02
                              :ARG2 (r / reason
                                    :mod p)))
                  :manner (a4 / answer-01
                        :ARG0 p4
                        :ARG1 (t / thing
                              :ARG1-of (q / question-01)
                              :quant (f / few))))))"
"(w / wonder-01
      :ARG0 (ii / i)
      :ARG1 (t / truth-value
            :polarity-of (e / eat-01
                  :ARG0 (w2 / we)
                  :location (o / out)
                  :time (b / before
                        :op1 (d / disease
                              :name (n / name
                                    :op1 ""coronavirus"")))
                  :ARG1-of (h / have-quant-91
                        :ARG2 (m / much)
                        :ARG3 (t2 / too))))
      :ARG1-of (c / cause-01
            :ARG0 (a / and
                  :op1 (l / late
                        :op1 (d2 / day)
                        :degree (s / somewhat))
                  :op2 (c2 / clean-out-03
                        :ARG1 (s2 / shelf
                              :part-of (s3 / store
                                    :mod (g / grocery))))
                  :op3 (c3 / close-01
                        :ARG1 (r / restaurant
                              :quant (m2 / many))))))"
"(c / cause-01
      :ARG0 (a / amr-unknown)
      :ARG1 (g / give-01
            :polarity -
            :ARG1 (g2 / glove)
            :ARG2 (p / person
                  :ARG0-of (c2 / check-01))))"
"(a / and
      :op1 (r / remain-01
            :ARG1 (o / office
                  :mod (p / post))
            :ARG3 (o2 / open-09
                  :ARG1 o))
      :op2 (o3 / out-there
            :domain (a2 / and
                  :op1 (p2 / person
                        :ARG0-of (p3 / post-02))
                  :op2 (p4 / person
                        :ARG0-of (d / drive-01))
                  :poss (w / we))
            :mod (s / still)
            :location-of (d2 / deliver-01
                  :ARG0 a2
                  :frequency (r2 / rate-entity-91
                        :ARG3 (t / temporal-quantity
                              :quant 1
                              :unit (d3 / day))))
            :concession (p5 / possible-01
                  :ARG1 (ii / impact-01
                        :ARG1 (s2 / service)
                        :quant (s3 / some)))))"
"(a / allow-01
      :ARG1 (g / go-02
            :ARG0 (y / you)
            :ARG4 (o / outside)
            :purpose (o2 / or
                  :op1 (r / run-02
                        :ARG0 y
                        :ARG1 (d / dog))
                  :op2 (h / hike-01
                        :ARG0 y
                        :ARG2 d)
                  :op3 (w / walk-01
                        :ARG0 y
                        :ARG1 d))))"
"(o / open-01
      :ARG0 (ii / i)
      :ARG1 (d / door
            :part-of (a / and
                  :op1 (e / entrance
                        :mod (m / main)
                        :part-of (b / building
                              :poss (w / we)))
                  :op2 (s / supermarket)))
      :purpose (p / protect-01
            :ARG0 ii
            :ARG1 ii
            :ARG2 (c / coronavirus))
      :time (s2 / since
            :op1 (d2 / date-entity
                  :month 3
                  :day 12)))"
"(m / multi-sentence
      :snt1 (s / swap-01
            :ARG0 (p / person
                  :mod (e / elderly)
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (ii / i)
                        :ARG2 (n / neighbor)))
            :ARG1 (t / tip-05
                  :ARG2 (g / grow-03
                        :ARG1 (a / and
                              :op1 (p2 / potato)
                              :op2 (c / courgette))))
            :ARG2 ii
            :medium (p3 / phone))
      :snt2 (a2 / and
            :op1 (g2 / give-01
                  :ARG0 (s2 / she)
                  :ARG1 (t2 / tip-05)
                  :ARG2 ii)
            :op2 (b / buy-01
                  :ARG0 (ii2 / i)
                  :ARG1 (t3 / thing
                        :ARG1-of (n2 / need-01
                              :ARG0 (a3 / and
                                    :op1 s2
                                    :op2 ii2)))
                  :ARG2 (o / or
                        :op1 (s3 / supermarket
                              :ARG1-of (l / local-02)
                              :location-of (s4 / shop-01
                                    :ARG0 ii2
                                    :frequency (r / rate-entity-91
                                          :ARG3 (t4 / temporal-quantity
                                                :quant 1
                                                :unit (w / week)))))
                        :op2 (c2 / company
                              :name (n3 / name
                                    :op1 ""Amazon""))))
            :ARG1-of (f / fair-01))
      :snt3 (g3 / grow-03
            :ARG1 (v / vegetable)
            :time (d / date-entity
                  :year 2019
                  :month 4)))"
"(m / multi-sentence
      :snt1 (u / urge-01
            :ARG0 (g / government-organization
                  :ARG0-of (a / administrate-01)
                  :mod (p / person
                        :name (n / name
                              :op1 ""Trump"")))
            :ARG1 (p2 / person
                  :ARG0-of (w / work-01
                        :ARG1 (s / supply-01
                              :ARG1 (f / food))))
            :ARG2 (s2 / step-up-03
                  :ARG1 p2
                  :purpose (m2 / meet-01
                        :ARG0 p2
                        :ARG1 (d / demand-01
                              :ARG1 f
                              :ARG1-of (g2 / grow-01)))))
      :snt2 (p3 / provide-01
            :ARG0 (y / you)
            :ARG1 (s3 / serve-01
                  :ARG0 y
                  :ARG2 (p4 / person
                        :mod (c / country
                              :name (n2 / name
                                    :op1 ""U.S."")))
                  :mod (g3 / great))
            :manner (h / have-org-role-91
                  :ARG0 y
                  :ARG1 (ii / infrastructure
                        :ARG1-of (c2 / critical-02))
                  :ARG2 (p5 / part)))
      :snt3 (a2 / and
            :op1 (s4 / show-up-02
                  :mode imperative
                  :ARG1 y)
            :op2 (d2 / do-02
                  :mode imperative
                  :ARG0 y
                  :ARG1 (j / job
                        :poss y))))"
"(m / multi-sentence
      :snt1 (b / bottle
            :consist-of (p / product
                  :name (n / name
                        :op1 ""Eucalyptus""
                        :op2 ""Sanitizer""))
            :source (c / company
                  :name (n2 / name
                        :op1 ""OdoBan""))
            :domain (t / this))
      :snt2 (k / kill-01
            :ARG0 (ii / it)
            :ARG1 (g / germ
                  :ARG1-of (ii2 / include-91
                        :ARG2 (g2 / germ)
                        :ARG3 (p2 / percentage-entity
                              :value 99.99)))))"
"(n / need-01
      :ARG0 (p / person
            :ARG0-of (s / sell-01
                  :ARG1 (d / drug)))
      :ARG1 (h / help-01
            :ARG1 p))"
"(h / hoard-01
      :polarity -
      :mode imperative
      :polite +
      :ARG0 (y / you)
      :ARG1 (p / paper
            :purpose (t / toilet))
      :ARG1-of (c / cause-01
            :ARG0 (c2 / create-01
                  :ARG0 p
                  :ARG1 (p2 / panic-01
                        :ARG1-of (n / need-01
                              :polarity -)))))"
"(t / tout-01
      :ARG1 (s / screen
            :mod (t2 / transparent)
            :ARG1-of (s2 / spring-up-02
                  :location (a / and
                        :op1 (t3 / till
                              :mod (s3 / supermarket))
                        :op2 (p / pharmacy)
                        :location (a2 / across
                              :op1 (c / country
                                    :name (n / name
                                          :op1 ""Germany""))))))
      :ARG3 (b / barrier
            :ARG1-of (s4 / simple-02
                  :ARG1-of (c2 / contrast-01
                        :ARG2 (e / effective-04
                              :ARG0 b
                              :ARG1 (c3 / counter-01
                                    :ARG1 (c4 / coronavirus)))))))"
"(m / multi-sentence
      :snt1 (j / join-04
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (w / we)
            :ARG2 (d / discuss-01
                  :ARG0 w
                  :ARG1 (a / and
                        :op1 (c / change-01
                              :ARG1 (a2 / and
                                    :op1 (p / person
                                          :ARG0-of (c2 / consume-01))
                                    :op2 (p2 / practice-01
                                          :ARG0 p)
                                    :location (c3 / country
                                          :name (n / name
                                                :op1 ""Japan""))
                                    :time (a3 / age
                                          :mod (p3 / person
                                                :name (n2 / name
                                                      :op1 ""Reiwa"")))))
                        :op2 (o / organization
                              :name (n3 / name
                                    :op1 ""COVID-19""))))
            :time (d2 / date-entity
                  :day 14
                  :month 4
                  :time ""18:00""
                  :weekday (t / tuesday)
                  :mod (n4 / next)))
      :snt2 (a4 / and
            :op1 (h / hold-04
                  :ARG1 (e / event
                        :mod (t2 / this))
                  :medium (o2 / online))
            :op2 (c4 / cohost-01
                  :ARG0 (p4 / person
                        :name (n5 / name
                              :op1 ""carterjmrn""))
                  :ARG1 e))
      :snt3 (r / register-02
            :mode imperative
            :ARG0 (y2 / you)
            :location (h2 / here
                  :mod (u / url-entity
                        :value ""https://""))))"
"(r / recommend-01
      :ARG1 (s / stop-03
            :ARG0 (a / and
                  :op1 (c / company
                        :name (n / name
                              :op1 ""Amazon""))
                  :op2 (c2 / company
                        :name (n2 / name
                              :op1 ""eBay"")))
            :ARG1 (p / person
                  :ARG0-of (s2 / sell-01))
            :ARG2 (a2 / and
                  :op1 (h / hoard-01
                        :ARG0 p)
                  :op2 (g / gouge-02
                        :ARG0 p
                        :ARG1 (t / thing
                              :ARG2-of (p2 / price-01))))))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :quant (f / few))
            :ARG1 (e / end-01
                  :domain (ii / it)))
      :snt2 (t / think-01
            :ARG0 (ii2 / i)
            :ARG1 (g / go-on-15
                  :ARG1 (l / live-01
                        :ARG0 (w / we
                              :mod (a / all))
                        :ARG1 (l2 / life
                              :mod (t2 / trivial)
                              :poss w)
                        :time (u / until
                              :op1 (m2 / moment
                                    :ord (o / ordinal-entity
                                          :value ""-1"")
                                    :subevent-of (d / demise
                                          :poss w)
                                    :time-of (r / realize-01
                                          :ARG0 w
                                          :ARG1 (s2 / spend-02
                                                :ARG0 w
                                                :ARG1 (d2 / day
                                                      :poss w
                                                      :mod (l3 / last))
                                                :ARG2 (b / buy-01
                                                      :ARG0 w
                                                      :ARG1 (p2 / paper
                                                            :purpose (t3 / toilet)))
                                                :location (s3 / store
                                                      :mod (g2 / grocery)))))))
                  :concession (e2 / even-if
                        :op1 (e3 / end-01
                              :domain (ii3 / it))))))"
"(c / crazy-03
      :ARG1 (p / panic-01
            :mod (m / mass)
            :location (a / around
                  :op1 (w / world)))
      :polarity (a2 / amr-unknown)
      :mod (g / generation
            :ARG1-of (w2 / wicked-02)))"
"(s / see-01
      :ARG0 (c / country
            :name (n / name
                  :op1 ""Saudi""
                  :op2 ""Arabia""))
      :ARG1 (l / lose-02
            :ARG0 c
            :mod (h / huge))
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (p / plummet-01
                        :ARG1 (p2 / price-01
                              :ARG1 (o / oil)))
                  :op2 (f / force-01
                        :ARG0 (p3 / pandemic
                              :mod (v / virus
                                    :mod (c3 / coronavirus)))
                        :ARG2 (s2 / shut-down-05)))))"
"(m / multi-sentence
      :snt1 (h / hero
            :ARG1-of (r / real-04)
            :poss (p / pandemic)
            :domain (a / and
                  :op1 (p2 / person
                        :ARG1-of (e / employ-01
                              :ARG2 (s / store
                                    :mod (g / grocery))))
                  :op2 (p3 / person
                        :ARG0-of (d / drive-01
                              :ARG1 (t / truck)))
                  :ARG0-of (k / keep-01
                        :ARG1 (s2 / shelf
                              :ARG1-of (s3 / stock-01))
                        :time (p4 / panic-01
                              :mod (w / widespread)))
                  :op3 (p5 / person
                        :ARG0-of (f / farm-01)
                        :mod (c / country
                              :name (n / name
                                    :op1 ""America"")))
                  :op4 (a2 / and
                        :op1 (d2 / doctor)
                        :op2 (n2 / nurse)
                        :ARG0-of (w2 / work-01
                              :ARG1 (s4 / shift
                                    :quant 2))
                        :ARG0-of (r2 / risk-01)
                        :ARG2-of r2)))
      :snt2 (t2 / thank-01
            :ARG1 (y / you)))"
"(p / produce-01
      :ARG0 (f / factory
            :quant 18)
      :ARG1 (r / rate-entity-91
            :ARG1 (s / sanitizer
                  :quant (v / volume-quantity
                        :quant 1200000
                        :unit (l / liter)))
            :ARG2 (t / temporal-quantity
                  :quant 1
                  :unit (d / day)))
      :purpose (r2 / reduce-01
            :ARG0 f
            :ARG1 (s2 / spread-02
                  :ARG1 (d2 / disease
                        :name (n / name
                              :op1 ""Coronavirus""))
                  :location (c / country
                        :name (n2 / name
                              :op1 ""Ethiopia"")))))"
"(s / stock-up-02
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (a / and
            :op1 (b / bar
                  :mod (p / protein)
                  :mod (h / healthy)
                  :mod (d / delicious))
            :op2 (c / cookie)
            :ARG1-of (s2 / sell-01)
            :ARG1-of (c2 / contrast-01
                  :ARG2 (p2 / paper
                        :polarity -
                        :mod (t / toilet)))))"
"(b / benefit-01
      :ARG0 (f / fund-01
            :ARG0 (g / government-organization
                  :ARG0-of (g2 / govern-01))
            :ARG1 (o / organization
                  :ARG0-of (r / redistribute-01
                        :ARG1 (f2 / food))
                  :location (a / across
                        :op1 (c / country
                              :name (n / name
                                    :op1 ""England""))))
            :ARG2 (m / monetary-quantity
                  :quant 2500000
                  :unit (p / pound))
            :purpose (h / help-01
                  :ARG0 o
                  :ARG1 (a2 / and
                        :op1 (c2 / cut-02
                              :ARG0 o
                              :ARG1 (w / waste-01
                                    :ARG1 f2))
                        :op2 (r2 / redistribute-01
                              :ARG0 o
                              :ARG1 (s / stock
                                    :mod (s2 / surplus)
                                    :quant (u / up-to
                                          :op1 (m2 / mass-quantity
                                                :quant 14000
                                                :unit (t / ton))))
                              :time (o2 / outbreak-29
                                    :ARG1 (d / disease
                                          :name (n2 / name
                                                :op1 ""coronavirus"")))))))
      :ARG1 o)"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (g / go-02
                  :ARG0 (ii / i)
                  :ARG4 (s / supermarket
                        :poss ii
                        :ord (o / ordinal-entity
                              :value 1)
                        :mod (p / post
                              :op1 (o2 / outbreak-29
                                    :ARG1 (d / disease
                                          :name (n / name
                                                :op1 ""coronavirus"")))))
                  :mod (j / just))
            :op2 (e / empty-02
                  :ARG1 (a2 / aisle)
                  :ARG1-of (c / cause-01
                        :ARG0 (b / buy-01
                              :manner (p2 / panic-01)))))
      :snt2 (w / wonder-01
            :ARG0 (p3 / person)
            :ARG1 (t / thing
                  :ARG0-of (c2 / cause-01
                        :ARG1 (t2 / trust-01
                              :polarity -
                              :ARG0 (g2 / government-organization
                                    :ARG0-of (g3 / govern-01))
                              :ARG1 (d2 / detail-01
                                    :ARG1 (r / risk-01
                                          :ARG0 (w2 / we
                                                :mod (r2 / race
                                                      :mod (h / human)))
                                          :mod (e2 / every)))
                              :ARG2 (p4 / public))))))"
"(u / use-01
      :ARG0 (p / person)
      :ARG1 (a / and
            :op1 (w / wipe)
            :op2 (t / t-shirt)
            :op3 (m / material
                  :mod (o / other)))
      :ARG2 (r / result
            :ARG1-of (p2 / predict-01
                  :ARG1-of (p3 / possible-01)))
      :ARG1-of (c / cause-01
            :ARG0 (s / short-06
                  :ARG2 (p4 / paper
                        :purpose (t2 / toilet)))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (g / go-02
                  :ARG0 (ii / i)
                  :ARG4 (s / store
                        :mod (g2 / grocery))
                  :mod (j / just))
            :op2 (g3 / give-01
                  :polarity -
                  :ARG1 (g4 / glove
                        :mod (m2 / medicine))
                  :ARG2 (p / person
                        :ARG0-of (g5 / guard-01
                              :ARG1 (s2 / security)))))
      :snt2 (w / wrong-02
            :ARG1 (t / this)))"
"(m / multi-sentence
      :snt1 (g / go-02
            :ARG0 (y / you)
            :ARG4 (s / store
                  :mod (g2 / grocery))
            :time (l / lately)
            :polarity (a / amr-unknown))
      :snt2 (r / read-01
            :mode imperative
            :ARG0 y
            :ARG1 (b / blog-01
                  :ARG0 (ii / i))
            :purpose (f / find-out-03
                  :ARG0 y
                  :ARG1 (t / thing
                        :manner-of (g3 / go-06
                              :ARG0 (t2 / trip-03
                                    :ARG0 (w / we)))))))"
"(m / multi-sentence
      :snt1 (s / see-01
            :ARG0 (b / brand
                  :example (a / and
                        :op1 (c / company
                              :name (n / name
                                    :op1 ""VitaCoco""))
                        :op2 (c2 / company
                              :name (n2 / name
                                    :op1 ""Fringesport""))
                        :op3 (c3 / company
                              :name (n3 / name
                                    :op1 ""manitobaharvest""))))
            :ARG1 (d / demand-01
                  :ARG0 (c4 / company
                        :name (n4 / name
                              :op1 ""Amazon""))
                  :mod (h / huge))
            :time (s2 / switch-01
                  :ARG0 (p / person)
                  :ARG2 (a2 / and
                        :op1 (s3 / shop-01
                              :ARG0 p
                              :medium (o / online))
                        :op2 (w / work-out-03
                              :ARG0 p
                              :location (h2 / home))
                        :op3 (r / recipe
                              :mod (c5 / conscious
                                    :mod (h3 / health))))))
      :snt2 (s4 / see-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (t / thing
                  :manner-of (s5 / strike-01
                        :ARG0 (t2 / they)
                        :ARG1 (c6 / chord)
                        :ARG2 (c7 / change-01
                              :ARG1 (b2 / behave-01
                                    :ARG0 (p2 / person
                                          :ARG0-of (c8 / consume-01))))
                        :time (d2 / during)))))"
"(o / offer-01
      :ARG1 (a / and
            :op1 (e / employ-01
                  :ARG1 (p / person
                        :quant 8000
                        :ARG0-of (w / work-01)
                        :ARG0-of (l / lose-02
                              :ARG1 (j / job
                                    :poss p)
                              :ARG1-of (c / cause-01
                                    :ARG0 (l2 / law
                                          :name (n / name
                                                :op1 ""COVID-19"")))))
                  :ARG1-of (n2 / new-01))
            :op2 (t / train-01
                  :ARG2 p))
      :ARG3 (ii / initiative
            :ARG1-of (l3 / launch-01
                  :ARG0 (a2 / and
                        :op1 (w2 / we)
                        :op2 (g / government-organization
                              :ARG0-of (g2 / govern-01))))
            :purpose (k / keep-01
                  :ARG0 a2
                  :ARG1 (s / shelf
                        :part-of (s2 / supermarket))
                  :ARG2 (s3 / stock-01)
                  :time (p2 / pandemic))))"
"(m / multi-sentence
      :snt1 (t / team
            :mode expressive
            :degree (s / so))
      :snt2 (f / foster-01
            :ARG0 (c / company
                  :name (n / name
                        :op1 ""TrajectMobility"")
                  :mod c
                  :name n
                  :op1 ""Coronavirus""))
      :ARG1 (d / discover-01
            :ARG0 (w / we)
            :ARG1 (s2 / skill
                  :ARG1-of (n2 / new-01)
                  :poss (c2 / colleague)))
      :ARG2 w
      :snt3 (a / and
            :op1 (a2 / after
                  :op1 (w2 / work-out-03))
            :op2 (t2 / toiletpaper)
            :op3 (k / keep-on-08
                  :ARG1 (m2 / move-01))
            :op4 (s3 / stretch-01)
            :op5 (h / homework))
      :snt4 (u / url-entity
            :value ""https://t.co/s5IL6WP""))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (d / disable-01
                  :ARG1 (ii / i))
            :op2 (p / possible-01
                  :polarity -
                  :ARG1 (d2 / drive-01
                        :ARG0 ii))
            :op3 (c / cause-01
                  :ARG0 (p2 / panicker-01
                        :ARG0 (e / everyone))
                  :ARG1 (p3 / possible-01
                        :polarity -
                        :ARG1 (b / book-03
                              :ARG0 ii
                              :ARG1 (s / shop
                                    :medium (o / online))
                              :location (a2 / anywhere)))))
      :snt2 (s2 / survive-01
            :ARG0 (p4 / person
                  :ARG1-of (r / resemble-01
                        :ARG2 (ii2 / i))
                  :ARG0-of (r2 / rely-01
                        :ARG1 (d3 / deliver-01
                              :ARG1 (f / food)
                              :medium (o2 / online))))
            :ARG1 (a3 / amr-unknown)
            :time (p5 / possible-01
                  :ARG1 (g / get-01
                        :ARG0 (w / we)
                        :ARG1 (ii3 / item
                              :ARG1-of (e2 / essential-01)
                              :poss w)
                        :time (n / no-longer)))))"
"(c / cause-01
      :ARG0 (a / amr-unknown)
      :ARG1 (p / possible-01
            :polarity -
            :ARG1 (s / stop-01
                  :ARG0 (c2 / company
                        :name (n / name
                              :op1 ""Amazon""))
                  :ARG1 (p2 / person
                        :ARG0-of (g / gouge-02
                              :ARG2 (p3 / price-01
                                    :ARG1 (v / virus
                                          :mod (c3 / coronavirus))))))))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (ii / i)
                        :ARG2 (s2 / sister)))
            :ARG1 (h2 / have-03
                  :ARG0 (a / and
                        :op1 (c / company
                              :name (n / name
                                    :op1 ""Walmart""))
                        :op2 (c2 / company
                              :name (n2 / name
                                    :op1 ""Sam's""
                                    :op2 ""Club"")))
                  :ARG1 (l / line
                        :ARG1-of (l2 / long-03))
                  :time (a2 / already)
                  :time (d / date-entity
                        :time ""6:30"")
                  :purpose (w / wait-01
                        :ARG1 a
                        :ARG2 (g / get-05
                              :ARG1 a
                              :ARG2 (ii2 / inside)))))
      :snt2 (o / open-01
            :ARG1 (s3 / store
                  :name (n3 / name
                        :op1 ""Sam's""
                        :op2 ""Club""))
            :time (d2 / date-entity
                  :time ""9:00"")))"
"(r / recommend-01
      :ARG0 (g / government-organization
            :name (n / name
                  :op1 ""Department""
                  :op2 ""of""
                  :op3 ""Defense""))
      :ARG1 (a / and
            :op1 (s / supply-01
                  :ARG1-of (w / worth-01
                        :ARG2 (t / temporal-quantity
                              :quant 2
                              :unit (w2 / week))))
            :op2 (p / prescribe-02
                  :ARG1 (m / medicine)
                  :ARG2 (t2 / temporal-quantity
                        :quant 30
                        :unit (d / day))))
      :time (t3 / time))"
"(s / surge-01
      :frequency 3
      :ARG1 (m / monetary-quantity
            :ARG2-of (p / price-01
                  :ARG1 (f / food))
            :location (c / country
                  :name (n / name
                        :op1 ""India"")))
      :ARG1-of (c2 / cause-01
            :ARG0 (t / take-02
                  :ARG0 (c3 / chain
                        :mod (s2 / supply-01))
                  :ARG1 (h / hit-01
                        :ARG1 c3))))"
(a / amr-empty)
"(m / multi-sentence
      :snt1 (m2 / make-02
            :ARG0 (p / product
                  :name (n / name
                        :op1 ""Covid""
                        :op2 19))
            :ARG1 (h / hard-02
                  :ARG1 (a / afford-01
                        :ARG0 (ii / i)
                        :ARG1 (f / food)
                        :time (n2 / now
                              :mod (r / right)))))
      :snt2 (a2 / and
            :op1 (p2 / possible-01
                  :polarity -
                  :ARG1 (e / eat-01
                        :ARG0 (ii2 / i)
                        :manner (c / cheap-02
                              :ARG2-of (h2 / have-degree-91
                                    :ARG1 e
                                    :ARG3 (e2 / equal)
                                    :ARG4 (e3 / eat-01
                                          :ARG0 ii2
                                          :manner (u / usual)))))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (b / buy-01
                              :manner (p3 / panic-01)
                              :mod (a3 / all))))
            :op2 (o / obligate-01
                  :ARG1 ii2
                  :ARG2 (b2 / buy-01
                        :ARG0 ii2
                        :ARG1 (f2 / food
                              :ARG1-of (h3 / have-degree-91
                                    :ARG2 (e4 / expensive)
                                    :ARG3 (m3 / more))))))
      :snt3 (h4 / have-condition-91
            :polite +
            :ARG1 (d / DM-01
                  :mode imperative
                  :ARG0 (y / you)
                  :ARG2 (ii3 / i))
            :ARG2 (ii4 / interest-01
                  :ARG1 y))
      :snt4 (a4 / available-02
            :ARG2 (d2 / discount-01
                  :ARG1 (o2 / order-01
                        :prep-with (a5 / art
                              :quant (m4 / multiple))))))"
"(d / discuss-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Dr.""
                  :op2 ""Kurt""
                  :op3 ""Jetta"")
            :ARG0-of (f / found-01
                  :ARG1 (c / company
                        :name (n2 / name
                              :op1 ""TABS""
                              :op2 ""Analytics""))))
      :ARG1 (a / and
            :op1 (a2 / affect-01
                  :ARG0 (l / law
                        :name (n3 / name
                              :op1 ""COVID-19""))
                  :ARG1 (ii / issue-02
                        :ARG0 (c2 / chain
                              :mod (s / supply-01))))
            :op2 (ii2 / increase-01
                  :ARG1 (d2 / demand-01
                        :ARG1 (g / good
                              :mod (c3 / company
                                    :name (n4 / name
                                          :op1 ""CPG"")))
                        :location (r / retail-01)))))"
"(s / say-01
      :ARG0 (ii / i)
      :ARG1 (a / and
            :op1 (s2 / sorry-01
                  :ARG1 ii)
            :op2 (u / understand-01
                  :polarity -
                  :ARG0 ii
                  :ARG1 (t / thing
                        :ARG1-of (s3 / say-01
                              :ARG0 (y / you)
                              :ARG1-of (t2 / try-01
                                    :ARG0 y)))))
      :ARG2 (p / person
            :name (n / name
                  :op1 ""CyTrash""))
      :ARG3 p
      :name n
      :op1 ""Diane_16"")"
"(m / multi-sentence
      :snt1 (l / lead-02
            :ARG0 (a / and
                  :op1 (p / person
                        :name (n / name
                              :op1 ""Peter""
                              :op2 ""Wark"")
                        :ARG0-of (h / have-org-role-91
                              :ARG2 (p2 / professor)))
                  :op2 (p3 / person
                        :name (n2 / name
                              :op1 ""Peter""
                              :op2 ""Middleton"")
                        :ARG0-of h))
            :ARG1 (s / session
                  :name (n3 / name
                        :op1 ""Consumer""
                        :op2 ""Connect""
                        :op3 ""Session"")
                  :topic (a2 / and
                        :op1 (p4 / product
                              :name (n4 / name
                                    :op1 ""COVID""
                                    :op2 19))
                        :op2 (p5 / product
                              :name (n5 / name
                                    :op1 ""CF""))))
            :time (d / date-entity
                  :dayperiod (n6 / night)
                  :mod (t / tomorrow))
            :time (d2 / date-entity
                  :time ""16:00""
                  :timezone ""AEDT""))
      :snt2 (g / get-04
            :ARG0 (y / you)
            :ARG1 (a3 / answer-01
                  :ARG1 (q / question-01
                        :ARG0 y)
                  :manner (o / or
                        :op1 (c / click-01
                              :ARG0 y
                              :ARG1 (b / box
                                    :name (n7 / name
                                          :op1 ""Consumers""
                                          :op2 ""Connect"")))
                        :op2 (e / enter-02
                              :ARG0 y
                              :ARG1 (a4 / and
                                    :op1 (e2 / email)
                                    :op2 (p6 / password)
                                    :poss y))
                        :op3 (s2 / sign-up-03
                              :ARG0 y)))))"
"(r / release-01
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG2 (o / officer
                        :mod (c / chief)
                        :mod (e / executive))))
      :ARG1 (u / update-02
            :ARG2-of (ii / include-01
                  :ARG1 (a / and
                        :op1 (d / directive
                              :topic (p2 / policy-01
                                    :ARG2 (l / liquor))
                              :ARG1-of (n / new-01))
                        :op2 (o2 / overview
                              :topic (s / support-01
                                    :ARG0 (a2 / and
                                          :op1 (g / government-organization
                                                :ARG0-of (g2 / govern-01)
                                                :mod (f / federal))
                                          :op2 (g3 / government-organization
                                                :ARG0-of (g4 / govern-01)
                                                :mod (p3 / province)))))
                        :op3 (ii2 / information
                              :source (w / webinar
                                    :mod (o3 / organization
                                          :name (n2 / name
                                                :op1 ""BCWI""))))))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (g / give-01
                  :ARG0 (c / corporation)
                  :ARG1 (r / raise-01
                        :ARG2 (p / permanent))
                  :ARG2 (p2 / person
                        :ARG1-of (e / employ-01
                              :ARG0 c)
                        :mod (a2 / all)))
            :op2 (p3 / pay-01
                  :ARG0 c
                  :ARG2 p2
                  :ARG3 (s / serve-01
                        :ARG2 p2
                        :mod (e2 / essential)))
            :condition (r2 / recognize-02
                  :ARG0 c
                  :ARG1 (v / value-01
                        :ARG1 p2
                        :ARG1-of (ii / instead-of-91
                              :ARG2 (a3 / and
                                    :op1 (p4 / profit-01
                                          :ARG0 c
                                          :mod (r3 / record))
                                    :op2 (p5 / price-01
                                          :ARG1 (s2 / stock)))))))
      :snt2 (h / have-condition-91
            :ARG1 (p6 / possible-01
                  :ARG1 (h2 / have-degree-91
                        :ARG1 (t / this)
                        :ARG2 (b / bad-07
                              :ARG1 t)
                        :ARG3 (m2 / more
                              :quant (a4 / amr-unknown))))
            :ARG2 (t2 / they
                  :polarity -)))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (c / check-01
                  :ARG0 (g / guard
                        :location (g2 / gate
                              :poss (s / store
                                    :name (n / name
                                          :op1 ""Basweswarnagar""
                                          :op2 ""BLR""
                                          :op3 ""Reliance""
                                          :op4 ""Fresh""))))
                  :ARG1 (b / bill)
                  :mod (j / just))
            :op2 (u / use-01
                  :polarity -
                  :ARG0 g
                  :ARG1 (t / thermometer))
            :ARG0-of (s2 / show-01
                  :ARG1 (l / lack-01
                        :ARG0 g
                        :ARG1 (s3 / serious-01
                              :ARG1 g
                              :ARG2 (s4 / situation
                                    :ARG0-of (a2 / alarm-01))))))
      :snt2 (r / recommend-01
            :ARG1 (h / have-03
                  :ARG0 (c2 / chain
                        :ARG0-of (r2 / retail-01)
                        :mod (b2 / big
                              :mod (s5 / such)))
                  :ARG1 (a3 / attitude
                        :ARG1-of (g3 / good-02
                              :ARG2-of (h2 / have-degree-91
                                    :ARG1 a3
                                    :ARG3 (m2 / more)))
                        :beneficiary (c3 / company
                              :name (n2 / name
                                    :op1 ""Covid19""))))))"
"(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (ii / isolate-01
                  :ARG0 (a / and
                        :op1 (p2 / person
                              :mod (e / elderly))
                        :op2 (p3 / person
                              :mod (o / other)
                              :ARG1-of (v / vulnerable-01)))
                  :ARG1 a
                  :manner (s / self)
                  :time (w / weekend
                        :time-of (p4 / possible-01
                              :polarity -
                              :ARG1 (s2 / stock-up-02
                                    :ARG0 a
                                    :ARG1 (f / food)))))
            :manner (a2 / amr-unknown))
      :snt2 (a3 / and
            :op1 (s3 / strip-01
                  :ARG1 (s4 / supermarket)
                  :ARG2 (b / bare-02))
            :op2 (s5 / slot
                  :time-of (d / deliver-01
                        :ARG0 (s6 / supermarket
                              :ARG1-of (l / local-02)
                              :poss (ii2 / i)))
                  :time (d2 / date-entity
                        :month 3
                        :day 26)
                  :ARG1-of (h / have-degree-91
                        :ARG2 (e2 / early)
                        :ARG3 (m2 / most)))))"
(a / amr-empty)
"(a / and
      :op1 (c / check-out-05
            :ARG0 (ii / i)
            :ARG1 (c2 / company
                  :mod (f / food
                        :ARG1-of (d / dry-08
                              :ARG0 (f2 / freeze-01)))))
      :op2 (s / seem-01
            :ARG1 (o / or
                  :op1 (s2 / sell-out-03
                        :ARG1 (e / everyone))
                  :op2 (o2 / out-05
                        :ARG1 e
                        :ARG2 (s3 / stock-01
                              :ARG0 e))
                  :op3 (b / backlog-00
                        :ARG1 e
                        :duration (m / multiple
                              :op1 (t / temporal-quantity
                                    :quant 1
                                    :unit (w / week)))))))"
"(f / find-01
      :ARG0 (p / poll-01
            :ARG0 (c / company
                  :name (n / name
                        :op1 ""YouGov"")))
      :ARG1 (c2 / consider-01
            :ARG0 (p2 / person
                  :mod (c3 / country
                        :name (n2 / name
                              :op1 ""Britain"")))
            :ARG1 (s / service
                  :mod (e / essential)
                  :domain (a / and
                        :op1 (n3 / newsagent)
                        :op2 (b / bank)
                        :op3 (s2 / store
                              :purpose (p3 / pet))))))"
"(a / and
      :op1 (s / speak-01
            :ARG0 (p / publication
                  :name (n / name
                        :op1 ""BBC""))
            :ARG2 (p2 / person
                  :ARG0-of (o / own-01
                        :ARG1 (b / business
                              :mod (s2 / small)))
                  :ARG1-of (a2 / affect-01
                        :ARG0 (l / law
                              :name (n2 / name
                                    :op1 ""COVID-19"")))))
      :op2 (e / examine-01
            :ARG0 p
            :ARG1 (c / change-01
                  :ARG1 (t / trend-01
                        :ARG1 (p3 / person
                              :ARG0-of (c2 / consume-01))
                        :ARG1-of (m / mean-01
                              :ARG2 (ii / increase-01
                                    :ARG1 (s3 / sell-01
                                          :medium (o2 / online))))))))"
"(t / throw-away-07
      :ARG0 (s / store
            :mod (g / grocery)
            :location (s2 / state
                  :name (n / name
                        :op1 ""Pennsylvania"")))
      :ARG1 (f / food
            :ARG1-of (w / worth-01
                  :ARG2 (m / monetary-quantity
                        :quant 35000
                        :unit (d / dollar))))
      :time (a / after
            :op1 (c / cough-01
                  :ARG0 (w2 / woman)
                  :ARG1 f
                  :ARG1-of (h / have-purpose-91)))
      :ARG1-of (s3 / say-01
            :ARG0 (p / publication
                  :name (n2 / name
                        :op1 ""WNEP"")))
      :time (d2 / date-entity
            :day 18
            :month 3
            :year 2020))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (p / possible-01
                  :polarity -
                  :ARG1 (d / deliver-01
                        :ARG0 (b / bill-01
                              :ARG2 (ii / i)
                              :ARG3 (s / shop-01
                                    :ARG0 ii
                                    :medium (o / online)))
                        :ARG1 (g / good
                              :quant (m2 / many))))
            :op2 (s2 / substitute-01
                  :polarity -
                  :ARG1 g))
      :snt2 (t / thank-01
            :ARG0 (ii2 / i)
            :ARG1 (y / you
                  :ARG0-of (b2 / buy-01
                        :mod (p2 / panic))
                  :mod (l / low-life)))
      :snt3 (a2 / and
            :op1 (v / vulnerable-01
                  :ARG1 (ii3 / i
                        :age (t2 / temporal-quantity
                              :quant 44
                              :unit (y2 / year))))
            :op2 (ii4 / isolate-01
                  :ARG1 ii3
                  :ARG2 ii3
                  :duration (t3 / temporal-quantity
                        :quant 3
                        :unit (m3 / month))))
      :snt4 (c / cope-01
            :ARG0 (ii5 / i)
            :ARG1 (a3 / amr-unknown))
      :snt5 (v2 / virus
            :name (n / name
                  :op1 ""Corovid19"")))"
"(b / become-01
      :ARG1 (a / and
            :op1 (c / company
                  :ARG0-of (p / provide-01
                        :ARG1 (h / healthcare)))
            :op2 (p2 / person
                  :ARG0-of (d / drive-01
                        :ARG1 (t / truck)))
            :op3 (p3 / person
                  :ARG1-of (e / employ-01
                        :ARG0 (s / store
                              :mod (g / grocery)))))
      :ARG2 (h2 / have-degree-91
            :ARG1 a
            :ARG2 (ii / important-01
                  :ARG1 a)
            :ARG3 (m / more)
            :ARG4 (p4 / person
                  :ARG1-of (f / fame-01)))
      :time (a2 / after
            :quant (u / up-to
                  :op1 (t2 / temporal-quantity
                        :quant 1
                        :unit (w / week)))))"
"(h / have-concession-91
      :ARG1 (f / fall-01
            :ARG1 (s / share-01
                  :ARG1 (c / company
                        :mod (c2 / chemical))
                  :ARG1-of (l / list-01
                        :location (c3 / country
                              :name (n / name
                                    :op1 ""US"")))))
      :ARG2 (e / even-as
            :op1 (r / rise-01
                  :ARG1 (p / price-01
                        :ARG1 (o / oil))
                  :ARG2 (t / temporal-quantity
                        :quant 2
                        :unit (d / day))
                  :ARG1-of (c4 / cause-01
                        :ARG0 (p2 / prospect-02
                              :ARG1 (p3 / possible-01
                                    :ARG1 (r2 / reach-01
                                          :ARG0 (c5 / company
                                                :ARG0-of (p4 / produce-01
                                                      :ARG1 (o2 / oil))
                                                :ARG1-of (m / major-02)
                                                :poss (w / world))
                                          :ARG1 (d2 / deal-01
                                                :ARG0 c5
                                                :ARG2 (l2 / limit-01
                                                      :ARG0 c5
                                                      :ARG1 (o3 / output))))))))))"
"(s / struggle-02
      :ARG0 (p / program
            :mod (f / food)
            :ARG1-of (l / local-02))
      :ARG1 (k / keep-up-05
            :ARG0 p
            :ARG1 (d / demand-01
                  :ARG1 f)))"
"(b / begin-01
      :ARG1 (d / die-01
            :ARG1 (p / person
                  :ARG0-of (w / work-01
                        :ARG1 (g / grocery)))
            :ARG1-of (c / cause-01
                  :ARG0 (c2 / coronavirus))))"
"(p / possible-01
      :ARG1 (s / see-01
            :ARG0 (l / level
                  :degree-of (u / understand-01
                        :ARG0 (c / community)
                        :ARG1 (o / order
                              :topic (m / move-01
                                    :ARG1-of (r / restrict-01)))))
            :ARG1 (e / empty-02
                  :ARG1 (s2 / shelf
                        :part-of (s3 / supermarket
                              :poss c))
                  :degree (s4 / so))))"
"(t / trigger-01
      :ARG0 (h / hike-02
            :ARG1 (m / monetary-quantity
                  :ARG2-of (p / price-01
                        :ARG1 (s / supermarket)))
            :ARG1-of (c / cause-01
                  :ARG0 (b / buy-01
                        :ARG1 (c2 / coronavirus)
                        :manner (p2 / panic-01))))
      :ARG1 (p3 / person
            :ARG0-of (r / retail-01)
            :ARG0-of (p4 / plead-01
                  :ARG2 (c3 / calm-03))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (o / obligate-01
                  :ARG1 (ii / i)
                  :ARG2 (u / use-01
                        :ARG0 ii
                        :ARG1 (c / card
                              :mod (c2 / credit)
                              :poss ii)
                        :ARG2 (b / buy-01
                              :ARG0 ii
                              :ARG1 (g / grocery)
                              :frequency (r / rate-entity-91
                                    :ARG3 (t / temporal-quantity
                                          :quant 1
                                          :unit (d / day)))
                              :purpose (p / possible-01
                                    :ARG1 (s / stock-up-02
                                          :ARG0 ii
                                          :ARG1 (f / food
                                                :mod (k / kind
                                                      :mod (s2 / some))))
                                    :mod (j / just)))))
            :op2 (o2 / obligate-01
                  :ARG1 ii
                  :ARG2 (s3 / seek-01
                        :ARG0 ii
                        :ARG1 (t2 / treat-03
                              :ARG1 ii
                              :ARG2 (p2 / problem
                                    :ARG1-of (r2 / relate-01
                                          :polarity -
                                          :ARG2 (l / law
                                                :name (n / name
                                                      :op1 ""COVID-19""))))
                              :mod (m2 / medicine)))))
      :snt2 (p3 / possible-01
            :ARG1 (u2 / use-01
                  :ARG0 (ii2 / i)
                  :ARG1 (a2 / and
                        :op1 (h / help-01)
                        :op2 (a3 / assist-01)
                        :mod (s4 / some))
                  :ARG1-of (r3 / real-04))))"
"(m / multi-sentence
      :snt1 (h / hold-up-11
            :ARG1 (a / and
                  :op1 (e / entertain-01)
                  :op2 (c / connect-01))
            :ARG3 (n / need-01
                  :mod (b / basic))
            :ord (o / ordinal-entity
                  :value 1)
            :ARG1-of (c2 / cause-01
                  :ARG0 (p / pandemic)))
      :snt2 (r / reveal-01
            :ARG0 (p2 / person
                  :name (n2 / name
                        :op1 ""Anand""
                        :op2 ""Siddiqui"")
                  :ARG0-of (h2 / have-org-role-91
                        :ARG1 (c3 / company
                              :name (n3 / name
                                    :op1 ""Insight""
                                    :op2 ""and""
                                    :op3 ""Analytics""))
                        :ARG2 (p3 / president
                              :mod (v / vice)
                              :mod (g / globe))))
            :ARG1 (b2 / behave-01
                  :ARG0 (p4 / person
                        :ARG0-of (c4 / consume-01))
                  :ARG1 (s / search-01
                        :ARG0 p4)
                  :mod (r2 / real-time)
                  :ARG1-of (s2 / see-01
                        :ARG1-of (c5 / cause-01
                              :ARG0 (p5 / pandemic))))
            :medium (p6 / publication
                  :name (n4 / name
                        :op1 ""The""
                        :op2 ""Student""
                        :op3 ""Room""))))"
"(e / explain-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Joe""
                  :op2 ""Thacker"")
            :ARG0-of (h / have-org-role-91
                  :ARG1 (c / company
                        :name (n2 / name
                              :op1 ""Fusion""
                              :op2 ""Analytics""))
                  :ARG2 (p2 / president))
            :ARG0-of (b / blog-01
                  :mod (g / guest)))
      :ARG1 (a / and
            :op1 (t / thing
                  :manner-of (ii / influence-01
                        :ARG0 (p3 / product
                              :name (n3 / name
                                    :op1 ""COVID""
                                    :op2 19))
                        :ARG1 (h2 / habit
                              :mod (p4 / person
                                    :ARG0-of (c2 / consume-01)))))
            :op2 (t2 / thing
                  :manner-of (p5 / possible-01
                        :ARG1 (p6 / prepare-02
                              :ARG0 (r / retailer)
                              :ARG2 (a2 / and
                                    :op1 (c3 / challenge-01)
                                    :op2 (o / opportunity)
                                    :mod (t3 / this)))))))"
"(c / call-on-05
      :ARG0 (g / government-organization
            :name (n / name
                  :op1 ""Ministry""
                  :op2 ""of""
                  :op3 ""Commerce""
                  :op4 ""and""
                  :op5 ""Industry""))
      :ARG1 (a / and
            :op1 (ii / institution)
            :op2 (c2 / company)
            :ARG0-of (w / work-01
                  :ARG1 (a2 / area
                        :mod (d / deliver-01
                              :ARG2 (h / home)))))
      :ARG2 (e / engage-01
            :ARG1 a
            :ARG2 (ii2 / initiative
                  :name (n2 / name
                        :op1 ""Tasawwuq_ min_baitik"")
                  :ARG1-of (m / mean-01
                        :ARG2 (s / shop-01
                              :ARG0 (y / you)
                              :location (h2 / home
                                    :poss y)))
                  :ARG1-of (l / launch-01
                        :time (w2 / week
                              :mod (l2 / last))
                        :medium (a3 / account
                              :mod (p / publication
                                    :name (n3 / name
                                          :op1 ""Twitter""))
                              :poss g)))))"
"(c / cause-01
      :ARG0 (a / amr-unknown)
      :ARG1 (h / have-degree-91
            :ARG1 (p / person)
            :ARG2 (c2 / confident-01
                  :ARG1 p
                  :ARG2 (r / rebound-01
                        :ARG1 (s / sentiment
                              :mod (p2 / person
                                    :ARG0-of (c3 / consume-01)))
                        :ARG4 (l / level
                              :time (p3 / previous))))
            :ARG3 (s2 / so)))"
"(b / be-temporally-at-91
      :ARG2 (b2 / bore-02
            :ARG1 (p / pet
                  :poss (y / you))
            :location (b3 / bathroom)))"
"(g / go-02
      :ARG0 (ii / i)
      :ARG4 (s / supermarket))"
"(m / multi-sentence
      :snt1 (e / expect-01
            :ARG0 (w / we)
            :ARG1 (a / adhere-02
                  :ARG0 (p / person)
                  :ARG1 (r / regulate-01
                        :ARG1 (l / lock-down-06)))
            :ARG0-of (c / cause-01
                  :ARG1 (p2 / possible-01
                        :ARG1 (h / harmful-02
                              :polarity -
                              :ARG0 (m2 / maintain-01
                                    :ARG1 (p3 / price
                                          :ARG1-of (n / normal-02))
                                    :ARG0-of (c2 / cause-01
                                          :ARG1 (e2 / encourage-01
                                                :ARG1 (p4 / person)
                                                :ARG2 (s / stay-01
                                                      :ARG1 p4
                                                      :location (h2 / home)))))))))
      :snt2 (s2 / strategy
            :domain (t / this)
            :ARG0-of (o / oppose-01
                  :ARG1 (l2 / lock-down-06))
            :polarity (a2 / amr-unknown)))"
"(p / possible-01
      :ARG1 (a / and
            :op1 (c / cater-01
                  :ARG0 (p2 / platform
                        :ARG0-of (d / deliver-01
                              :ARG1 (g / grocery))
                        :mod (o / online))
                  :ARG2 (d2 / demand-01
                        :ARG0 (p3 / person
                              :ARG0-of (c2 / consume-01)))
                  :ARG1-of (e / effective-04)
                  :time (r / restrict-01
                        :ARG0 (l / law
                              :name (n / name
                                    :op1 ""COVID19""))))
            :op2 (t / tackle-01
                  :ARG0 p2
                  :ARG1 (c3 / compete-02)))
      :polarity (a2 / amr-unknown)
      :time (v / venture-01
            :ARG0 (c4 / counterpart
                  :mod (a3 / and
                        :op1 (b / brick)
                        :op2 (m / mortar)))
            :ARG1 (m2 / market
                  :mod (o2 / online))))"
"(p / possible-01
      :ARG1 (s / spread-02
            :ARG1 (c / coronavirus)
            :manner (u / use-01
                  :ARG1 (s2 / supermarket)
                  :ARG2 (m / model))
            :extent (a / amr-unknown)))"
"(m / multi-sentence
      :snt1 (r / retreat-01
            :ARG1 (t / thing
                  :ARG2-of (p / price-01
                        :ARG1 (o / oil))
                  :mod (w / world-region
                        :name (n / name
                              :op1 ""West""
                              :op2 ""Indonesia"")))
            :time (t2 / today)
            :ARG1-of (c / cause-01
                  :ARG0 (w2 / weigh-04
                        :ARG0 (m2 / market)
                        :ARG1 (ii / impact-01
                              :ARG0 (c2 / cut-02
                                    :ARG0 (o2 / organization
                                          :name (n2 / name
                                                :op1 ""OPEC""))
                                    :ARG1 (p2 / produce-01))
                              :mod (p3 / potential)))))
      :snt2 (a / announce-01
            :ARG0 (c3 / company
                  :name (n3 / name
                        :op1 ""Baker""
                        :op2 ""Hughes""))
            :ARG1 (p4 / plan-01
                  :ARG0 c3
                  :ARG1 (c4 / charge-05
                        :ARG0 c3
                        :ARG1 (m3 / monetary-quantity
                              :quant 15000000000
                              :unit (d / dollar))
                        :ARG2 (ii2 / impair-01)))
            :mod (a2 / also)))"
"(c / contrast-01
      :ARG1 (n / need-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (s / skip-01
                  :ARG0 ii
                  :ARG1 (q / queue-01
                        :location (s2 / supermarket)))
            :ARG1-of (c2 / cause-01
                  :ARG0 (p / person
                        :ARG0-of (w / work-01)
                        :ARG1-of (k / key-02)
                        :domain ii)))
      :ARG2 (a / and
            :op1 (s3 / skip-01
                  :ARG0 (p2 / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 ii
                              :ARG2 (c3 / colleague))
                        :ARG0-of (s4 / shift-01))
                  :ARG1 q)
            :op2 (h2 / have-purpose-91
                  :ARG1 s3
                  :ARG2 s3)))"
"(c / continue-01
      :mode imperative
      :ARG0 (w / we
            :part (h / hand))
      :ARG1 (f / fight-01
            :ARG0 w
            :ARG1 (c2 / coronavirus)
            :manner (o / or
                  :op1 (w2 / wash-01
                        :ARG0 w
                        :ARG1 h
                        :ARG2 (a / and
                              :op1 (s / soap)
                              :op2 (w3 / water))
                        :ARG1-of (f2 / frequent-02))
                  :op2 (c3 / clean-01
                        :ARG0 w
                        :ARG1 h
                        :instrument (p / product
                              :ARG0-of (s2 / sanitize-01
                                    :ARG1 h)
                              :ARG1-of (b / base-02
                                    :ARG2 (a2 / alcohol)))))
            :manner (t / together)))"
(a / amr-empty)
"(t / terrible-01
      :ARG1 (c / company
            :name (n / name
                  :op1 ""Bell""))
      :ARG1-of (c2 / cause-01
            :ARG0 (r / raise-01
                  :ARG0 c
                  :ARG1 (p / price-01
                        :ARG0 c)
                  :time (a / and
                        :op1 (l / lose-02
                              :ARG0 (p2 / person)
                              :ARG1 (j / job
                                    :poss p2))
                        :op2 (s / struggle-01
                              :ARG0 p2
                              :time (a2 / already))))))"
"(a / and
      :op1 (m / manage-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Beth""
                        :op2 ""Ford"")
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (c / company
                              :name (n2 / name
                                    :op1 ""Land""
                                    :op2 ""O'Lakes""))
                        :ARG2 (o / officer
                              :mod (c2 / chief)
                              :mod (e / executive)))
                  :ARG0-of (h2 / have-org-role-91
                        :ARG1 (o2 / organization
                              :name (n3 / name
                                    :op1 ""Business""
                                    :op2 ""Roundtable""))
                        :ARG2 (m2 / member
                              :mod (b / board))))
            :ARG1 (v / volatile
                  :domain (d / demand-01
                        :ARG1 (p2 / product))))
      :op2 (u / urge-01
            :ARG0 p
            :ARG1 (c3 / consistency
                  :mod (b2 / between
                        :op1 (f / federal)
                        :op2 (s / state))
                  :topic (d2 / define-01
                        :ARG1 (s2 / service
                              :mod (e2 / essential))
                        :time (c4 / crisis
                              :mod (c5 / coronavirus))))))"
"(u / update-01
      :ARG1 (s / site
            :poss (a / and
                  :op1 (p / person
                        :ARG0-of (c / consume-01))
                  :op2 (b / business
                        :mod (s2 / small))))
      :ARG2 (ii / information
            :ARG1-of (r / relevant-01)
            :topic (l / law
                  :name (n / name
                        :op1 ""COVID""
                        :op2 19))))"
"(m / multi-sentence
      :snt1 (b / break-loose-14
            :ARG1 (h / hell
                  :mod (a / all))
            :condition (a2 / and
                  :op1 (a3 / affect-01
                        :ARG1 (p / produce-01
                              :ARG1 (f / food)))
                  :op2 (ii / increase-01
                        :ARG1 (p2 / price-01
                              :ARG1 (f2 / food)))))
      :snt2 (o / obligate-01
            :ARG1 (w / we)
            :ARG2 (ii2 / include-01
                  :ARG0 w
                  :ARG1 (a4 / and
                        :op1 (p3 / person
                              :ARG0-of (f3 / farm-01)
                              :mod (c / country
                                    :name (n / name
                                          :op1 ""America"")))
                        :op2 (p4 / person
                              :ARG0-of (r / ranch-01)
                              :mod c))
                  :ARG2 (p5 / package
                        :name (n2 / name
                              :op1 ""COVID-19"")
                        :ARG0-of (r2 / relieve-01))))
      :snt3 (c2 / cause-01
            :ARG0 (a5 / and
                  :op1 (r3 / restrict-01
                        :ARG1 (b2 / border))
                  :op2 (a6 / access-01
                        :ARG0 (p6 / person
                              :ARG0-of (f4 / farm-01)
                              :ARG0-of (m2 / migrate-01))
                        :ARG1 (r4 / resource)
                        :ARG1-of (l / limit-01)))
            :ARG1 (a7 / available-02
                  :polarity -
                  :ARG2 p6)))"
"(m / multi-sentence
      :snt1 (b / be-located-at-91
            :ARG1 (w / we)
            :ARG2 (h / here)
            :purpose (h2 / help-01
                  :ARG0 w
                  :ARG2 (y / you)
                  :time (t / time
                        :mod (d / difficult)
                        :mod (t2 / this))))
      :snt2 (v / visit-01
            :mode imperative
            :ARG0 (y2 / you)
            :ARG1 (w2 / website
                  :poss (w3 / we))
            :purpose (a / and
                  :op1 (l / learn-01
                        :ARG0 y2
                        :ARG1 (r / right-05
                              :ARG1 y2))
                  :op2 (f / find-01
                        :ARG0 y2
                        :ARG1 (r2 / resource
                              :ARG2-of (a2 / available-02
                                    :ARG1 y2))))))"
"(t / turn-02
      :ARG1 (p / palliative
            :mod (t2 / this)
            :ARG1-of (p2 / propose-01))
      :ARG2 (p3 / palliative
            :mod (s / sordid))
      :time (e / eventual))"
"(h / have-03
      :ARG0 (y / you)
      :ARG1 (p / problem)
      :time (p2 / possible-01
            :polarity -
            :ARG1 (g / get-04
                  :ARG0 y
                  :ARG1 (d / do-02
                        :ARG0 (t / they)
                        :ARG1 (b / basic
                              :ARG1-of (s / simple-02))))))"
"(a / and
      :op1 (n / name-01
            :ARG1 (ii / i)
            :ARG2 (p / person
                  :name (n2 / name
                        :op1 ""Bennett"")))
      :op2 (ii2 / involve-01
            :polarity -
            :ARG1 ii)
      :time (a2 / argue-02
            :ARG0 (p2 / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (y / you)
                        :ARG2 (f / friend)))
            :ARG1 (p3 / person
                  :ARG0-of (h2 / have-rel-role-91
                        :ARG1 p2
                        :ARG2 (g / girlfriend)))))"
"(j / jerk
      :mod (g / grade
            :mod ""A"")
      :domain (y / you)
      :condition (a / and
            :op1 (g2 / go-02
                  :ARG0 y
                  :ARG4 (s / store
                        :mod (g3 / grocery))
                  :time (t / today))
            :op2 (t2 / try-01
                  :ARG0 y
                  :ARG1 (h / hoard-01
                        :ARG0 y
                        :ARG1 (ii / item)))))"
"(m / multi-sentence
      :snt1 (d / decrease-01
            :ARG1 (p / price-01
                  :ARG1 (m2 / maize))
            :ARG2 (s / significant-02)
            :time (c / continue-01
                  :ARG1 (t / take-01
                        :ARG0 (o / outbreak-29
                              :ARG1 (d2 / disease
                                    :name (n / name
                                          :op1 ""COVID""
                                          :op2 19)))
                        :ARG1 (t2 / toll-02
                              :ARG1 o))))
      :snt2 (w / work-01
            :ARG0 (g / government-organization
                  :ARG0-of (g2 / govern-01))
            :ARG3 (s2 / sector
                  :ARG1-of (p2 / private-03))
            :mod (e / essential)
            :manner (t3 / together)
            :purpose (p3 / protect-01
                  :ARG0 g
                  :ARG1 (p4 / person
                        :ARG0-of (f / farm-01)
                        :poss (w2 / we)))))"
"(m / multi-sentence
      :snt1 (s / struggle-02
            :ARG0 (a / and
                  :op1 (c / chain
                        :ARG0-of (s2 / supply-01
                              :ARG1 (g / good
                                    :mod (r / retail-01))))
                  :op2 (c2 / chain
                        :ARG0-of (s3 / supply-01
                              :ARG1 (g2 / good
                                    :mod (p / person
                                          :ARG0-of (c3 / consume-01))))))
            :ARG1 (k / keep-up-05
                  :ARG0 a)
            :time (r2 / rely-01
                  :ARG0 a
                  :ARG1 (g3 / good
                        :source (a2 / area
                              :ARG1-of (q / quarantine-01)))
                  :mod (e / especially)))
      :snt2 (t / thing
            :manner-of (s4 / stay-01
                  :ARG3 (r3 / resilience))
            :location (h / here)))"
"(b / be-temporally-at-91
      :ARG1 (s / start-01
            :ARG0 (f / family
                  :mod (w / whole)
                  :poss (y / you))
            :ARG1 (p / panic-01
                  :ARG0 f
                  :ARG1-of (c / cause-01
                        :polarity -
                        :ARG0 (f2 / food))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (b2 / be-located-at-91
                              :ARG1 (p2 / person
                                    :quant 1
                                    :ARG1-of (ii / include-91
                                          :ARG2 (p3 / person
                                                :ARG0-of (h / have-org-role-91
                                                      :ARG1 f
                                                      :ARG2 (m / member)))))
                              :ARG2 (f3 / frontline)
                              :destination (h2 / hospital
                                    :name (n / name
                                          :op1 ""Covid 19"")))))))"
"(o / obligate-01
      :ARG2 (c / clean-01
            :ARG1 (a / and
                  :op1 (t / troll)
                  :op2 (b / basket)
                  :mod (s / supermarket)
                  :mod (a2 / all))
            :ARG1-of (r / regular-02)
            :purpose (p / prevent-01
                  :ARG1 (s2 / spread-02
                        :ARG1 (d / disease
                              :name (n / name
                                    :op1 ""coronavirus""))))))"
"(m / multi-sentence
      :snt1 (t / tune-in-02
            :ARG0 (y / you)
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""DJ""
                        :op2 ""ShUG""))
            :time (d / date-entity
                  :time ""15:00""
                  :timezone ""ET""
                  :mod (t2 / today))
            :medium (c / company
                  :name (n2 / name
                        :op1 ""Commishradio""))
            :condition (b / bore-02
                  :ARG1 y))
      :snt2 (p2 / play-11
            :ARG0 (h / he)
            :ARG1 (a / and
                  :op1 (h2 / hip-hop)
                  :op2 (r / rap)
                  :op3 (m2 / music
                        :mod (r2 / R&B))
                  :op4 (m3 / music
                        :mod (p3 / pop))
                  :op5 (m4 / music
                        :mod (t3 / trap)))))"
"(t / think-01
      :ARG0 (ii / i)
      :ARG1 (r / recommend-01
            :ARG1 (c / chain-01
                  :ARG0 (s / supermarket)
                  :ARG1 (t2 / trolley
                        :poss s)
                  :purpose (p / possible-01
                        :ARG1 (u / use-01
                              :ARG0 (p2 / person)
                              :ARG1 (b / basket)
                              :mod (o / only))
                        :purpose (s2 / stop-01
                              :ARG0 s
                              :ARG1 (b2 / buy-01
                                    :ARG0 p2
                                    :manner (p3 / panic-01)))))))"
"(r / report-01
      :polite +
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (s / spike-02
            :ARG0 (a / anyone)
            :ARG1 (p / price))
      :ARG2 (g / government-organization
            :name (n / name
                  :op1 ""Consumer""
                  :op2 ""Protection""
                  :op3 ""Agency""))
      :condition (s2 / see-01
            :ARG0 y
            :ARG1 s))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (p / percentage-entity
                  :value 65)
            :op2 (p2 / percentage-entity
                  :value 62)
            :domain (c / clear-01
                  :ARG1 (d / domain
                        :mod (p3 / preliminary)
                        :ARG2-of (a2 / auction-off-01))
                  :beneficiary (a3 / and
                        :op1 (c2 / city
                              :name (n / name
                                    :op1 ""Sydney""))
                        :op2 (c3 / city
                              :name (n2 / name
                                    :op1 ""Melbourne""))))
            :ARG1-of (h / have-degree-91
                  :ARG2 (l / low-04)
                  :ARG3 (m2 / more)
                  :ARG4 (a4 / and
                        :op1 (r / rate
                              :mod (c4 / clear-01)
                              :mod (f / final)
                              :mod (p4 / percentage-entity
                                    :value 58))
                        :op2 (r2 / rate
                              :mod c4
                              :mod (p5 / percentage-entity
                                    :value 57))))
            :ARG1-of (h2 / have-degree-91
                  :ARG2 (l2 / low-04)
                  :ARG3 (m3 / more
                        :ARG1-of (s / significant-02))
                  :ARG4 (a5 / and
                        :op1 (r3 / rate
                              :mod c4
                              :mod (p6 / percentage-entity
                                    :value 52))
                        :op2 (r4 / rate
                              :mod (c5 / clear-01)
                              :mod (p7 / percentage-entity
                                    :value 50))
                        :time (y / year
                              :mod (l3 / last)))))
      :snt2 (s2 / slow-01
            :ARG0 (c6 / coronav)
            :ARG1 (m4 / momentum
                  :mod (s3 / sell-01))
            :ARG1-of (s4 / significant-02)))"
"(p / press-01
      :ARG0 (c / country
            :name (n / name
                  :op1 ""UK""))
      :ARG2 (a / ahead
            :op1 (p2 / plan-01
                  :ARG0 c
                  :ARG1 (ii / immigrate-01)
                  :ARG1-of (b / base-02
                        :ARG2 (p3 / point))))
      :time (p4 / pandemic))"
"(o / or
      :op1 (c / call-02
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (h / helpline
                  :mod (c2 / council
                        :mod (c3 / county
                              :name (n / name
                                    :op1 ""Sefton"")))))
      :op2 (f / fill-in-03
            :mode imperative
            :ARG0 y
            :ARG1 (f2 / form
                  :mod (o2 / online)
                  :poss c2)
            :purpose (s / support-01
                  :ARG1 y))
      :condition (a / and
            :op1 (r / risk-01
                  :ARG0 y
                  :ARG2 (c4 / coronavirus)
                  :ARG1-of (h2 / high-02))
            :op2 (n2 / need-01
                  :ARG0 y
                  :ARG1 (h3 / help-01
                        :ARG1 (p / pick-up-04
                              :ARG0 y
                              :ARG1 (o3 / or
                                    :op1 (t / thing
                                          :ARG1-of (s2 / shop-01
                                                :ARG0 y))
                                    :op2 (m / medicine
                                          :poss y)))
                        :ARG2 y))))"
"(l / language
      :polarity -
      :name (n / name
            :op1 ""English"")
      :ARG1-of (s / standard-02)
      :domain (t / this))"
"(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (d / deliver-01
                  :ARG1 (g / grocery
                        :poss (y / you))
                  :ARG2 (d2 / doorstep
                        :poss y))
            :time (a / after
                  :op1 (n / now)
                  :quant (t / temporal-quantity
                        :quant 3
                        :unit (h / hour)
                        :mod (j / just))))
      :snt2 (s / stay-01
            :ARG1 (y2 / you)
            :ARG3 (s2 / safe-01
                  :ARG1 y2)
            :manner (a2 / and
                  :op1 (s3 / shop-01
                        :ARG0 y2
                        :medium (o / online))
                  :op2 (p2 / pay-01
                        :ARG0 y2
                        :ARG3 (s4 / supermarket
                              :location (h2 / home)
                              :poss y2)
                        :medium (o2 / online)))))"
"(s / start-01
      :ARG0 (ii / i)
      :ARG1 (o / organization
            :name (n / name
                  :op1 ""COVID19""
                  :op2 ""Health""
                  :op3 ""Literacy""
                  :op4 ""Project""))
      :purpose (e / ensure-01
            :ARG0 ii
            :ARG1 (l / leave-12
                  :ARG1 (n2 / no-one)
                  :ARG2 (s2 / sideline
                        :poss (p / pandemic
                              :mod (t / this))))))"
"(c / confuse-01
      :ARG1 (ii / i)
      :ARG2 (f / fame-01))"
(a / amr-empty)
"(m / multi-sentence
      :snt1 (d / decide-01
            :ARG0 (ii / i)
            :ARG1 (w / wear-01
                  :ARG0 ii
                  :ARG1 (g / gear
                        :ARG3-of (p / protect-01
                              :degree (f / full)))
                  :location (s / store
                        :mod (g2 / grocery))
                  :purpose (a / and
                        :op1 (s2 / see-01
                              :ARG0 ii
                              :ARG1 (t / thing
                                    :manner-of (r / react-01
                                          :ARG0 (p2 / person))))
                        :op2 (s3 / see-01
                              :ARG0 ii
                              :ARG1 (p3 / possible-01
                                    :ARG1 (f2 / feel-01
                                          :ARG0 ii
                                          :ARG1 (s4 / safe-01
                                                :ARG1 ii)))))))
      :snt2 (l / let-01
            :ARG1 (p4 / person
                  :quant 10
                  :manner (o / one-by-one))
            :destination (s5 / store)))"
"(m / multi-sentence
      :snt1 (n / need-01
            :ARG0 (p / person)
            :ARG1 (c / calm-down-02
                  :ARG1 p))
      :snt2 (a / and
            :op1 (w / work-01
                  :ARG0 (ii / i)
                  :ARG1 (s / store
                        :mod (g / grocery)))
            :op2 (m2 / madness
                  :domain w))
      :snt3 (c2 / contrast-01
            :ARG1 (n2 / need-01
                  :ARG0 (y / you)
                  :ARG1 (t / thing
                        :ARG1-of (h / have-quant-91
                              :ARG3 (e / enough)))
                  :duration (t2 / temporal-quantity
                        :quant 2
                        :unit (w2 / week))
                  :mod (o / only))
            :ARG2 (n3 / need-01
                  :polarity -
                  :ARG0 y
                  :ARG1 t
                  :duration (t3 / temporal-quantity
                        :quant 1
                        :unit (y2 / year))))
      :snt4 (h2 / have-03
            :ARG0 (w3 / we)
            :ARG1 (s2 / service
                  :ARG0-of (d / deliver-01)
                  :ARG0-of (d2 / deliver-01
                        :ARG2 y
                        :condition (r / run-out-05
                              :ARG1 (s3 / something)
                              :ARG2 y)))
            :mod (a2 / also)))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (t / telework-01
                  :ARG0 (ii / i)
                  :duration (t2 / temporal-quantity
                        :quant 5
                        :unit (d / day)))
            :op2 (t3 / temperature
                  :poss ii
                  :quant (t4 / temperature-quantity
                        :quant 98.2
                        :scale (c / celsius))))
      :snt2 (d2 / debate-01
            :ARG0 (ii2 / i)
            :ARG1 (r / recommend-01
                  :ARG1 (g / go-02
                        :ARG0 ii2
                        :ARG4 (o / or
                              :op1 (s / store
                                    :mod (g2 / grocery))
                              :op2 (p / person
                                    :ARG0-of (c2 / clean-01))))
                  :ARG2 ii2)))"
"(a / add-02
      :ARG0 (s / supermarket
            :name (n / name
                  :op1 ""Booths"")
            :location (l / location
                  :name (n2 / name
                        :op1 ""Hale""
                        :op2 ""Barns"")))
      :ARG1 (s2 / serve-01
            :ARG1 (a2 / and
                  :op1 (c / click-01)
                  :op2 (c2 / collect-01)))
      :time (w / week
            :mod (n3 / next))
      :ARG2-of (r / respond-01
            :ARG1 (l2 / law
                  :name (n4 / name
                        :op1 ""CODID""
                        :op2 19))))"
"(f / face-01
      :ARG0 (c / company
            :ARG0-of (m / manufacture-01)
            :ARG0-of (s / switch-01
                  :ARG2 (p / produce-01
                        :ARG0 c
                        :ARG1 (p2 / product
                              :ARG1-of (s2 / supply-01
                                    :ARG1-of (s3 / short-06
                                          :ARG1-of (c2 / cause-01
                                                :ARG0 (p3 / pandemic
                                                      :name (n / name
                                                            :op1 ""COVID-19"")))))))))
      :ARG1 (ii / issue-02
            :ARG0 (o / obligate-01
                  :ARG0 (l / law
                        :mod (p4 / person
                              :ARG0-of (c3 / consume-01))
                        :mod (c4 / country
                              :name (n2 / name
                                    :op1 ""Australia"")))
                  :ARG1 c)
            :quant (n3 / number)
            :ARG1-of (u / unique-01)))"
"(o / or
      :op1 (t / talk-01
            :polarity -
            :ARG0 (k / kid)
            :ARG1 (t2 / that))
      :op2 (b / behave-01
            :polarity -
            :ARG0 k
            :ARG1 t2))"
"(s / shame-02
      :ARG0 (c / city
            :poss (ii / i))
      :ARG1 ii
      :time (n / now
            :mod (r / right)))"
"(a / and
      :op1 (a2 / abide-01
            :polarity -
            :ARG0 (p / person)
            :ARG1 (r / rule
                  :mod (d / distance-quantity
                        :quant 6
                        :unit (f / foot)))
            :mod (e / even))
      :op2 (c / crowd-01
            :location (a3 / and
                  :op1 (p2 / produce)
                  :op2 (m / meat)
                  :op3 (c2 / chat-01
                        :location (d2 / department
                              :mod (d3 / dairy)))))
      :location (s / store
            :mod (g / grocery)
            :location (c3 / city
                  :name (n / name
                        :op1 ""LFK"")))
      :time (t / today))"
"(a / answer-01
      :ARG0 (w / we)
      :ARG1 (q / question-01
            :ARG0 (y / you)
            :ARG1 (r / range-01
                  :ARG3 (r2 / recommend-01
                        :ARG1 (c / clean-01
                              :ARG0 y
                              :ARG1 (a2 / and
                                    :op1 (p / package-01)
                                    :op2 (b / bag)))
                        :ARG2 y)
                  :ARG4 (t / thing
                        :manner-of (p2 / possible-01
                              :ARG1 (s / stay-01
                                    :ARG1 y
                                    :ARG3 (s2 / safe-01
                                          :ARG1 y)
                                    :location (s3 / supermarket
                                          :mod (c2 / country
                                                :name (n / name
                                                      :op1 ""Australia"")))
                                    :time (c3 / continue-01
                                          :ARG1 (c4 / crisis
                                                :mod (c5 / coronavirus)))))))
            :mod (a3 / all)))"
"(s / steal-01
      :ARG1 (t / thing
            :ARG0-of (d / dispense-01
                  :ARG1 (s2 / sanitizer
                        :beneficiary (h / hand))))
      :ARG2 (a / airport
            :name (n / name
                  :op1 ""KCI""
                  :op2 ""Airport""))
      :time (w / week
            :mod (t2 / this)))"
"(m / miss-01
      :ARG0 (s / shelf
            :part-of (s2 / supermarket
                  :poss (y / you)))
      :ARG1 (a / amr-unknown)
      :time (s3 / since
            :op1 (b / begin-01
                  :ARG1 (c / coronavirus))))"
"(a / allow-01
      :ARG0 (y / you)
      :ARG1 (b / boost-01
            :ARG0 (p / person)
            :ARG1 (p2 / price-01)
            :location (c / company
                  :name (n / name
                        :op1 ""Amazon""))
            :time (o / outbreak-29
                  :ARG1 (d / disease
                        :name (n2 / name
                              :op1 ""Coronavirus""))))
      :ARG1-of (c2 / cause-01
            :ARG0 (a2 / amr-unknown)))"
"(s / sterilize-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (a / and
            :op1 (m / mask)
            :op2 (p / phone)
            :op3 (g / glasses)
            :poss y)
      :ARG1-of (r / regular-02)
      :instrument (b / box
            :ARG0-of (s2 / sterilize-01
                  :mod (u / ultraviolet)))
      :purpose (h / help-01
            :ARG1 (p2 / prevent-01
                  :ARG1 (s3 / spread-02
                        :ARG1 (d / disease
                              :name (n / name
                                    :op1 ""coronavirus"")))))
      :ARG0-of h)"
"(m / multi-sentence
      :snt1 (w / want-01
            :ARG0 (ii / i)
            :ARG1 (k / know-01
                  :ARG0 ii
                  :ARG1 (t / thing
                        :manner-of (m2 / manage-02
                              :ARG0 (e / everyone
                                    :location (p / publication
                                          :name (n / name
                                                :op1 ""TheWalkingDead"")))
                              :ARG1 (g / go-01
                                    :ARG1 (s / season
                                          :quant 10)
                                    :manner (h / have-03
                                          :polarity -
                                          :ARG0 e
                                          :ARG1 (p2 / paper
                                                :purpose (t2 / toilet))))))))
      :snt2 p
      :name (n2 / name
            :op1 ""Coronavirus"")
      :mod (w2 / world)
      :ord (o / ordinal-entity
            :value 1))"
"(m / multi-sentence
      :snt1 (l / low-04
            :ARG1 (r / race-01
                  :ARG2 (q / queue-01)
                  :purpose (g / get-05
                        :ARG2 (s / supermarket
                              :poss (w / we))))
            :ARG1-of (n / new-01))
      :snt2 (w2 / wrong-02
            :ARG1 (a / amr-unknown)
            :ARG2 (p / person)))"
"(l / leave-behind-18
      :ARG0 (g / geek
            :ARG0-of (t / think-01
                  :manner (s / science)))
      :ARG1 (s2 / sense-02
            :mod (c / common))
      :time (s3 / sometimes))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (s / see-01
                  :ARG0 (w / we)
                  :ARG1 (y / you))
            :op2 (k / know-01
                  :ARG0 w
                  :ARG1 (t / thing
                        :ARG1-of (d / do-02
                              :ARG0 y)))
            :op3 (a2 / appreciate-02
                  :ARG0 w
                  :ARG1 (ii / it)
                  :ARG2-of (h / have-degree-91
                        :ARG3 (m2 / more)
                        :ARG4 (p / possible-01
                              :ARG1 (k2 / know-01
                                    :ARG0 (y2 / you)
                                    :time (e / ever))))
                  :ARG1-of h))
      :snt2 (t2 / thank-01
            :ARG0 (ii2 / i)
            :ARG1 (y3 / you)))"
"(s / statistic
      :ARG1-of (r / remarkable-02)
      :source (o / organization
            :name (n / name
                  :op1 ""BRC""))
      :domain (b / be-located-at-91
            :ARG1 (ii / item
                  :mod (f / food)
                  :ARG1-of (h / have-quant-91
                        :ARG3 (m / more
                              :quant 1000000000)
                        :ARG4 (ii2 / item
                              :mod (f2 / food)
                              :ARG1-of (b2 / be-located-at-91
                                    :time (b3 / before
                                          :op1 (n2 / now)
                                          :quant (t / temporal-quantity
                                                :quant 3
                                                :unit (w / week)))))))
            :ARG2 (h2 / home
                  :poss (p / person))
            :time (n3 / now)))"
"(c / continue-01
      :ARG0 (w / we)
      :ARG1 (f / fight-01
            :ARG0 w
            :ARG1 (t / they)
            :location (a / and
                  :op1 (b / beach)
                  :op2 (a2 / aisle
                        :ord (o / ordinal-entity
                              :value 3)
                        :part-of (s / supermarket)))))"
"(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (s / send-01
                  :ARG0 (w / we)
                  :ARG1 (g / guide
                        :mod (r / resource)
                        :mod (t / this)
                        :location (u / university
                              :name (n / name
                                    :op1 ""UTAustin"")))
                  :ARG2 (p2 / person
                        :ARG0-of (s2 / study-01)
                        :quant (n2 / nearly
                              :op1 3000)))
            :ARG1-of (c / cause-01
                  :ARG0 (w2 / work-01
                        :ARG0 (p3 / person
                              :name (n3 / name
                                    :op1 ""Student""
                                    :op2 ""for""
                                    :op3 ""Transit""))
                        :ARG1 (o / organize-01
                              :ARG0 p3))))
      :snt2 (a / and
            :op1 (c2 / check-out-05
                  :mode imperative
                  :ARG0 (y / you)
                  :ARG1 (ii / it))
            :op2 (s3 / share-01
                  :mode imperative
                  :ARG0 y
                  :ARG1 ii
                  :ARG2 (p4 / person
                        :ARG0-of (s4 / study-01)
                        :ARG0-of (n4 / need-01
                              :ARG1 ii)))))"
"(o / offer-01
      :ARG0 (p / platform
            :purpose (s / shop-01
                  :location (o2 / online)))
      :ARG1 (d / deliver-01
            :ARG1 (g / good
                  :mod (e / essential)))
      :time (l / lock-down-06
            :mod (m / military
                  :name (n / name
                        :op1 ""COVID-19""))))"
"(r / receive-01
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG1 (s / supermarket)
                  :ARG3 (c / cashier))
            :location (c2 / country
                  :name (n / name
                        :op1 ""South""
                        :op2 ""Africa"")))
      :ARG1 (b / bonus
            :mod (m / monetary-quantity
                  :quant 102000000
                  :unit (r2 / rand)))
      :ARG3 (w / work-01
            :ARG0 p
            :time (p2 / pandemic
                  :name (n2 / name
                        :op1 ""Covid-19""))))"
"(p / possible-01
      :ARG1 (e / effective-04
            :ARG0 (ii / it)
            :ARG1 (f / fight-01
                  :ARG0 (c / country
                        :name (n / name
                              :op1 ""India""))
                  :ARG1 (c2 / corruption))
            :degree (v / very))
      :ARG1 (c3 / corruption))"
"(g / give-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Sainsbury's""))
      :ARG1 (h / hour
            :ord (o / ordinal-entity
                  :value 1)
            :duration-of (t / trade-01
                  :ARG1 (s / supermarket)))
      :ARG2 (p / person
            :mod (e / elderly))
      :time (e2 / event
            :name (n2 / name
                  :op1 ""Covid-19"")))"
"(m / multi-sentence
      :snt1 (p / provide-01
            :ARG0 (p2 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (p3 / publication
                              :name (n / name
                                    :op1 ""CNN""))))
            :ARG1 (ii / information
                  :ARG1-of (s / solid-02
                        :mod (r / rock)))
            :time (a / always))
      :snt2 (a2 / ay-dios
            :mode expressive)
      :snt3 (f / fake-News
            :polarity (a3 / amr-unknown))
      :snt4 (v / virus
            :mod (c / coronavirus)))"
(a / amr-empty)
"(m / multi-sentence
      :snt1 (b / believe-01
            :ARG0 (p / person
                  :ARG0-of (r / respond-01)
                  :ARG1-of (ii / include-91
                        :ARG2 (p2 / person
                              :ARG0-of (r2 / respond-01)
                              :mod (a / agency))
                        :ARG3 (a2 / almost
                              :op1 ""2/3"")))
            :ARG1 (p3 / prepare-02
                  :ARG1 p
                  :ARG2 (c / come-12
                        :ARG1 (h / have-03
                              :ARG0 p
                              :ARG1 (ii2 / in-place
                                    :domain (t / tech)
                                    :purpose (w / way
                                          :manner-of (w2 / work-01)
                                          :ARG1-of (n / new-01)))))
                  :ARG1-of (c2 / complete-02))
            :ARG1-of (s / say-01
                  :ARG0 (s2 / survey-01
                        :ARG1 (ii3 / industry
                              :mod (g / globe)))))
      :snt2 (c3 / check-out-05
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (r3 / rest
                  :part-of (t2 / thing
                        :ARG2-of (r4 / result-01)))
            :location (h2 / here)))"
"(h / help-01
      :ARG0 (t / thing
            :ARG1-of (d / donate-01)
            :mod (l / large)
            :mod (a / another)
            :location (p / point
                  :location-of (d2 / drop-off-03
                        :ARG1 (a2 / aid-01
                              :mod (m / mutual)))
                  :location (c / church
                        :name (n / name
                              :op1 ""St""
                              :op2 ""Mildred's"")
                        :location (r / road
                              :name (n2 / name
                                    :op1 ""Bingham""
                                    :op2 ""Road"")
                              :part-of (c2 / city
                                    :name (n3 / name
                                          :op1 ""Croydon""))))
                  :location (c3 / city
                        :name (n4 / name
                              :op1 ""Addiscombe""))))
      :ARG1 (r2 / replenish-01
            :ARG1 (s / stock-01
                  :ARG1 (b / bank
                        :mod (f / food)
                        :poss (o / organization
                              :name (n5 / name
                                    :op1 ""Salvation""
                                    :op2 ""Army""))
                        :location c2)
                  :ARG1-of (d3 / drop-01
                        :manner (c4 / considerable)
                        :time (w / week
                              :mod (l2 / last))))))"
"(s / show-01
      :ARG0 (p / poll)
      :ARG1 (s2 / suffer-01
            :ARG0 (a / and
                  :op1 (b / business)
                  :op2 (p2 / person
                        :ARG0-of (c / consume-01)))
            :ARG1 (s3 / shut-down-05
                  :ARG1 (c2 / coronavirus))))"
"(s / seem-01
      :ARG1 (t / think-01
            :ARG0 (p / person
                  :mod (m / most))
            :ARG1 (e / end-01
                  :ARG1 (w / world)
                  :time (s2 / sit-01
                        :ARG1 p
                        :ARG2 (t2 / toilet)))
            :ARG1-of (c / cause-01
                  :ARG0 (b / buy-01
                        :ARG1 (a / and
                              :op1 (f / food)
                              :op2 (p2 / paper
                                    :purpose t2))
                        :manner (p3 / panic-01)))))"
(a / amr-empty)
"(b / bright-02
      :ARG1 (s / side
            :part-of (p / product
                  :name (n / name
                        :op1 ""Covid""
                        :op2 19)))
      :ARG2 (d / decrease-01
            :ARG1 (p2 / price-01
                  :ARG1 (g / gas))))"
"(w / want-01
      :ARG0 (w2 / we)
      :ARG1 (s / say-01
            :ARG0 w2
            :ARG1 (t / thank-01
                  :ARG0 w2
                  :ARG1 (p / person
                        :mod (t2 / that)
                        :ARG0-of (p2 / put-01
                              :ARG1 (p3 / person
                                    :mod (o / other))
                              :ARG2 (o2 / ordinal-entity
                                    :value 1)
                              :ARG1-of (r / regardless-91
                                    :ARG2 (s2 / situation))))
                  :mod (b / big))
            :time (b2 / busy-01
                  :ARG1 (p4 / person)
                  :ARG2 (a / and
                        :op1 (l / look-after-07
                              :ARG0 p4
                              :ARG1 p4)
                        :op2 (s3 / stockpile-01
                              :ARG0 p4
                              :ARG1 (a2 / and
                                    :op1 (f / food)
                                    :op2 (p5 / paper
                                          :purpose (t3 / toilet))))))))"
"(e / engage-01
      :ARG1 (p / person
            :ARG1-of (s / same-01
                  :ARG2 (p2 / person
                        :ARG0-of (a / accuse-01
                              :ARG1 (g / government-organization
                                    :ARG0-of (g2 / govern-01))
                              :ARG2 (m / make-02
                                    :ARG0 g
                                    :ARG1 (l / live-01
                                          :ARG0 (w / we)
                                          :manner (d / difficult))))))
            :mod (a2 / all))
      :ARG2 (h / hike-02
            :ARG0 p
            :ARG1 (m2 / monetary-quantity
                  :ARG2-of (p3 / price-01
                        :ARG1 (c / commodity
                              :mod (e2 / essential))))))"
"(o / obligate-01
      :ARG1 (w / we)
      :ARG2 (h / have-04
            :ARG1 (d / distribute-01
                  :ARG0 (g / government-organization
                        :ARG0-of (g2 / govern-01
                              :ARG1 (c / country
                                    :name (n / name
                                          :op1 ""US""))))
                  :ARG1 (t / test-01
                        :mod (t2 / this)
                        :ARG1-of (c2 / cost-01
                              :polarity -))
                  :ARG2 (p / person
                        :ARG0-of (c3 / consume-01))
                  :time (ii / immediate))))"
"(s / slash-02
      :ARG0 (r / retailer
            :mod (o / online)
            :mod (c / country
                  :name (n / name
                        :op1 ""China"")))
      :ARG1 (t / thing
            :ARG2-of (p / price-01
                  :ARG1 (p2 / product
                        :name (n2 / name
                              :op1 ""iPhone""
                              :op2 11))))
      :time (r2 / recover-01
            :ARG1 c
            :ARG2 (v / virus
                  :mod (c2 / coronavirus))))"
(a / amr-empty)
"(ii / imagine-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (p / person
            :ARG0-of (s / say-01
                  :ARG1 (a / and
                        :op1 (d / deserve-01
                              :polarity -
                              :ARG0 (p2 / person
                                    :ARG2-of (s2 / staff-01
                                          :ARG1 (g / government-organization
                                                :name (n / name
                                                      :op1 ""NHS""))))
                              :ARG1 (d2 / discount-01
                                    :ARG1-of (o / offer-01
                                          :ARG3 (w / we))))
                        :op2 (d3 / dedicate-01
                              :ARG1 (t / time
                                    :time-of (o2 / open-01
                                          :ARG1 (s3 / supermarket)))
                              :ARG1-of (c / cause-01
                                    :ARG0 (k / know-01
                                          :ARG0 w
                                          :ARG1 (t2 / thing
                                                :ARG1-of (s4 / sign-up-03
                                                      :ARG0 w)))))))))"
"(c / confirm-01
      :ARG0 (p / person
            :ARG0-of (p2 / produce-01
                  :ARG1 (o / oil))
            :ARG1-of (m / major-02))
      :ARG1 (d / deal-01
            :ARG2 (c2 / cut-02
                  :ARG1 (o2 / output
                        :mod (o3 / oil)
                        :mod (g / globe))
                  :ARG2 (r / rate-entity-91
                        :ARG1 (v / volume-quantity
                              :quant 9700000
                              :unit (b / barrel))
                        :ARG2 (t / temporal-quantity
                              :quant 1
                              :unit (d2 / day)))
                  :purpose (s / stabilize-01
                        :ARG1 (m2 / market)
                        :time (a / and
                              :op1 (o4 / outbreak-29
                                    :ARG1 (d3 / disease
                                          :name (n / name
                                                :op1 ""coronavirus"")))
                              :op2 (c3 / collapse-01
                                    :ARG1 (t2 / thing
                                          :ARG2-of (p3 / price-01))))))
            :mod (f / final))
      :time (a2 / after
            :op1 (t3 / talk-01
                  :time (t4 / today))))"
"(s / shrink-01
      :ARG0 (a / and
            :op1 (l / law
                  :name (n / name
                        :op1 ""COVID-19""))
            :op2 (p / price-01
                  :ARG1 (o / oil)
                  :ARG1-of (l2 / low-04)))
      :ARG1 (g / grow-01
            :ARG1 (c / credit-02
                  :ARG0 (b / bank
                        :mod (o2 / organization
                              :name (n2 / name
                                    :op1 ""GCC""))))))"
"(p / possible-01
      :ARG1 (s / start-01
            :ARG0 (f / folk)
            :ARG1 (a / and
                  :op1 (t / take-01
                        :ARG0 f
                        :ARG1 (h / hostage))
                  :op2 (d / demand-01
                        :ARG0 f
                        :ARG1 (p2 / paper
                              :source (t2 / toilet)
                              :ARG3-of (r / ransom-01)))))
      :condition (g / get-03
            :ARG1 (t3 / thing)
            :ARG2 (d2 / despair-01
                  :ARG1 t3
                  :ARG2-of (h2 / have-degree-91
                        :ARG1 t3
                        :ARG3 (m / more
                              :mod (a2 / any))))))"
"(r / recommend-01
      :ARG1 (s / shame-02
            :ARG0 (p / person
                  :ARG0-of (k / keep-01
                        :ARG1 (s2 / shop))
                  :ARG1-of (e / expose-01
                        :ARG2 (s3 / sell-01
                              :ARG0 p
                              :ARG1 (s4 / sanitizer
                                    :beneficiary (h / hand))
                              :ARG3 (m / monetary-quantity
                                    :ARG1-of (e2 / extort-01)))
                        :location (c / center
                              :part-of (c2 / city
                                    :name (n / name
                                          :op1 ""Newcastle"")))))
            :ARG1 p))"
"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (t / tweet-01
                  :ARG0 (y / you)
                  :ARG1 (s / stay-01
                        :ARG1 (s2 / store
                              :mod (r / retail-01)
                              :ARG1-of (e / essential-01
                                    :polarity -))
                        :ARG3 (o / open-09
                              :ARG1 s2)))
            :ARG2 (p / post-01
                  :ARG0 y
                  :ARG1 (s3 / story
                        :topic (a / and
                              :op1 (d / distance-01
                                    :ARG0 (o2 / organization
                                          :name (n / name
                                                :op1 ""COVID-19""))
                                    :mod (s4 / social))
                              :op2 (s5 / stay-01
                                    :ARG1 o2
                                    :location (h / home))))
                  :time (t2 / then)))
      :snt2 (d2 / decide-01
            :mode imperative
            :polite +
            :ARG0 (y2 / you)
            :ARG1 (s6 / side
                  :part-of (f / fence)
                  :location-of y2)))"
"(w / warn-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Yoweri""
                  :op2 ""Museveni"")
            :ARG0-of (h / have-org-role-91
                  :ARG1 (c / country
                        :name (n2 / name
                              :op1 ""Uganda""))
                  :ARG2 (p2 / president)))
      :ARG1 (f / face-01
            :ARG0 (c2 / crook
                  :ARG0-of (h2 / hike-02
                        :ARG1 (p3 / price-01
                              :ARG1 (a / and
                                    :op1 (f2 / foodstuff)
                                    :op2 (c3 / commodity
                                          :mod (b / basic))))
                        :time f
                        :ARG0 c2
                        :ARG1 (p4 / pandemic
                              :mod (c4 / coronavirus)))))
      :ARG1 (a2 / arrest-01
            :ARG1 c2))"
"(a / aisle
      :mod (o / only)
      :part-of (s / supermarket)
      :ARG1-of (s2 / stock-01
            :polarity -)
      :domain (a2 / aisle
            :mod (f / festival
                  :name (n / name
                        :op1 ""Easter""))))"
"(r / report-01
      :ARG0 (w / watchdog
            :mod (c / country
                  :name (n / name
                        :op1 ""Russia""))
            :ARG0-of (s / surveil-01
                  :ARG1 (p / person
                        :ARG0-of (c2 / consume-01))))
      :ARG1 (c3 / case-04
            :location (w2 / world-region
                  :name (n2 / name
                        :op1 ""Arctic"")
                  :ARG1-of (h / high-02))
            :subevent (a / and
                  :op1 (o / observe-01
                        :ARG1 (m / man
                              :ARG0-of (t / travel-01
                                    :ARG4 (c4 / country
                                          :name (n3 / name
                                                :op1 ""Iran"")))
                              :ARG0-of (h2 / have-03
                                    :ARG1 (p2 / product
                                          :name (n4 / name
                                                :op1 ""COVID-19"")))))
                  :op2 (o2 / observe-01
                        :ARG1 (p3 / person
                              :quant 101)))))"
"(g / gift-01
      :ARG1 (j / journal
            :name (n / name
                  :op1 ""My""
                  :op2 ""Life""
                  :op3 ""In""
                  :op4 ""2020""
                  :op5 ""QuarantineDiaries""))
      :ARG2 (a / anyone
            :ARG0-of (l / look-01
                  :ARG1 (w / way
                        :ARG1-of (f / fun-01)
                        :ARG1-of (u / unique-01)
                        :manner-of (d / document-01
                              :ARG0 a
                              :ARG1 (l2 / life
                                    :poss a)
                              :time (q / quarantine-01
                                    :time (d2 / date-entity
                                          :year 2020))))))
      :ARG1-of (p / perfect-02))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (d / deem-01
                  :ARG1 (p / person
                        :ARG0-of (w / work-01)
                        :mod (e / essential)
                        :domain (ii / i)
                        :ARG2-of (h / have-org-role-91
                              :ARG1 (s / service
                                    :mod (m2 / medicine)
                                    :location (s2 / state
                                          :name (n / name
                                                :op1 ""Florida""))))))
            :op2 (g / go-01
                  :ARG1 (w2 / we)
                  :ARG3 (t / take-01
                        :ARG0 w2
                        :ARG1 (l / lunch)
                        :ARG3 (w3 / work-01))
                  :ARG4 (t2 / take-01
                        :ARG0 w2
                        :ARG1 (a2 / and
                              :op1 (g2 / glove)
                              :op2 (s3 / sanitize-01
                                    :ARG1 (h2 / hand)
                                    :mod (h3 / homemade))
                              :mod (f / feces
                                    :polarity -)))))
      :snt2 (n2 / need-01
            :ARG0 w2)
      :ARG1 (s4 / system
            :mod (d2 / distribute-01))
      :purpose (p2 / prioritize-01
            :ARG0 s4
            :ARG1 (b / business
                  :mod (e2 / essential)
                  :ARG0-of (g3 / get-01
                        :ARG1 (s5 / supply))))
      :ARG1-of (c / cause-01
            :ARG0 (o / out-05
                  :ARG1 w2
                  :mod (a3 / almost))))"
"(a / age
      :mod (w / warfare)
      :ARG1-of (n / new-01)
      :domain (v / viralism)
      :purpose (k / keep-02
            :ARG1 (s / sheeple)
            :ARG2 (s2 / state
                  :mod (c / constant)
                  :mod (p / panic-01
                        :ARG1 s))))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (f / forget-01
                  :polarity -
                  :mode imperative
                  :ARG0 (e / everyone)
                  :ARG1 (c / condom)
                  :time (h / hoard-01
                        :ARG0 e
                        :ARG1 (a / and
                              :op1 (p / paper
                                    :purpose (t / toilet))
                              :op2 (t2 / towel
                                    :purpose (k / kitchen))
                              :op3 (t3 / thing
                                    :instrument-of (s2 / sanitize-01
                                          :ARG1 (h2 / hand))))))
            :ARG2 e)
      :snt2 (n / need-01
            :ARG0 (e2 / everyone)
            :ARG1 (ii2 / it
                  :quant (l / lot))
            :time (s3 / stay-01
                  :ARG1 e2
                  :location (h3 / home))))"
"(m / multi-sentence
      :snt2 (c / continue-01
            :ARG0 (w / we)
            :ARG1 (a / accept-01
                  :ARG0 w
                  :ARG1 (t / thing
                        :ARG1-of (d / donate-01))
                  :time (h / hour
                        :ARG1-of (l / limit-01)
                        :time (d2 / date-entity
                              :time ""10:00""
                              :weekday (f / friday)
                              :day 20))
                  :time (u / until
                        :op1 (n / notice-03
                              :mod (f2 / further)))))
      :snt1 (r / respond-01
            :ARG0 (o / organization
                  :name (n2 / name
                        :op1 ""Goodwill""
                        :op2 ""of""
                        :op3 ""Central""
                        :op4 ""&""
                        :op5 ""Southern""
                        :op6 ""Indiana""))
            :ARG1 (p / pandemic
                  :name (n3 / name
                        :op1 ""COVID-19""))
            :ARG2 (c2 / close-01
                  :ARG1 (f3 / floor
                        :location (s / store
                              :mod (r2 / retail-01)))
                  :beneficiary (p2 / person
                        :ARG0-of (s2 / shop-01))
                  :ARG1-of (e / effect-03))))"
"(a / announce-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Dgoc""))
      :ARG1 (a2 / and
            :op1 (ii / impact-01
                  :ARG0 (p / program
                        :name n
                        :op1 ""COD""
                        :op2 19))
            :quant (b / between
                  :op1 (l / little)
                  :op2 (n2 / none)))
      :op2 (a3 / and
            :op1 (m / mitigate-01
                  :ARG0 (a4 / and
                        :op1 (c2 / cost-01
                              :ARG1 (o / operate-01)
                              :ARG1-of (l2 / low-04))
                        :op2 (s / strategy
                              :mod (r / robust)
                              :mod (h / hedge-01)))
                  :ARG1 (ii2 / impact-01
                        :ARG0 (p2 / price-01
                              :ARG1 (c3 / commodity)
                              :ARG1-of (l3 / low-04))))
            :op2 (u / underpin-01
                  :ARG0 a4
                  :ARG1 (a5 / and
                        :op1 (c4 / cashflow)
                        :op2 (p3 / profit-01)
                        :op3 (d / dividend)))))"
"(s / say-01
      :ARG0 (ii / i)
      :ARG1 (w / word-01
            :ARG0 ii
            :ARG1 (b / be-located-at-91
                  :ARG1 (p / paper
                        :purpose (t / toilet))
                  :ARG2 (t2 / there)
                  :time (t3 / tomorrow)))
      :ARG2 (f / folk
            :mod (a / all)
            :ARG0-of (h / hoard-01
                  :ARG1 p
                  :location (s2 / supermarket
                        :ARG1-of (l / local-02)
                        :poss ii))))"
"(m / multi-sentence
      :snt1 (g / go-02
            :ARG0 (ii / i)
            :ARG4 (s / supermarket)
            :time (d / date-entity
                  :time ""11:00""))
      :snt2 (f / feel-06
            :ARG1 (ii2 / it)
            :ARG2 (f2 / festival
                  :name (n / name
                        :op1 ""Christmas"")))
      :snt3 (l / lock-down-03)
      :snt4 (s2 / stay-01
            :location (h / home))
      :snt5 (p / person
            :name (n2 / name
                  :op1 ""Covid_19"")))"
"(m / multi-sentence
      :snt1 (e / explain-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Luisa""
                        :op2 ""D'Alessandro"")
                  :ARG1-of (e2 / expert-01)
                  :poss (w / we))
            :ARG1 (s / step-01
                  :ARG1-of (t / take-01
                        :ARG0 (y / you)
                        :ARG1-of (n2 / need-01
                              :ARG0 y
                              :purpose (p2 / protect-01
                                    :ARG0 y
                                    :ARG1 (b / business
                                          :poss y))))))
      :snt2 (r / remain-01
            :ARG1 (w2 / we)
            :location (h / here)
            :beneficiary (y2 / you)
            :medium (o / or
                  :op1 (p3 / phone-number-entity
                        :value ""1-870-849-4000"")
                  :op2 (e3 / email-address-entity
                        :value ""law@schofieldsweeney.co.uk""))))"
"(f / factor-01
      :ARG0 (r / revise-01
            :ARG1 (o / outlook))
      :ARG1 (r2 / risk-01
            :ARG2 (p / price-01
                  :ARG1 (c / commodity
                        :ARG2-of (ii / include-01
                              :ARG1 (a / and
                                    :op1 (z / zinc
                                          :mod (w / world-region
                                                :name (n / name
                                                      :op1 ""Brent"")))
                                    :op2 (a2 / aluminum
                                          :mod w))))
                  :ARG1-of (h / have-degree-91
                        :ARG2 (l / low-04
                              :ARG1 p)
                        :ARG3 (m / more
                              :degree (s / sharp)))
                  :time (d / date-entity
                        :year 21
                        :mod (f2 / finance)))
            :time (w2 / wake
                  :op1 (r3 / report-01
                        :ARG1 (p2 / pandemic)))))"
"(m / multi-sentence
      :snt1 (s / ship-01
            :ARG0 (w / we)
            :ARG1 (p / product
                  :name (n / name
                        :op1 ""KN95""
                        :op2 ""#Respirator"")
                  :ARG1-of (e / equal-01
                        :ARG2 (p2 / product
                              :name (n2 / name
                                    :op1 ""N95""
                                    :op2 ""Mask"")))))
      :snt2 (h / have-03
            :ARG0 (w2 / we)
            :ARG1 (a / authenticity
                  :ARG1-of (v / verify-01
                        :ARG1-of (p3 / possible-01
                              :degree (p4 / percentage-entity
                                    :value 100)))
                  :instrument (c / certificate
                        :mod (d / digital)
                        :mod (b / blockchain)
                        :instrument-of (p5 / prove-01
                              :ARG1 (o / originate-01)))))
      :snt3 (h2 / have-03
            :ARG0 (w3 / we)
            :ARG1 (c2 / capacity
                  :mod (s2 / ship-01)
                  :consist-of (r / rate-entity-91
                        :ARG1 (m2 / mask
                              :quant 400000)
                        :ARG2 (t / temporal-quantity
                              :quant 1
                              :unit (d2 / day))))
            :source (c3 / company
                  :name (n3 / name
                        :op1 ""Tricolor""
                        :op2 ""Group""))))"
"(m / multi-sentence
      :snt1 (r / remain-01
            :ARG1 (f / food)
            :ARG3 (n / need-01
                  :ARG0 (w / we
                        :mod (a / all))
                  :ARG1 f
                  :ARG1-of (k / key-02)
                  :location (l / location
                        :location-of w))
            :time (c / continue-01
                  :ARG0 (w2 / world)
                  :ARG1 (f2 / fight-01
                        :ARG0 w2
                        :ARG1 (v / virus
                              :mod (c2 / coronavirus)))))
      :snt2 (h / have-degree-91
            :ARG1 (n2 / nothing)
            :ARG2 (ii / important-01
                  :ARG1 n2)
            :ARG3 (m2 / more)
            :ARG4 (a2 / and
                  :op1 (h2 / health
                        :poss w)
                  :op2 (f3 / food)))
      :snt3 (t / think-01
            :mode imperative
            :ARG0 w)
      :ARG2 (p / person
            :ARG0-of (f4 / farm-01)
            :poss w)
      :time (t2 / today))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (w / work-01
                  :ARG0 (ii / i)
                  :ARG1 (s / supermarket))
            :op2 (b / busy-01
                  :ARG1 s
                  :degree (r / really)
                  :mod (s2 / still)
                  :concession (w2 / warn-01
                        :mod (a2 / all))))
      :snt2 (a3 / and
            :op1 (s3 / shop-01
                  :ARG0 (p / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG2 (p2 / parent)))
                  :accompanier (p3 / person
                        :ARG0-of (h2 / have-rel-role-91
                              :ARG1 p
                              :ARG2 (k / kid))))
            :op2 (q / queue-01
                  :ARG1 (p4 / person)
                  :time (b2 / before
                        :op1 (o / open-01
                              :ARG1 s)))
            :op3 (w3 / walk-01
                  :ARG0 (p5 / person
                        :quant (l / lot))
                  :ARG2 (a4 / around)
                  :accompanier (a5 / and
                        :op1 (l2 / list-01
                              :ARG1 (s4 / shop-01))
                        :op2 (t / tray
                              :ARG1-of (f / full-09))))))"
"(u / update-02
      :ARG0 (h / he)
      :ARG1 (p / person
            :ARG0-of (h2 / have-org-role-91
                  :ARG1 (g / government-organization
                        :name (n / name
                              :op1 ""Texas""
                              :op2 ""House""))
                  :ARG2 (m / member)))
      :ARG2 (p2 / possible-01
            :ARG1 (ii / impact-01
                  :ARG0 (a / and
                        :op1 (t / thing
                              :ARG2-of (p3 / price-01))
                        :op2 (t2 / thing
                              :ARG1-of (f / fall-01)))
                  :ARG1 (a2 / and
                        :op1 (r / report-01
                              :ARG1 (b / budget-01
                                    :ARG0 (s / state)))
                        :op2 (r2 / report-01
                              :ARG1 (o / outlook
                                    :mod (f2 / finance))))
                  :topic (t3 / thing
                        :quant (s2 / some)
                        :ARG1-of (s3 / say-01
                              :ARG0 h
                              :time (c / call-02
                                    :ARG0 p
                                    :mod (o2 / only))))))
      :time (d / date-entity
            :weekday (s4 / sunday)))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (t / they)
            :ARG1 (h / have-quant-91
                  :ARG1 (a / and
                        :op1 (m2 / mask)
                        :op2 (g / glove))
                  :ARG3 (e / enough)
                  :ARG6 (g2 / go-02
                        :ARG0 t
                        :ARG4 (s2 / store
                              :mod (g3 / grocery)))))
      :snt2 (l / lie-08
            :ARG0 (t2 / they))
      :snt3 (h2 / have-03
            :ARG0 (e2 / everyone
                  :mod (e3 / else))
            :ARG1 (c / clothes)))"
"(b / be-located-at-91
      :ARG1 (w / we)
      :ARG2 (t / this)
      :location (w2 / world))"
"(m / multi-sentence
      :snt1 (r / read-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (s / series
                  :consist-of (b / blog-01
                        :ARG0 (w / we)
                        :ARG1 (u / update-02
                              :ARG1 (p / product
                                    :name (n / name
                                          :op1 ""COVID19""))))
                  :ARG1-of (n2 / new-01))
            :purpose (l / learn-01
                  :ARG0 y
                  :ARG1 (t / thing
                        :manner-of (a / affect-01
                              :ARG0 (p2 / pandemic
                                    :mod (g / globe))
                              :ARG1 (a2 / and
                                    :op1 (t2 / thing
                                          :manner-of (s2 / search-01
                                                :ARG0 (p3 / person
                                                      :ARG0-of (s3 / shop-01))
                                                :medium (o / online)))
                                    :op2 (t3 / thing
                                          :manner-of (b2 / buy-01
                                                :ARG0 p3
                                                :medium o)))))))
      :snt2 (t4 / thing
            :ARG1-of (p4 / post-01)
            :ARG1-of (n3 / new-01)
            :frequency (r2 / rate-entity-91
                  :ARG3 (s4 / slash
                        :op1 (t5 / temporal-quantity
                              :quant 1
                              :unit (m2 / month))
                        :op2 (t6 / temporal-quantity
                              :quant 1
                              :unit (d / day))))))"
"(l / lock-down-06
      :ARG1 (c / country
            :name (n / name
                  :op1 ""UK""))
      :purpose (s / save-01
            :ARG1 (l2 / life)))"
"(c / cause-01
      :ARG0 (l / lockdown
            :location (c2 / country
                  :name (n / name
                        :op1 ""India"")))
      :ARG1 (d / drop-01
            :ARG0 l
            :ARG1 (p / price-01
                  :ARG1 (c3 / corn))
            :ARG1-of (c4 / cause-01
                  :ARG0 (d2 / decrease-01
                        :ARG1 (d3 / demand-01
                              :ARG0 (p2 / pandemic
                                    :name (n2 / name
                                          :op1 ""COVID-19"")))))))"
"(c / contrast-01
      :ARG1 (a / allow-01
            :ARG1 (s / shop-01
                  :ARG0 (w / we)
                  :frequency (r / rate-entity-91
                        :ARG1 1
                        :ARG2 (t / temporal-quantity
                              :quant 1
                              :unit (d / day))))
            :ARG2 w)
      :ARG2 (a2 / and
            :op1 (p / possible-01
                  :ARG1 (f / fine-01
                        :ARG2 (g / group
                              :consist-of (p2 / person))
                        :ARG3 (s2 / shop-01
                              :ARG0 g
                              :medium (o / online)))
                  :time (s3 / slot
                        :polarity -
                        :ARG2-of (a3 / available-02)))
            :op2 (b / be-located-at-91
                  :ARG1 (f2 / fuck
                        :mod (a4 / all))
                  :ARG2 (s4 / shelf)
                  :concession (e / even-when
                        :op1 (g2 / go-out-17
                              :ARG0 w)))))"
"(c / comment-01
      :ARG0 (p / person
            :ARG1-of (a / alien-01))
      :ARG1 (c2 / clean-04
            :ARG1 (b / butt
                  :part-of (h / human))
            :degree (s / so))
      :time (a2 / after
            :op1 (t / take-over-12
                  :ARG0 p
                  :ARG1 (p2 / planet
                        :name (n / name
                              :op1 ""Earth""))
                  :time (d / date-entity
                        :year 2021))))"
"(a / affect-01
      :ARG0 (c / coronavirus)
      :ARG1 (ii / industry
            :mod (c2 / car)
            :mod (c3 / country
                  :name (n / name
                        :op1 ""UK"")))
      :manner (w / way
            :ARG1-of (f / follow-04)
            :domain (a2 / and
                  :op1 (s / shut-down-05
                        :ARG1 (f2 / factory
                              :mod (c4 / car))
                        :location (a3 / across
                              :op1 (g / globe)))
                  :op2 (o / or
                        :op1 (c5 / cancel-01
                              :ARG1 (e / event
                                    :mod (p / person
                                          :ARG0-of (c6 / consume-01))))
                        :op2 (p2 / postpone-01
                              :ARG1 e))
                  :op3 (p3 / produce-01
                        :ARG0 (c7 / company
                              :ARG0-of (m / manufacture-01
                                    :ARG1 c4))
                        :ARG1 (v / ventilator)
                        :ARG3 (g2 / government-organization
                              :name (n2 / name
                                    :op1 ""NHS"")))
                  :op4 (d / drop-01
                        :ARG1 (s2 / sell-01
                              :ARG1 c4)
                        :ARG2 (p4 / percentage-entity
                              :value 2.9)))))"
"(m / multi-sentence
      :snt1 (n / need-01
            :ARG0 (y / you)
            :ARG1 (k / know-01
                  :ARG0 y
                  :ARG1 (p / possible-01
                        :ARG1 (b / boost-01
                              :ARG0 (c / change-01
                                    :ARG0 (c2 / country
                                          :name (n2 / name
                                                :op1 ""Brazil""))
                                    :ARG1 (e / economy))
                              :ARG1 (l / lethality))
                        :ARG1-of (w / warn-01
                              :ARG0 (w2 / watchdog)))))
      :snt2 (s / subscribe-01
            :mode imperative
            :ARG0 (y2 / you)
            :ARG1 (n3 / newsletter
                  :poss (w3 / we))
            :time (n4 / now)))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (ii / i)
                        :ARG2 (f / friend))
                  :medium (p2 / publication
                        :name (n / name
                              :op1 ""Facebook"")))
            :ARG1 (n2 / need-01
                  :ARG0 (y / you)
                  :ARG1 (a / and
                        :op1 (m2 / mask)
                        :op2 (g / glove))
                  :purpose (g2 / go-02
                        :ARG0 y
                        :ARG4 (s2 / store
                              :mod (g3 / grocery)))
                  :mod (o / only)))
      :snt2 p
      :ARG0-of (l / lie-08)
      :snt3 (h2 / have-03
            :ARG0 (e / everyone
                  :mod (e2 / else))
            :ARG1 (c / clothes)))"
"(o / or
      :polarity -
      :op1 (m / milk)
      :op2 (b / bread)
      :op3 (e / egg)
      :op4 (p / paper
            :purpose (t / toilet))
      :location (f / facility
            :name (n / name
                  :op1 ""Iceland"")
            :location (d / door
                  :mod (n2 / next)))
      :mod (a / also))"
"(m / multi-sentence
      :snt1 (c / city
            :name (n / name
                  :op1 ""CASheffield""))
      :snt2 (c2 / city
            :name (n2 / name
                  :op1 ""CA_Wakefield""))
      :snt3 (c3 / city
            :name (n3 / name
                  :op1 ""Barnsley""))
      :snt4 (c4 / city
            :name (n4 / name
                  :op1 ""Rotherham""))
      :snt5 (c5 / city
            :name (n5 / name
                  :op1 ""Doncaster""))
      :snt2 (f / follow-02
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (l / link
                  :location (b / below))
            :purpose (a / advise-01
                  :ARG1 y)
            :condition (h / have-trouble-04
                  :ARG0 y
                  :ARG1 (t / top-up-04
                        :ARG0 y
                        :ARG1 (m2 / meter
                              :mod (e / energy)
                              :mod (p / prepay-01)
                              :poss y))
                  :ARG1-of (c6 / cause-01
                        :ARG0 (b2 / break-out-30
                              :ARG1 (p2 / program
                                    :name (n6 / name
                                          :op1 ""COVID-19"")))))))"
"(c / contrast-01
      :ARG1 (ii / increase-01
            :ARG1 (p / price-01
                  :ARG1 (g / gold))
            :time (a / after
                  :op1 (m / move-02
                        :ARG0 (c2 / country
                              :name (n / name
                                    :op1 ""US""))
                        :ARG1 (q / quell-01
                              :ARG0 c2
                              :ARG1 (p2 / panic-01)))))
      :ARG2 (r / remain-01
            :ARG1 (v / volatility)
            :location (m2 / market)))"
"(w / wrong-04
      :ARG1 (p / person
            :ARG0-of (w2 / whine-01
                  :ARG1 (m / meat
                        :polarity -
                        :location (s / shelf
                              :mod (s2 / supermarket)))))
      :mod (e / especially)
      :ARG1-of (c / cause-01
            :ARG0 (g / get-05
                  :ARG0 (e2 / eat-01
                        :ARG0 (w3 / we)
                        :ARG1 (f / flesh
                              :part-of (a / animal)))
                  :ARG1 w3
                  :ARG2 (m2 / mess
                        :mod (t / this))
                  :mod (ii / in-the-first-place))))"
"(m / multi-sentence
      :snt1 (t / teach-01
            :ARG0 (t2 / treaty
                  :name (n / name
                        :op1 ""COVID""
                        :op2 19)
                  :mod (t3 / this))
            :ARG1 (a / and
                  :op1 (p / productive-03
                        :ARG0 (w / we))
                  :op2 (s / suffice-01
                        :ARG0 w
                        :ARG1 w))
            :ARG2 w)
      :snt2 (c / close-01
            :ARG0 (c2 / country
                  :name (n2 / name
                        :op1 ""Botswana""))
            :ARG1 (b / border
                  :poss c2)
            :purpose (p2 / protect-01
                  :ARG0 c2
                  :ARG1 (c3 / citizen
                        :poss c2))))"
"(c / contrast-01
      :ARG1 (n / need-01
            :ARG0 (ii / i)
            :ARG1 (g / go-02
                  :ARG0 ii
                  :ARG4 (b / bathroom)))
      :ARG2 (h / have-03
            :polarity -
            :ARG0 ii
            :ARG1 (p / paper
                  :purpose (t / toilet)
                  :mod (a / any))))"
"(a / and
      :op1 (b / buy-01
            :ARG1 (s / staple
                  :mod (h / household)
                  :example (a2 / and
                        :op1 (p / paper
                              :purpose (t / toilet))
                        :op2 (p2 / product
                              :purpose (c / clean-01))))
            :manner (p3 / panic-01)
            :location (c2 / country
                  :mod (e / every
                        :mod (n / near))
                  :ARG1-of (h2 / hit-01
                        :ARG0 (v / virus))))
      :op2 (c3 / common
            :domain (s2 / shelf
                  :ARG1-of (e2 / empty-02)
                  :location (s3 / supermarket))))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (p / possible-01
                  :ARG1 (t / take-01
                        :ARG0 (r / recover-01)
                        :ARG1 (s2 / share
                              :mod (a / amr-unknown))))
            :ARG2 (p2 / person
                  :name (n / name
                        :op1 ""covid19"")))
      :snt2 (u / use-01
            :ARG0 (w / we)
            :ARG1 (p3 / product
                  :name (n2 / name
                        :op1 ""Geodata"")
                  :poss w)
            :ARG2 (a2 / and
                  :op1 (m2 / measure-01
                        :ARG0 w
                        :ARG1 (a3 / activity-06
                              :ARG0 (p4 / person
                                    :ARG0-of (c / consume-01))
                              :location (c2 / country
                                    :name (n3 / name
                                          :op1 ""China""))))
                  :op2 (d / determine-01
                        :ARG0 w
                        :ARG1 (s3 / shape
                              :ARG1-of (t2 / take-01
                                    :ARG0 (r2 / recover-01)
                                    :ARG1-of (p5 / possible-01)
                                    :time (l / lift-02
                                          :ARG1 (m3 / measure-02
                                                :ARG1 (l2 / lock-down-03)))))))))"
"(d / donate-01
      :ARG0 (s / supermarket
            :name (n / name
                  :op1 ""Aldi"")
            :ARG0-of (d2 / discount-01))
      :ARG1 (e / egg
            :mod (f / festival
                  :name (n2 / name
                        :op1 ""Easter""))
            :quant (a / almost
                  :op1 500000)
            :mod (s2 / surplus))
      :ARG2 (a2 / and
            :op1 (c / charity)
            :op2 (b / bank
                  :mod (f2 / food))
            :location (a3 / across
                  :op1 (c2 / country
                        :name (n3 / name
                              :op1 ""UK"")))))"
"(o / offer-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Shopee""))
      :ARG1 (m / mask
            :mod (f / face)
            :consist-of (p / ply
                  :quant 3)
            :quant (v / volume-quantity
                  :quant 50
                  :unit (c2 / case))
            :ARG1-of (c3 / cost-01
                  :ARG2 (l / less-than
                        :op1 (m2 / monetary-quantity
                              :quant 100
                              :unit (p2 / pound)))))
      :time (p3 / pandemic
            :name (n2 / name
                  :op1 ""COVID""
                  :op2 19)))"
"(ii / item
      :domain (a / amr-unknown)
      :ARG1-of (g / go-to-26
            :ARG0 (y / you)
            :time (n / now
                  :mod (r / right)))
      :purpose (s / stock-up-02
            :ARG0 y))"
"(r / read-01
      :mode imperative
      :polite +
      :ARG0 (y / you)
      :ARG1 (a / and
            :op1 (t / thing
                  :ARG1-of (s / state-01)
                  :mod (f / full)
                  :topic (p / product
                        :name (n / name
                              :op1 ""Covid-19"")
                        :mod (c / company
                              :name (n2 / name
                                    :op1 ""LAVA""))))
            :op2 (a2 / announce-01
                  :ARG1 (s2 / store
                        :name (n3 / name
                              :op1 ""Online""
                              :op2 ""Store""
                              :op3 ""for""
                              :op4 ""Consumer""
                              :op5 ""Electronics""
                              :op6 ""and""
                              :op7 ""Computing""
                              :op8 ""Interfaces"")))
            :poss (w / we))
      :medium (u / url-entity
            :value ""https://www.lavacable.com/covid19""))"
"(m / multi-sentence
      :snt1 (c / change-01
            :ARG1 (b / behave-01
                  :ARG0 (p / person
                        :ARG0-of (c2 / consume-01)))
            :ARG2-of (r / result-01
                  :ARG1 (l / law
                        :name (n / name
                              :op1 ""COVID-19"")))
            :ARG1-of (c3 / cause-01
                  :ARG0 (s / shop-01
                        :ARG0 (p2 / person
                              :quant (n2 / number
                                    :ARG1-of (ii / increase-01)))
                        :medium (o / online)
                        :purpose (m2 / meet-01
                              :ARG0 p2
                              :ARG1 (n3 / need-01
                                    :ARG0 p2
                                    :frequency (r2 / rate-entity-91
                                          :ARG3 (t / temporal-quantity
                                                :quant 1
                                                :unit (d / day))))))))
      :snt2 (v / visualize-01
            :ARG0 (w / we)
            :ARG1 (c4 / consist-01
                  :ARG1 (b2 / basket
                        :mod (e / essential))
                  :ARG2 (t2 / thing))
            :ARG1-of (b3 / base-02
                  :ARG2 (d2 / data
                        :poss w))))"
"(s / say-01
      :ARG0 (ii / i)
      :ARG1 (l / look-01
            :ARG0 (y / you)
            :ARG1 (e / expect-01
                  :ARG1 (g / grow-01
                        :ARG1 (e2 / earnings))
                  :ARG1-of (b / build-02
                        :ARG2 (t / thing
                              :ARG2-of (p / price-01
                                    :ARG1 (s2 / stock))
                              :location (r / region
                                    :ARG1-of (m / major-02)
                                    :mod (g2 / globe)))
                        :ARG2-of (r2 / result-01
                              :ARG1 (p2 / pandemic
                                    :mod (c / coronavirus))))))
      :ARG2 (p3 / person
            :name (n / name
                  :op1 ""I_W_M"")))"
"(m / multi-sentence
      :snt1 (l / lower-05
            :ARG0 (ii / i)
            :ARG1 (m2 / monetary-quantity
                  :ARG2-of (p / price-01
                        :ARG0 ii
                        :ARG1 (b / book
                              :mod (a / all)
                              :mod (e / ebook))))
            :ARG4 (m3 / monetary-quantity
                  :quant 99
                  :unit (c / cent))
            :location (c2 / company
                  :name (n / name
                        :op1 ""Amazon""))
            :ARG2-of (r / respond-01
                  :ARG0 ii
                  :ARG1 (o / outbreak-29
                        :ARG1 (c3 / coronavirus))))
      :snt2 (f / feel-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (f2 / free-04
                  :ARG1 y
                  :ARG3 (c4 / check-out-05
                        :ARG0 y
                        :ARG1 (b2 / book
                              :poss (ii2 / i))))
            :condition (l2 / look-01
                  :ARG0 y
                  :ARG1 (m4 / material
                        :purpose (r2 / read-01)
                        :ARG1-of (n2 / new-01)
                        :quant (s / some)
                        :ARG0-of (k / keep-02
                              :ARG1 (o2 / occupy-01
                                    :ARG1 y))))))"
"(e / emphasize-01
      :ARG0 (r / rise-01
            :ARG1 (b / buy-01
                  :manner (p / panic-01))
            :time (s / situation
                  :name (n / name
                        :op1 ""COVID-19"")
                  :ARG1-of (e2 / evolve-01)
                  :ARG1-of (m / mean-01
                        :ARG2 (b2 / book
                              :name (n2 / name
                                    :op1 ""Coronavirus"")
                              :mod (n3 / novel)))))
      :ARG1 (ii / important-01
            :ARG1 (a / authentic-02
                  :ARG1 (p2 / product))
            :ARG1-of (c / critical-02)))"
"(f / fail-01
      :ARG1 (c / country
            :name (n / name
                  :op1 ""India""))
      :ARG2 (s / surprise-01
            :ARG0 (ii / initiative
                  :poss c
                  :beneficiary (c2 / community)))
      :time (e / ever))"
"(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (a / amr-unknown)
            :ARG1 (t / tell-01
                  :ARG0 (a2 / and
                        :op1 (p / politician)
                        :op2 (s / shop)
                        :op3 (s2 / store)
                        :op4 (c2 / chain
                              :mod (s3 / supermarket)))
                  :ARG1 (p2 / panic-01
                        :polarity -
                        :ARG0 (w / we))
                  :ARG2 w
                  :frequency (c3 / constant)
                  :time (a3 / and
                        :op1 (f / food)
                        :op2 (s4 / supply)
                        :quant (p3 / plenty))))
      :snt2 (a4 / and
            :op1 (s5 / stop-01
                  :ARG0 (t2 / they)
                  :ARG1 (t3 / tell-01
                        :ARG0 t2
                        :ARG2 w))
            :op2 (d / do-02
                  :ARG0 t2
                  :ARG1 (s6 / something)
                  :ARG2 (ii / it)
                  :time (n / now))))"
"(t / take-advantage-02
      :ARG0 (p / person
            :mod (s / some))
      :ARG1 (p2 / pandemic
            :name (n / name
                  :op1 ""COVID-19""))
      :ARG2 (r / raise-01
            :ARG0 p
            :ARG1 (p3 / price-01
                  :ARG1 (m / mask))))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Putin""))
            :ARG1 (g / government-organization
                  :name (n2 / name
                        :op1 ""Kremlin"")
                  :ord (o / ordinal-entity
                        :value 1)
                  :ARG0-of (g2 / give-in-09
                        :ARG1 (w / war-01
                              :ARG2 (t / thing
                                    :ARG2-of (p2 / price-01
                                          :ARG1 (o2 / oil)))))))
      :snt2 (a / add-01
            :ARG0 p
            :ARG1 (ii / inflict-01
                  :ARG0 (d / drop-01
                        :ARG1 (t2 / thing
                              :ARG2-of (p3 / price-01
                                    :ARG1 (o3 / oil)))
                        :ARG1-of (s2 / significant-02
                              :degree (v / very))
                        :mod (p4 / profound)
                        :ARG1-of (d2 / deep-02))
                  :ARG1 (b / blow-14
                        :ARG1 (e / economy
                              :poss (c / country
                                    :name (n3 / name
                                          :op1 ""Russia"")))
                        :mod (d3 / double))
                  :ARG2 e))
      :snt3 (a2 / add-01
            :ARG0 (h / he)
            :ARG1 (r / recommend-01
                  :ARG1 (p5 / possible-01
                        :ARG1 (f / foresee-01
                              :ARG1 (s3 / situation)
                              :time (d4 / date-entity
                                    :day 6
                                    :month 3))))))"
"(p / plan-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Amazon""))
      :ARG1 (h / hire-01
            :ARG0 c
            :ARG1 (p2 / person
                  :quant 100000
                  :ARG0-of (w / work-01)
                  :mod (m / more))
            :purpose (m2 / meet-01
                  :ARG0 c
                  :ARG1 (d / demand-01
                        :ARG1 (s / shop-01
                              :medium (o / online)))))
      :ARG1-of (c2 / cause-01
            :ARG0 (p3 / pandemic
                  :name (n2 / name
                        :op1 ""Coronavirus""))))"
"(l / launch-01
      :ARG0 (c / city
            :name (n / name
                  :op1 ""San""
                  :op2 ""Luis""
                  :op3 ""Oispo""))
      :ARG1 (r / resource
            :ARG1-of (n2 / new-01)
            :purpose (c2 / connect-01
                  :ARG1 (p / person
                        :ARG0-of (h / have-org-role-91
                              :ARG1 (c3 / community)
                              :ARG2 (m / member)))
                  :ARG2 (b / business
                        :ARG1-of (l2 / local-02)
                        :ARG0-of (o / offer-01
                              :ARG1 (s / shop-01
                                    :medium (o2 / online))
                              :time (e / event
                                    :name (n3 / name
                                          :op1 ""COVID-19""
                                          :op2 ""Shelter""
                                          :op3 ""at""
                                          :op4 ""Home""
                                          :op5 ""Order"")))))
            :ARG0-of c2))"
"(a / agree-01
      :ARG0 (a2 / and
            :op1 (c / country
                  :name (n / name
                        :op1 ""Russia""))
            :op2 (n2 / nation
                  :ARG0-of (p / produce-01
                        :ARG1 (o / oil))
                  :mod (o2 / other)))
      :ARG1 (c2 / cut-01
            :ARG0 a2
            :ARG1 (o3 / output)
            :ARG2 (a3 / amount
                  :mod (r / record)
                  :ARG0-of (r2 / represent-01
                        :ARG1 (s / supply-01
                              :ARG2 (g / globe)
                              :quant (a4 / around
                                    :op1 (p2 / percentage-entity
                                          :value 10)))))
            :purpose (s2 / support-01
                  :ARG0 a2
                  :ARG1 (p3 / price-01
                        :ARG1 (o4 / oil))
                  :time (p4 / pandemic)))
      :time (d / date-entity
            :weekday (s3 / sunday)))"
"(p / person
      :name (n / name
            :op1 ""SA""))"
"(m / multi-sentence
      :snt1 (t / tweet-01
            :ARG1 (t2 / this)
            :ARG1-of (a / automate-01))
      :snt2 (r / reply-01
            :polite +
            :mode imperative
            :polarity -
            :ARG0 (y / you)))"
"(w / walk-01
      :ARG0 (s / someone
            :part (h / hand))
      :direction (o / out-of
            :op1 (b / bathroom
                  :part-of (s2 / store
                        :mod (g / grocery)
                        :location (c / city
                              :name (n / name
                                    :op1 ""Edmond"")))))
      :manner (w2 / wash-01
            :polarity -
            :ARG0 s
            :ARG1 h)
      :mod (j / just))"
"(t / think-01
      :ARG0 (ii / i)
      :ARG1 (a / and
            :op1 (p / panic-01
                  :ARG1 (p2 / person))
            :op2 (b / buy-01
                  :ARG0 p2
                  :ARG1 (g / grocery)
                  :duration (f / few
                        :op1 (t2 / temporal-quantity
                              :quant 1
                              :unit (w / week))
                        :mod (n / next))
                  :ARG1-of (ii2 / instead-of-91
                        :ARG2 (b2 / buy-01
                              :ARG0 p2
                              :ARG1 (t3 / thing
                                    :ARG1-of (n2 / need-01
                                          :ARG0 p2))
                              :mod (j / just)
                              :duration (f2 / few
                                    :op1 (t4 / temporal-quantity
                                          :quant 1
                                          :unit (d / day))
                                    :mod (n3 / next)))))))"
"(m / multi-sentence
      :snt1 (f / follow-02
            :ARG0 (p / person
                  :ARG0-of (s / scam-01))
            :ARG1 (h / headline))
      :snt2 (c / check-out-05
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (ii / information
                  :source (g / government-organization
                        :name (n / name
                              :op1 ""Federal""
                              :op2 ""Trade""
                              :op3 ""Commission""))
                  :mod (t / this))
            :purpose (p2 / protect-01
                  :ARG0 y
                  :ARG1 y
                  :ARG2 (s2 / scam-01
                        :mod (p3 / product
                              :name (n2 / name
                                    :op1 ""COVID-19""))))))"
"(l / limit-01
      :ARG0 (a / and
            :op1 (c / company
                  :name (n / name
                        :op1 ""Sainsbury's""))
            :op2 (c2 / company
                  :name (n2 / name
                        :op1 ""Asda"")))
      :ARG1 (s / sell-01
            :ARG1 (ii / item
                  :mod (f / food)
                  :mod (a2 / all))))"
"(s / say-01
      :ARG0 (ii / i)
      :ARG1 (a / and
            :op1 (p / possible-01
                  :polarity -
                  :ARG1 (s2 / stop-01
                        :ARG0 ii
                        :ARG1 (s3 / shop-01
                              :ARG0 ii
                              :medium (o / online))))
            :op2 (t / thank-01
                  :ARG0 ii
                  :ARG1 (p2 / person
                        :name (n / name
                              :op1 ""COVID-19""))
                  :mod (l / lot)))
      :ARG2 p2)"
"(p / possible-01
      :ARG1 (c / check-out-05
            :ARG0 (y / you)
            :ARG1 (c2 / camera
                  :mod (t / traffic)
                  :location (c3 / city
                        :name (n / name
                              :op1 ""Windsor"")))
            :location (h / here)))"
"(h / have-concession-91
      :ARG1 (a / and
            :op1 (f / farm-01
                  :ARG0 (p / person
                        :ARG0-of (f2 / farm-01)
                        :poss (w / we))
                  :mod (s / still))
            :op2 (l / lay-01
                  :ARG0 (h2 / hen)
                  :ARG1 (e / egg)
                  :mod (s2 / still))
            :op3 (n / need-01
                  :ARG0 (a2 / and
                        :op1 (t / turkey)
                        :op2 (b / broiler))
                  :ARG1 (f3 / feed-01
                        :ARG2 a2))
            :op4 (w2 / work-01
                  :ARG0 (p2 / person
                        :ARG0-of (f4 / farm-01
                              :ARG2 (p3 / poultry))
                        :mod (f5 / family)
                        :mod (s3 / state
                              :name (n2 / name
                                    :op1 ""Michigan"")))
                  :ARG1 (s4 / supply-01
                        :ARG0 p2
                        :ARG1 (p4 / protein
                              :ARG1-of (p5 / produce-01
                                    :ARG1-of (l2 / local-02))
                              :mod (h3 / health))
                        :ARG2 (p6 / person
                              :ARG0-of (c / consume-01)))
                  :mod (t2 / together)
                  :frequency (r / rate-entity-91
                        :ARG3 (t3 / temporal-quantity
                              :quant 1
                              :unit (d / day))))
            :ARG2 (s5 / situation)))"
"(p / possible-01
      :ARG1 (l / learn-01
            :ARG0 (p2 / person
                  :ARG0-of (p3 / play-01
                        :ARG1 (c / commerce
                              :mod (o / online)))
                  :mod (t / travel-01))
            :ARG1 (a / amr-unknown)
            :source (p4 / perspective
                  :mod (d / defraud-01))
            :time (s / surge-01
                  :ARG1 (s2 / shop-01
                        :medium (o2 / online))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (p5 / pandemic
                              :mod (c3 / coronavirus))))))"
"(a / and
      :op1 (o / open-09
            :ARG1 (s / supermarket
                  :poss (w / we)))
      :op2 (m / maintain-01
            :ARG0 s
            :ARG1 (l / level
                  :mod (s2 / stock-01)
                  :ARG1-of (g / good-02))))"
"(m / multi-sentence
      :snt1 (k / kid-01
            :ARG0 (y / you)
            :polarity (a / amr-unknown))
      :snt2 (o / obvious-01
            :ARG1 (a2 / allow-01
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""Donald""
                              :op2 ""Trump""))
                  :ARG1 (g / gouge-02
                        :ARG0 (p2 / person
                              :ARG0-of (d / donate-01
                                    :ARG2 p))
                        :ARG1 (p3 / person
                              :mod (c / country
                                    :name (n2 / name
                                          :op1 ""America"")))
                        :time (p4 / pandemic
                              :mod (c2 / coronavirus)))
                  :ARG1-of (ii / instead-of-91
                        :ARG2 (a3 / activate-01
                              :ARG0 p
                              :ARG1 (g2 / government-organization
                                    :name (n3 / name
                                          :op1 ""Works""
                                          :op2 ""Progress""
                                          :op3 ""Administration"")
                                    :location-of (c3 / control-01
                                          :ARG1 (m2 / monetary-quantity
                                                :ARG2-of (p5 / price-01)))))))
            :degree (r / really)
            :time (n4 / now)))"
"(s / support-01
      :ARG0 (p / person
            :ARG0-of (o / own-01
                  :ARG1 (c / company
                        :name (n / name
                              :op1 ""Lunds""
                              :op2 ""Art""
                              :op3 ""Sculpture""
                              :op4 ""Gifts""))))
      :ARG1 (d / decide-01
            :ARG0 (s2 / state
                  :name (n2 / name
                        :op1 ""Utah""))
            :ARG1 (ii / issue-01
                  :ARG0 s2
                  :ARG1 (o2 / order-01
                        :ARG1 (s3 / stay-01
                              :location (h / home)))))
      :concession (t / tough-02
            :ARG1 (t2 / this)
            :ARG2 (b / business)))"
"(m / multi-sentence
      :snt1 (m2 / message-01
            :ARG0 (p / person
                  :ARG0-of (w / work-01
                        :ARG1 (r / retail-01)))
            :ARG1 (f / force-01
                  :ARG1 (ii / i)
                  :ARG2 (w2 / work-01
                        :ARG0 ii)
                  :concession (w3 / work-01
                        :polarity -
                        :ARG0 ii
                        :ARG2 (s / store
                              :mod (e / essential))))
            :ARG2 (e2 / everyone))
      :snt2 (a / and
            :op1 (c / company
                  :name (n / name
                        :op1 ""Coronavirus""))
            :op2 (p2 / person
                  :name n
                  :op1 ""Covid19"")))"
"(s / see-01
      :ARG1 (m / maintain-01
            :ARG0 (p / person)
            :ARG1 (d / distance-01
                  :ARG1 p
                  :ARG2 (s2 / social))
            :location (q / queue
                  :location (o / outside
                        :op1 (s3 / supermarket
                              :ARG1-of (l / local-02)
                              :location (c / city
                                    :name (n / name
                                          :op1 ""Pune""))))))
      :ARG1-of (c2 / cause-01
            :ARG0 (o2 / outbreak-29
                  :ARG1 (d2 / disease
                        :name (n2 / name
                              :op1 ""coronavirus"")))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (s / simulate-01
                  :ARG0 (p / person
                        :ARG0-of (r / research-01)
                        :location (c / country
                              :name (n / name
                                    :op1 ""Finland"")))
                  :ARG1 (p2 / possible-01
                        :ARG1 (a2 / and
                              :op1 (h / hang-01
                                    :ARG1 (d / droplet
                                          :source (p3 / person
                                                :ARG0-of (c2 / cough-01
                                                      :location (s2 / store
                                                            :mod (g / grocery)
                                                            :part (a3 / aisle)))))
                                    :ARG2 (a4 / air))
                              :op2 (t / travel-01
                                    :ARG0 d
                                    :ARG1 a3))))
            :op2 (f / find-01
                  :ARG0 p
                  :ARG1 (s3 / safe-01
                        :ARG0 (p4 / pick-up-04
                              :location (c3 / curbside))
                        :ARG2-of (h2 / have-degree-91
                              :ARG1 p4
                              :ARG3 (m2 / more)))))
      :snt2 (a5 / and
            :op1 (s4 / string-entity
                  :value ""COVID19"")
            :op2 (s5 / string-entity
                  :value ""COVID-19"")
            :op3 (g2 / groceryyshopping)
            :op4 (s6 / stay-01
                  :location (h3 / home))))"
"(m / multi-sentence
      :snt1 (h / have-mod-91
            :polarity -
            :ARG1 (c / city
                  :name (n / name
                        :op1 ""New""
                        :op2 ""York""))
            :ARG2 (c2 / city
                  :name (n2 / name
                        :op1 ""New""
                        :op2 ""York""
                        :op3 ""City""))
            :condition (h2 / have-03
                  :polarity -
                  :ARG0 c
                  :ARG1 (m2 / museum
                        :ARG0-of (p / profit-01
                              :polarity -)
                        :poss c)))
      :snt2 (c3 / contrast-01
            :ARG2 (o / obligate-01
                  :ARG1 (w / we)
                  :ARG2 (p2 / protect-01
                        :ARG0 w
                        :ARG1 (m3 / museum
                              :poss w)
                        :time (n3 / now))
                  :condition (w2 / want-01
                        :ARG0 w
                        :ARG1 (s / survive-01
                              :ARG0 m3
                              :ARG1 (d / disaster
                                    :name (n4 / name
                                          :op1 ""COVID-19""))))))
      :snt3 (c4 / cause-01
            :ARG0 (t / that)
            :ARG1 (l / lead-02
                  :ARG0 (ii / i)
                  :ARG1 (d2 / delegation
                        :mod (g / government-organization
                              :name (n5 / name
                                    :op1 ""Congress""))
                        :mod (c5 / city
                              :name (n6 / name
                                    :op1 ""New""
                                    :op2 ""York""
                                    :op3 ""City"")))
                  :ARG2 (c6 / call-03
                        :ARG0 d2
                        :ARG1 (m4 / monetary-quantity
                              :quant 4000000000
                              :unit (d3 / dollar)
                              :purpose (e / emergency)))
                  :accompanier (p3 / person
                        :name (n7 / name
                              :op1 ""RepMaloney"")))))"
"(b / begin-01
      :ARG1 (w / week
            :mod (t / trade-01))
      :ARG2 (l / lower-05
            :ARG1 (a / and
                  :op1 (m / monetary-quantity
                        :ARG2-of (p / price-01
                              :ARG1 (s / stock)))
                  :op2 (m2 / monetary-quantity
                        :ARG2-of (p2 / price-01
                              :ARG1 (b2 / bond)))
                  :mod (b3 / both)))
      :ARG1-of (c / cause-01
            :ARG0 (c2 / continue-01
                  :ARG1 (ii / impact-01
                        :ARG0 (f / fallout
                              :mod (c3 / coronavirus))
                        :ARG1 (m3 / market
                              :mod (f2 / financial)
                              :mod (c4 / country
                                    :name (n / name
                                          :op1 ""U.S."")))))))"
"(r / recommend-01
      :ARG1 (c / create-01
            :ARG0 (c2 / company
                  :name (n / name
                        :op1 ""IKEA""))
            :ARG1 (p / product
                  :ARG1-of (n2 / new-01))
            :ARG2-of (r2 / respond-01
                  :ARG0 c2
                  :ARG1 (p2 / pandemic
                        :mod (c3 / coronavirus)))))"
"(a / and
      :op1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Biden""))
            :ARG1 (g / goal
                  :poss p
                  :domain (u / unite-01
                        :ARG0 p
                        :ARG1 (a2 / and
                              :op1 (p2 / party)
                              :op2 (c / country))
                        :purpose (r / respond-01
                              :ARG0 a2
                              :ARG1 (b / break-out-30
                                    :ARG1 (o / organization
                                          :name (n2 / name
                                                :op1 ""COVID-19"")))
                              :manner (t / together))))
            :time (d / date-entity
                  :weekday (t2 / thursday)))
      :op2 (v / vow-01
            :ARG0 p
            :ARG1 (r2 / roll-back-04
                  :ARG0 p
                  :ARG1 (a3 / and
                        :op1 (r3 / regulate-01
                              :ARG0 (g2 / government-organization
                                    :ARG0-of (a4 / administrate-01)
                                    :mod (p3 / person
                                          :name (n3 / name
                                                :op1 ""Trump"")))
                              :mod (a5 / all))
                        :op2 (o2 / order-01
                              :mod (e / executive))
                        :ARG0-of (h / harm-01
                              :ARG1 (a6 / and
                                    :op1 (e2 / environment)
                                    :op2 (p4 / person
                                          :ARG0-of (w / work-01))))))
            :mod (a7 / also)))"
"(m / multi-sentence
      :snt1 (g / good-02
            :polarity -
            :ARG1 (t / this))
      :snt2 (a / and
            :op1 (m2 / manage-01
                  :ARG0 (ii / i)
                  :ARG1 (b / book-03
                        :ARG0 ii
                        :ARG1 (d / deliver-01
                              :ARG0 (s / supermarket)
                              :ARG1 (s2 / stuff
                                    :ARG1-of (ii2 / include-91
                                          :ARG2 (s3 / stuff
                                                :ARG1-of (o / order-02
                                                      :ARG0 ii))
                                          :ARG3 (m3 / more-than
                                                :op1 ""1/2"")))))
                  :degree (b2 / barely))
            :op2 (t2 / turn-up-15
                  :polarity -
                  :ARG1 s2))
      :snt3 (g2 / get-01
            :ARG0 ii
            :ARG1 (f / food
                  :ARG1-of (f2 / freeze-01)
                  :mod (o2 / only)
                  :mod (c / company
                        :name (n / name
                              :op1 ""Alphabites"")))
            :ARG1-of (m4 / manage-01
                  :ARG0 ii))
      :snt4 (t3 / thank-01
            :ARG0 ii
            :ARG1 (p / person
                  :ARG0-of (b3 / buy-01
                        :mod (p2 / panic-01)))))"
"(m / multi-sentence
      :snt1 (c / crisis
            :mod (t / toilet))
      :snt2 (p / panic-01
            :ARG0 (t2 / toilet))
      :snt3 (a / announce-01
            :ARG1 (s / stop-01
                  :mode imperative
                  :polite +
                  :ARG0 (y / you)
                  :ARG1 (h / hoard-01
                        :ARG0 y
                        :ARG1 (p2 / paper
                              :purpose (t3 / toilet))))
            :mod (s2 / serve-01
                  :ARG1-of (p3 / public-02)))
      :snt4 (a2 / apocalypse))"
"(c / contrast-01
      :ARG1 (t / try-01
            :ARG0 (ii / i)
            :ARG1 (o / order-02
                  :ARG0 ii
                  :ARG1 (f / food)
                  :ARG3 (p / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 ii
                              :ARG2 (p2 / parent))
                        :ARG1-of (h2 / have-degree-91
                              :ARG2 (o2 / old)
                              :ARG3 (m / more)))
                  :medium (o3 / online)))
      :ARG2 (a / and
            :op1 (l / leave-17
                  :polarity -
                  :ARG1 (o4 / or
                        :op1 (m2 / meat)
                        :op2 (f2 / fruit)
                        :op3 (v / vegetable)
                        :location-of l)
                  :op1 (c2 / company
                        :name (n / name
                              :op1 ""Metro""))
                  :op2 (c3 / company
                        :name (n2 / name
                              :op1 ""Loblaws""))))
      :op2 (p3 / possible-01
            :polarity -
            :ARG1 (d / deliver-01
                  :ARG0 c2
                  :duration (t2 / temporal-quantity
                        :quant 2
                        :unit (w / week)
                        :mod (m3 / more)))))"
"(ii / increase-01
      :ARG1 (s / shop-01
            :location (w / world-region
                  :name (n / name
                        :op1 ""Latin""
                        :op2 ""America""))
            :manner (o / online))
      :ARG2 (p / percentage-entity
            :value 26)
      :time (w2 / week
            :ord (o2 / ordinal-entity
                  :value 1)
            :time-of (b / break-out-30
                  :ARG1 (o3 / organization
                        :name (n2 / name
                              :op1 ""COVID-19"")))))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (r / report-01
                  :ARG0 (s2 / store
                        :location (c / city-district
                              :name (n / name
                                    :op1 ""High""
                                    :op2 ""Wycombe"")))
                  :mod (r2 / retail-01))
            :ARG1 (a / and
                  :op1 (c2 / crowd-01
                        :ARG1 s2
                        :time (d / date-entity
                              :dayperiod (m2 / morning)
                              :mod (t / today))
                        :degree (v / very))
                  :op2 (h / hygiene
                        :quant (n2 / none)
                        :location (t2 / there)
                        :time (w / week
                              :mod (l / last))
                        :example (w2 / wipe-down-02
                              :ARG1 (t3 / trolley)))))
      :snt2 (s3 / say-01
            :ARG0 (p / person)
            :ARG1 (g / go-02
                  :ARG0 p
                  :ARG4 (c3 / company
                        :name (n3 / name
                              :op1 ""Asda""))
                  :time (w3 / week
                        :mod (n4 / next)))))"
"(m / multi-sentence
      :snt1 (m2 / mechanism
            :instrument-of (d / discount-01
                  :ARG0 (c / company
                        :ARG1-of (p / public-02)))
            :domain (m3 / market
                  :mod (s / stock))
            :ARG1-of (m4 / mean-01
                  :ARG2 (t / take-into-account-04
                        :ARG0 m3
                        :ARG1 (m5 / movement-07
                              :ARG1 (t2 / thing
                                    :ARG2-of (p2 / price-01)
                                    :time (f / future)))
                        :ARG2 (t3 / term
                              :time (p3 / present)))))
      :snt2 (c2 / cause-01
            :ARG0 (t4 / that)
            :ARG1 (s2 / sell-off-04
                  :ARG0 (m6 / market)
                  :ARG1 (p4 / percentage-entity
                        :value 30)
                  :time (b / before
                        :op1 (g / grow-01
                              :ARG1 (p5 / program
                                    :name (n / name
                                          :op1 ""COVID-19""))
                              :ARG2 (e / exponential)))))
      :snt3 (p6 / possible-01
            :ARG1 (e2 / expect-01
                  :ARG0 (p7 / person)
                  :ARG1 (h / have-degree-91
                        :ARG1 (e3 / employ-01
                              :polarity -)
                        :ARG2 (h2 / high-02
                              :ARG1 e3
                              :mod (e4 / even))
                        :ARG3 (m7 / more)))))"
"(m / multi-sentence
      :snt1 (t / think-01
            :ARG1 (o / on-to-01
                  :ARG1 (s / something)))
      :snt2 (r / remember-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (a / and
                  :op1 (h / hope-01
                        :ARG0 y
                        :ARG1 (s2 / stay-01
                              :ARG1 (b / behave-01
                                    :quant 10
                                    :ARG1 (p / person
                                          :ARG0-of (c / consume-01))
                                    :ARG1-of (n / new-01)
                                    :mod (t2 / this))
                              :location (h2 / here))
                        :time (a2 / after
                              :op1 (p2 / pandemic))))
            :mod (j / just)))"
"(m / multi-sentence
      :snt1 (s / struggle-02
            :ARG0 (m2 / minister
                  :mod (p / prime)
                  :mod (l / last))
            :ARG1 (r / recover-01
                  :ARG1 m2
                  :ARG2 (t / thing
                        :ARG2-of (p2 / price-01)
                        :time (d / date-entity
                              :time ""12:30""
                              :timezone ""GMT""))))
      :snt2 (w / watch-out-02
            :ARG1 (t2 / thing
                  :ARG2-of (p3 / price-01))
            :medium (p4 / publication
                  :name (n / name
                        :op1 ""Mitrade""
                        :op2 ""PC""
                        :op3 ""Bloomberg""))))"
"(m / multi-sentence
      :snt1 (l / learn-01
            :ARG0 (y / you)
            :ARG1 (p / principle
                  :mod (e / economy)
                  :mod (a / amr-unknown)
                  :ARG2-of (r / result-01
                        :ARG1 (p2 / pandemic
                              :name (n / name
                                    :op1 ""Covid-19"")))))
      :snt2 (l2 / learn-01
            :ARG0 (ii / i)
            :ARG1 (c / correlate-91
                  :ARG1 (m2 / more
                        :ARG3-of (h / have-degree-91
                              :ARG1 (d / demand-01)
                              :ARG2 (h2 / high-02
                                    :ARG1 d)))
                  :ARG2 (m3 / more
                        :ARG3-of (h3 / have-degree-91
                              :ARG1 (m4 / monetary-quantity
                                    :ARG2-of (p3 / price-01))
                              :ARG2 (h4 / high-02
                                    :ARG1 m4)))))
      :snt3 (s / see-01
            :ARG0 (w / we)
            :ARG1 (ii2 / increase-01
                  :ARG0 (s2 / store
                        :ARG0-of (r2 / retail-01))
                  :ARG1 (m5 / monetary-quantity
                        :ARG2-of (p4 / price-01
                              :ARG1 (s3 / stock)))
                  :time (r3 / recent))))"
"(t / thank-01
      :ARG1 (a / and
            :op1 (p / professional
                  :mod (m / medicine)
                  :poss (w / we)
                  :mod (a2 / all))
            :op2 (p2 / person
                  :ARG1-of (e / employ-01
                        :ARG2 (s / store
                              :mod (g / grocery)))
                  :mod (a3 / all))
            :op3 (p3 / person
                  :ARG0-of (r / respond-01
                        :ord (o / ordinal-entity
                              :value 1))
                  :mod (a4 / all))
            :op4 (e2 / everyone
                  :mod (e3 / else)
                  :location (l / line
                        :mod (f / front)
                        :location (a5 / around
                              :op1 (w2 / world))))))"
"(m / multi-sentence
      :snt1 (k / know-02
            :ARG0 (ii / i)
            :ARG1 (p / person
                  :quant 3
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (r / role
                              :ARG0-of (f / face-01
                                    :ARG1 (p2 / public))))
                  :ARG0-of (ii2 / isolate-01)
                  :ARG0-of (s / sure-02
                        :ARG1 (c / consistent-01
                              :ARG1 (s2 / symptom
                                    :poss p)
                              :ARG2 (l / law
                                    :name (n / name
                                          :op1 ""COVID-19""))))))
      :snt2 (c2 / contrast-01
            :ARG2 (a / and
                  :op1 (t / test-01
                        :polarity -
                        :ARG1 (t2 / they
                              :mod (a2 / all)))
                  :op2 (w / work-01
                        :ARG0 t2
                        :mod (s3 / still)
                        :time (b / begin-01
                              :ARG1 (c3 / cough-01))))))"
"(s / say-01
      :ARG0 (r / retailer
            :quant 80
            :ARG1-of (ii / include-91
                  :ARG2 (r2 / retailer
                        :quant 100
                        :mod (c / country
                              :name (n / name
                                    :op1 ""US""))
                        :mod (t / top))))
      :ARG1 (s2 / surge-01
            :ARG1 (b / behave-01
                  :ARG1 (s3 / shop-01
                        :medium (o / online))
                  :quant (s4 / some))
            :ARG2 (m / more-than
                  :op1 (p / percentage-entity
                        :value 800))
            :time (b2 / before
                  :op1 (n2 / now)
                  :duration (f / few
                        :op1 (t2 / temporal-quantity
                              :quant 1
                              :unit (w / week))))))"
"(m / multi-sentence
      :snt1 (v / venture-01
            :ARG0 (ii / i)
            :ARG1 (c / city)
            :time (t / today)
            :purpose (f / forage-01
                  :ARG0 ii
                  :ARG2 (t2 / thing
                        :ARG1-of (n / need-01))))
      :snt2 (a / and
            :op1 (r / ransack-01
                  :ARG1 (s / store
                        :mod (g / grocery))
                  :mod (s2 / still))
            :op2 (r2 / restrict-01
                  :ARG0 s
                  :ARG1 (f2 / food
                        :mod (c2 / certain))
                  :time (n2 / now)))
      :snt3 (ii2 / item
            :mod (p / premium)
            :domain (p2 / paper
                  :purpose (t3 / toilet))
            :mod (s3 / still))
      :snt4 (p3 / place
            :ARG1-of (b / bad-07
                  :ARG2 (s4 / shop-01
                        :time (n3 / now
                              :mod (r3 / right))))
            :domain (m2 / market
                  :name (n4 / name
                        :op1 ""Whole""
                        :op2 ""Foods""))))"
"(m / multi-sentence
      :snt1 (o / obligate-01
            :ARG1 (r / restaurant
                  :name (n / name
                        :op1 ""Versailles"")
                  :mod (c / country
                        :name (n2 / name
                              :op1 ""Cuba""))
                  :mod (s / staple
                        :location (c2 / city
                              :name (n3 / name
                                    :op1 ""Miami""))))
            :ARG2 (c3 / close-01
                  :ARG1 (r2 / room
                        :mod (d / dine-01)
                        :poss r)))
      :snt2 (c4 / cause-01
            :ARG1 (t / team-up-02
                  :ARG0 (t2 / they)
                  :ARG1 (c5 / company
                        :name (n4 / name
                              :op1 ""Sedano""
                              :op2 ""Supermarket"")
                        :ARG0-of (a / agree-01
                              :ARG1 (h / hire-01
                                    :ARG0 c5
                                    :ARG1 (p / person
                                          :quant 400
                                          :ARG1-of (e / employ-01
                                                :ARG0 c5))
                                    :time (p2 / pandemic
                                          :name (n5 / name
                                                :op1 ""COVID""
                                                :op2 19))))))))"
"(p / punch-01
      :ARG0 (m / man
            :location (s / state
                  :name (n / name
                        :op1 ""California"")))
      :ARG1 (p2 / person
            :ARG0-of (h / have-rel-role-91
                  :ARG1 m
                  :ARG2 (m2 / mother)))
      :ARG1-of (c / cause-01
            :ARG0 (h2 / hide-01
                  :ARG0 m
                  :ARG1 (p3 / paper
                        :purpose (t / toilet))
                  :time (l / lock-down-06
                        :ARG3 (c2 / coronavirus)))))"
"(m / multi-sentence
      :snt1 (s / stop-01
            :mode imperative
            :polite +
            :ARG0 (y / you)
            :ARG1 (p / panic-01
                  :ARG0 y
                  :ARG1 (b / buy-01
                        :ARG0 y
                        :ARG1 (f / food
                              :ARG1-of (f2 / free-04
                                    :ARG2 (g / gluten)))))
            :condition (h / have-mod-91
                  :polarity -
                  :ARG1 y
                  :ARG2 (d / disease
                        :name (n / name
                              :op1 ""Coeliac""))))
      :snt2 (f3 / fair-01
            :polarity -
            :ARG1 (ii / it)
            :ARG1-of (c / cause-01
                  :ARG0 (m2 / mean-01
                        :ARG1 (t / that)
                        :ARG2 (p2 / possible-01
                              :polarity -
                              :ARG1 (b2 / buy-01
                                    :ARG0 (ii2 / i)
                                    :ARG1 (f4 / food
                                          :mod (a / any)
                                          :ARG1-of (e / eat-01
                                                :ARG0 ii2
                                                :ARG1-of (p3 / possible-01)))))))))"
"(a / and
      :op1 (h / heart
            :part-of (n / neighborhood
                  :quant (m / many)
                  :location (c / city
                        :name (n2 / name
                              :op1 ""Los""
                              :op2 ""Angeles"")))
            :domain (a2 / and
                  :op1 (c2 / chain
                        :mod (s / supermarket)
                        :mod (e / ethnic-group
                              :name (n3 / name
                                    :op1 ""Latino"")))
                  :op2 (c3 / carniceria)
                  :op3 (s2 / store
                        :mod (l / liquor))
                  :op4 (t / tienda)
                  :op5 (m2 / market
                        :mod (s3 / station
                              :mod (g / gas))))
            :ARG1-of (l2 / long-03))
      :op2 (c4 / crucial
            :domain a2
            :purpose (f / feed-01
                  :ARG0 a2
                  :ARG2 (p / person)
                  :time (p2 / pandemic))
            :time (n4 / now)))"
"(f / face-01
      :ARG0 (s / store
            :mod (g / grocery)
            :location (a / across
                  :op1 (c / country
                        :name (n / name
                              :op1 ""America""))))
      :ARG1 (s2 / shelf
            :ARG1-of (e / empty-02))
      :ARG1-of (c2 / cause-01
            :ARG0 (o / outbreak-29
                  :ARG1 (d / disease
                        :name (n2 / name
                              :op1 ""Covid-19"")))))"
"(c / cut-02
      :ARG0 (g / government-organization
            :name (n / name
                  :op1 ""Bank""
                  :op2 ""of""
                  :op3 ""England""))
      :ARG1 (r / rate
            :mod (ii / interest))
      :ARG4 (p / percentage-entity
            :value 0.1)
      :purpose (f / fight-01
            :ARG0 g
            :ARG1 (c2 / coronavirus)))"
"(h / have-concession-91
      :ARG1 (l / land-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Nathan""
                        :op2 ""Tink"")
                  :ARG0-of (h2 / have-org-role-91
                        :ARG2 (c / chef)
                        :time (f / former))
                  :ARG1-of (ii / include-91
                        :ARG2 (p2 / person
                              :mod (c2 / country
                                    :name (n2 / name
                                          :op1 ""Australia""))
                              :quant (m / multiple
                                    :op1 1000)
                              :ARG0-of (l2 / lose-02
                                    :ARG1 (j / job
                                          :poss p2)
                                    :ARG1-of (c3 / cause-01
                                          :ARG0 (c4 / crisis
                                                :name (n3 / name
                                                      :op1 ""COVID-19"")))))))
            :ARG1 (r / role
                  :ARG1-of (n4 / new-01)
                  :mod (ii2 / industry
                        :ARG1-of (s / shape-up-02
                              :ARG2 (p3 / prove-01
                                    :mod (p4 / pseudemic)))))
            :time (a / already))
      :ARG2 l2)"
"(r / report-01
      :ARG0 (n / newsletter
            :name (n2 / name
                  :op1 ""InternetRetailing"")
            :time (t / today))
      :ARG1 (a / affect-01
            :ARG0 (c / coronavirus
                  :name (n3 / name
                        :op1 ""Covid-19""))
            :ARG1 (r2 / retail-01
                  :location (c2 / country
                        :name (n4 / name
                              :op1 ""UK"")))
            :ARG1-of (c3 / continue-01)))"
"(o / obligate-01
      :ARG1 (w / we)
      :ARG2 (s / save-02
            :ARG0 w
            :ARG1 (a / and
                  :op1 (p / person
                        :ARG0-of (w2 / work-01
                              :ARG2 (a2 / and
                                    :op1 (s2 / store
                                          :mod (g / grocery))
                                    :op2 (p2 / pharmacy))))
                  :op2 (p3 / person
                        :mod (t / that)
                        :ARG0-of (k / keep-02
                              :ARG1 (g2 / go-09
                                    :ARG1 (a3 / and
                                          :op1 (s3 / show-04
                                                :ARG3 (t2 / television))
                                          :op2 (ii / internet)
                                          :poss w)))))))"
"(m / multi-sentence
      :snt1 (p / prioritize-01
            :ARG0 (w / we)
            :ARG1 (a / and
                  :op1 (h / health
                        :poss (a2 / and
                              :op1 (c / customer
                                    :poss (w2 / we))
                              :op2 (p2 / person
                                    :ARG2-of (s / staff-01
                                          :ARG1 w2))))
                  :op2 (w3 / well-09
                        :ARG1 a2))
            :ARG1-of (c2 / cause-01
                  :ARG0 (c3 / continue-01
                        :ARG1 (d / develop-01
                              :ARG1 (s2 / situation
                                    :mod (o / organization
                                          :name (n / name
                                                :op1 ""COVID-19""))))))
            :mod (t / top))
      :snt2 (h2 / have-concession-91
            :ARG1 (ii / implement-01
                  :ARG0 (w4 / we)
                  :ARG1 (m2 / measure-02
                        :ARG0 w4
                        :ARG1 (h3 / help-01
                              :ARG0 w4
                              :ARG1 (m3 / minimize-01
                                    :ARG0 w4
                                    :ARG1 (r / risk-01
                                          :ARG2 (a3 / and
                                                :op1 c
                                                :op2 p2)
                                          :mod (a4 / any))))))
            :ARG2 (r2 / remain-01
                  :ARG1 (s3 / store
                        :mod (r3 / retail-01)
                        :poss w4)
                  :ARG3 (o2 / open-09
                        :ARG1 s3))))"
"(m / multi-sentence
      :snt1 (s / stand-up-07
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""John""))
            :time (d / day
                  :ord (o / ordinal-entity
                        :value 1)
                  :time-of (q / quarantine-01
                        :ARG1 p)))
      :snt2 (h / humor
            :purpose (h2 / help-01
                  :ARG1 (g / get-through-13
                        :ARG0 (w / we)
                        :ARG1 (t / time
                              :mod (d2 / difficult)
                              :mod (t2 / this)))
                  :ARG2 w)
            :ARG0-of h2
            :quant (l / little))
      :snt3 (s2 / stay-01
            :mode imperative
            :ARG1 (y / you)
            :ARG3 (s3 / safe-01
                  :ARG1 y)))"
"(a / affect-01
      :ARG0 (l / law
            :name (n / name
                  :op1 ""COVID-19""))
      :ARG1 (p / price-01
            :ARG2 (p2 / person
                  :ARG0-of (c / consume-01)
                  :location (c2 / country
                        :name (n2 / name
                              :op1 ""US""))))
      :time (d / date-entity
            :month 3))"
"(m / multi-sentence
      :snt1 (l / leave-17
            :ARG1 (s / set
                  :quant 3
                  :mod (a / all)
                  :mod (p / plenty))
            :mod (s2 / still))
      :snt2 (a2 / and
            :op1 (m2 / message-01
                  :mode imperative
                  :ARG0 (y / you)
                  :ARG2 (w / we))
            :op2 (g / get-01
                  :mode imperative
                  :ARG0 y
                  :ARG1 (t / thing
                        :poss y)
                  :time (t2 / today)))
      :snt3 (ii / include-01
            :ARG1 (d / deliver-01
                  :ARG2 (d2 / door
                        :mod (f / front)
                        :poss (y2 / you))
                  :source (c / country
                        :name (n / name
                              :op1 ""UK"")))
            :ARG2 (p2 / price-01)))"
"(f / feel-01
      :ARG0 (ii / i)
      :ARG1 (h / head-02
            :ARG0 ii
            :ARG1 (g / gate
                  :poss (h2 / hell)))
      :time (e / enter-01
            :ARG0 ii
            :ARG1 (s / supermarket)))"
"(d / declare-01
      :ARG0 (g / government-organization
            :name (n / name
                  :op1 ""Federal""
                  :op2 ""Communications""
                  :op3 ""Commission""))
      :ARG2 (e / exempt-01
            :ARG1 (a / and
                  :op1 (c / call-02)
                  :op2 (t / text-01)
                  :mod (c2 / certain)
                  :topic (l / law
                        :name (n2 / name
                              :op1 ""COVID-19"")))
            :ARG2 (l2 / law
                  :name (n3 / name
                        :op1 ""Telephone""
                        :op2 ""Consumer""
                        :op3 ""Protection""
                        :op4 ""Act"")))
      :mod (n4 / news))"
"(s / see-01
      :ARG0 (y / you)
      :ARG1 (a / amr-unknown)
      :topic (c / coronavirus)
      :source (l / location
            :location-of y
            :location (w / world)))"
"(s / say-01
      :ARG0 (m / magazine
            :name (n / name
                  :op1 ""Forbes""))
      :ARG1 (s2 / show-01
            :ARG0 (c / crisis
                  :name (n2 / name
                        :op1 ""COVID-19""))
            :ARG1 (a / and
                  :op1 (ii / issue-02
                        :ARG0 (f / flow-01
                              :ARG1 (c2 / cash))
                        :ARG1 (b / business
                              :mod (s3 / small)
                              :mod (c3 / country
                                    :name (n3 / name
                                          :op1 ""America""))
                              :quant (m2 / many))
                        :mod (t / too))
                  :op2 (l / live-01
                        :ARG0 b
                        :ARG1 (e / equivalent
                              :mod (p / paycheck
                                    :prep-to (p2 / paycheck)))
                        :ARG1-of (e2 / effective-04))))
      :ARG1-of (c4 / cause-01
            :ARG0 (p3 / possible-01
                  :ARG1 (t2 / tip-01
                        :ARG0 (d / decline-01
                              :ARG1 (d2 / demand-01
                                    :ARG0 (p4 / person
                                          :ARG0-of (c5 / consume-01)))
                              :ARG1-of (s4 / sharp-02))
                        :ARG1-of (e3 / easy-05)))))"
"(m / multi-sentence
      :snt1 (h / have-purpose-91
            :ARG2 (a / avoid-01
                  :ARG1 (a2 / and
                        :op1 (o / obligate-01
                              :ARG2 (d / drop-01
                                    :ARG1 (p / price-01)))
                        :op2 (u / use-01
                              :ARG1 (s / scarcity)
                              :ARG2 (m2 / maintain-01
                                    :ARG1 (d2 / demand-01
                                          :ARG1 (o2 / offer-01)))))))
      :snt2 a2
      :op1 (t / trash
            :ARG1-of (p2 / pure-02)
            :domain (ii / it))
      :op2 (t2 / this
            :ARG1-of (h2 / have-frequency-91
                  :ARG2 (m3 / many
                        :mod (s2 / so))
                  :time (b / before))))"
"(e / extend-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Tailored""
                  :op2 ""Brands""))
      :ARG1 (c2 / close-01
            :ARG0 c
            :ARG1 (s / store
                  :poss c)
            :mod (t / temporary))
      :ARG2 (s2 / several
            :op1 (t2 / temporal-quantity
                  :quant 1
                  :unit (w / week))
            :mod (m / more)))"
"(m / multi-sentence
      :snt1 (ii / impact-01
            :ARG0 (d / distance-01
                  :mod (s / social))
            :ARG1 (b / behave-01
                  :ARG0 (p / person
                        :ARG0-of (c / consume-01)))
            :ARG2-of (h / have-degree-91
                  :ARG1 b
                  :ARG3 (m2 / more)
                  :ARG4 (e / ever))
            :location (a / across
                  :op1 (ii2 / industry
                        :mod (e2 / entertainment))
                  :mod (e3 / especially)))
      :snt2 (p2 / predict-01
            :ARG0 (y / you)
            :ARG1 (w / witness-01
                  :ARG0 (w2 / we)
                  :ARG1 (p3 / practice-01
                        :ARG1 (a2 / amr-unknown)
                        :degree (f / further))
                  :time (c2 / change-01
                        :ARG1 (p4 / pattern-01
                              :ARG1 (b2 / behave-01
                                    :ARG0 p))))))"
"(h / hear-01
      :polarity -
      :ARG0 (ii / i)
      :ARG1 (r / rumor-01)
      :ARG0-of (c / cause-01
            :ARG1 (s / surprise-01
                  :ARG1 ii
                  :time (b / busy-01
                        :ARG1 (s2 / supermarket)
                        :degree (s3 / so)))))"
"(t / thing
      :ARG2-of (c / calculate-01
            :ARG1 (p / paper
                  :purpose (t2 / toilet)))
      :medium (l / language
            :name (n / name
                  :op1 ""German""))
      :domain (t3 / this))"
"(m / multi-sentence
      :snt1 (s / start-01
            :ARG0 (ii / i)
            :ARG1 (c / cry-02
                  :ARG0 ii)
            :time (s2 / say-01
                  :ARG0 (p / person
                        :ARG0-of (m2 / manage-01)
                        :ARG1-of (ii2 / include-91
                              :ARG2 (p2 / person
                                    :ARG0-of (m3 / manage-01)
                                    :poss ii)))
                  :ARG1 (s3 / slow-05
                        :ARG1 (d / day)
                        :location (s4 / store
                              :mod (g / grocery)
                              :poss (w / we)))))
      :snt2 (s5 / say-01
            :ARG0 (p3 / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (h2 / he)
                        :ARG2 (w2 / wife)))
            :ARG1 (a / and
                  :op1 (f / full-09
                        :ARG1 (f2 / facility
                              :name (n / name
                                    :op1 ""ICU"")
                              :poss p3))
                  :op2 (p4 / possible-01
                        :polarity -
                        :ARG1 (k / keep-up-05
                              :ARG0 f2))))
      :snt3 (b / break-heart-31
            :ARG1 (h3 / heart
                  :part-of (ii3 / i))))"
"(b / be-located-at-91
      :ARG2 (h / home)
      :time (m / meanwhile))"
"(l / look-04
      :ARG0 (c / company
            :mod (f / food))
      :ARG1 (h / hire-01
            :ARG0 c
            :ARG1 (p / person
                  :ARG0-of (w / work-01)
                  :quant (m / multiple
                        :op1 1000))
            :purpose (k / keep-up-05
                  :ARG0 c
                  :ARG1 (d / demand-01
                        :ARG1-of (ii / increase-01))))
      :ARG1-of (c2 / cause-01
            :ARG0 (c3 / concern-01
                  :ARG0 (o / organization
                        :name (n / name
                              :op1 ""COVID-19"")))))"
"(c / cause-01
      :ARG0 (r / request-01
            :ARG0 (s / someone)
            :ARG1 (w / write-01
                  :ARG0 (ii / i)
                  :ARG1 (p / psalm
                        :topic (p2 / paper
                              :purpose (t / toilet))))
            :ARG2 ii)
      :ARG1 w)"
"(t / try-01
      :ARG0 (ii / i)
      :ARG1 (e / explain-01
            :ARG0 ii
            :ARG1 (t2 / term-01
                  :ARG1 (d / distance-01
                        :ARG2 (s / society)))
            :ARG2 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 ii
                        :ARG2 (c / child))
                  :age (t3 / temporal-quantity
                        :quant 4
                        :unit (y / year))))
      :time (e2 / enter-01
            :ARG0 t2
            :ARG1 (l / lexicon
                  :poss (w / we))
            :ord (o / ordinal-entity
                  :value 1)
            :time (b / before
                  :op1 (n / now)
                  :quant (f / few
                        :op1 (t4 / temporal-quantity
                              :quant 1
                              :unit (w2 / week))))))"
"(t / think-01
      :ARG0 (y / you)
      :ARG1 (w / wear-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Dr.""
                        :op2 ""Fauci""))
            :ARG1 (m / mask)
            :location (s / store
                  :mod (g / grocery)))
      :polarity (a / amr-unknown))"
"(h / highlight-01
      :ARG0 (p / person
            :ARG0-of (e / export-01))
      :ARG1 (r / risk-01
            :ARG0 (p2 / pandemic
                  :name (n / name
                        :op1 ""CODID-19"")))
      :concession (a / appear-02
            :ARG1 (h2 / hold-03
                  :ARG1 (d / demand-01
                        :ARG1 (p3 / product
                              :mod (f / food)))
                  :ARG3 (s / strong-02
                        :ARG1 d)
                  :location (a2 / across
                        :op1 (g / globe)))))"
"(c / change-01
      :ARG1 (b / behave-01
            :ARG0 (p / person
                  :ARG0-of (c2 / consume-01)))
      :ARG1-of (r / radical-02)
      :time (r2 / retreat-01
            :ARG1 (w / world)
            :ARG4 (m / mode
                  :mod (s / survive-01))
            :ARG1-of (c3 / cause-01
                  :ARG0 (o / outbreak-29
                        :ARG1 (c4 / coronavirus)))))"
"(k / keep-01
      :ARG0 (b / bear)
      :ARG1 (c / control-01
            :ARG0 b
            :ARG1 (p / price-01
                  :ARG1 (g / gas
                        :mod (c2 / continent
                              :name (n / name
                                    :op1 ""Europe"")))
                  :mod (s / spot)))
      :ARG1-of (c3 / cause-01
            :ARG0 (e / expect-01
                  :ARG1 (r / remain-01
                        :ARG1 (d / demand-01)
                        :ARG3 (b2 / below
                              :op1 (n2 / norm
                                    :mod (s2 / season)))
                        :ARG1-of (c4 / cause-01
                              :ARG0 (c5 / cut-02
                                    :ARG1 (s3 / sector
                                          :mod (ii / industry)
                                          :mod (c6 / commerce))
                                    :ARG1-of (d2 / drive-02
                                          :ARG0 (c7 / coronavirus))))
                        :concession (f / forecast-01
                              :ARG1 (w / weather
                                    :ARG1-of (c8 / cold-01))
                              :time (w2 / week
                                    :mod (n3 / next)))))))"
"(p / possible-01
      :ARG1 (a / and
            :op1 (o / optimize-01
                  :ARG0 (y / you)
                  :ARG1 (c / content
                        :ARG1-of (g / generate-01
                              :ARG0 (t / talent))))
            :op2 (u / understand-01
                  :ARG0 y
                  :ARG1 (p2 / person
                        :ARG0-of (c2 / consume-01)
                        :ARG1-of (ii / isolate-01)))
            :manner (d / download-01
                  :ARG0 y
                  :ARG1 (r / report
                        :poss (w / we)
                        :mod (l / last)))))"
(a / amr-empty)
"(o / obligate-01
      :ARG1 (p / person
            :quant (m / many))
      :ARG2 (p2 / pivot-01
            :ARG0 p
            :ARG1 (c / career
                  :poss p)
            :ARG2 (a / and
                  :op1 (s / star-01
                        :ARG1 (s2 / stage)
                        :location (b / broadcast-program
                              :name (n / name
                                    :op1 ""West""
                                    :op2 ""End"")))
                  :op2 (s3 / stack-01
                        :ARG0 p
                        :ARG1 (s4 / shelf
                              :mod (s5 / supermarket)))))
      :time (o2 / outbreak-29
            :ARG1 (d / disease
                  :name n
                  :op1 ""coronavirus"")))"
"(u / upend-01
      :ARG0 (c / coronavirus)
      :ARG1 (c2 / chain
            :mod (g / globe)
            :ARG0-of (s / supply-01
                  :ARG1 (f / food)))
      :time (s2 / shock-01
            :ARG1 (e / economy)
            :mod (l / last)))"
"(s / start-01
      :ARG1 (h / hour
            :mod (s2 / store
                  :poss (w / we))
            :time (d / date-interval
                  :op1 (d2 / date-entity
                        :time ""10:00"")
                  :op2 (d3 / date-entity
                        :time ""18:00""))
            :beneficiary (l / location
                  :quant 18
                  :mod (r / retail-01)
                  :mod (a / all)))
      :time (d4 / date-entity
            :month 3
            :day 18
            :weekday (w2 / wednesday)))"
"(d / dig-01
      :mode expressive
      :ARG0 (w / we)
      :ARG1 (p / pool
            :purpose (s / swim-01)
            :mod (f / fiberglass
                  :ARG1-of (ii / inground-00))
            :ord (o / ordinal-entity
                  :value 2)
            :poss w))"
"(a / and
      :op1 (c / come-01
            :ARG1 (p / person
                  :ARG1-of (e / employ-01
                        :ARG0 (c2 / company
                              :name (n / name
                                    :op1 ""Canon"")))
                  :location (a2 / across
                        :op1 (c3 / country
                              :name (n2 / name
                                    :op1 ""India""))))
            :manner (t / together))
      :op2 (c4 / contribute-01
            :ARG0 p
            :ARG2 (o / organization
                  :name (n3 / name
                        :op1 ""PM""
                        :op2 ""Cares""
                        :op3 ""Fund""))))"
"(c / continue-01
      :ARG1 (ii / impact-01
            :ARG0 (c2 / coronavirus)
            :ARG1 (a / and
                  :op1 (ii2 / industry
                        :topic (t / telecommunication))
                  :op2 (ii3 / industry
                        :topic (t2 / technology
                              :mod (p / person
                                    :ARG0-of (c3 / consume-01)))))))"
"(m / multi-sentence
      :snt1 (t / think-01
            :ARG0 (ii / i)
            :ARG1 (b / break-18
                  :ARG0 (g / government-organization
                        :ARG0-of (g2 / govern-01))
                  :ARG1 (r / rule
                        :topic (d / distance-01
                              :ARG1 (s / society))))
            :ARG1-of (c / cause-01
                  :ARG0 (n / number
                        :quant-of (t2 / they
                              :ARG1-of (g3 / go-down-27
                                    :ARG1-of (c2 / cause-01
                                          :ARG0 (c3 / coronavirus)))))))
      :snt2 (b2 / blame-01
            :polarity -
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (r2 / rest
                  :part-of (w / we))))"
(a / amr-empty)
"(m / multi-sentence
      :snt1 (a / and
            :op1 (c / cause-01
                  :ARG0 (p / price-01
                        :ARG1 (o / oil)
                        :ARG1-of (l / low-04))
                  :ARG1 (b / benefit-01
                        :ARG1 (g / government-organization
                              :ARG0-of (g2 / govern-01
                                    :ARG1 (c2 / country
                                          :name (n / name
                                                :op1 ""India""))))))
            :op2 (m2 / mean-01
                  :ARG1 b
                  :ARG2 (s / save-01
                        :ARG1 (m3 / monetary-quantity
                              :ARG1-of (b2 / bill-01
                                    :ARG3 (ii / import-01))))))
      :snt2 (p2 / possible-01
            :ARG1 (b3 / benefit-01
                  :ARG1 (m4 / monetary-quantity
                        :quant 1700000000
                        :unit (r / rupee))
                  :time (a2 / after
                        :op1 (n2 / now)
                        :duration (t / temporal-quantity
                              :quant 6
                              :unit (m5 / month)
                              :mod (a3 / alone)))))
      :snt3 (p3 / possible-01
            :ARG1 (u / use-01
                  :ARG0 (g3 / government-organization
                        :ARG0-of (g4 / govern-01
                              :ARG1 c2))
                  :ARG1 (ii2 / it)
                  :ARG2 (t2 / thing))
            :condition (s2 / save-01
                  :ARG1 (m6 / monetary-quantity
                        :ARG1-of (b4 / bill-01
                              :ARG3 (ii3 / import-01)))
                  :mod (k / kind
                        :mod (t3 / that)))))"
"(r / recommend-01
      :ARG1 (a / and
            :op1 (g / go-02
                  :ARG0 (p / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 (ii / i)
                              :ARG2 (w / wife))
                        :ARG0-of (w2 / work-01
                              :ARG2 (s / supermarket)
                              :ARG1-of (k / key-02)))
                  :ARG4 (w3 / work-01))
            :op2 (r2 / risk-01
                  :ARG0 p
                  :ARG2 (b / bring-01
                        :ARG0 p
                        :ARG1 (p2 / product
                              :name (n / name
                                    :op1 ""COD-19""))
                        :ARG2 (h2 / home))))
      :polarity (a2 / amr-unknown))"
"(c / cause-01
      :ARG0 (o / outbreak-29
            :name (n / name
                  :op1 ""COVID-19""))
      :ARG1 (s / surge-01
            :ARG1 (c2 / commerce
                  :mod (o2 / online))
            :ARG0-of (s2 / shift-01
                  :ARG1 (a / and
                        :op1 (s3 / sentiment
                              :mod (s4 / shop-01))
                        :op2 (t / transact-01
                              :ARG1 s4))
                  :ARG2 (p / platform
                        :mod (r / retail-01)
                        :mod (d / digital))
                  :ARG3 (s5 / store
                        :mod (p2 / physical))
                  :location (c3 / city
                        :name (n2 / name
                              :op1 ""Hong""
                              :op2 ""Kong"")))))"
"(c / contrast-01
      :ARG1 (m / mock-01
            :ARG0 (ii / i)
            :ARG1 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 ii
                        :ARG2 (h2 / husband)))
            :ARG2 (s / stockpile-01
                  :ARG0 p
                  :ARG1 (f / food))
            :time (u / use-03))
      :ARG2 (a / and
            :op1 (t / thankful-02
                  :ARG0 ii
                  :ARG1 s)
            :op2 (s2 / search-01
                  :ARG0 ii
                  :ARG2 (s3 / stock-01
                        :ARG1 (p2 / person
                              :mod (o / other))))
            :time (n / now)))"
"(c / continue-01
      :ARG1 (a / and
            :op1 (o / open-09
                  :ARG1 (s / store
                        :ARG0-of (r / retail-01)))
            :op2 (s2 / spread-03
                  :ARG0 s
                  :ARG1 (v / virus)))
      :time (u / until
            :op1 (m / mandate-01
                  :ARG0 (g / government-organization
                        :ARG0-of (g2 / govern-01))
                  :ARG1 (h / have-polarity-91
                        :ARG1 a
                        :ARG2 -))))"
"(h / hurt-01
      :ARG0 (ii / interfere-01
            :ARG0 (m / military
                  :name (n / name
                        :op1 ""MajLdr""))
            :ARG1 (t / thing
                  :ARG2-of (p / price-01
                        :ARG1 (a / and
                              :op1 (o / oil)
                              :op2 (g / gas)))))
      :ARG1 (p2 / person
            :mod (c / country
                  :name (n2 / name
                        :op1 ""America""))
            :ARG0-of (s / struggle-02
                  :time (a2 / already)
                  :ARG1-of (c2 / cause-01
                        :ARG0 (c3 / coronavirus))))
      :mod (o2 / only))"
"(m / multi-sentence
      :snt1 (p / practice-01
            :ARG0 (p2 / person
                  :ARG0-of (s / shop-01)
                  :ARG1-of (w / wait-01
                        :ARG2 (e / enter-01
                              :ARG0 p2
                              :ARG1 (s2 / store
                                    :mod (g / grocery)
                                    :location (c / city
                                          :name (n / name
                                                :op1 ""Toronto"")
                                          :location (c2 / country
                                                :name (n2 / name
                                                      :op1 ""Canada"")))))))
            :ARG1 (d / distance-01
                  :ARG1 p2
                  :ARG2 (s3 / society)
                  :manner (l / leave-13
                        :ARG0 p2
                        :ARG1 (s4 / space
                              :location (b / between
                                    :op1 (p3 / person
                                          :mod (e2 / each)))
                              :ARG1-of (s5 / significant-02)))))
      :snt2 (a / agree-01
            :ARG0 (a2 / and
                  :op1 (c3 / country
                        :name (n3 / name
                              :op1 ""U.S.""))
                  :op2 c2)
            :ARG1 (c4 / close-01
                  :ARG0 a2
                  :ARG1 (b2 / border-01
                        :ARG1 c3
                        :ARG2 c2)
                  :ARG3 (t / traffic
                        :ARG1-of (n4 / need-01
                              :polarity -))
                  :time (s6 / spread-02
                        :ARG1 (v / virus)))))"
"(c / contrast-01
      :ARG1 (p / possible-01
            :ARG1 (s / see-01
                  :ARG0 (y / you)
                  :ARG1 (d / drop-01
                        :ARG1 (f / footfall
                              :mod (c2 / customer)
                              :location (s2 / store
                                    :mod (g / grocery)
                                    :poss y)))))
      :ARG2 (n / now
            :domain (t / time
                  :purpose (g2 / get-04
                        :ARG0 y
                        :ARG1 (d2 / deliver-01
                              :ARG1 (p2 / product
                                    :poss y)
                              :ARG2 s2
                              :manner (m / means
                                    :mod (d3 / digit)))))))"
"(h / have-concession-91
      :ARG1 (n / need-01
            :ARG0 (ii / i)
            :ARG1 (w / work-01
                  :ARG0 ii))
      :ARG2 (w2 / wish-01
            :ARG0 ii
            :ARG1 (p / possible-01
                  :ARG1 (h2 / hide-01
                        :ARG0 ii
                        :ARG1 ii
                        :location (u / under
                              :op1 (d / duvet))
                        :time (u2 / until
                              :op1 (d2 / date-entity
                                    :month 8))))))"
"(m / multi-sentence
      :snt1 (p / person
            :name (n / name
                  :op1 ""Sudhanshu_M""))
      :snt2 (e / event
            :mod (a / amr-unknown)
            :time (n2 / now)))"
"(p / possible-01
      :ARG1 (w / work-01
            :ARG0 (p2 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (c / country
                              :name (n / name
                                    :op1 ""United""
                                    :op2 ""States""))
                        :ARG2 (p3 / president)))
            :ARG1 (e / establish-01
                  :ARG0 p2
                  :ARG1 (t / this)
                  :ARG1-of (q / quick-02))
            :ARG3 (a / and
                  :op1 (s / service
                        :ARG0-of (d / deliver-01
                              :ARG1 (f / food)))
                  :op2 (c2 / chain
                        :mod (s2 / supermarket))
                  :ARG1-of (e2 / exist-01
                        :time (a2 / already))))
      :prep-to (d2 / document
            :poss (ii / i)))"
"(c / contrast-01
      :ARG1 (r / report-01
            :ARG0 (c2 / company
                  :name (n / name
                        :op1 ""General""
                        :op2 ""Mills""))
            :ARG1 (d / demand-01
                  :ARG1 (p / product
                        :poss c2)
                  :ARG1-of (s / strong-02
                        :ARG2-of (h / have-degree-91
                              :ARG1 d
                              :ARG3 (m / more))))
            :ARG1-of (c3 / cause-01
                  :ARG0 (b / buy-01
                        :ARG0 (p2 / person
                              :ARG0-of (c4 / consume-01))
                        :ARG1 (f / food
                              :quant (m2 / more))
                        :purpose (p3 / prepare-02
                              :ARG0 p2
                              :ARG1 p2
                              :ARG2 (p4 / pandemic
                                    :mod (d2 / disease
                                          :name n
                                          :op1 ""coronavirus""))))))
      :ARG2 (s2 / say-01
            :ARG0 c2
            :ARG1 (k / know-01
                  :polarity -
                  :ARG0 c2
                  :ARG1 (t / temporal-quantity
                        :duration-of (o / order-01
                              :ARG1-of (h2 / have-degree-91
                                    :ARG2 (h3 / high-02
                                          :ARG1 o)
                                    :ARG3 (m3 / more)))))))"
"(f / find-01
      :ARG1 (c / chemical
            :ARG1-of (s / same-01
                  :ARG2 (c2 / chemical
                        :name (n / name
                              :op1 ""COVID-19"")
                        :ARG1-of (s2 / study-01
                              :ARG0 (c3 / country
                                    :name (n2 / name
                                          :op1 ""US""))))))
      :location (p / product
            :mod (t / tank
                  :mod (f2 / fish)))
      :mod (a / also))"
(a / amr-empty)
"(a / announce-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""John""
                  :op2 ""Lewis""))
      :ARG1 (c2 / close-01
            :ARG1 (s / store
                  :quant 50
                  :mod (a2 / all)
                  :ARG1-of (ii / include-91
                        :ARG2 (s2 / store
                              :poss c)))
            :time (d / date-entity
                  :weekday (m / monday)
                  :dayperiod (n2 / night))
            :ARG1-of (c3 / cause-01
                  :ARG0 (p / pandemic
                        :mod (c4 / coronavirus)))))"
"(m / multi-sentence
      :snt1 (c / confirm-01
            :ARG0 (o / organization
                  :name (n / name
                        :op1 ""Pearl""
                        :op2 ""of""
                        :op3 ""Africa""))
            :ARG1 (c2 / case-04
                  :ARG1 (o2 / organization
                        :name (n2 / name
                              :op1 ""COVID-19""))
                  :ord (o3 / ordinal-entity
                        :value 1)
                  :poss o)
            :manner (t / take-advantage-02
                  :ARG0 o
                  :ARG1 (s / situation)
                  :manner (h / hike-02
                        :ARG0 o
                        :ARG1 (p / price-01
                              :ARG1 (t2 / thing
                                    :ARG1-of (r / require-01)
                                    :mod (b / basic)
                                    :example (a / and
                                          :op1 (s2 / sanitizer)
                                          :op2 (m2 / mask
                                                :mod (f / face))
                                          :op3 (s3 / soap)
                                          :snt2-of m))))))
      :op1 (h2 / happy-01
            :polarity -
            :ARG0 (t3 / this)
            :ARG1 (o4 / organization
                  :name (n3 / name
                        :op1 ""Business""
                        :op2 ""Fraternity"")))
      :op2 (n4 / need-01
            :ARG0 (w / we)
            :ARG1 (c3 / cooperate-01
                  :ARG2 (k / kick-01
                        :ARG0 w
                        :ARG1 o2))))"
"(m / multi-sentence
      :snt1 (g / grow-01
            :ARG1 (p / pressure-01
                  :ARG0 (o / organization
                        :name (n / name
                              :op1 ""COVID-19""))
                  :ARG1 (b / bank)))
      :snt2 (c / concern-01
            :ARG0 (r / rate
                  :mod (s / save-01)
                  :ARG1-of (l / low-04
                        :degree (s2 / so)))
            :ARG1 (ii / i)
            :time (a / always)
            :time (t / time
                  :ARG1-of (s3 / same-01)))
      :snt3 (p2 / possible-01
            :ARG1 (p3 / play-02
                  :ARG0 (a2 / app
                        :purpose (m2 / manage-01
                              :ARG1 (f / finance)))
                  :ARG1 (h / here)
                  :mod (b2 / big))))"
"(m / multi-sentence
      :snt1 (d / day
            :degree (s / so))
      :snt2 (w / work-01
            :polarity -
            :ARG0 (g / girl
                  :mod (b / baby)
                  :mod (t / this))
            :ARG1-of (c / cause-01
                  :ARG0 (l / law
                        :name (n / name
                              :op1 ""CODID-19""))))
      :snt3 (w2 / want-01
            :ARG0 (s2 / she)
            :ARG1 (s3 / shop-01
                  :ARG0 s2
                  :medium (o / online)
                  :time (ii / isolate-01
                        :ARG1 s2))
            :mod (a / all)))"
(a / amr-empty)
"(h / have-concession-91
      :ARG1 (w / work-01
            :ARG0 (p / person
                  :quant 2500
                  :ARG1-of (e / employ-01
                        :ARG0 (c / company
                              :name (n / name
                                    :op1 ""Purell""))))
            :ARG1 (m / make-01
                  :ARG0 p
                  :ARG1 (p2 / product
                        :name n
                        :op1 ""Purell"")
                  :ARG1-of (h2 / have-quant-91
                        :ARG2 (m2 / much)
                        :ARG3 (e2 / equal)
                        :ARG4 (p3 / possible-01))))
      :time (n2 / now)
      :frequency (r / rate-entity-91
            :ARG1 (t / temporal-quantity
                  :quant 24
                  :unit (h3 / hour))
            :ARG2 (t2 / temporal-quantity
                  :quant 1
                  :unit (d / day)))
      :frequency (r2 / rate-entity-91
            :ARG1 (t3 / temporal-quantity
                  :quant 7
                  :unit (d2 / day))
            :ARG2 (t4 / temporal-quantity
                  :quant 1
                  :unit (w2 / week)))
      :ARG2 (c2 / concede-01
            :ARG0 c
            :ARG1 (p4 / possible-01
                  :ARG1 (t5 / touch-01
                        :ARG0 c
                        :ARG1 (d3 / demand-01
                              :ARG1 p2)
                        :degree (b / barely)))))"
"(m / multi-sentence
      :snt1 (r / reason
            :polarity -
            :ARG0-of (c / cause-01
                  :ARG1 (h / hoard-01
                        :ARG1 (t / thing
                              :ARG1-of (s / supply-01)))))
      :snt2 (a / allow-01
            :ARG1 (g / go-02
                  :ARG0 (w / we)
                  :ARG4 (s2 / supermarket)
                  :frequency (r2 / rate-entity-91
                        :ARG3 (t2 / temporal-quantity
                              :quant 1
                              :unit (d / day))))
            :location (c2 / country
                  :name (n / name
                        :op1 ""Italy""))
            :time (n2 / now
                  :mod (e / even))
            :mod (s3 / still))
      :snt3 (s4 / say-01
            :ARG0 (p / person
                  :name (n3 / name
                        :op1 ""DrDenaGrayson""))
            :time (d2 / date-entity
                  :day 13
                  :month 3
                  :year 2020)))"
"(s / say-01
      :ARG0 (s2 / study)
      :ARG1 (p / possible-01
            :ARG1 (c / cost-01
                  :ARG1 (d / drug
                        :mod (p2 / potential)
                        :purpose (c2 / coronavirus))
                  :ARG2 (m / monetary-quantity
                        :quant 1
                        :unit (d2 / dollar)
                        :mod (o / only)))))"
"(t / true-01
      :ARG1 (t2 / that))"
"(c / contrast-01
      :ARG1 (d / drop-01
            :ARG1 (p / price-01
                  :ARG1 (t / ticket
                        :destination (s / state
                              :name (n / name
                                    :op1 ""Hawaii"")))))
      :ARG2 (a / ask-02
            :ARG0 (p2 / person
                  :name (n2 / name
                        :op1 ""David""
                        :op2 ""Ige"")
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (g / governor)))
            :ARG1 (p3 / postpone-01
                  :ARG0 (p4 / person
                        :ARG0-of (t2 / tour-01))
                  :ARG1 (t3 / trip-03
                        :ARG0 p4)
                  :ARG2 (t4 / temporal-quantity
                        :quant 30
                        :unit (d2 / day))
                  :purpose (h2 / help-01
                        :ARG0 p4
                        :ARG1 (s2 / slow-01
                              :ARG1 (s3 / spread-02
                                    :ARG1 (c2 / coronavirus)))))
            :ARG2 p4))"
"(f / fine-01
      :ARG0 (c / country
            :name (n / name
                  :op1 ""Rwanda""))
      :ARG2 (c2 / company
            :quant 44)
      :ARG3 (h / hike-02
            :ARG0 c2
            :ARG1 (p / price)
            :time (p2 / pandemic
                  :mod (c3 / coronavirus))))"
"(a / and
      :op1 (t / try-01
            :ARG0 (ii / i)
            :ARG1 (g / go-02
                  :ARG0 ii
                  :ARG4 (s / store
                        :mod (g2 / grocery))
                  :ARG1-of (q / quick-02
                        :ARG2-of (h / have-degree-91
                              :ARG1 g
                              :ARG3 (e / equal)
                              :ARG4 (p / possible-01
                                    :ARG1 g)))))
      :op2 (b / burn-01
            :ARG0 ii
            :ARG1 (e2 / everything
                  :ARG1-of (b2 / buy-01
                        :ARG0 ii
                        :mod (j / just)))
            :time (t2 / then)))"
"(s / sing-01
      :ARG0 (ii / i)
      :ARG1 (s2 / song
            :name (n / name
                  :op1 ""kaise hua""))
      :ARG2 (s3 / sanitizer
            :poss ii)
      :time (c / current))"
"(o / or
      :op1 (u / use-01
            :mode imperative
            :ARG0 (y / you
                  :part (h / hand))
            :ARG1 (s / sanitizer
                  :ARG1-of (b / base-02
                        :ARG2 (a / alcohol))
                  :ARG0-of (c / contain-01
                        :ARG1 (a2 / alcohol
                              :quant (p / percentage-entity
                                    :value 60)))))
      :op2 (w / wash-01
            :mode imperative
            :ARG0 y
            :ARG1 h
            :ARG2 (a3 / and
                  :op1 (s2 / soap)
                  :op2 (w2 / water))
            :ARG1-of (f / frequent-02))
      :purpose (p2 / protect-01
            :ARG0 y
            :ARG1 (a4 / and
                  :op1 y
                  :op2 (p3 / person
                        :mod (o2 / other)))
            :ARG2 (s3 / scare-01
                  :ARG0 (v / virus
                        :name (n / name
                              :op1 ""CoronaVirus""))
                  :ARG1-of (n2 / new-01))))"
"(l / launch-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Afya""
                  :op2 ""Rekod"")
            :mod (s / startup
                  :mod (t / tech
                        :mod (h / health)))
            :location (c2 / country
                  :name (n2 / name
                        :op1 ""Kenya"")))
      :ARG1 (p / platform
            :ARG1-of (d / drive-02
                  :ARG0 (d2 / data
                        :mod (p2 / person
                              :ARG0-of (c3 / consume-01))))
            :mod (a / artificial))
      :purpose (h2 / help-01
            :ARG0 p
            :ARG1 (f / fight-01
                  :ARG1 (c4 / criminal-organization
                        :name (n3 / name
                              :op1 ""COVID-19"")))))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG1 (m2 / morning
                  :ARG1-of (g / good-02))
            :ARG2 (t / tweep))
      :snt2 (q / queue-01
            :ARG1 (p / person
                  :part (f / face))
            :purpose (g2 / get-05
                  :ARG1 p
                  :ARG2 (s2 / supermarket)
                  :ord (o / ordinal-entity
                        :value 1))
            :time (t2 / today)
            :ARG1-of (c / cause-01
                  :ARG0 (w / wind
                        :mod (b / brisk)))
            :ARG2-of (ii / include-91
                  :ARG1 (p2 / person
                        :quant (p3 / perhaps
                              :op1 12))))
      :snt3 (s3 / start-01
            :ARG0 (p4 / person
                  :part f)
            :ARG1 (c2 / cover-01
                  :ARG0 p4
                  :ARG1 f
                  :ARG2 (a / and
                        :op1 (s4 / scarf)
                        :op2 (m3 / mask))
                  :concession (u / useful-05
                        :polarity -
                        :ARG1 (v / virus
                              :mod (c3 / coronavirus))))
            :time (r / rise-01
                  :ARG1 (r2 / rate
                        :degree-of (ii2 / infect-01)))))"
"(m / multi-sentence
      :snt1 (f / face-01
            :ARG0 (r / restaurant)
            :ARG1 (t / territory
                  :ARG1-of (m2 / map-01
                        :polarity -))
            :ARG1-of (c / cause-01
                  :ARG0 (p / pandemic
                        :mod (c2 / coronavirus)
                        :time (r2 / recent))))
      :snt2 (t2 / thing
            :manner-of (p2 / possible-01
                  :ARG1 (d / diversify-01
                        :ARG0 (r3 / restaurant)
                        :ARG1 (b / business
                              :poss r3)
                        :purpose (a / account-01
                              :ARG0 r3
                              :ARG1 (c3 / change-01
                                    :ARG1 (b2 / behave-01
                                          :ARG0 (p3 / person
                                                :ARG0-of (c4 / consume-01)))
                                    :ARG1-of (e / expect-01
                                          :polarity -)
                                    :mod (t3 / this)))))
            :location (h / here))
      :snt3 (u / url-entity
            :value ""https://://://://www.christianforums.com/forums/forums/forums/forums/forums/forums/forums/forums/forums/forums/""))"
"(m / multi-sentence
      :snt1 (p / product
            :quant 1
            :ARG1-of (c / critical-02)
            :ARG0-of (c2 / consume-01)
            :beneficiary (p2 / pandemic)
            :domain p
            :name (n / name
                  :op1 ""SOAP"")
            :mod (h / humble))
      :time (s / surge-01
            :ARG1 (c3 / case-04
                  :ARG1 (v / virus
                        :mod (c4 / coronavirus)))
            :location (g / globe))
      :snt2 (t / thing
            :manner-of (a / amr-unknown)
            :location (h2 / here)))"
"(m / multi-sentence
      :snt1 (p / person
            :name (n / name
                  :op1 ""Flattenthecurve""))
      :snt2 (t / throw-away-07
            :ARG0 (s / store
                  :mod (g / grocery))
            :ARG1 (f / food
                  :ARG1-of (w / worth-01
                        :ARG2 (m2 / monetary-quantity
                              :quant 35000
                              :unit (d / dollar))))
            :time (a / after
                  :op1 (c / cough-01
                        :ARG0 (w2 / woman)
                        :ARG1 f
                        :manner (p2 / purpose)))))"
"(m / multi-sentence
      :snt1 (t / take-10
            :ARG0 (u / understand-01
                  :ARG1 (v / value-02
                        :ARG1 (j / job
                              :example (a / and
                                    :op1 (n / nurse)
                                    :op2 (d / doctor)
                                    :op3 (o / officer
                                          :mod (p / police))
                                    :op4 (p2 / person
                                          :ARG2-of (s / staff-01
                                                :ARG1 (s2 / supermarket)))
                                    :op5 (j2 / job
                                          :mod (o2 / other)
                                          :ARG1-of (b / belittle-01
                                                :ARG0 (p3 / person))
                                          :example (p4 / person
                                                :ARG0-of (c / collect-01
                                                      :ARG1 (b2 / bin)
                                                      :ARG2 (p5 / person))))))))
            :ARG1 (v2 / virus
                  :mod (c2 / coronavirus)))
      :snt2 (a2 / and
            :op1 (e / essential
                  :domain (t2 / they)
                  :beneficiary (s3 / society
                        :poss (w / we)))
            :op2 (h / have-condition-91
                  :ARG1 (n2 / nothing
                        :domain (s4 / society))
                  :ARG2 t2)))"
"(m / multi-sentence
      :snt1 (h / hope-01
            :ARG0 (w / we)
            :ARG1 (e / enforce-01
                  :ARG0 (p / person
                        :ARG1-of (a / associate-01
                              :ARG2 (s / supermarket)))
                  :ARG1 (m2 / measure-02
                        :mod (t / this))))
      :snt2 (a2 / and
            :op1 (b / be-located-at-91
                  :ARG1 (ii / i)
                  :ARG2 (c / company
                        :name (n / name
                              :op1 ""Safeway""))
                  :time (d / day
                        :mod (o / other)))
            :op2 (ii2 / ignore-01
                  :ARG0 (p2 / person
                        :quant (m3 / many))
                  :ARG1 (d2 / distance-01
                        :ARG2 (s2 / society))
                  :manner (e2 / enforce-01
                        :polarity -
                        :ARG0 (m4 / manage-01))))
      :snt3 (o2 / obligate-01
            :ARG1 (w2 / we
                  :mod (a3 / all))
            :ARG2 (d3 / do-02
                  :ARG0 w2
                  :ARG1 (p3 / part
                        :poss w2)
                  :purpose (a4 / and
                        :op1 (p4 / polite-01
                              :ARG1 w2)
                        :op2 (a5 / adhere-02
                              :ARG0 w2
                              :ARG1 m2
                              :mod (t2 / this))))))"
"(m / multi-sentence
      :snt1 (r / recommend-01
            :ARG1 (l / limit-01
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""Evers"")
                        :ARG0-of (h / have-org-role-91
                              :ARG2 (g / governor)))
                  :ARG1 (a / and
                        :op1 (s / store
                              :mod (g2 / grocery))
                        :op2 (p2 / pharmacy)
                        :op3 (s2 / store
                              :mod (e / essential)
                              :mod (o / other)))
                  :ARG2 (a2 / and
                        :op1 (d / drive-thru)
                        :op2 (s3 / slash
                              :op1 (s4 / shop-01
                                    :mod (o2 / online))
                              :op2 (p3 / pickup
                                    :mod (c / curbside)))
                        :mod (o3 / only))))
      :snt2 (a3 / and
            :op1 (r2 / reduce-01
                  :ARG0 (t / this)
                  :ARG1 (o4 / opportunity
                        :mod (a4 / and
                              :op1 (g3 / gather-03
                                    :ARG0 (g4 / group))
                              :op2 (c2 / contact-01
                                    :ARG0 g4
                                    :ARG1 g4))))
            :op2 (h2 / help-01
                  :ARG0 t
                  :ARG1 (s5 / slow-01
                        :ARG0 t
                        :ARG1 (s6 / spread-02
                              :ARG1 (d2 / disease
                                    :name (n2 / name
                                          :op1 ""Covid""))))
                  :time (u / ultimate))))"
"(d / damage-01
      :ARG0 (a / and
            :op1 (p / price-01
                  :ARG1 (o / oil)
                  :ARG1-of (f / fall-01))
            :op2 (t / treaty
                  :name (n / name
                        :op1 ""COVID-19"")))
      :ARG1 (g / grow-01
            :ARG1 (w / world-region
                  :name (n2 / name
                        :op1 ""Caribbean""))))"
"(a / and
      :op1 (c / cut-02
            :ARG0 (ii / i)
            :ARG1 (t / trip-03
                  :ARG0 ii
                  :mod (b / business))
            :ARG2 (s / short-07
                  :ARG1 t)
            :purpose (g / get-04
                  :polarity -
                  :ARG1 ii
                  :ARG2 (s2 / strand-01
                        :ARG1 ii
                        :location (r / relative-position
                              :op1 (h / home)
                              :quant (f / far)))))
      :op2 (p / pack-01
            :ARG1 (a2 / airport)))"
"(c / commit-01
      :ARG1 (p / person
            :ARG0-of (l / legislate-01)
            :mod (s / state
                  :name (n / name
                        :op1 ""Pennsylvania"")))
      :ARG2 (l2 / lower-05
            :ARG0 p
            :ARG1 (p2 / price-01
                  :ARG1 (d / drug
                        :ARG1-of (p3 / prescribe-02)))
            :purpose (e / ease-02
                  :ARG0 p
                  :ARG1 (b / burden-01
                        :ARG1 (f / family))
                  :time (o / outbreak-29
                        :ARG1 (d2 / disease
                              :name (n2 / name
                                    :op1 ""Corona""
                                    :op2 ""Virus"")))))
      :time (n3 / now))"
(a / amr-empty)
"(s / shut-down-05
      :ARG1 (c / company
            :name (n / name
                  :op1 ""Ocado""))
      :time (u / until
            :op1 (d / date-entity
                  :weekday (s2 / saturday)))
      :ARG1-of (c2 / cause-01
            :ARG0 (a / amount
                  :quant-of (t / traffic)
                  :ARG0-of (s3 / stagger-02
                        :mod (s4 / simple)))))"
"(u / understand-01
      :ARG0 (ii / i)
      :ARG1 (d / drink-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Meredith"")
                  :source (b / broadcast-program
                        :name (n2 / name
                              :op1 ""The""
                              :op2 ""Office"")))
            :ARG1 (s / sanitizer
                  :instrument-of (h / hand))
            :ARG1-of (c / cause-01
                  :ARG0 (a / amr-unknown)))
      :time (n3 / now))"
"(s / set-02
      :ARG0 (ii / i)
      :ARG1 (r / record
            :ARG1-of (n / new-01)
            :consist-of (w / wait-01
                  :ARG1 ii
                  :ARG2 (l / line)
                  :duration (t / temporal-quantity
                        :quant 2
                        :unit (h / hour))
                  :location (s2 / supermarket
                        :ARG1-of (l2 / local-02)
                        :location (c / city
                              :name (n2 / name
                                    :op1 ""Roma""))
                        :poss ii)
                  :time (l3 / lock-down-06
                        :ARG3 (d / disease
                              :name (n3 / name
                                    :op1 ""Coronavirus"")))))
      :time (t2 / today))"
"(s / stop-03
      :polarity -
      :ARG0 (p / product
            :name (n / name
                  :op1 ""Covid-19""))
      :ARG1 (p2 / person
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (ii / i)
                  :ARG2 (w / wife)))
      :ARG2 (s2 / shop-01
            :ARG0 p2
            :medium (o / online)))"
"(l / look-01
      :ARG0 (p / person)
      :ARG1 (s / shelf
            :ARG1-of (e / empty-02)
            :mod (f / food)
            :location (s2 / supermarket
                  :location (c / city
                        :name (n / name
                              :op1 ""Tokyo""))))
      :time (d / date-entity
            :weekday (m / monday))
      :prep-amid (p2 / pandemic
            :name (n2 / name
                  :op1 ""COVID""
                  :op2 19)))"
"(l / lick-01
      :polarity -
      :mode imperative
      :ARG0 (y / you
            :part (f / finger))
      :ARG1 f
      :purpose (g / grab-01
            :ARG0 y
            :ARG1 (b / bag
                  :consist-of (p / polythene))
            :location (s / supermarket)))"
"(k / keep-01
      :ARG0 (c / cake
            :ARG1-of (r / roll-01
                  :ARG2 (p / paper
                        :purpose (t / toilet))))
      :ARG1 (p2 / person
            :ARG0-of (b / bake-01)
            :mod (c2 / country
                  :name (n / name
                        :op1 ""Finland"")))
      :duration (t2 / temporal-quantity
            :quant 19
            :unit (y / year)))"
"(t / tell-01
      :ARG0 (s / site
            :mod (t2 / this))
      :ARG1 (m / mass-quantity
            :quant-of (p / paper
                  :purpose (t3 / toilet)
                  :ARG1-of (n / need-01
                        :ARG0 (y / you)
                        :purpose (s2 / survive-01
                              :ARG0 y
                              :ARG1 (c / coronavirus)))))
      :ARG2 y
      :instrument (c2 / calculator
            :mod (o / online)
            :mod (t4 / this)))"
"(r / reevaluate-01
      :ARG0 (g / government-organization
            :name (n / name
                  :op1 ""FDA""))
      :ARG1 (a / and
            :op1 (s / safe-01
                  :ARG1 (a2 / and
                        :op1 (r2 / rub-01
                              :mod (a3 / antiseptic)
                              :beneficiary (p / person
                                    :ARG0-of (c / consume-01)))
                        :op2 (p2 / product
                              :mod (d / drug)
                              :mod (t / topical)
                              :ARG0-of (c2 / counter-01
                                    :ARG1 (a4 / antimicrobial)))))
            :op2 (e / effective-04
                  :ARG0 a2
                  :ARG1 a2)
            :purpose (u / use-01
                  :ARG0 p
                  :ARG1 a2
                  :mod (o / over-the-counter)))
      :ARG1-of (c3 / cause-01
            :ARG0 (p3 / pandemic
                  :name (n2 / name
                        :op1 ""COVID-19""))))"
"(a / and
      :op1 (w / write-01
            :ARG0 (ii / i)
            :ARG2 (p / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (c / country
                              :name (n / name
                                    :op1 ""Wales""))
                        :ARG2 (m / minister
                              :ord (o / ordinal-entity
                                    :value 1))))
            :time (t / today))
      :op2 (c2 / call-03
            :ARG0 ii
            :ARG1 (a2 / act-02
                  :ARG1 (f / facilitate-01
                        :ARG1 (a3 / access-01
                              :ARG0 (p2 / person
                                    :mod (t2 / that)
                                    :location (c3 / community
                                          :poss (w2 / we))
                                    :ARG1-of (h2 / have-degree-91
                                          :ARG2 (e / endanger-01
                                                :ARG0 (c4 / coronavirus)
                                                :ARG1 p2)
                                          :ARG3 (m2 / most)))
                              :ARG1 (d / deliver-01
                                    :ARG1 (s / supermarket)
                                    :medium (o2 / online))))
                  :mod (u / urgent))
            :ARG2 p))"
"(s / see-01
      :ARG0 (ii / i)
      :ARG1 (c / contrast-01
            :ARG1 (c2 / cry-02
                  :ARG0 (w / woman)
                  :ARG1 (l / let-01
                        :ARG0 (p / police)
                        :ARG1 (b / buy-01
                              :ARG0 w
                              :ARG1 (g / grocery)))
                  :ARG2 p)
            :ARG2 (a / and
                  :op1 (s2 / say-01
                        :ARG0 (o / officer)
                        :ARG1 (p2 / positive
                              :domain (p3 / person
                                    :ARG0-of (h / have-rel-role-91
                                          :ARG1 w
                                          :ARG2 (h2 / husband)))
                              :prep-for (p4 / product
                                    :name (n / name
                                          :op1 ""COVID-19""))))
                  :op2 (s3 / scream-01
                        :ARG0 w
                        :ARG1 (n2 / need-01
                              :ARG0 w
                              :ARG1 (e / eat-01
                                    :ARG0 w))))))"
"(s / set-02
      :ARG0 (g / government-organization
            :name (n / name
                  :op1 ""Ministry""
                  :op2 ""of""
                  :op3 ""Commerce""
                  :op4 ""and""
                  :op5 ""Industry""))
      :ARG1 (p / price-01
            :ARG1 (a / and
                  :op1 (f / fish)
                  :op2 (f2 / fruit)
                  :op3 (v / vegetable))
            :ARG2 (m / maximum)))"
"(m / multi-sentence
      :snt1 (a / agree-01
            :ARG0 (o / organization
                  :name (n / name
                        :op1 ""G20"")
                  :ARG2-of (ii / include-01
                        :ARG1 (a2 / and
                              :op1 (c / country
                                    :name (n2 / name
                                          :op1 ""India""))
                              :op2 (c2 / country
                                    :name (n3 / name
                                          :op1 ""Japan""))
                              :op3 (c3 / country
                                    :name (n4 / name
                                          :op1 ""China"")))))
            :ARG1 (c4 / cut-02
                  :ARG0 (o2 / organization
                        :name (n5 / name
                              :op1 ""OPEC+""))
                  :ARG1 (p / produce-01
                        :ARG0 o2
                        :ARG1 (o3 / oil))
                  :purpose (r / raise-01
                        :ARG0 o2
                        :ARG1 (p2 / price-01))))
      :snt2 (l / lead-02
            :ARG0 (c5 / country
                  :name (n6 / name
                        :op1 ""US"")
                  :ARG0-of (c6 / consume-01
                        :ARG2-of (h / have-degree-91
                              :ARG3 (m2 / most))
                        :ARG1-of h)
                  :ARG0-of (p3 / produce-01
                        :ARG1-of (s / significant-02)))
            :ARG2 (d / deal-01)))"
"(r / receive-01
      :ARG0 (o / office
            :poss (p / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (s / state
                              :name (n / name
                                    :op1 ""North""
                                    :op2 ""Carolina""))
                        :ARG2 (a / attorney
                              :mod (g / general)))))
      :ARG1 (c / complain-01
            :quant 136
            :ARG1 (g2 / gouge-02
                  :ARG2 (p2 / price))
            :ARG2-of (ii / include-91
                  :ARG1 (c2 / complain-01
                        :ARG1 (g3 / grocery
                              :ARG2-of (f / follow-01
                                    :ARG1 (a2 / and
                                          :op1 (s2 / sanitizer
                                                :mod (h2 / hand))
                                          :op2 (p3 / product
                                                :ARG0-of (c3 / clean-01))))))
                  :ARG3 ""1/2"")))"
"(m / multi-sentence
      :snt1 (v / virus)
      :snt2 (d / deliver-01
            :ARG0 (w / we)
            :ARG1 (k / kit
                  :mod (h / hygiene)
                  :ARG0-of (c / contain-01
                        :ARG1 (a / and
                              :op1 (s / soap)
                              :op2 (s2 / sanitize-01
                                    :ARG1 (h2 / hand))
                              :op3 (w2 / wipe
                                    :ARG0-of (c2 / counter-01
                                          :ARG1 (b / bacterium)))))
                  :quant (m2 / multiple
                        :op1 1000))
            :time (r / recent)
            :location (l / location))
      :snt3 (s3 / see-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (t / thing
                  :manner-of (p / protect-01
                        :ARG0 (w3 / we)
                        :ARG1 (a2 / and
                              :op1 (w4 / woman
                                    :mod (e / elderly))
                              :op2 (w5 / woman
                                    :ARG1-of (ii / impregnate-01))
                              :op3 (o / other))
                        :ARG2 (v2 / virus)))))"
"(m / multi-sentence
      :snt1 (a / ask-02
            :ARG0 (a2 / and
                  :op1 (d / department
                        :mod (f / fire))
                  :op2 (h / hospital)
                  :location (a3 / and
                        :op1 (c / community
                              :poss (ii / i))
                        :op2 (a4 / across
                              :op1 (c2 / country
                                    :poss (w / we)))))
            :ARG1 (a5 / and
                  :op1 (m2 / mask)
                  :op2 (g / gown)
                  :op3 (s / sanitizer))
            :ARG2 (c3 / citizen
                  :mod c2))
      :snt2 (c4 / cause-01
            :ARG0 (a6 / amr-unknown)
            :ARG1 (f2 / fire-02
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""Trump""))
                  :ARG1 (a7 / and
                        :op1 (t / team
                              :mod (n2 / nation)
                              :mod (p2 / pandemic))
                        :op2 (l / liaison
                              :mod (c5 / country
                                    :name (n3 / name
                                          :op1 ""China""))))))
      :snt3 (m3 / mask
            :location (a8 / amr-unknown))
      :snt4 (v / virus
            :mod (c6 / coronavirus)
            :location (a9 / amr-unknown)))"
"(f / find-01
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG1 (s / sheriff))
            :location (s2 / state
                  :name (n / name
                        :op1 ""North""
                        :op2 ""Carolina"")))
      :ARG1 (a / and
            :op1 (p2 / paper
                  :purpose (t / toilet)
                  :quant (m / mass-quantity
                        :quant 18000
                        :unit (p3 / pound)))
            :op2 (p4 / product
                  :mod (o / other)))
      :location (t2 / truck
            :ARG1-of (s3 / steal-01)))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Julia""
                        :op2 ""Farrugia""
                        :op3 ""Portelli"")
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (m2 / minister
                              :topic (a / and
                                    :op1 (t / tourism)
                                    :op2 (p2 / protect-01
                                          :ARG1 p
                                          :ARG0-of (c / consume-01))))))
            :mod (h2 / honorable))
      :ARG1 (p3 / prepare-01
            :ARG0 (g / government-organization
                  :name (n2 / name
                        :op1 ""Malta""
                        :op2 ""Tourism""
                        :op3 ""Authority""))
            :ARG1 (s2 / strategy)
            :ARG3 (t2 / tourism
                  :time (t3 / tomorrow)))
      :snt2 (h3 / help-01
            :ARG0 (p4 / program
                  :name (n3 / name
                        :op1 ""SUNx""))
            :ARG1 (m3 / make-02
                  :ARG0 p4
                  :ARG1 (s3 / sector
                        :mod (t4 / tourism)
                        :ARG1-of (f / friendly-01
                              :ARG2 (c2 / climate))
                        :domain (t5 / this)))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (a2 / accompany-01
                  :ARG0 (p / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 (p2 / person)
                              :ARG2 (p3 / parent)))
                  :ARG1 (p4 / person
                        :ARG0-of (h2 / have-rel-role-91
                              :ARG1 p
                              :ARG2 (c / child))))
            :op2 (p5 / priority
                  :domain (w / work-01)
                  :time (n / no-longer)))
      :snt2 (ii / important-01
            :polarity -
            :ARG1 (a3 / and
                  :op1 (t / travel-01)
                  :op2 (l / leisure))
            :mod (a4 / also)))"
"(m / multi-sentence
      :snt1 (f / find-01
            :ARG0 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (ii / i)
                        :ARG2 (s / sister)))
            :ARG1 (p2 / peanut-butter)
            :location (c / company
                  :name (n / name
                        :op1 ""CVSpharmacy"")))
      :snt2 (c2 / cause-01
            :ARG0 (o / out-05
                  :ARG1 (s2 / store
                        :mod (g / grocery))
                  :duration (m2 / multiple
                        :op1 (t / temporal-quantity
                              :quant 1
                              :unit (w / week))))
            :ARG1 (l / lucky
                  :domain (f2 / find-01
                        :ARG0 (s3 / she)
                        :ARG1 (l2 / lemon
                              :mod (a / also))
                        :beneficiary (ii2 / i))))
      :snt3 (f3 / find-01
            :ARG0 (s4 / she)
            :ARG1 (ii3 / item
                  :mod (c3 / certain))
            :manner (r / random))
      :snt4 (l3 / limit-01
            :ARG0 (c4 / company
                  :name n
                  :op1 ""Costco""))
      :ARG2 (r2 / rate-entity-91
            :ARG1 1
            :ARG2 (m3 / member))
      :mod (a2 / at-least))"
"(t / terrible-01
      :ARG1 (p / person
            :ARG0-of (k / keep-01
                  :ARG1 (s / shop))
            :ARG0-of (s2 / sell-01
                  :ARG1 (p2 / paper
                        :purpose (t2 / toilet))
                  :ARG3 (p3 / price
                        :ARG1-of (h / high-02))
                  :time (t3 / time
                        :mod (t4 / this)))
            :mod (a / any)))"
"(a / and
      :op1 (s / spread-03
            :ARG1 (v / virus))
      :op2 (c / cause-01
            :ARG0 v
            :ARG1 (t / tumble-01
                  :ARG0 v
                  :ARG1 (a2 / and
                        :op1 (s2 / sell-01
                              :ARG1 (c2 / car))
                        :op2 (m / monetary-quantity
                              :ARG2-of (p / price-01
                                    :ARG1 (e / energy)))
                        :op3 (m2 / market))))
      :ARG0-of (l / lead-03
            :ARG2 (r / recession-02
                  :mod (p2 / potential)
                  :ARG0-of (h / have-03
                        :ARG1 (r2 / rate-01
                              :ARG1 (e2 / employ-01
                                    :polarity -)
                              :ARG1-of (h2 / high-02))))))"
"(c / cause-01
      :ARG0 (r / recommend-01
            :ARG1 (l / list-01
                  :ARG0 (w / we)
                  :ARG2 (s / shop
                        :mod (s2 / scummy)
                        :mod (a / all)
                        :ARG0-of (ii / infllate-01
                              :ARG1 (t / thing
                                    :ARG2-of (p / price-01))
                              :time (t2 / time
                                    :ARG1-of (r2 / resemble-01
                                          :ARG2 (t3 / this)))
                              :ARG1-of (o / over-03)))))
      :ARG1 (r3 / recommend-01
            :ARG1 (s3 / support-01
                  :ARG0 (n / no-one)
                  :ARG1 (b / business
                        :poss s)
                  :time (b2 / blow-over-05
                        :ARG1 (t4 / this
                              :mod (a2 / all))))))"
"(m / multi-sentence
      :snt1 (p / pig
            :ARG0-of (d / disgust-01
                  :degree (s / so))
            :mod (h / human))
      :snt2 (c / cause-01
            :ARG0 (l / lady
                  :ARG1-of (t / test-01
                        :ARG2 (p2 / positive)
                        :ARG3 (l2 / law
                              :name (n / name
                                    :op1 ""COVID-19""))))
            :ARG1 (s2 / spit-01
                  :ARG2 (f / fruit)
                  :location (s3 / supermarket)))
      :snt3 (s4 / string-entity
            :value ""COVID19"")
      :snt4 (p3 / person
            :name n
            :op1 ""COVIDIOTS""))"
"(a / and
      :op1 (s / see-01
            :ARG0 (c / company
                  :name (n / name
                        :op1 ""Petra""
                        :op2 ""Diamonds""))
            :ARG1 (d / drop-01
                  :ARG1 (m / monetary-quantity
                        :ARG2-of (p / price-01))
                  :ARG2 (p2 / percentage-entity
                        :value 27)))
      :op2 (w / withdraw-01
            :ARG0 c
            :ARG1 (s2 / stone
                  :ARG1-of (h / have-degree-91
                        :ARG2 (g / good-02
                              :ARG1 s2)
                        :ARG3 (m2 / most)))
            :ARG2 (s3 / sell-01
                  :ARG0 c
                  :time (r / recent)))
      :ARG1-of (c2 / cause-01
            :ARG0 (o / opportunity
                  :domain (p3 / person
                        :ARG0-of (b / buy-01))
                  :location (m3 / market
                        :ARG1-of (d2 / depress-01)))))"
"(h / have-trouble-04
      :ARG0 (y / you)
      :ARG1 (f / find-01
            :ARG0 y
            :ARG1 (a / amr-unknown
                  :mod (e / else))
            :location (s / store
                  :mod (g / grocery))))"
"(s / spark-01
      :ARG0 (f / fear-01
            :ARG1 (s2 / security
                  :mod (f2 / food)))
      :ARG1 (h / hoard-01
            :ARG1 (p / panic-01)
            :ARG0-of (d / drive-02
                  :ARG1 (ii / inflation)
                  :ARG2 (h2 / high-02
                        :ARG1 ii
                        :mod (s3 / sky))
                  :ARG1-of (p2 / possible-01))))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""ovid_19""))
            :ARG1 (c / contrast-01
                  :ARG1 (g / glad-02
                        :ARG0 (c2 / care-03
                              :ARG0 (g2 / guy
                                    :mod (e / each)
                                    :ARG1-of c2))
                        :ARG1 (ii / i))
                  :ARG2 (n2 / need-01
                        :ARG0 (p2 / person
                              :mod (c3 / country
                                    :name (n3 / name
                                          :op1 ""America""))
                              :mod (o / other))
                        :ARG1 (s2 / stop-01
                              :ARG0 p2
                              :ARG1 (a / asshole
                                    :ARG0-of (h / hunger-01
                                          :ARG1 (m2 / money))
                                    :ARG0-of (h2 / hoard-01)
                                    :ARG0-of (t / think-01
                                          :ARG1 (e2 / end-01
                                                :ARG1 (w / world)))
                                    :domain p2)))))
      :snt2 (n4 / need-01
            :ARG0 (p3 / person
                  :mod (o2 / other))
            :ARG1 (a2 / and
                  :op1 (g3 / glove)
                  :op2 (m3 / mask)
                  :op3 (s3 / sanitizer)
                  :op4 (t2 / TP)
                  :op5 (f / food))))"
"(s / see-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (t / thing
            :ARG2-of (l / list-01
                  :ARG0 (w / we)))
      :topic (a / and
            :op1 (h / hour
                  :mod (s2 / store
                        :mod (g / grocery)
                        :ARG1-of (l2 / local-02)))
            :op2 (h2 / hour
                  :mod (s3 / senior)
                  :ARG1-of (r / reserve-01)))
      :medium (u / url-entity
            :value ""https://www.wral.com/coronavirus/grocery-stores-adjust-hours-to-allow-seniors-to-shop-in-peace/19482871/""))"
"(m / multi-sentence
      :snt1 (ii / increase-01
            :ARG1 (m2 / monetary-quantity
                  :ARG2-of (p / price-01
                        :ARG1 (g / gold)))
            :ARG1-of (c / cause-01
                  :ARG0 (a / and
                        :op1 (b / buy-01
                              :ARG0 (p2 / person)
                              :ARG2 (m3 / monetary-quantity
                                    :ARG2-of (p3 / price-01)
                                    :ARG1-of (h / have-degree-91
                                          :ARG2 (l / low-04
                                                :ARG1 m3)
                                          :ARG3 (m4 / more))))
                        :op2 (d / demand-01
                              :ARG1 (ii2 / invest-01
                                    :ARG0-of (s / safe-01))))))
      :snt2 (ii3 / increase-01
            :ARG1 (s2 / stock)
            :time (w / wait-01
                  :ARG1 (p4 / person)
                  :ARG2 (p5 / package
                        :ARG0-of (s3 / stimulate-01)
                        :mod (d2 / disease
                              :name (n / name
                                    :op1 ""coronavirus""))))
            :mod (a2 / also)))"
"(m / make-02
      :ARG0 (s / supermarket
            :ARG1-of (m2 / major-02))
      :ARG1 (a / available-02
            :ARG1 (p / person
                  :ARG2-of (v / vulnerable-01)
                  :ARG2-of (ii / include-91
                        :ARG1 (a2 / and
                              :op1 (p2 / person
                                    :mod (e / elderly))
                              :op2 (p3 / person
                                    :mod (t / that)
                                    :ARG0-of (h / have-03
                                          :ARG1 (c / condition
                                                :mod (h2 / health)
                                                :ARG0-of (u / underlie-01))))
                              :op3 (p4 / person
                                    :ARG0-of (r / receive-01
                                          :ARG1 (t2 / thing
                                                :name (n / name
                                                      :op1 ""NDIS"")))))))
            :ARG2 (a3 / and
                  :op1 (s2 / shop-01
                        :ARG0 s
                        :medium (o / online))
                  :op2 (d / deliver-01
                        :ARG0 s
                        :medium o)))
      :time (n2 / now))"
"(m / multi-sentence
      :snt1 (s / senior
            :ARG1-of (ii / include-91
                  :ARG2 (p / person
                        :ARG1-of (c / come-01
                              :ARG4 (w / workplace
                                    :poss (ii2 / i))
                              :time (y / yesterday)))
                  :ARG3 (p2 / percentage-entity
                        :value 70)))
      :snt2 (s2 / see-01
            :ARG0 (ii3 / i)
            :ARG1 (s3 / senior
                  :ARG1-of (ii4 / include-91
                        :ARG2 (p3 / person
                              :location (t / there))
                        :ARG3 (a / about
                              :op1 (p4 / percentage-entity
                                    :value 50))))
            :time (g / go-02
                  :ARG0 ii3
                  :ARG4 (g2 / get-01
                        :ARG0 ii3
                        :ARG1 (t2 / thing
                              :ARG1-of (s4 / supply-01))
                        :location (s5 / store
                              :mod (g3 / grocery)
                              :location (b / beside
                                    :op1 (w2 / we))))
                  :time (a2 / after
                        :mod (r / right))))
      :snt3 (w3 / worry-02
            :ARG0 (t3 / they)
            :ARG1 (ii5 / i))
      :snt4 (p5 / publication
            :name (n / name
                  :op1 ""COVID2019""))
      :snt5 p5
      :name n
      :op1 ""californiacoron"")"
"(r / rich
      :domain (a / and
            :op1 (c / company
                  :name (n / name
                        :op1 ""3M""))
            :op2 (c2 / company
                  :name (n2 / name
                        :op1 ""Pfizer""))
            :op3 (c3 / company
                  :mod (g / good
                        :mod (p / person
                              :ARG0-of (c4 / consume-01)))
                  :mod (o / other)
                  :ARG0-of (p2 / produce-01
                        :ARG1 (a2 / and
                              :op1 (p3 / product
                                    :ARG0-of (c5 / clean-01))
                              :op2 (p4 / product
                                    :mod (s / sanitary))))))
      :time (e / end-01
            :ARG1 (t / this))
      :ARG1-of (c6 / cause-01
            :ARG0 (b / be-located-at-91
                  :ARG1 a
                  :ARG2 (m / market-01
                        :ARG1 (c7 / commodity)
                        :mod (k / kind))
                  :time (p5 / previous))))"
"(p / possible-01
      :ARG1 (b / buy-01
            :ARG0 (y / you)
            :ARG1 (p2 / pack
                  :consist-of (m / mask
                        :quant 50
                        :mod (f / face)))
            :ARG3 (p3 / product
                  :name (n / name
                        :op1 ""Sydney""
                        :op2 400))
            :location (o / online))
      :polarity (a / amr-unknown))"
"(ii / important-01
      :ARG1 (r / rise-01
            :ARG1 (t / thing
                  :ARG2-of (p / price-01
                        :ARG1 (m / meat
                              :mod (h / halal))
                        :location (s / shop
                              :mod (c / continent
                                    :name (n / name
                                          :op1 ""Asia"")))))
            :ARG1-of (c2 / cause-01
                  :ARG0 (e / event
                        :name (n2 / name
                              :op1 ""Covid_19""))))
      :degree (e2 / especially))"
"(w / weigh-06
      :ARG0 (a / and
            :op1 (e / extend-01
                  :ARG1 (l / lock-down-06
                        :mod (e2 / event
                              :name (n / name
                                    :op1 ""COVID2019"")))
                  :location (a2 / across
                        :op1 (s / state)))
            :op2 (p / price-01
                  :ARG1 (o / oil
                        :mod (c / crude))
                  :ARG1-of (h / have-degree-91
                        :ARG2 (h2 / high-02
                              :ARG1 p)
                        :ARG3 (m / more))))
      :ARG2 (m2 / market-sector
            :name (n2 / name
                  :op1 ""Dalal""
                  :op2 ""Street"")))"
"(s / say-01
      :ARG0 (r / report-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Olga""
                        :op2 ""Khazan"")))
      :ARG1 (c / contrast-01
            :ARG1 (r2 / risk-01
                  :ARG1 (p2 / person
                        :ARG0-of (h / have-org-role-91
                              :ARG2 (c2 / cashier)))
                  :ARG2 (c3 / coronavirus)
                  :ARG1-of (h2 / high-02))
            :ARG2 (a / available-02
                  :polarity -
                  :ARG1 p2
                  :ARG2 (m / mask))))"
"(m / multi-sentence
      :snt1 (s / shop-01
            :location (h / here))
      :snt2 (r / run-09
            :ARG0 (c / chain
                  :mod (s2 / store)
                  :ARG1-of (m2 / major-02)
                  :location (a / around
                        :op1 (w / world))
                  :mod (a2 / all))
            :ARG1 (t / thing
                  :ARG1-of (s3 / special-02)
                  :beneficiary (a3 / and
                        :op1 (p / person
                              :mod (e / elderly))
                        :op2 (p2 / person
                              :ARG1-of (v / vulnerable-01))))
            :purpose (p3 / prevent-01
                  :ARG0 c
                  :ARG1 (s4 / spread-02
                        :ARG1 (v2 / virus)
                        :manner (s5 / shop-01)))))"
"(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""jatinahuja26""))
      :ARG1 (l / lead-03
            :ARG0 (l2 / lockdown
                  :location (n2 / nationwide))
            :ARG1 (c / company)
            :ARG2 (u / understand-01
                  :ARG0 c
                  :ARG1 (ii / important-01
                        :ARG1 (m / market-01
                              :ARG2 (c2 / consumer
                                    :mod (v / virtual))
                              :manner (e / experience-01))))))"
"(f / find-01
      :ARG0 (s / survey-01
            :ARG0 (o / organization
                  :name (n / name
                        :op1 ""MGIA"")))
      :ARG1 (s2 / show-01
            :ARG0 (s3 / sentiment
                  :mod (p / person
                        :ARG0-of (c / consume-01)
                        :mod (c2 / continent
                              :name (n2 / name
                                    :op1 ""Asia"")))
                  :time (p2 / pandemic
                        :name (n3 / name
                              :op1 ""COVID-19"")))
            :ARG1 (g / grow-01
                  :ARG1 (e / entertain-01
                        :location (h / home))
                  :time (a / after
                        :op1 (g2 / grocery))
                  :ARG1-of (h2 / have-quant-91
                        :ARG3 (m / most)))))"
"(w / wash-01
      :mode imperative
      :ARG0 (y / you
            :part (h / hand))
      :ARG1 h
      :ARG2 (a / and
            :op1 (s / soap)
            :op2 (w2 / water))
      :duration (a2 / at-least
            :op1 (t / temporal-quantity
                  :quant 20
                  :unit (s2 / second)))
      :time (o / or
            :op1 (a3 / after
                  :op1 (b / be-located-at-91
                        :ARG1 y
                        :ARG2 (p / place
                              :ARG1-of (p2 / public-02))))
            :op2 (a4 / after
                  :op1 (o2 / or
                        :op1 (b2 / blow-01
                              :ARG0 y
                              :ARG2 (n / nose))
                        :op2 (c / cough-01
                              :ARG0 y)
                        :op3 (s3 / sneeze-01
                              :ARG0 y))
                  :mod (e / especially))))"
"(m / multi-sentence
      :snt1 (r / remind-01
            :ARG1 (t / thing
                  :ARG1-of (d / do-02
                        :ARG0 (y / you)
                        :ARG1-of (o / obligate-01
                              :ARG2 (g / go-02
                                    :ARG0 y
                                    :ARG4 (s / supermarket)
                                    :direction (o2 / out)))))
            :mod (j / just))
      :snt2 (s2 / stop-03
            :mode imperative
            :ARG0 (w / we)
            :ARG1 (v / virus
                  :mod (t2 / this))
            :ARG2 (t3 / track-03
                  :ARG1 v)))"
"(a / announce-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Container""
                  :op2 ""Store""))
      :ARG1 (a2 / and
            :op1 (c2 / close-01
                  :ARG0 c
                  :ARG1 (s / store
                        :ARG1-of (r / remain-01)
                        :mod (a3 / all)))
            :op2 (s2 / set-02
                  :ARG0 c
                  :ARG1 (l / limit-01
                        :ARG1 (s3 / shop-01)
                        :ARG1-of (h / have-degree-91
                              :ARG2 (s4 / strict)
                              :ARG3 (m / more))))))"
"(ii / increase-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Transurban""))
      :ARG1 (m / monetary-quantity
            :ARG2-of (p / price-01
                  :ARG1 (t / toll)
                  :ARG3 (p2 / person
                        :ARG0-of (d / drive-01
                              :ARG1 (a / automobile)))))
      :concession (c2 / coronavirus))"
"(m / multi-sentence
      :snt1 (l / likely-01
            :ARG1 (d / disrupt-01
                  :ARG1 (c / chain
                        :mod (g / globe)
                        :mod (s / supply-01)))
            :ARG2-of (h / have-degree-91
                  :ARG1 d
                  :ARG3 (m2 / more)
                  :ARG4 (d2 / disrupt-01
                        :ARG1 (c2 / chain
                              :mod (s2 / supply-01)
                              :mod (d3 / domestic))))
            :ARG1-of (c3 / cause-01
                  :ARG0 (h2 / have-degree-91
                        :ARG1 c2
                        :ARG2 (l2 / long-03
                              :ARG1 c2)
                        :ARG3 (m3 / more))))
      :ARG1-of (t / tell-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Miguel""
                        :op2 ""Gomez"")
                  :ARG0-of (h3 / have-org-role-91
                        :ARG1 (a / and
                              :op1 (r / research-institute
                                    :name (n2 / name
                                          :op1 ""AtkinsonCenter""))
                              :op2 (u / university
                                    :name (n3 / name
                                          :op1 ""CornellCALS"")))
                        :ARG2 (p2 / professor)))
            :ARG2 (p3 / publication
                  :name (n4 / name
                        :op1 ""Marketplace"")))
      :snt2 (c4 / chain
            :mod (s3 / supply-01)))"
"(o / offer-01
      :ARG0 (w / we)
      :ARG1 (d / discount-01
            :ARG3 (p / percentage-entity
                  :value 30)
            :ARG4 (o2 / order-01
                  :ARG1-of (p2 / place-01
                        :ARG2 (w2 / website
                              :mod (u / url-entity
                                    :value ""https://www.dunedin.com/"")
                              :poss w))
                  :mod (a / all))
            :prep-with (c / code
                  :mod (k / kePCalmandREADON))))"
"(s / see-01
      :ARG0 (g / game
            :poss (c / company
                  :name (n / name
                        :op1 ""Paradox""
                        :op2 ""Interactive""))
            :mod (t / top))
      :ARG1 (p / peak-01
            :ARG1 (p2 / person
                  :ARG0-of (p3 / play-01)))
      :ARG1-of (c2 / cause-01
            :ARG0 (ii / increase-01
                  :ARG0 (p4 / product
                        :name (n2 / name
                              :op1 ""COVID-19""))
                  :ARG1 (t2 / time
                        :mod (l / leisure)
                        :poss (p5 / person
                              :ARG0-of (c3 / consume-01))))))"
"(d / die-01
      :ARG1 (t / they)
      :purpose (a / and
            :op1 (p / possible-01
                  :ARG1 (e / eat-01
                        :ARG0 (w / we)))
            :op2 (p2 / possible-01
                  :ARG1 (g / get-01
                        :ARG0 t
                        :ARG1 (p3 / paycheck)))))"
"(m / multi-sentence
      :snt1 (r / recommend-01
            :ARG0 (p / person
                  :ARG0-of (s / specialize-01
                        :ARG1 (a / and
                              :op1 (d / design-01
                                    :ARG1 (p2 / package))
                              :op2 (d2 / design-01
                                    :ARG1 (s2 / seal)))))
            :ARG1 (b / buy-01
                  :ARG0 (y / you)
                  :ARG1 (s3 / sanitizer
                        :mod (h / hand)
                        :prep-with (c / cover
                              :mod (t / type
                                    :mod (t2 / this)))))
            :ARG2 y)
      :snt2 (h2 / have-degree-91
            :ARG1 (v / vaporize-01
                  :ARG1 (a2 / alcohol)
                  :location (ii / inside
                        :op1 (s4 / sanitizer)))
            :ARG2 (s5 / slow-01
                  :ARG1 v)
            :ARG3 (m2 / more)
            :ARG4 (o / other)))"
"(c / check-out-05
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (p / post
            :mod (f / full)
            :ARG1-of (l / link-01
                  :location (b / bio)))
      :purpose (s / see-01
            :ARG0 y
            :ARG1 (t / thing
                  :manner-of (s2 / stock-01
                        :ARG0 y
                        :ARG1 (s3 / supply-01
                              :ARG1 (f2 / food)
                              :mod (e / emergency))))))"
"(c / crisis
      :mod (t / this))"
"(a / and
      :op1 (t / trolley)
      :op2 (c / clean-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (h / handle
                  :part-of (c2 / cart
                        :purpose (s / shop-01)))
            :ARG2 (w / wipe
                  :ARG0-of (d / disinfect-01))
            :time (b / before
                  :op1 (u / use-01
                        :ARG0 y
                        :ARG1 t))
            :purpose (m / minimize-01
                  :ARG0 y
                  :ARG1 (r / risk-01
                        :ARG0 y
                        :ARG2 (c3 / catch-02
                              :ARG0 y
                              :ARG1 (p / product
                                    :name (n / name
                                          :op1 ""COVID-19""))
                              :location (s2 / supermarket))))))"
"(k / keep-02
      :ARG0 (p / process-02
            :ARG1 (a / and
                  :op1 (d / distance-01
                        :ARG2 (s / social-03))
                  :op2 (o / order-02
                        :ARG1 (f / food))
                  :op3 (s2 / shop-01
                        :ARG2 (s3 / supermarket)
                        :mod (e / even))
                  :op4 (b / board-01
                        :ARG1 (b2 / bus)
                        :location (c / country
                              :name (n / name
                                    :op1 ""America""))))
            :mod (s4 / strict)
            :ARG0-of (ii / invade-01))
      :ARG1 (l / low-04
            :ARG1 (n2 / number
                  :quant-of (c2 / case-04
                        :ARG1 (d2 / disease
                              :name (n3 / name
                                    :op1 ""COVID-19""))))))"
"(c / cause-01
      :ARG0 (p / possible-01
            :ARG1 (a / anything))
      :ARG1 (p2 / possible-01
            :polarity -
            :ARG1 (t / tell-02
                  :ARG0 (ii / i)
                  :ARG1 (t2 / truth-value
                        :polarity-of (r / raise-01
                              :ARG0 (t3 / they)
                              :ARG1 (p3 / price-01)
                              :ARG1-of (c2 / cause-01
                                    :ARG0 (l / law
                                          :name (n / name
                                                :op1 ""CODID""
                                                :op2 19))))))))"
"(b / beautiful-02
      :ARG1 (a / and
            :op1 (t / telecommunication)
            :op2 (t2 / telepathy))
      :mod (ii / indeed))"
"(m / multi-sentence
      :snt1 (a / apply-02
            :ARG1 (s / surcharge
                  :prep-for (p / product
                        :name (n / name
                              :op1 ""Covid-19"")))
            :ARG2 (s2 / serve-01
                  :ARG1 (f / freight
                        :mod (p2 / parcel))
                  :ARG1-of (o / offer-01
                        :ARG0 (a2 / airline
                              :mod (c / cargo)))
                  :mod (a3 / all)))
      :snt2 (c2 / contact-01
            :polite +
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (e / email-address-entity
                  :value ""team@freightww.com"")
            :purpose (p3 / price-01
                  :ARG1 (c3 / cargo
                        :name (n2 / name
                              :op1 ""AirCargoStrong"")))))"
"(m / multi-sentence
      :snt1 (p / person
            :quant 19
            :domain (ii / i)
            :mod (o / only)
            :ARG0-of (s / shop-01)
            :ARG0-of (w / wear-01
                  :ARG1 (a / and
                        :op1 (g / glove)
                        :op2 (m2 / mask))
                  :location (s2 / store
                        :mod (g2 / grocery))
                  :time (t / today)))
      :snt2 (u / use-01
            :polarity -
            :ARG0 (p2 / person)
            :ARG1 (w2 / wipe)
            :ARG2 (a2 / and
                  :op1 (c / cart)
                  :op2 (b / basket))
            :mod (e / even)))"
"(m / multi-sentence
      :snt1 (t / thrive-01
            :ARG1 (c / corporation
                  :ARG0-of (r / rent-01
                        :purpose (o / own-01)))
            :manner (a / and
                  :op1 (l / lobby-01
                        :ARG0 c
                        :ARG1 (e / exempt-01
                              :ARG1-of (l2 / legal-02)))
                  :op2 (s / skirt-02
                        :ARG0 c
                        :ARG1 (a2 / and
                              :op1 (l3 / law
                                    :topic (p / protect-01
                                          :ARG1 (p2 / person
                                                :ARG0-of (c2 / consume-01)))
                                    :mod (f / federal))
                              :op2 (l4 / law
                                    :topic (p3 / protect-01
                                          :ARG1 p2)
                                    :mod (s2 / state))))))
      :snt2 (p4 / possible-01
            :ARG1 (b / bring-01
                  :ARG0 (o2 / order-01
                        :ARG0 (g / government-organization
                              :name (n / name
                                    :op1 ""FTC""))
                        :mod (f2 / final))
                  :ARG1 (a3 / accountable-02
                        :ARG0 (b2 / business
                              :mod (r2 / rent-01
                                    :purpose (o3 / own-01)))
                        :ARG1-of (p5 / public-02)
                        :mod (s3 / some))
                  :ARG2 b2))
      :snt3 (a4 / and
            :op1 (s4 / stop-01
                  :ARG1 (d / debt))
            :op2 (c3 / company
                  :name (n2 / name
                        :op1 ""Cor""))))"
"(m / multi-sentence
      :snt1 (d / divide-02
            :ARG0 (l / line-up-02
                  :ARG1 (p / person)
                  :location (s / supermarket))
            :ARG1 p
            :ARG2 (t / thing
                  :name (n / name
                        :op1 ""X"")
                  :ARG1-of (t2 / tape-01
                        :ARG2 (f / floor))))
      :snt2 (h / hope-01
            :ARG1 (b / become-01
                  :ARG1 (s2 / space
                        :ARG1-of (p2 / personal-02))
                  :ARG2 (t3 / thing)
                  :location (c / country
                        :name (n2 / name
                              :op1 ""Guyana""))
                  :time (a / after
                        :op1 (p3 / pass-03
                              :ARG1 (t4 / this))))))"
"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (n / need-01
                  :polarity -
                  :ARG0 (ii / i)
                  :ARG1 (w / wig))
            :ARG2 (n2 / need-01
                  :ARG0 ii
                  :ARG1 (s / save-02
                        :ARG1 (t / thing
                              :mod (t2 / that)))))
      :snt2 (t3 / throw-out-06
            :mode imperative
            :polarity -
            :ARG0 (y / you)
            :ARG1 (ii2 / it)
            :ARG1-of (c2 / cause-01
                  :ARG0 (p / possible-01
                        :ARG1 (b / bring-01
                              :ARG0 (ii3 / i)
                              :ARG1 (g / girl
                                    :mod (o / old))
                              :ARG2 (l / life)
                              :direction (b2 / back)))))
      :snt3 (g2 / get-05
            :mode imperative
            :ARG0 y
            :ARG1 (ii4 / i)
            :time (l2 / low-04
                  :ARG1 (t4 / thing
                        :ARG2-of (p2 / price-01))))
      :snt4 (r / raise-01
            :ARG1 (t5 / thing
                  :ARG2-of (p3 / price-01)
                  :mod (a / all)
                  :mod (a2 / across
                        :op1 (b3 / board)))
            :time (a3 / after
                  :op1 (l3 / law
                        :name (n3 / name
                              :op1 ""COVID-19"")))))"
"(m / multi-sentence
      :snt1 (p / possible-01
            :li 1
            :ARG1 (f / focus-01
                  :ARG0 (ii / i)
                  :ARG2 (a / and
                        :op1 (h / home
                              :poss ii)
                        :op2 ii)
                  :time (f2 / final)))
      :snt2 (s / stay-01
            :li 2
            :ARG1 (y / you)
            :ARG3 (c / close-10
                  :ARG1 y
                  :ARG2 (r / routine
                        :ARG1-of (n / normal-02)
                        :poss y)))
      :snt3 (a2 / avoid-01
            :li 3
            :ARG0 y
            :ARG1 (o / obsess-01
                  :ARG0 y
                  :ARG1 (c2 / cover-03
                        :ARG2 (d / disease
                              :name (n2 / name
                                    :op1 ""Coronavirus""))
                        :ARG1-of (e / end-01
                              :polarity -)))))"
(a / amr-empty)
"(p / possible-01
      :ARG1 (r / report-01
            :ARG0 (p2 / person
                  :ARG0-of (c / consume-01)
                  :ARG0-of (t / think-01
                        :ARG1 (o / overcharge-01
                              :ARG2 p2
                              :time (p3 / pandemic))))
            :ARG1 t
            :ARG2 (p4 / person
                  :name (n / name
                        :op1 ""Eric""
                        :op2 ""Schmitt"")
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (s / state
                              :name (n2 / name
                                    :op1 ""Missouri""))
                        :ARG2 (a / attorney
                              :mod (g / general))))
            :ARG1-of (h2 / have-degree-91
                  :ARG2 (e / easy-05
                        :ARG1 r)
                  :ARG3 (m / more)))
      :time (n3 / now))"
"(s / seem-01
      :ARG1 (c / change-01
            :ARG1 (b / behave-01
                  :ARG0 (p / person
                        :ARG0-of (c2 / consume-01)))
            :duration (p2 / permanent)
            :manner (a / across
                  :op1 (d / dimension))
            :ARG0-of (p3 / pose-02
                  :ARG1 (c3 / challenge-01
                        :ARG1 (b2 / business
                              :location a
                              :op1 (n / nation)))
                  :ARG1-of (f / foresee-01
                        :polarity -))
            :ARG2 b2))"
"(a / and
      :op1 (s / store
            :ARG1-of (s2 / shut-down-05))
      :op2 (s3 / store
            :ARG0-of (r / reduce-01
                  :ARG1 (h / hour)
                  :time (o / onslaught
                        :ARG1-of (g / go-on-15))))
      :location (h2 / here))"
"(m / multi-sentence
      :snt1 (j / join-04
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (a / and
                  :op1 (c / company
                        :name (n / name
                              :op1 ""The""
                              :op2 ""Parker""
                              :op3 ""Avery""
                              :op4 ""Group""))
                  :op2 (ii / i))
            :ARG2 (w / webinar
                  :frequency (r / rate-entity-91
                        :ARG3 (t / temporal-quantity
                              :quant 1
                              :unit (w2 / week)))
                  :beneficiary (a2 / and
                        :op1 (b / brand
                              :mod (r2 / retail-01))
                        :op2 (b2 / brand
                              :mod (c2 / consume-01)))))
      :snt2 (a3 / and
            :op1 (w3 / webinar
                  :ord (o / ordinal-entity
                        :value 1)
                  :time (d / date-entity
                        :day 16
                        :month 4
                        :time ""14:00""
                        :timezone ""EDT""
                        :weekday (t2 / thursday)))
            :op2 (w4 / webinar
                  :topic (s / step-01
                        :ARG2 (ii2 / inventory
                              :poss (y2 / you))
                        :ARG1-of (p / practical-02)))))"
"(p / present-01
      :ARG0 (a / and
            :op1 (p2 / price-01
                  :ARG1 (s / stock)
                  :ARG1-of (f / fall-01))
            :op2 (m / market
                  :ARG1-of (d / depress-01)))
      :ARG1 (o / opportunity)
      :ARG2 (p3 / person
            :ARG0-of (ii / invest-01
                  :ARG2 (v / value)
                  :ARG1-of (l / long-03))))"
"(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (ii / include-91
                  :polarity -
                  :ARG1 (ii2 / i)
                  :ARG2 (g / group
                        :ARG0-of (r / risk-01
                              :ARG1-of (h / high-02))))
            :ARG1 (u / use-up-04
                  :ARG0 ii2
                  :ARG1 (f / food
                        :mod (r2 / random)
                        :ARG1-of (b / be-located-at-91
                              :ARG2 (c2 / cupboard
                                    :poss ii2)
                              :duration (m2 / multiple
                                    :op1 (t / temporal-quantity
                                          :quant 1
                                          :unit (m3 / month)))))
                  :ARG1-of (ii3 / instead-of-91
                        :ARG2 (a / and
                              :op1 (b2 / buy-01
                                    :ARG0 ii2
                                    :manner (p / panic-01))
                              :op2 (s / stockpile-01
                                    :ARG0 ii2)))))
      :snt2 (b3 / butter
            :mod (n / nut)
            :time (t2 / today))
      :snt3 (a2 / and
            :op1 (e / easy-05)
            :op2 (a3 / amp))
      :snt4 (t3 / taste-02
            :ARG1 (n2 / nut
                  :ARG1-of (e2 / expire-01
                        :time (d / date-entity
                              :year 2018))
                  :mod (e3 / even))
            :ARG2 (g2 / great)
            :time (r3 / roast-01
                  :ARG1 n2)))"
"(m / multi-sentence
      :snt1 (k / kill-01
            :ARG0 (o / organization
                  :name (n / name
                        :op1 ""Covid-19""))
            :ARG1 (p / person
                  :mod (y / young)
                  :mod (h / healthy)
                  :quant (m2 / more)
                  :age (b / between
                        :op1 (t / temporal-quantity
                              :quant 19
                              :unit (y2 / year))
                        :op2 (t2 / temporal-quantity
                              :quant 70
                              :unit (y3 / year)))))
      :snt2 (p2 / prepare-02
            :mode imperative
            :ARG0 (y4 / you)
            :ARG1 y4
            :ARG2 (l / lock-down-03
                  :ARG1 (c / city
                        :mod (e / every)
                        :location (p3 / planet
                              :name (n2 / name
                                    :op1 ""Earth"")))
                  :ARG1-of (l2 / long-03)))
      :snt3 (s / stock-up-02
            :mode imperative
            :ARG0 y4
            :ARG1 (a / and
                  :op1 (f / food)
                  :op2 (w / water))))"
"(w / warn-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Disney""))
      :ARG1 (p / possible-01
            :ARG1 (c2 / change-01
                  :ARG0 (o / outbreak-29
                        :ARG1 (c3 / coronavirus))
                  :ARG1 (b / behave-01
                        :ARG0 (p2 / person
                              :ARG0-of (c4 / consume-01))
                        :location (a / and
                              :op1 (a2 / amusement-park
                                    :mod (t / theme))
                              :op2 (b2 / business
                                    :mod (o2 / other)))))))"
"(m / mean-01
      :ARG1 (p / person
            :ARG0-of (h / hoard-01
                  :ARG1 (s / supermarket)))
      :ARG2 (b / buy-01
            :ARG0 p
            :ARG1 (g / good
                  :quant (m2 / mass-quantity
                        :mod (l / large)))
            :purpose (s2 / sell-01
                  :ARG0 p
                  :ARG1 g
                  :ARG3 (p2 / price
                        :ARG1-of (h2 / have-degree-91
                              :ARG2 (h3 / high-02
                                    :ARG1 p2)
                              :ARG3 (m3 / more)))
                  :time (a / after
                        :op1 b))))"
"(r / report-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Tim_Dodson""))
      :ARG1 (f / flock-01
            :ARG0 (p2 / person)
            :destination (s / store
                  :location (a / area))
            :purpose (p3 / purchase-01
                  :ARG0 p2
                  :ARG1 (a2 / and
                        :op1 (s2 / supply-01
                              :ARG1 (c / clean-01))
                        :op2 (s3 / sanitizer
                              :mod (h / hand))
                        :op3 (f2 / food)
                        :op4 (p4 / paper
                              :mod (t / toilet))
                        :op5 (g / good
                              :mod (o / other))))
            :time (c2 / come-out-09
                  :ARG1 (n2 / news
                        :topic (c3 / case-04
                              :name (n3 / name
                                    :op1 ""COVID-19"")
                              :location (r2 / region)
                              :ARG1-of (c4 / confirm-01)
                              :ord (o2 / ordinal-entity
                                    :value 1)))
                  :source (c5 / county
                        :name (n4 / name
                              :op1 ""Sullivan""))
                  :time (w / week
                        :mod (l / last)))))"
"(s / share-01
      :polarity -
      :ARG0 (g / government-organization
            :ARG0-of (g2 / govern-01
                  :ARG1 (c / country
                        :name (n / name
                              :op1 ""Scotland""))))
      :ARG1 (ii / information
            :ARG0-of (a / allow-01
                  :ARG1 (a2 / access-01
                        :ARG0 (p / person
                              :ARG1-of (v / vulnerable-01))
                        :ARG1 (s2 / slot
                              :mod (s3 / supermarket
                                    :mod (o / online))))))
      :time (y / yet)
      :ARG0-of (p2 / please-01
            :ARG1 (ii2 / i)
            :ARG1-of (s4 / see-01
                  :ARG0 ii2
                  :ARG2 (c2 / cover-01
                        :ARG0 (p3 / publication
                              :name (n2 / name
                                    :op1 ""FerretScot""))))))"
"(m / multi-sentence
      :snt1 (w / woe
            :polarity -
            :mod (p / paper
                  :purpose (t / toilet))
            :quant (m2 / more))
      :snt2 (f / find-01
            :ARG0 (p2 / person
                  :name (n / name
                        :op1 ""Jim""
                        :op2 ""Zimmerman""))
            :ARG1 (t2 / thing
                  :ARG2-of (a / answer-01))
            :medium (p3 / product
                  :name (n2 / name
                        :op1 ""Alexa""))))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG1 (n / nice-01
                  :ARG1 (s2 / see-01
                        :ARG1 (p / person
                              :name (n2 / name
                                    :op1 ""Munchie""))
                        :ARG2 (b / be-located-at-91
                              :ARG1 p
                              :ARG2 (p2 / publication
                                    :name (n3 / name
                                          :op1 ""Twitter""))
                              :direction (b2 / back))))
            :ARG2 p)
      :snt2 (h / horrible
            :domain (e / event
                  :name (n4 / name
                        :op1 ""COVID19"")
                  :mod (t / this)))
      :snt3 (c / close-01
            :ARG1 (s3 / shop
                  :mod (a / all)
                  :location (c2 / center
                        :mod (t2 / town)
                        :poss (ii / i))
                  :ARG2-of (ii2 / include-01
                        :ARG1 (h2 / hall
                              :mod (t3 / town)))))
      :snt4 (a2 / and
            :op1 (g / go-02
                  :ARG0 ii
                  :ARG4 (o / out)
                  :purpose (s4 / shop-01
                        :ARG0 ii
                        :ARG1 (f / food
                              :quant (s5 / some)))
                  :time (y / yesterday))
            :op2 s2
            :ARG0 ii
            :ARG1 (q / queue-01
                  :purpose (g2 / get-05
                        :ARG1 ii
                        :ARG2 (s6 / supermarket)))
            :concession-of (m2 / manage-02
                  :ARG0 ii)))"
"(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (g / get-03
                  :ARG1 (l / law
                        :name (n / name
                              :op1 ""COVID""
                              :op2 19))
                  :ARG2 (s / start-01
                        :ARG1 l)
                  :mod (j / just))
            :ARG1 (h / have-degree-91
                  :ARG1 (b / bail-out-02
                        :ARG1 (ii / industry))
                  :ARG2 (e / early)
                  :ARG3 (t / too)))
      :snt2 (a / and
            :op1 (w / wipe-out-02
                  :ARG1 (m2 / money
                        :ARG2-of (b2 / bail-out-02))
                  :time (s2 / session
                        :quant 2
                        :mod (m3 / market
                              :mod (s3 / stock))))
            :op2 (a2 / amr-unknown
                  :time (t2 / then)))
      :snt3 (c2 / contrast-01
            :ARG2 (g2 / go-10
                  :ARG1 (ii2 / it)
                  :ARG2 (p / person)
                  :ARG3 (a3 / and
                        :op1 (f / food)
                        :op2 (r / rent)
                        :op3 (e2 / et-cetera)
                        :ARG0-of (h2 / help-01
                              :ARG1 (e3 / economy)))
                  :ARG1-of (d / direct-02)
                  :manner (b3 / bail-out-02
                        :ARG1 p))))"
"(h / hit-02
      :ARG0 (p / price-01
            :ARG1 (h2 / home)
            :location (c / city
                  :name (n / name
                        :op1 ""Las""
                        :op2 ""Vegas"")))
      :ARG1 (h3 / high-02
            :ARG1 p
            :mod (r / record))
      :time (d / date-entity
            :month 3
            :year 2020))"
"(a / and
      :op1 (ii / isolate-01
            :ARG1 (ii2 / i
                  :part (n / nose))
            :duration (t / temporal-quantity
                  :quant 4
                  :unit (w / week)))
      :op2 (p / put-01
            :polarity -
            :ARG0 ii2
            :ARG1 n
            :ARG2 (o / outside)
            :time (a2 / after
                  :op1 ii
                  :duration (t2 / temporal-quantity
                        :quant 4
                        :unit (w2 / week)))))"
"(a / and
      :op1 (t / take-04
            :polarity -
            :ARG0 (p / person)
            :ARG1 (u / university
                  :name (n / name
                        :op1 ""Covid""
                        :op2 19))
            :ARG2 (s / serious-01))
      :op2 (f / follow-02
            :polarity -
            :ARG0 p
            :ARG1 (g / guideline
                  :topic (d / distance-01
                        :ARG2 (s2 / society))))
      :location (c / city
            :name (n2 / name
                  :op1 ""Eldoret"")))"
"(m / multi-sentence
      :snt1 (d / disgrace-01
            :ARG0 (t / this))
      :snt2 (h / have-03
            :ARG0 (ii / i)
            :ARG1 (r / receipt
                  :ARG0-of (s / show-01
                        :ARG1 (c / charge-01
                              :ARG0 (y / you)
                              :ARG1 (m2 / monetary-quantity
                                    :quant 9.99
                                    :unit (p / pound))
                              :ARG3 (p2 / product
                                    :name (n / name
                                          :op1 ""Paracetamol""))))))
      :snt3 (a / and
            :op1 (o / or
                  :op1 (o2 / own-01
                        :polarity -
                        :ARG1 (p3 / pharmacy)
                        :manner (ii2 / independent))
                  :op2 (r2 / run-01
                        :polarity -
                        :ARG1 p3))
            :op2 (p4 / possible-01
                  :ARG1 (c2 / come-03
                        :ARG1 (t2 / this)
                        :ARG2 (t3 / top)
                        :mod (o3 / only)))))"
"(r / recommend-01
      :ARG1 (w / wash-01
            :ARG0 (y / you)
            :ARG1 (a / and
                  :op1 (f / fruit)
                  :op2 (v / vegetable)
                  :poss y)
            :ARG2 (s / soap)
            :purpose (k / kill-01
                  :ARG0 y
                  :ARG1 (c / coronavirus)))
      :ARG2 y)"
"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (p / pressure-01
                  :ARG1 (n / nurse)
                  :ARG2 (s / save-02
                        :ARG0 n
                        :ARG1 (l / life)
                        :time (p2 / pandemic
                              :mod (t / this))))
            :ARG2 (h / hike-02
                  :ARG0 (p3 / person
                        :mod (b / business)
                        :ARG1-of (r / risk-01
                              :ARG2 (l2 / law
                                    :name (n2 / name
                                          :op1 ""COVID-19""))))
                  :ARG1 (p4 / price-01
                        :ARG1 (e / equipment
                              :ARG0-of (p5 / protect-01)
                              :ARG1-of (n3 / need-01
                                    :ARG0 (w / we)
                                    :purpose (d / do-02
                                          :ARG0 w
                                          :ARG1 (j / job
                                                :mod (t2 / this))))))))
      :snt2 (o / okay-04
            :polarity (a / amr-unknown)
            :ARG1 w))"
"(g / get-04
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Nushrat""
                  :op2 ""Bharucha""))
      :ARG1 (c / check-01
            :ARG1 (t / temperature
                  :poss p))
      :location (s / store
            :mod (g2 / grocery)
            :ARG1-of (l / local-02
                  :ARG2 (c2 / city
                        :name (n2 / name
                              :op1 ""Bandra""))))
      :time (s2 / step-out-06
            :ARG0 p
            :purpose (s3 / shop-01
                  :ARG0 p
                  :mod (e / essential)
                  :quant (s4 / some))))"
"(m / multi-sentence
      :snt1 (c / cause-01
            :ARG1 (a / and
                  :op1 (b / buy-01
                        :ARG0 (c2 / company
                              :name (n / name
                                    :op1 ""Brookside""))
                        :ARG1 (m2 / milk
                              :quant (v / volume-quantity
                                    :quant 1
                                    :unit (l / liter)))
                        :ARG2 (p / person
                              :ARG0-of (f / farm-01))
                        :time (a2 / about
                              :op1 (a3 / age-01
                                    :ARG1 p
                                    :ARG2 a2
                                    :op1 (t / temporal-quantity
                                          :quant 35
                                          :unit (y / year))))))
            :op2 (r / remove-01
                  :ARG0 c2
                  :ARG1 (f2 / fat)
                  :purpose (m3 / make-01
                        :ARG0 c2
                        :ARG1 (b2 / butter
                              :mod (g / ghee))))
            :op3 (g2 / give-back-03
                  :ARG0 c2
                  :ARG1 (w / water
                        :quant (v2 / volume-quantity
                              :quant 1
                              :unit (l2 / liter)))
                  :ARG2 (y2 / you)))
      :snt2 (s / same-01
            :ARG1 (a4 / and
                  :op1 (m4 / maize)
                  :op2 (w2 / wheat)))
      :snt3 (c3 / conn
            :mod (c4 / country
                  :name (n2 / name
                        :op1 ""Kenya"")))
      :time (a5 / always)
      :condition (a6 / as-long-as
            :op1 (b3 / business
                  :prep-with (w3 / we)
                  :domain (p2 / person
                        :ARG0-of (l3 / lead-02
                              :ARG1 y2)))))"
"(m / multi-sentence
      :snt1 (s / shock-01
            :ARG0 (r / read-01
                  :ARG0 (ii / i)
                  :ARG1 (a / article
                        :source (n / newspaper
                              :name (n2 / name
                                    :op1 ""Toronto""
                                    :op2 ""Star"")))
                  :ARG3 (s2 / sell-01
                        :ARG0 (c / company
                              :name (n3 / name
                                    :op1 ""Pusateri's""))
                        :ARG1 (c2 / container
                              :consist-of (w / wipe
                                    :purpose (d / disinfectant))
                              :ARG1-of (c3 / cost-01
                                    :ARG2 (m2 / monetary-quantity
                                          :quant 30
                                          :unit (d2 / dollar))))
                        :time (w2 / week
                              :mod (l / last))))
            :ARG1 ii)
      :snt2 (f / feel-01
            :ARG0 (ii2 / it)
            :ARG1 (r2 / resemble-01
                  :ARG2 (m3 / month
                        :mod (l2 / last)))))"
"(a / and
      :op1 (q / quit-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Guest766""))
            :ARG1 (p2 / publication
                  :name (n2 / name
                        :op1 ""IRC""))
            :time (d / date-entity
                  :time ""19:53""))
      :op2 (j / join-01
            :ARG0 p
            :ARG1 p2)
      :op3 (s / string-entity
            :value ""Guest766""))"
"(t / thing
      :mode expressive)"
"(e / evidence-01
      :polarity -
      :ARG1 (o / or
            :op1 (m / mitigate-01
                  :ARG0 (s / supplement)
                  :ARG1 (d / disease
                        :name (n / name
                              :op1 ""COVID-19"")))
            :op2 (p / prevent-01
                  :ARG0 s
                  :ARG1 d)
            :op3 (t / treat-03
                  :ARG0 s
                  :ARG2 d)
            :op4 (c / cure-01
                  :ARG0 s
                  :ARG2 d))
      :mod (s2 / science)
      :time (c2 / current))"
"(b / bottle
      :ARG0-of (c / contain-01
            :ARG1 (a / and
                  :op1 (p / product
                        :name (n / name
                              :op1 ""Microban"")
                        :mod (p2 / purpose
                              :mod (m / multi))
                        :ARG0-of (c2 / clean-01))
                  :op2 (p3 / product
                        :ARG0-of (s / sanitize-01))
                  :op3 (p4 / product
                        :ARG0-of (d / disinfect-01))))
      :quant (v / volume-quantity
            :quant 1
            :unit (q / quart))
      :domain (t / this))"
"(r / recommend-01
      :ARG1 (r2 / realize-01
            :ARG0 (p / person
                  :ARG0-of (c / consume-01))
            :ARG1 (a / and
                  :op1 (p2 / person
                        :ARG0-of (d / defraud-01)
                        :ARG0-of (c2 / claim-01
                              :ARG1 (s / sell-01
                                    :ARG0 p2
                                    :ARG1 (c3 / cure-01
                                          :ARG2 (d2 / disease
                                                :name (n / name
                                                      :op1 ""COVID-19""))))))
                  :op2 (p3 / person
                        :ARG0-of (s2 / scam-01)
                        :ARG0-of (ii / impersonate-01
                              :ARG1 (a2 / agency
                                    :mod (g / government-organization
                                          :ARG0-of (g2 / govern-01)))
                              :purpose (g3 / gain-02
                                    :ARG0 p3
                                    :ARG1 (ii2 / information
                                          :ARG1-of (p4 / personal-02
                                                :ARG2 p))
                                    :purpose (s3 / steal-01
                                          :ARG0 p3
                                          :ARG1 (c4 / check
                                                :mod (s4 / stimulus)
                                                :poss p)
                                          :ARG2 p))))))
      :ARG2 p)"
"(a / and
      :op1 (p / possible-01
            :ARG1 (a2 / affect-01
                  :ARG0 (p2 / product
                        :name (n / name
                              :op1 ""COVID-19""))
                  :ARG1 (s / store
                        :mod (r / retail-01)
                        :poss (y / you))))
      :op2 (o / offer-01
            :ARG0 (p3 / post-01
                  :ARG0 (p4 / person
                        :name (n2 / name
                              :op1 ""Vend""))
                  :mod (g / guest)
                  :mod (t / this))
            :ARG1 (t2 / tip-05
                  :ARG1 (p5 / prepare-02
                        :ARG0 y))))"
"(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (p / pandemic
                  :name (n / name
                        :op1 ""COVID-19""))
            :ARG1 (a / and
                  :op1 (p2 / paranoia
                        :poss (p3 / person
                              :ARG0-of (c2 / consume-01)))
                  :op2 (r / rumor-01
                        :ARG0 p3))
            :ARG0-of (ii / impact-01
                  :ARG1 (b / brand
                        :name (n2 / name
                              :op1 ""F&B""))
                  :ARG1-of (d / direct-02)))
      :snt2 (l / look-01
            :ARG0 (w / we)
            :ARG1 (t / thing
                  :manner-of (g / generate-01
                        :ARG0 b
                        :ARG1 (f / faith)
                        :ARG2 (p4 / person
                              :ARG0-of (c3 / consume-01))
                        :manner (s / share-01
                              :ARG0 b
                              :medium (m2 / media
                                    :mod (s2 / social)))))))"
"(a / and
      :op1 (r / resemble-01
            :ARG1 (m / market
                  :mod (p / property)
                  :location (c / country
                        :name (n / name
                              :op1 ""Italy"")))
            :ARG2 (m2 / market
                  :mod p
                  :location (c2 / country
                        :name (n2 / name
                              :op1 ""Britain""))))
      :op2 (p2 / possible-01
            :ARG1 (l / learn-01
                  :ARG0 (w / we)
                  :ARG1 (m3 / much)
                  :ARG2 m)))"
"(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Adamantium_""))
      :time (d / date-entity
            :day 25
            :month 3
            :year 2020))"
"(m / multi-sentence
      :snt1 (h / here
            :mode expressive)
      :snt2 (o / obligate-01
            :ARG1 (y / you
                  :part (h2 / hand))
            :ARG2 (w / wash-01
                  :ARG0 y
                  :ARG1 h2
                  :ARG2 (s / soap
                        :source (t / thing
                              :ARG0-of (d / dispense-01)
                              :ARG1-of (m2 / mount-03
                                    :ARG0 (p / person
                                          :ARG0-of (h3 / have-rel-role-91
                                                :ARG1 (ii / i)
                                                :ARG2 (m3 / mum)))
                                    :ARG1-of (a / actual-02))))
                  :time (b / before
                        :op1 (p2 / possible-01
                              :ARG1 (e / enter-01
                                    :ARG0 y
                                    :ARG1 (s2 / supermarket
                                          :poss p)))))))"
"(c / cause-01
      :ARG0 (a / amr-unknown)
      :ARG1 (h / have-degree-91
            :ARG1 (c2 / case-04
                  :name (n / name
                        :op1 ""COVID-19"")
                  :location (a2 / adult
                        :mod (y / young)))
            :ARG2 (s / severe)
            :ARG3 (s2 / so)
            :frequency (s3 / sometimes)))"
"(c / confuse-01
      :ARG0 (s / store
            :mod (g / grocery))
      :ARG1 (p / person
            :mod (t / that)
            :ARG0-of (g2 / give-up-07
                  :ARG1 (m / media)
                  :purpose (l / lend-01)))
      :mod (p2 / probable))"
"(ii / identify-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Shilla""
                  :op2 ""Travel""
                  :op3 ""Retail""
                  :op4 ""Hong""
                  :op5 ""Kong"")
            :ARG0-of (r / run-01
                  :ARG1 (s / store
                        :name (n2 / name
                              :op1 ""Beauty""
                              :op2 ""&""
                              :op3 ""You"")
                        :location (a / airport
                              :name (n3 / name
                                    :op1 ""Hong""
                                    :op2 ""Kong""
                                    :op3 ""International""
                                    :op4 ""Airport"")))))
      :ARG1 (p / promote-02
            :ARG1 (s2 / shop-01
                  :medium (o / online)))
      :ARG2 (w / way
            :manner-of (d / drive-02
                  :ARG0 c
                  :ARG1 (s3 / sell-01)
                  :time (c2 / crisis
                        :name (n4 / name
                              :op1 ""Covid-19"")))))"
"(p / protect-01
      :ARG0 (y / you)
      :ARG1 (a / and
            :op1 y
            :op2 (o / other))
      :ARG2 (l / law
            :name (n / name
                  :op1 ""COVID-19"")))"
"(e / expect-01
      :ARG0 (o / organization
            :name (n / name
                  :op1 ""Food""
                  :op2 ""Bank""))
      :ARG1 (a / and
            :op1 (ii / increase-01
                  :ARG1 (d / demand-01
                        :ARG1 (f / food)))
            :op2 (c / change-01
                  :ARG1 (m / method
                        :manner-of (d2 / distribute-01
                              :ARG1 f)))
            :ARG1-of (c2 / cause-01
                  :ARG0 (l / law
                        :name (n2 / name
                              :op1 ""COVID-19""))))
      :ARG1-of (s / say-01
            :ARG0 (p / publication
                  :name (n3 / name
                        :op1 ""Times""
                        :op2 ""Free""
                        :op3 ""Press""))
            :time (d3 / date-entity
                  :day 18
                  :month 3
                  :year 2020)))"
"(m / multi-sentence
      :snt1 (r / remember-01
            :mode imperative
            :ARG0 (y / you
                  :part (h / hand))
            :ARG1 (a / and
                  :op1 (s / stay-01
                        :ARG1 y
                        :ARG3 (c / calm-03
                              :ARG1 y))
                  :op2 (w / wash-01
                        :ARG0 y
                        :ARG1 h
                        :ARG1-of (r2 / regular-02))
                  :op3 (u / use-01
                        :ARG0 y
                        :ARG1 (s2 / sanitizer))
                  :op4 (k / keep-02
                        :ARG0 y
                        :ARG1 (c2 / clean-04
                              :ARG1 y)))
            :time (t / time
                  :ARG0-of (t2 / trouble-01)
                  :mod (t3 / this))
            :location (h2 / house
                  :poss y))
      :snt2 (a2 / and
            :op1 (p / prepare-02
                  :polite +
                  :mode imperative
                  :ARG0 (y2 / you))
            :op2 (g / go-02
                  :mode imperative
                  :ARG0 y2
                  :ARG4 (s3 / store)
                  :ARG1-of (r3 / regular-02))
            :mod (a3 / also))
      :snt3 (h3 / have-03
            :mode imperative
            :ARG0 (y3 / you)
            :ARG1 (s4 / stock-01
                  :ARG1 (a4 / and
                        :op1 s2)
                  :op2 (s5 / soap))
            :mod (d / decent))
      :location (h4 / house
            :poss y3)
      :time (a5 / always))"
"(m / multi-sentence
      :snt1 (m2 / madness
            :domain (t / this))
      :snt2 (l / likely-01
            :ARG1 (c / contagious
                  :domain (p / person
                        :ARG1-of (c2 / confirm-01
                              :ARG2 (h / have-03
                                    :ARG0 p
                                    :ARG1 (d / disease
                                          :name (n / name
                                                :op1 ""COVID-19""))))))
            :mod (s / still)
            :concession-of (p2 / possible-01
                  :ARG1 (t2 / think-01
                        :ARG0 p
                        :ARG1 (o / okay-04
                              :ARG1 (o2 / or
                                    :op1 (s2 / see-01
                                          :ARG0 p
                                          :ARG1 (p3 / person
                                                :ARG0-of (h2 / have-rel-role-91
                                                      :ARG1 p
                                                      :ARG2 (k / kid))))
                                    :op2 (g / go-02
                                          :ARG0 p
                                          :ARG4 (s3 / supermarket))))))))"
"(m / multi-sentence
      :snt1 (f / figure-out-05
            :ARG1 (t / thing
                  :ARG1-of (d / do-02
                        :ARG0 (f2 / folk
                              :mod (t2 / this))
                        :location (s / state
                              :name (n / name
                                    :op1 ""So""
                                    :op2 ""Cal"")))))
      :snt2 (l / like-01
            :ARG0 (ii / i)
            :ARG1 (ii2 / idea
                  :mod (t3 / this))))"
"(m / multi-sentence
      :snt1 (o / obligate-01
            :ARG1 (ii / i)
            :ARG2 (w / work-01
                  :ARG0 ii
                  :ARG2 (s / store
                        :mod (p / part
                              :mod (a / auto))
                        :ARG1-of (r / retail-01)
                        :ARG1-of (e / essential-01))
                  :ARG0-of (f / force-01
                        :ARG1 ii
                        :ARG2 (e2 / expose-01
                              :ARG1 ii))))
      :snt2 (w2 / wish-01
            :ARG1 (l / luck)
            :ARG2 (ii2 / i))
      :snt3 (c / contrast-01
            :ARG1 (t / thing
                  :ARG1-of (c2 / choose-01)
                  :ARG1-of (f2 / fair-01
                        :polarity -)
                  :domain (ii3 / it)
                  :ARG1-of (m2 / mean-01
                        :ARG2 (o2 / or
                              :op1 (p2 / pay-01
                                    :ARG0 (ii4 / i)
                                    :ARG3 (r2 / rent))
                              :op2 (s2 / safe-01
                                    :ARG1 ii4))))
            :ARG2 (h / have-03
                  :polarity -
                  :ARG0 ii4
                  :ARG1 (t2 / thing
                        :ARG1-of (c3 / choose-01)))))"
"(c / cause-01
      :ARG0 (c2 / company
            :name (n / name
                  :op1 ""Covid-19""))
      :ARG1 (t / think-01
            :ARG0 (s / store
                  :mod (g / grocery))
            :ARG1 (o / okay-04
                  :ARG1 (h / hike-02
                        :ARG0 s
                        :ARG1 (p / price-01
                              :ARG0 s)
                        :ARG2 (p2 / percentage-entity
                              :value 20)
                        :ARG5 (u / up)
                        :ARG1-of c
                        :ARG0 (ii / issue-02
                              :mod (g2 / globe)
                              :mod (t2 / this)))))
      :mod (a / also))"
"(c / check-out-05
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (a / article
            :name (n / name
                  :op1 ""A""
                  :op2 ""COVID-19""
                  :op3 ""Cure""
                  :op4 ""for""
                  :op5 ""Restaurants:""
                  :op6 ""Reaching""
                  :op7 ""Older""
                  :op8 ""Diner""))
      :ARG2 (t / tip-05
            :ARG1 y
            :ARG2 (r / reach-01
                  :ARG0 y
                  :ARG1 (m / market
                        :mod (t2 / this)))
            :quant (s / some)))"
"(c / complicate-01
      :ARG0 (l / lead-03
            :ARG0 (s / source-01)
            :ARG2 (a / and
                  :op1 (p / price-01
                        :ARG1-of (h / have-degree-91
                              :ARG2 (h2 / high-02
                                    :ARG1 p)
                              :ARG3 (m / more)))
                  :op2 (c2 / close-01
                        :ARG1 (b / border
                              :mod (e / export-01))))
            :ARG0-of (c3 / create-01
                  :ARG1 (k / know-01
                        :polarity -
                        :ARG1 (a2 / and
                              :op1 (s2 / supply-01)
                              :op2 (d / demand-01)))))
      :ARG1 (a3 / and
            :op1 s2
            :op2 d
            :time (y / year
                  :mod (t / this))))"
"(o / order-01
      :ARG0 (c / city
            :name (n / name
                  :op1 ""Miami""
                  :op2 ""Beach""))
      :ARG2 (r / require-01
            :ARG0 c
            :ARG1 (w / wear-01
                  :ARG0 (a / and
                        :op1 (p / person
                              :ARG1-of (e / employ-01
                                    :ARG2 (a2 / and
                                          :op1 (s / store
                                                :mod (g / grocery))
                                          :op2 (p2 / pharmacy)
                                          :op3 (r2 / restaurant)))
                              :mod (a3 / all)
                              :part (n2 / nose)
                              :part (m / mouth))
                        :op2 (p3 / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG1 a
                                    :ARG2 (c2 / customer))))
                  :ARG1 (c3 / cover-01
                        :ARG1 (f / face)
                        :purpose-of w)
                  :ARG1 (a4 / and
                        :op1 n2
                        :op2 m))
            :purpose (c4 / curb-01
                  :ARG0 a
                  :ARG1 (s2 / spread-02
                        :ARG1 (c5 / coronavirus))))
      :mod (e2 / emergency)
      :time (t / today))"
"(w / wonder-01
      :ARG0 (o / one)
      :ARG1 (t / truth-value
            :polarity-of (c / continue-01
                  :ARG0 (p / person
                        :ARG0-of (o2 / oppose-01
                              :ARG1 (v / vaccine)))
                  :ARG1 (o3 / oppose-01
                        :ARG0 p
                        :ARG1 (v2 / vaccine
                              :name (n / name
                                    :op1 ""Covid-19"")))
                  :time (v3 / vaccine
                        :mod (f / final)))))"
"(w / want-01
      :ARG0 (p / person
            :ARG0-of (w2 / work-01
                  :ARG2 (s / store
                        :mod (g / grocery))))
      :ARG1 (p2 / protect-01
            :ARG1 p
            :ARG2 (c / coronavirus)
            :mod (m / more)))"
"(m / multi-sentence
      :snt1 (t / time
            :time-of (u / upgrade-02)
            :domain (ii / it))
      :snt2 (k / know-01
            :ARG0 (y / you)
            :ARG1 (t2 / thing
                  :location-of (f / find-01
                        :ARG0 y
                        :ARG1 (w / we)))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (l / live-01
                  :ARG0 (ii / i)
                  :location (a2 / area
                        :part-of (s / state
                              :name (n / name
                                    :op1 ""Michigan""))
                        :ARG1-of (h / hit-01
                              :ARG0 (c / company
                                    :name (n2 / name
                                          :op1 ""Covid-19""))
                              :ARG1-of (h2 / have-degree-91
                                    :ARG2 (h3 / hard)
                                    :ARG3 (m2 / most)))))
            :op2 (w / work-01
                  :ARG0 ii
                  :location a2))
      :snt2 (c2 / cause-01
            :ARG0 (e / employ-01
                  :ARG0 (s2 / store
                        :mod (g / grocery))
                  :ARG1 (ii2 / i))
            :ARG1 (h4 / hell
                  :domain (l2 / life)
                  :time (s3 / since
                        :op1 (d / date-entity
                              :day 10))
                  :degree (p / pretty-much)))
      :snt3 (h5 / healthy
            :mod (s4 / still)
            :domain ii2
            :concession (a3 / as-far-as
                  :op1 (k / know-01
                        :ARG0 ii2))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (a2 / ask-01
                  :ARG0 (s / someone)
                  :ARG1 (o / okay-04
                        :ARG1 (ii / i))
                  :ARG2 ii
                  :time (t / today))
            :op2 (s2 / say-01
                  :ARG0 ii
                  :ARG1 (o2 / okay-04
                        :polarity -
                        :ARG1 ii
                        :ARG1-of (r / real-04))))
      :snt2 (a3 / and
            :op1 (h / have-03
                  :ARG0 (ii2 / i)
                  :ARG1 (d / disease
                        :name (n / name
                              :op1 ""autosclerosis"")))
            :op2 (s3 / scare-01
                  :ARG1 ii2))
      :snt3 (a4 / and
            :op1 (q / quarantine-01
                  :ARG0 (ii3 / i)
                  :ARG1 ii3
                  :ARG3 ii3
                  :duration (t2 / temporal-quantity
                        :quant 1
                        :unit (w / week))
                  :time (n2 / now))
            :op2 (c / contrast-01
                  :ARG1 (l / love-01
                        :ARG0 ii3
                        :ARG1 (g / go-02
                              :ARG0 ii3
                              :ARG4 (s4 / store
                                    :mod (g2 / grocery)))
                        :time (u / use-03))
                  :ARG2 (n3 / now))))"
"(o / open-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Sierra""
                  :op2 ""Otto"")
            :ARG0-of (f / found-01
                  :ARG1 (c / company
                        :name (n2 / name
                              :op1 ""Sierra""
                              :op2 ""Winter""
                              :op3 ""Jewelry""))))
      :ARG1 (s / shop
            :mod (r / retail-01)
            :poss p
            :ord (o2 / ordinal-entity
                  :value 1))
      :time (a / after
            :op1 (a2 / abate-01
                  :ARG1 (f2 / fear-01
                        :ARG1 (c2 / coronavirus)))))"
(a / amr-empty)
"(a / approve-01
      :ARG0 (g / government-organization
            :name (n / name
                  :op1 ""Food""
                  :op2 ""and""
                  :op3 ""Drug""
                  :op4 ""Administration"")
            :mod (c / country
                  :name (n2 / name
                        :op1 ""U.S."")))
      :ARG1 (t / test-01
            :ARG2 (c2 / coronavirus)
            :ARG0-of (d / diagnose-01)
            :mod (r / rapid)
            :ord (o / ordinal-entity
                  :value 1)
            :ARG0-of (h / have-03
                  :ARG1 (t2 / time
                        :duration-of (d2 / detect-01
                              :ARG1 c2)
                        :quant (a2 / about
                              :op1 (t3 / temporal-quantity
                                    :quant 45
                                    :unit (m / minute))))))
      :time (s / struggle-02
            :ARG0 c
            :ARG1 (m2 / meet-01
                  :ARG0 c
                  :ARG1 (d3 / demand-01
                        :ARG1 (t4 / test-01
                              :ARG2 c2)))))"
"(a / aim-01
      :ARG0 (c / company
            :mod (o / oil)
            :mod (g / gas)
            :location (a2 / around
                  :op1 (w / world)))
      :ARG1 (s / slash-02
            :ARG0 c
            :ARG1 (s2 / spend-01))
      :time (p / plunge-01
            :ARG1 (p2 / price-01
                  :ARG1 (c2 / crude))
            :ARG1-of (c3 / cause-01
                  :ARG0 (a3 / and
                        :op1 (ii / impact-01
                              :ARG0 (c4 / coronavirus))
                        :op2 (p3 / push-04
                              :ARG0 (c5 / country
                                    :name (n / name
                                          :op1 ""Saudi""
                                          :op2 ""Arabia"")))))))"
"(m / multi-sentence
      :snt1 (s / see-01
            :ARG0 (ii / i)
            :ARG1 (w / walk-01
                  :ARG0 (s2 / slash
                        :op1 (p / pair)
                        :op2 (c / couple)
                        :ARG1-of (h / have-quant-91
                              :ARG2 (m2 / many)
                              :ARG3 (s3 / so)))
                  :ARG2 (s4 / supermarket)))
      :snt2 (n / need-01
            :ARG0 (p2 / person)
            :ARG1 (r / rethink-01
                  :ARG0 p2
                  :ARG1 (ii2 / impact-01
                        :ARG0 (h2 / habit
                              :poss p2
                              :frequency (r2 / rate-entity-91
                                    :ARG3 (t / temporal-quantity
                                          :quant 1
                                          :unit (d / day))))
                        :ARG1 (a / and
                              :op1 (e / expose-01
                                    :ARG1 p2
                                    :ARG1-of (p3 / personal-02
                                          :ARG2 p2))
                              :op2 (s5 / spread-02
                                    :ARG1 p2
                                    :mod (p4 / potential)))))))"
"(e / explore-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""CircleUp"")
            :mod (s / startup
                  :mod (s2 / sandbox)))
      :ARG1 (p / possible-01
            :ARG1 (a / affect-01
                  :ARG0 (p2 / pandemic
                        :time (c2 / current))
                  :ARG1 (ii / industry
                        :mod (g / good
                              :ARG1-of (p3 / package-01)
                              :beneficiary (p4 / person
                                    :ARG0-of (c3 / consume-01))))))
      :medium (a2 / article
            :time (r / recent)))"
"(t / text-01
      :ARG0 (p / person
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (ii / i)
                  :ARG2 (m / mum)))
      :ARG1 (a / and
            :op1 (w / work-01
                  :ARG0 (p2 / person
                        :ARG0-of (h2 / have-rel-role-91
                              :ARG1 ii
                              :ARG2 (d / dad)))
                  :ARG2 (h3 / hospital))
            :op2 (s / stop-01
                  :mode imperative
                  :ARG0 (y / you)
                  :ARG1 (s2 / steal-01
                        :ARG0 y
                        :ARG1 (p3 / person
                              :ARG0-of (s3 / sanitize-01
                                    :ARG1 (h4 / hand)))
                        :ARG2 h3)))
      :purpose (c / context)
      :ARG2 ii
      :mod (t2 / this)
      :time (j / just))"
"(h / help-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Down""
                  :op2 ""Home""
                  :op3 ""Supermarket"")
            :mod (c2 / city
                  :name (n2 / name
                        :op1 ""Danforth"")))
      :ARG2 (c3 / customer
            :ARG1-of (r / risk-01
                  :mod (a / at-risk))
            :ARG1-of (h2 / have-degree-91
                  :ARG2 (o / old)
                  :ARG3 (m / more)))
      :time (b / break-out-30
            :name (n3 / name
                  :op1 ""COVID-19"")))"
"(a / and
      :op1 (s / see-01
            :ARG0 (w / we)
            :ARG1 (a2 / and
                  :op1 (p / person
                        :ARG0-of (s2 / serve-01
                              :ARG2 (g / government-organization
                                    :name (n / name
                                          :op1 ""NHS""))
                              :mod (c / civil)))
                  :op2 (p2 / person
                        :ARG0-of s2
                        :ARG1 (e / emergency)))
            :op3 (p3 / person
                  :ARG0-of (w2 / work-01
                        :ARG2 (s3 / supermarket))))
      :ARG2 (h / hero
            :domain a2)
      :op2 (s4 / show-01
            :ARG1 (e2 / egotist
                  :domain a2)
            :ARG2 (c2 / celebrity
                  :quant (m / many)))
      :domain (l / line
            :quant 1
            :mod (s5 / silver)
            :topic (t / this)))"
"(m / multi-sentence
      :snt1 (l / look-forward-03
            :ARG0 (ii / i)
            :ARG1 (a / and
                  :op1 (l2 / light-04
                        :ARG0 ii
                        :ARG1 (c / candle)
                        :time (f / fall-01
                              :ARG1 (d / darkness)))
                  :op2 (p / place-01
                        :ARG0 ii
                        :ARG1 c
                        :ARG2 (w / window))))
      :snt2 (w2 / way
            :mod (s / small)
            :manner-of (s2 / salute-01
                  :ARG1 (a2 / and
                        :op1 (p2 / person
                              :ARG0-of (h / have-org-role-91
                                    :ARG1 (g / government-organization
                                          :name (n / name
                                                :op1 ""NHS""))
                                    :ARG2 (s3 / staff-01)))
                        :op2 (p3 / person
                              :ARG0-of (h2 / have-org-role-91
                                    :ARG1 (s4 / supermarket)
                                    :ARG2 (s5 / staff-01)))
                        :op3 (m2 / man
                              :purpose (b / bin))
                        :op4 (p4 / person
                              :mod (o / other)
                              :mod (a3 / all))
                        :ARG0-of (c2 / carry-on-02
                              :ARG1 (p5 / provide-01
                                    :ARG0 a2
                                    :ARG1 (s6 / serve-01
                                          :mod (v / vital))))))
            :domain (t / this)))"
"(o / obligate-01
      :polarity -
      :ARG1 (y / you)
      :ARG2 (b / bore-02
            :ARG1 y
            :time (d / distance-01
                  :ARG1 y
                  :ARG2 (s / society)))
      :ARG1-of (c / cause-01
            :ARG0 (p / possible-01
                  :ARG1 (s2 / shop-01
                        :ARG0 y
                        :medium (o2 / online)))))"
"(c / cause-01
      :ARG0 (d / die-01
            :ARG1 (p / person
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (c2 / cashier))
                  :age (t / temporal-quantity
                        :quant 48
                        :unit (y / year)))
            :ARG1-of c
            :ARG0 (c3 / coronavirus))
      :ARG1 (c4 / close-01
            :ARG1 (s / supermarket)
            :location (n / north
                  :part-of (c5 / country
                        :name (n2 / name
                              :op1 ""Italy"")))))"
"(p / possible-01
      :ARG1 (l / lead-03
            :ARG0 (s / system
                  :mod (f / food)
                  :ARG1-of (f2 / fragment-01)
                  :time (c / crisis))
            :ARG2 (s2 / shelf
                  :mod (s3 / supermarket)
                  :ARG1-of (e / empty-02)
                  :location (a / and
                        :op1 (c2 / country
                              :name (n / name
                                    :op1 ""Italy""))
                        :op2 (c3 / country
                              :name (n2 / name
                                    :op1 ""Spain""))))))"
"(c / contrast-01
      :ARG1 (m / make-02
            :ARG0 (o / organization
                  :name (n / name
                        :op1 ""COVID""
                        :op2 19))
            :ARG1 (c2 / clear-06
                  :ARG1 (a / and
                        :op1 (h / have-degree-91
                              :ARG1 (p / paper
                                    :purpose (t / toilet))
                              :ARG2 (ii / important-01
                                    :ARG1 p)
                              :ARG3 (m2 / more)
                              :ARG4 (f / food))
                        :op2 (b / bring-01
                              :ARG0 (n2 / network
                                    :mod (s / social))
                              :ARG1 (c3 / close-10
                                    :ARG1 (w / we)
                                    :ARG2-of h
                                    :ARG1 w
                                    :ARG3 m2)))))
      :ARG2 (m3 / means
            :instrument-of (c4 / create-01
                  :ARG1 (p2 / panic-01))
            :domain p
            :mod (a2 / also)))"
"(r / release-01
      :ARG0 (o / organization
            :name (n / name
                  :op1 ""HCASA""
                  :op2 ""Board""))
      :ARG1 (s / state-01
            :ARG1 (p / participate-01
                  :ARG0 (p2 / person
                        :ARG0-of (a / advocate-01
                              :ARG1 (c / consume-01)))
                  :time (p3 / pandemic
                        :name (n2 / name
                              :op1 ""COVID-19"")))))"
"(j / join-04
      :ARG0 (ii / i)
      :ARG1 (q / queue-01
            :location (s / supermarket
                  :ARG1-of (l / local-02
                        :ARG2 (c / city-district
                              :name (n / name
                                    :op1 ""South""
                                    :op2 ""London"")))
                  :poss ii))
      :time (d / date-entity
            :time ""8:00""))"
"(e / explain-01
      :ARG0 (t / they)
      :ARG1 (a / and
            :op1 (p / price-01
                  :ARG1 (o / oil)
                  :ARG1-of (h / have-degree-91
                        :ARG2 (l / low-04
                              :ARG1 p)
                        :ARG3 (m / more)))
            :op2 (e2 / expend-01
                  :ARG2 (p2 / program
                        :name (n / name
                              :op1 ""COVID-19""))
                  :mod (e3 / emergency))
            :ARG1-of (o2 / order-03
                  :ARG2 (t2 / that))))"
"(s / see-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Roundy's"")
            :ARG1-of (r / resemble-01
                  :ARG2 (c2 / company
                        :ARG0-of (o / operate-01
                              :ARG1 (s2 / supermarket))
                        :mod (o2 / other))))
      :ARG1 (s3 / surge-01
            :ARG1 (d / demand-01
                  :ARG0 (p / person
                        :ARG0-of (s4 / shop-01)
                        :ARG0-of (s5 / stock-up-02
                              :ARG1 (ii / item))))
            :ARG1-of (c3 / cause-01
                  :ARG0 (p2 / pandemic
                        :name (n2 / name
                              :op1 ""COVID-19"")))))"
"(s / start-01
      :ARG0 (s2 / smell-01
            :ARG1 (s3 / sanitizer
                  :beneficiary (h / hand)))
      :ARG1 (t / turn-on-13
            :ARG0 s2
            :ARG1 (ii / i))
      :ARG1-of (b / break-out-30))"
"(t / think-01
      :ARG0 (ii / i)
      :ARG1 (t2 / time
            :ARG1-of (b / bad-07)
            :time-of (b2 / buy-01
                  :ARG1 (a / annuity))))"
"(p / plan-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Amazon""))
      :ARG1 (a / and
            :op1 (r / raise-01
                  :ARG0 c
                  :ARG1 (s / salary))
            :op2 (r2 / recruit-01
                  :ARG0 c
                  :ARG1 (p2 / person
                        :quant 100000
                        :ARG1-of (e / employ-01
                              :ARG0 c)
                        :mod (c2 / country
                              :name (n2 / name
                                    :op1 ""US""))
                        :mod (m / more)))
            :purpose (a2 / add-02
                  :ARG0 c
                  :ARG1 (p3 / person
                        :quant (a3 / about
                              :op1 800000))
                  :ARG2 (w / workforce
                        :poss c
                        :mod (g / globe))
                  :purpose (c3 / cope-01
                        :ARG0 c
                        :ARG1 (b / boom-02
                              :ARG0 (s2 / shop-01
                                    :mod (o / online))
                              :ARG1-of (s3 / spark-01
                                    :ARG0 (f / fear-01
                                          :ARG1 (v / virus
                                                :mod (c4 / coronavirus)))))))))"
"(f / find-01
      :ARG0 (p / publication
            :name (n / name
                  :op1 ""Consumer""
                  :op2 ""Reports""))
      :ARG1 (a / approve-01
            :ARG0 (p2 / publication
                  :name (n2 / name
                        :op1 ""Facebook""))
            :ARG1 (a2 / advertise-01
                  :quant 7
                  :ARG1-of (s / schedule-01)
                  :ARG0-of (h / have-03
                        :ARG1 (c / content
                              :ARG0-of (v / violate-01
                                    :ARG1 (r / rule
                                          :poss p2
                                          :topic (l / law
                                                :name (n3 / name
                                                      :op1 ""COVID""
                                                      :op2 19)))))))
            :ARG0-of (ii / indicate-01
                  :ARG1 (f2 / flaw-01
                        :ARG1 (s2 / screen-01
                              :ARG1 (a3 / advertise-01)
                              :ARG1-of (a4 / automate-01))))))"
"(a / and
      :op1 (l / leave-11
            :ARG0 (ii / i)
            :ARG1 (s / supermarket
                  :location-of (g / get-back-09
                        :ARG0 ii
                        :ARG1 (c / cash
                              :quant (s2 / some))))
            :mod (j / just))
      :op2 (w / wonder-01
            :ARG0 ii
            :ARG1 (t / truth-value
                  :polarity-of (p / possible-01
                        :ARG1 (l2 / linger-01
                              :ARG0 (v / virus
                                    :name (n / name
                                          :op1 ""Coronavirus""))
                              :ARG1 c)))))"
"(p / possible-01
      :ARG1 (h / have-mod-91
            :ARG1 (d / date-entity
                  :year 2020)
            :ARG2 (y / year
                  :ord (o / ordinal-entity
                        :value 1)
                  :time-of (b / be-located-at-91
                        :ARG1 (p2 / paper
                              :purpose (t / toilet))
                        :ARG2 (r / registry
                              :mod (w / wed-01))))))"
"(d / differ-02
      :ARG1 (d2 / day)
      :ARG3 (a / and
            :op1 (c / calm-03
                  :location (s / supermarket
                        :name (n / name
                              :op1 ""Asda"")
                        :location (c2 / city-district
                              :name (n2 / name
                                    :op1 ""Wembley"")
                              :part-of (c3 / city
                                    :name (n3 / name
                                          :op1 ""London""))))
                  :time (d3 / date-entity
                        :dayperiod (m / morning)
                        :mod (t / today)))
            :op2 (r / restore-02
                  :ARG1 s
                  :time d3))
      :degree (s2 / so))"
"(n / need-01
      :ARG0 (m / mom
            :ARG1-of (s / single-03)
            :ARG0-of (h / have-03
                  :ARG1 (k / kid
                        :quant 2))
            :location (c / city
                  :name (n2 / name
                        :op1 ""Olympia"")))
      :ARG1 (g / grocery)
      :concession-of (p / possible-01
            :polarity -
            :ARG1 (g2 / get-05
                  :ARG1 m
                  :ARG2 (s2 / supermarket))
            :ARG1-of (c2 / cause-01
                  :ARG0 (l / law
                        :name (n3 / name
                              :op1 ""COVID-19""))))
      :time (b / before)
      :time (t / today))"
"(m / multi-sentence
      :snt1 (r / remain-01
            :ARG1 (t / thing
                  :ARG2-of (p / price-01
                        :ARG1 (h / home
                              :location (c / city
                                    :name (n / name
                                          :op1 ""GTA"")))))
            :ARG3 (s / steady)
            :time (b / before
                  :op1 (n2 / now)
                  :duration (b2 / between
                        :op1 (t2 / temporal-quantity
                              :quant 3
                              :unit (w / week))
                        :op2 (t3 / temporal-quantity
                              :quant 5
                              :unit (w2 / week))))
            :concession (b3 / break-out-30
                  :ARG1 (p2 / program
                        :name (n3 / name
                              :op1 ""COVID""
                              :op2 19))))
      :snt2 (c2 / contrast-01
            :ARG1 (s2 / sell-01
                  :ARG1 (h2 / home
                        :ARG1-of (h3 / have-quant-91
                              :ARG3 (l / less))))
            :ARG2 (g / get-01
                  :ARG0 (h4 / home
                        :ARG1-of (s3 / sell-01))
                  :ARG1 t
                  :ARG2-of (p3 / price-01)
                  :mod (t4 / top))
            :mod (s4 / still)))"
"(m / multi-sentence
      :snt1 (f / feel-01
            :ARG0 (ii / i)
            :ARG1 (b / be-located-at-91
                  :ARG1 ii
                  :ARG2 (c / country
                        :mod (f2 / foreign)))
            :time (g / go-02
                  :ARG0 ii
                  :ARG4 (s / supermarket)))
      :snt2 (w / walk-01
            :ARG0 (ii2 / i)
            :manner (r / resemble-01
                  :ARG1 ii2
                  :ARG2 (s2 / soul
                        :ARG1-of (l / lose-02)))
            :purpose (t / try-01
                  :ARG0 ii2
                  :ARG1 (f3 / find-01
                        :ARG0 ii2
                        :ARG1 (s3 / something
                              :ARG1-of (r2 / recognize-02
                                    :ARG0 ii2)))))
      :snt3 (s4 / stare-01
            :ARG0 (ii3 / i)
            :ARG1 (b2 / basket
                  :poss (p / person))
            :time (w2 / walk-01
                  :ARG0 p)
            :time-of (w3 / wonder-01
                  :ARG0 ii3
                  :ARG1 (l2 / location
                        :location-of (f4 / find-01
                              :ARG0 p
                              :ARG1 (s5 / stuff
                                    :ARG1-of (g2 / good-02)
                                    :mod (a / all)))))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (s / see-01
                  :ARG0 (ii / i)
                  :ARG1 (s2 / supermarket
                        :location (c / country
                              :name (n / name
                                    :op1 ""Italy"")))
                  :time (j / just)
                  :medium (n2 / news))
            :op2 (s3 / shame-02
                  :ARG0 s2
                  :ARG1 (b / buy-01
                        :mod (p / panic-01)
                        :location (c2 / country
                              :name (n3 / name
                                    :op1 ""UK"")))))
      :snt2 (c3 / calm-down-02
            :polite +
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (p2 / person)
            :ARG1-of (c4 / cause-01
                  :ARG0 (m2 / make-02
                        :ARG0 y
                        :ARG1 (d / difficult
                              :domain (ii2 / it))
                        :ARG1-of (r / real-04))))
      :snt3 (d2 / down-03
            :ARG1 (ii3 / i)
            :ARG2 (a2 / and
                  :op1 (m3 / milk
                        :quant (v / volume-quantity
                              :quant 2
                              :unit (p3 / pint)))
                  :op2 (b2 / bread
                        :polarity -)
                  :op3 (b3 / bit
                        :quant (f / few)
                        :location (f2 / freezer)))))"
"(c / caution-01
      :ARG0 (m / market
            :name (n / name
                  :op1 ""Ochanja""
                  :op2 ""Market""
                  :op3 ""PG""))
      :ARG1 (p / person
            :ARG0-of (t / trade-01))
      :ARG2 (h / hike-02
            :polarity -
            :ARG0 p
            :ARG1 (p2 / price-01
                  :ARG1 (c2 / commodity))
            :ARG1-of (c3 / cause-01
                  :ARG0 (l / law
                        :name (n2 / name
                              :op1 ""COVID-19"")))))"
"(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""James"")
            :ARG0-of (h / have-org-role-91
                  :ARG1 (s2 / state
                        :name (n2 / name
                              :op1 ""New""
                              :op2 ""York""))
                  :ARG2 (a / attorney
                        :mod (g / general))))
      :ARG1 (a2 / act-02
            :ARG0 (w / we)
            :ARG1 (s3 / stop-01
                  :ARG0 w
                  :ARG1 (g2 / gouge-02
                        :ARG1 (p2 / price))
                  :manner (ii / issue-01
                        :ARG0 w
                        :ARG1 (s4 / subpoena-01
                              :quant (m / more-than
                                    :op1 40))
                        :ARG2 (c / company
                              :ARG0-of (v / vend-01)
                              :mod (t / third-party))))
            :ARG1-of (q / quick-02))
      :time (d / date-entity
            :day 20
            :month 3
            :year 2020))"
"(ii / identify-01
      :ARG1 (t / threshold
            :ARG1-of (k / key-02)
            :mod (b / behave-01
                  :ARG0 (p / person
                        :ARG0-of (c / consume-01))))
      :time (e / evolve-01
            :ARG1 (o / outbreak-29
                  :ARG1 (c2 / coronavirus))))"
"(w / warn-01
      :ARG0 (a / and
            :op1 (c / company
                  :name (n / name
                        :op1 ""Primark"")
                  :ARG0-of (r / retail-01)
                  :mod (c2 / country
                        :name (n2 / name
                              :op1 ""UK"")))
            :op2 (c3 / company
                  :name (n3 / name
                        :op1 ""Kingfisher"")
                  :ARG0-of (r2 / retail-01)
                  :mod c2))
      :ARG1 (h / hit-01
            :ARG0 (p / pandemic
                  :mod (c4 / coronavirus))
            :ARG1 (s / sell-01)
            :time (a2 / after
                  :op1 (c5 / close-01
                        :ARG1 (s2 / store)
                        :location (c6 / continent
                              :name (n4 / name
                                    :op1 ""Europe""))))))"
"(o / offer-01
      :ARG0 (w / we)
      :ARG1 (a / and
            :op1 (m / mask
                  :mod (f / face)
                  :ARG0-of (p / protect-01))
            :op2 (a2 / apron))
      :ARG3 (p2 / price
            :mod (t / trade-01))
      :beneficiary (e / everyone)
      :time (c / crisis
            :name (n / name
                  :op1 ""COVID-19"")))"
"(s / sell-out-03
      :ARG1 (p / product
            :ARG0-of (s2 / sanitize-01
                  :ARG1 (h / hand)))
      :ARG1-of (c / cause-01
            :ARG0 (v / virus
                  :name (n / name
                        :op1 ""Coronavirus"")))
      :ARG0-of c
      :ARG1 (g / get-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 p
            :time (s3 / still
                  :op1 (s4 / stock-01
                        :ARG1 p))))"
"(c / close-02
      :ARG1 (s / stock
            :mod (c2 / country
                  :name (n / name
                        :op1 ""U.S."")))
      :time (a / after
            :op1 (t / trade-01
                  :duration (t2 / temporal-quantity
                        :quant 1
                        :unit (d / day)
                        :mod (v / volatile)
                        :mod (a2 / another))))
      :manner (l / low-04
            :ARG1 s)
      :ARG1-of (c3 / cause-01
            :ARG0 (f / fail-01
                  :ARG1 (g / government-organization
                        :name (n2 / name
                              :op1 ""Senate""))
                  :ARG2 (p / pass-01
                        :ARG0 g
                        :ARG1 (b / bill
                              :ARG0-of (r / relieve-01
                                    :ARG1 (d2 / disease
                                          :name (n3 / name
                                                :op1 ""Coronavirus""))))))))"
"(m / multi-sentence
      :snt1 (c / create-01
            :ARG0 (p / pandemic
                  :name (n / name
                        :op1 ""COVID-19""))
            :ARG1 (d / demand-01
                  :ARG1 (s / space
                        :ARG2-of (s2 / store-01
                              :ARG1 (c2 / cold-01))
                        :location (c3 / country
                              :name (n2 / name
                                    :op1 ""U.S."")))
                  :ARG1-of (ii / increase-01)))
      :snt2 (c4 / confirm-01
            :ARG0 (p2 / person
                  :ARG1-of (ii2 / include-91
                        :ARG2 (p3 / person
                              :ARG1-of (s3 / survey-01))
                        :ARG3 (p4 / percentage-entity
                              :value 46)))
            :ARG1 (c5 / continue-01
                  :ARG0 p2
                  :ARG1 (s4 / shop-01
                        :ARG0 p2
                        :ARG1 (f / food)
                        :medium (o / online)
                        :time (a / after
                              :op1 p))))
      :snt3 (f2 / follow-02
            :ARG0 (c6 / continent
                  :name (n3 / name
                        :op1 ""Europe""))
            :ARG1 (t / trend
                  :ARG1-of (s5 / same-01))
            :polarity (a2 / amr-unknown)))"
"(l / link-01
      :ARG1 (t / this)
      :ARG2 (d / data
            :topic (a / and
                  :op1 (c / creative
                        :mod (d2 / digital))
                  :op2 (c2 / consume-01
                        :ARG1 (m / media))
                  :op3 (c3 / confident-01
                        :ARG1 (p / person
                              :ARG0-of (c4 / consume-01)))
                  :time (c5 / crisis
                        :name (n / name
                              :op1 ""Covid-19"")))))"
"(p / person
      :name (n / name
            :op1 ""Frank""
            :op2 ""McPherson"")
      :time (d / date-entity
            :day 15
            :month 5
            :year 2020))"
"(m / multi-sentence
      :snt1 (t / tell-01
            :ARG0 (p / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (o / organization
                              :name (n / name
                                    :op1 ""Hunger""
                                    :op2 ""Free""
                                    :op3 ""America""))
                        :ARG2 (o2 / officer
                              :mod (c / chief)
                              :mod (e / executive))))
            :ARG1 (c2 / create-01
                  :ARG0 (p2 / pandemic
                        :name (n2 / name
                              :op1 ""COVID-19""))
                  :ARG1 (c3 / crisis
                        :mod (e2 / economy)
                        :mod (p3 / precedent
                              :polarity -)
                        :location (c4 / country
                              :name (n3 / name
                                    :op1 ""America""))
                        :ARG1-of (m2 / mean-01
                              :ARG2 (h2 / hunger))))
            :ARG2 (ii / i))
      :snt2 (h3 / have-degree-91
            :ARG1 (e3 / emergency
                  :mod (h4 / hunger)
                  :domain (t2 / this))
            :ARG2 (g / great)
            :ARG3 (m3 / most)
            :ARG5 (t3 / time
                  :ARG1-of (m4 / modern-02)
                  :mod c4))
      :snt3 (p4 / possible-01
            :polarity -
            :ARG1 (k / keep-up-05
                  :ARG0 (p5 / pantry
                        :mod (f / food)))))"
"(m / multi-sentence
      :snt1 (n / need-01
            :ARG0 (w / we)
            :ARG1 (d / do-02
                  :ARG0 w
                  :ARG1 (g / good-02
                        :ARG2-of (h / have-degree-91
                              :ARG1 d
                              :ARG3 (m2 / more)))))
      :snt2 (s / show-01
            :ARG0 (b / break-heart-31
                  :ARG1 (p / person
                        :ARG0-of (h2 / have-rel-role-91
                              :ARG2 (m3 / mother))
                        :mod (t / this)))
            :ARG1 (t2 / thing
                  :ARG0-of (c / cause-01
                        :ARG1 (n2 / need-01
                              :ARG0 (w2 / we)
                              :ARG1 (d2 / do-02
                                    :ARG0 w2
                                    :ARG1 (g2 / good-02
                                          :ARG2-of (h3 / have-degree-91
                                                :ARG1 d2
                                                :ARG3 (m4 / more)))
                                    :ARG2 (p2 / person
                                          :ARG0-of (w3 / work-01
                                                :ARG2 w2))))))))"
"(a / and
      :op1 (b / buy-01
            :ARG0 (g / government-organization
                  :ARG0-of (g2 / govern-01
                        :ARG1 (c / country
                              :name (n / name
                                    :op1 ""China""))))
            :ARG1 (s / stock
                  :poss g
                  :mod (a2 / all))
            :ARG3 (p / price
                  :mod (b2 / bottom
                        :mod (r / rock))))
      :op2 (p2 / profit-01
            :ARG0 g
            :degree (m / massive)
            :time (n2 / now)
            :manner (l / leave-11
                  :polarity -
                  :ARG0 (m2 / money)
                  :ARG1 c
                  :time (e / ever))))"
"(p / poker
      :mod (s / stakes
            :ARG1-of (h / high-02))
      :time (p2 / pandemic
            :name (n / name
                  :op1 ""CoronaVirus""))
      :domain (t / this)
      :purpose (p3 / prize-01
            :ARG2 (p4 / paper
                  :purpose (t2 / toilet))))"
"(s / see-01
      :ARG0 (y / you)
      :ARG1 (r / round-up-02
            :ARG0 (w / we)
            :location (h / here))
      :purpose (f / find-out-03
            :ARG0 y
            :ARG1 (ii / information
                  :topic (a / and
                        :op1 (h2 / hour
                              :time-of (o / open-01
                                    :ARG1 (s2 / supermarket)))
                        :op2 (m / measure-02
                              :ARG0 (c / company
                                    :name (n / name
                                          :op1 ""Covid""
                                          :op2 19))
                              :mod (ii2 / in-place)
                              :location s2)))))"
"(a / amr-choice
      :op1 (n / need-01
            :ARG0 (p / person
                  :ARG0-of (c / create-01))
            :ARG1 (a2 / assist-01
                  :ARG1 p
                  :ARG2 (f / financial)))
      :op2 (p2 / possible-01
            :ARG1 (c2 / contribute-01
                  :ARG0 (p3 / person
                        :ARG0-of (c3 / consume-01))
                  :purpose (k / keep-01
                        :ARG1 (a3 / afloat
                              :domain p)
                        :time (t / time
                              :mod (d / difficult)
                              :mod (t2 / this)))))
      :domain (y / you))"
"(m / multi-sentence
      :snt1 (l / let-01
            :ARG0 (s / store
                  :mod (g / grocery))
            :ARG1 (ii / inside)
            :ARG2 (c / customer
                  :quant (n / number
                        :ARG1-of (l2 / limit-01)))
            :mod (o / only)
            :ARG1-of (g2 / good-02))
      :snt2 (c2 / contrast-01
            :ARG2 (s2 / stand-01
                  :ARG1 (p / person
                        :mod (t / that)
                        :ARG1-of (w / wait-01
                              :manner (l3 / line)
                              :location (o2 / outside)))
                  :ARG2 (n2 / next-to
                        :op1 p
                        :mod (r / right))
                  :ARG1-of (b / bad-07))))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Dale""
                        :op2 ""Steyn""))
            :ARG1 (d / decide-01
                  :ARG0 (w / we)
                  :ARG1 (w2 / way
                        :polarity -
                        :manner-of (g / go-06)
                        :domain (s2 / stockpile-01)
                        :mod (d2 / definite))
                  :mod (j / just)))
      :snt2 (f / fair-01
            :polarity -
            :ARG1 (ii / it)
            :ARG2 (e / everybody
                  :ARG0-of (n2 / need-01
                        :ARG1 (s3 / stuff
                              :mod (t / that)))))
      :snt3 (a / and
            :op1 (g2 / go-02
                  :ARG0 (ii2 / i)
                  :ARG4 (s4 / store
                        :mod (g3 / grocery))
                  :time (d3 / day
                        :mod (o / other)))
            :op2 (b / buy-01
                  :ARG0 (e2 / everyone)
                  :ARG1 (p2 / paper
                        :mod (t2 / toilet)
                        :mod (a2 / all)))))"
"(h / have-03
      :ARG0 (ii / i)
      :ARG1 (j / job
            :quant 3
            :domain (a / and
                  :op1 (t / tutor-01
                        :ARG0 ii)
                  :op2 (p / person
                        :ARG0-of (m / manage-01
                              :ARG1 (e / event)))
                  :op3 (p2 / person
                        :ARG0-of (m2 / manage-01
                              :ARG1 (r / retail-01))))))"
"(l / let-01
      :ARG0 (p / place
            :ARG0-of (t / try-01
                  :ARG1 (c / contain-01
                        :ARG0 p
                        :ARG1 (s / spread-03
                              :ARG1 (d / disease
                                    :name (n / name
                                          :op1 ""19""))))))
      :ARG1 (m / measure-02
            :ARG0 (w / we)
            :ARG2 (a / alleviate-01
                  :ARG0 w
                  :ARG1 (b / burden))
            :mod (p2 / preventative))
      :purpose (o / or
            :op1 (c2 / contact-01
                  :ARG0 (y / you)
                  :ARG1 (e / email-address-entity
                        :value ""Schael@zennithgroup.com""))
            :op2 (p3 / place-03
                  :ARG0 y
                  :ARG1 (o2 / order-02
                        :ARG0 y)))
      :purpose (o3 / or
            :op1 (ii / information
                  :topic (a2 / and
                        :op1 (s2 / size)
                        :op2 (m2 / monetary-quantity
                              :ARG2-of (p4 / price-01)))
                  :mod (m3 / more))
            :op2 (p5 / prevent-01
                  :ARG0 y
                  :ARG1 s)))"
"(h / help-01
      :ARG1 (u / understand-01
            :ARG0 (s / stakeholder
                  :mod (h2 / healthcare)
                  :mod (c / country
                        :name (n / name
                              :op1 ""US"")))
            :ARG1 (s2 / side
                  :mod (h3 / human)
                  :part-of (c2 / crisis
                        :name (n2 / name
                              :op1 ""COVID19""))))
      :ARG1-of (p / publication-91
            :ARG0 (c3 / company
                  :name (n3 / name
                        :op1 ""McKinsey""))
            :ARG4 (p2 / publication
                  :name (n4 / name
                        :op1 ""McKinsey""
                        :op2 ""Consumer""
                        :op3 ""Healthcare""
                        :op4 ""Insights""))
            :ARG1-of (c4 / cite-01
                  :ARG2 (u2 / url-entity
                        :value ""https://t.co/EM9szeKGhr""))))"
"(m / multi-sentence
      :snt1 (s / scum
            :poss (p / planet
                  :name (n / name
                        :op1 ""Earth""))
            :domain (p2 / person
                  :ARG0-of (h / hoard-01
                        :ARG1 (a / and
                              :op1 (m2 / mask)
                              :op2 (s2 / sanitizer)
                              :op3 (e / essential
                                    :mod (o / other)))))
            :time (d / date-entity
                  :year 2020))
      :snt2 a
      :op1 (r / remember-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (t / they))
      :op2 (b / bring-down-03
            :mode imperative
            :ARG0 y
            :ARG1 t
            :time (o2 / over-01
                  :ARG1 (t2 / this)
                  :mod (a2 / all))))"
"(s / solve-01
      :ARG1 (m / mystery
            :topic (s2 / short-06
                  :ARG2 (p / paper
                        :purpose (t / toilet)))))"
"(p / provide-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Datassential""))
      :ARG1 (a / and
            :op1 (d / data
                  :source (p2 / person
                        :ARG0-of (c2 / consume-01)))
            :op2 (d2 / data
                  :source (ii / industry))
            :ARG1-of (v / value-01
                  :ARG1-of (r / real-04))
            :ARG1-of (r2 / relate-01
                  :ARG2 (c3 / company
                        :name (n2 / name
                              :op1 ""#Covid_19""))))
      :medium (w / website
            :poss c))"
"(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Yogi""
                  :op2 ""Adityanath"")
            :ARG0-of (h / have-org-role-91
                  :ARG2 (m / minister
                        :mod (c / chief)
                        :mod (e / executive))))
      :ARG1 (g / give-01
            :ARG0 (g2 / government-organization
                  :ARG0-of (g3 / govern-01
                        :ARG1 (s2 / state
                              :name (n2 / name
                                    :op1 ""Uttar""
                                    :op2 ""Pradesh""))))
            :ARG1 (m2 / monetary-quantity
                  :quant 1000
                  :unit (r / rupee)
                  :mod (e2 / each))
            :ARG2 (p2 / person
                  :ARG0-of (l / labor-01)
                  :quant (o / over
                        :op1 35))))"
"(h / hire-01
      :ARG0 (c / company
            :ARG0-of (r / retail-01)
            :mod (b / big))
      :ARG1 (p / person
            :quant 500000)
      :purpose (h2 / handle-01
            :ARG0 c
            :ARG1 (s / surge-01
                  :ARG1 (d / demand-01
                        :ARG1 (a / and
                              :op1 (f / food)
                              :op2 (s2 / staple)))
                  :time (s3 / spread-02
                        :ARG1 (c2 / coronavirus))))
      :time (p2 / possible-01
            :polarity -
            :ARG1 (c3 / compete-01
                  :ARG0 (b2 / business
                        :mod (s4 / small)))))"
"(d / dip-01
      :ARG1 (ii / inflation
            :mod (r / retail-01))
      :ARG2 (p / percentage-entity
            :value 5.91
            :time (d2 / date-entity
                  :month 3))
      :ARG3 (p2 / percentage-entity
            :value 6.58
            :time (d3 / date-entity
                  :month 2))
      :ARG1-of (l / likely-01
            :ARG1 (c / cause-01
                  :ARG0 (p3 / price-01
                        :ARG1 (a / and
                              :op1 (f / food)
                              :op2 (f2 / fuel))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (s / soft-02
                                    :ARG1 p3)
                              :ARG3 (m / more))
                        :ARG1-of (c2 / cause-01
                              :ARG0 (d4 / drop-01
                                    :ARG1 (d5 / demand-01
                                          :ARG1-of (s2 / slow-01
                                                :time (a2 / already)))
                                    :ARG1-of (l2 / likely-01)
                                    :ARG1-of (c3 / cause-01
                                          :ARG0 (l3 / lock-down-06
                                                :location (n / nationwide)
                                                :duration (t / temporal-quantity
                                                      :quant 21
                                                      :unit (d6 / day))
                                                :purpose (c4 / curb-01
                                                      :ARG1 (s3 / spread-02
                                                            :ARG1 (d7 / disease
                                                                  :name (n2 / name
                                                                        :op1 ""Covid-19""))))))))))))"
"(l / look-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (ii / impact-01
            :ARG0 (s / spend-01
                  :ARG0 (p / person
                        :ARG0-of (c / consume-01))
                  :location (c2 / country
                        :name (n / name
                              :op1 ""US""))))
      :ord (o / ordinal-entity
            :value 1))"
"(p / possible-01
      :ARG1 (t / touch-01
            :ARG0 (y / you)
            :ARG1 (t2 / thing
                  :quant 7
                  :ARG0-of (t3 / transmit-01
                        :ARG1 (c / coronavirus)
                        :ARG1-of (p2 / possible-01)))
            :location (s / store
                  :mod (g / grocery))))"
"(s / show-01
      :ARG0 (w / website
            :mod (t / this))
      :ARG1 (t2 / temporal-quantity
            :duration-of (r / roll-01
                  :ARG1 (p / paper
                        :purpose (t3 / toilet))
                  :poss (y / you)))
      :ARG2 y)"
"(g / gather-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Thu""
                  :op2 ""Pham"")
            :ARG0-of (c / consult-01
                  :ARG1 (w / we)
                  :ARG2 (p2 / perform-02
                        :ARG1 (b / brand))))
      :ARG1 (ii / insight
            :source (m / market
                  :ARG1-of (k / key-02))
            :mod (d / data)
            :manner (ii2 / in-depth))
      :purpose (s / show-01
            :ARG0 p
            :ARG1 (ii3 / impact-01
                  :ARG0 (p3 / product
                        :name (n2 / name
                              :op1 ""COVID-19""))
                  :ARG1 (b2 / behave-01
                        :ARG0 (p4 / person
                              :ARG0-of (c2 / consume-01))))))"
"(n / normal-02
      :polarity (a / amr-unknown)
      :ARG1 (c / confidence
            :poss (p / person
                  :ARG0-of (c2 / consume-01)
                  :mod (c3 / country
                        :name (n2 / name
                              :op1 ""U.S.""))))
      :ARG1-of (n3 / new-01))"
"(o / offer-01
      :ARG0 (a / amr-unknown)
      :ARG1 (r / relieve-01))"
"(s / say-01
      :ARG0 (o / organization
            :name (n / name
                  :op1 ""Trade""
                  :op2 ""Promotion""
                  :op3 ""Council""
                  :op4 ""of""
                  :op5 ""India""))
      :ARG1 (a / and
            :op1 (s2 / surge-01
                  :ARG1 (d / demand-01
                        :ARG1 (p / product
                              :mod (f / food))
                        :location (m / market
                              :mod (g / globe)))
                  :ARG1-of (c / cause-01
                        :ARG0 (o2 / outbreak-29
                              :ARG1 (c2 / coronavirus))))
            :op2 (t / tap-02
                  :ARG0 (c3 / country
                        :name (n2 / name
                              :op1 ""India""))
                  :ARG1 s2
                  :purpose (b / boost-01
                        :ARG0 c3
                        :ARG1 (e / export-01
                              :ARG0 c3))
                  :mod (p2 / potential)))
      :time (d2 / date-entity
            :weekday (m2 / monday)))"
"(m / make-01
      :ARG0 (ii / i)
      :ARG1 (b / batch
            :ord (o / ordinal-entity
                  :value 1)
            :consist-of (s / sanitizer
                  :beneficiary (h / hospital
                        :mod (l / little)
                        :mod (r / rural)
                        :ARG2-of (w / work-01
                              :ARG0 ii))
                  :instrument (h2 / hand))))"
"(r / respect-01
      :ARG0 (ii / i)
      :ARG1 (c / customer
            :ARG1-of (s / see-01
                  :ARG0 (p / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 ii
                              :ARG2 (d / dad)))
                  :location (s2 / store
                        :mod (g / grocery)))
            :ARG0-of (m / measure-02
                  :ARG1 (a / avoid-01
                        :ARG0 c
                        :ARG1 (d2 / disease
                              :name (n / name
                                    :op1 ""CODID""
                                    :op2 19)))
                  :mod (e / every)
                  :ARG1-of (p2 / possible-01))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (c / cause-01
                  :ARG0 (a2 / amr-unknown)
                  :ARG1 (p / possible-01
                        :polarity -
                        :ARG1 (a3 / and
                              :op1 (g / get-01
                                    :ARG0 (p2 / person
                                          :ARG0-of (r / receive-01
                                                :ARG1 (t / thing
                                                      :name (n / name
                                                            :op1 ""Supplemental""
                                                            :op2 ""Security""
                                                            :op3 ""Income""))))
                                    :ARG1 (t2 / thing
                                          :ARG0-of (s / stimulate-01)))
                              :op2 (g2 / get-01
                                    :ARG0 p2
                                    :ARG1 (r2 / rate-entity-91
                                          :ARG1 (m2 / monetary-quantity
                                                :quant 200
                                                :unit (d / dollar)
                                                :ARG1-of (h / have-quant-91
                                                      :ARG3 (m3 / more)))
                                          :ARG2 (t3 / temporal-quantity
                                                :quant 1
                                                :unit (m4 / month)))))))
            :op2 (c2 / contrast-01
                  :ARG1 (s2 / survive-01
                        :ARG0 (w / we)
                        :ARG1 (r3 / rate-entity-91
                              :ARG1 (m5 / monetary-quantity
                                    :quant783 (d2 / dollar))
                              :ARG2 (t4 / temporal-quantity
                                    :quant 1
                                    :unit (m6 / month)))
                        :degree (b / barely))
                  :ARG2 (o / outrageous-02
                        :ARG1 (t5 / thing
                              :ARG2-of (p3 / price-01))
                        :time (n2 / now))))
      :snt2 (a4 / and
            :op1 (a5 / assist-01
                  :polarity -
                  :ARG1 (p4 / person
                        :ARG1-of (d3 / disable-01))
                  :time (a6 / anymore)
                  :ARG1-of (c3 / cause-01
                        :ARG0 (p5 / product
                              :name (n3 / name
                                    :op1 ""Covid-19""))))
            :op2 (b2 / bedridden
                  :domain p4)))"
"(m / multi-sentence
      :snt1 (p / possible-01
            :polarity -
            :ARG1 (b / buy-01
                  :ARG0 (p2 / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 (ii / i)
                              :ARG2 (s / sister))
                        :ARG0-of (w / work-01
                              :ARG2 (f / facility
                                    :name (n / name
                                          :op1 ""ICU"")))
                        :ARG0-of (h2 / have-org-role-91
                              :ARG2 (d / doctor)))
                  :ARG1 (f2 / food
                        :ARG1-of (h3 / have-quant-91
                              :ARG3 (e / enough))))
            :ARG1-of (c / cause-01
                  :ARG0 (e2 / empty-02
                        :ARG1 (s2 / shelf
                              :mod (s3 / supermarket))
                        :time (e3 / end-01
                              :ARG1 (s4 / shift
                                    :ARG1-of (l / long-03)
                                    :poss p2)))))
      :snt2 (a / and
            :op1 (e4 / exhaust-01
                  :ARG1 (s5 / she))
            :op2 (e5 / eat-01
                  :polarity -
                  :ARG0 s5
                  :manner (p3 / proper)))
      :snt3 (a2 / and
            :op1 (k / kind-01
                  :mode imperative
                  :polite +
                  :ARG0 (y / you))
            :op2 (r / reasonable-02
                  :mode imperative
                  :polite +
                  :ARG1 y)
            :time (s6 / shop-01
                  :ARG0 y))
      :op2 (b2 / buy-01
            :mode imperative
            :polite +
            :ARG0 y
            :ARG1 (t / thing)
            :mod (o / only)))"
"(g / get-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (m / mask
            :mod (f / face))
      :time (s / stock-01
            :ARG1 m
            :mod (s2 / still)))"
(a / amr-empty)
"(e / enable-01
      :ARG0 (r / rely-01
            :ARG0 (c / country
                  :name (n / name
                        :op1 ""South""
                        :op2 ""Korea""))
            :ARG1 (p / person
                  :ARG0-of (m / merchandise-01)
                  :mod (t / third-party)
                  :ARG0-of (s / sell-01
                        :manner (p2 / platform
                              :mod (m2 / marketplace)
                              :mod (o / online))))
            :mod (h / heavy))
      :ARG1 (a / avoid-01
            :ARG0 (p3 / person
                  :ARG0-of (c2 / consume-01))
            :ARG1 (s2 / short-06))
      :ARG2 p3)"
"(m / multi-sentence
      :snt1 (k / know-01
            :ARG0 (a / anyone)
            :ARG1 (l / location
                  :location-of (p / possible-01
                        :ARG1 (g / get-01
                              :ARG0 (ii / i)
                              :ARG1 (c / camera
                                    :mod (w / web))
                              :mod (p2 / potential)
                              :mod (s / still))))
            :polarity (a2 / amr-unknown))
      :snt2 (a3 / and
            :op1 (h / horrendous
                  :domain (m2 / monetary-quantity
                        :ARG2-of (p3 / price-01
                              :ARG1 (s2 / sell-01)
                              :medium (c2 / company
                                    :name (n / name
                                          :op1 ""Amazon""))))
                  :time (n2 / now
                        :mod (r / right)))
            :op2 (a4 / available-02
                  :polarity -
                  :ARG2 (m3 / much))
            :ARG1-of (s3 / same-01
                  :ARG2 (s4 / slash
                        :op1 (c3 / company
                              :name (n3 / name
                                    :op1 ""Bestbuy""))
                        :op2 (c4 / company
                              :name (n4 / name
                                    :op1 ""Target"")))))
      :snt3 (o / option
            :polarity (a5 / amr-unknown)
            :mod (o2 / other)
            :mod (a6 / any)
            :mod (p4 / product
                  :name (n5 / name
                        :op1 ""Covid_19""))
            :mod (d / distance-01
                  :ARG2-of (s5 / social-03))
            :mod (p5 / publication
                  :name (n6 / name
                        :op1 ""Videoconferen""))))"
"(a / available-02
      :ARG2 (s / sandpaper
            :quant (p / plenty))
      :location (c / company
            :name (n / name
                  :op1 ""Home""
                  :op2 ""Depot""))
      :mod (s2 / still))"
"(ii / increase-01
      :ARG1 (p / price-01
            :ARG1 (h / home)
            :location (c / country
                  :name (n / name
                        :op1 ""United""
                        :op2 ""States"")))
      :ARG2 (p2 / percentage-entity
            :value 4.1)
      :time (d / date-entity
            :month 2)
      :ARG1-of (c2 / compare-01
            :ARG2 (y / year
                  :mod (p3 / previous)
                  :time (b / before
                        :op1 (b2 / break-out-30
                              :ARG1 (c3 / coronavirus))))))"
"(m / multi-sentence
      :snt1 (h / heist
            :mod (b / bean
                  :source (c / company
                        :name (n / name
                              :op1 ""Heinz""))))
      :snt2 (n2 / need-01
            :ARG0 (p / person)
            :ARG1 (a / and
                  :op1 (c2 / chill-out-02
                        :ARG1 p
                        :degree (b2 / bit))
                  :op2 (h2 / have-degree-91
                        :ARG1 p
                        :ARG2 (s / selfish)
                        :ARG3 (l / less
                              :quant (l2 / little))))))"
"(m / multi-sentence
      :snt1 (t / try-01
            :ARG0 (y / you)
            :ARG1 (w / website
                  :mod (t2 / this))
            :condition (h / have-trouble-04
                  :ARG0 y
                  :ARG1 (b / buy-01
                        :ARG0 y
                        :ARG1 (t3 / thing
                              :ARG1-of (s / supply-01)
                              :mod (e / essential))
                        :time (o / outbreak-29
                              :ARG1 (d / disease
                                    :name (n / name
                                          :op1 ""coronavirus""))))
                  :mod (s2 / still)))
      :snt2 (a / and
            :op1 (s3 / supply-01
                  :ARG0 (t4 / they)
                  :ARG1 (t5 / thing
                        :ARG2-of (f / face-01)))
            :op2 (s4 / sanitizer)
            :op3 (p / paper
                  :purpose (t6 / toilet))
            :op4 (c / come-01
                  :ARG1 (ii / item
                        :quant (m2 / more))
                  :time (s5 / soon))))"
"(p / possible-01
      :ARG1 (a / affect-01
            :ARG0 (p2 / pandemic
                  :name (n / name
                        :op1 ""COVID-19""))
            :ARG1 (ii / index
                  :topic (p3 / price-01
                        :ARG2 (p4 / person
                              :ARG0-of (c / consume-01))))))"
"(p / possible-01
      :ARG1 (w / want-01
            :ARG0 (c / company
                  :name (n / name
                        :op1 ""Tesco""))
            :ARG1 (u / update-01
                  :ARG0 c
                  :ARG1 (o / offer-01
                        :ARG0 c)
                  :purpose (p2 / possible-01
                        :ARG1 (u2 / use-01
                              :ARG0 (p3 / person)
                              :ARG1 o
                              :ARG1-of (a / actual-02)
                              :time (c2 / crisis
                                    :name (n2 / name
                                          :op1 ""Covid19UK""))
                              :manner (o2 / obligate-01
                                    :polarity -
                                    :ARG1 p3
                                    :ARG2 (b / buy-01
                                          :ARG0 p3
                                          :ARG1 (ii / item
                                                :mod (o3 / other))
                                          :purpose (s / stay-01
                                                :ARG1 p3
                                                :ARG3 (r / restrict-01)))))))))"
"(m / make-01
      :ARG0 (w / we)
      :ARG1 (l / log
            :consist-of (f / fudge))
      :mod (s / still)
      :location (p / publication
            :name (n / name
                  :op1 ""fudgiechunks""))
      :time (a / and
            :op1 (a2 / arrive-01
                  :ARG1 (a3 / apocalypse))
            :op2 (l2 / lose-02
                  :ARG0 (e / everyone)
                  :ARG1 (m2 / mind
                        :poss e))))"
"(r / remember-01
      :ARG0 (ii / i)
      :ARG1 (t / turn-01
            :ARG0 ii
            :ARG1 (c / calendar)
            :ARG2 (d / date-entity
                  :month 4))
      :time-of (f / find-01
            :ARG0 ii
            :ARG1 (o / obligate-01
                  :ARG1 ii
                  :ARG2 (l / look-forward-03
                        :ARG0 ii
                        :ARG1 (d2 / deliver-01
                              :ARG1 (s / supermarket)
                              :ARG2 ii
                              :time (d3 / date-entity
                                    :day 15
                                    :month 4)
                              :mod (o2 / only))
                        :time (m / month
                              :mod (t2 / this))))
            :mod o2))"
"(a / ask-02
      :ARG0 (p / police
            :location (c / city
                  :name (n / name
                        :op1 ""Purcellville"")))
      :ARG1 (h / help-01
            :ARG0 (p2 / person
                  :ARG0-of (h2 / have-rel-role-91
                        :ARG2 (p3 / parent)))
            :ARG1 (s / stop-01
                  :ARG0 p2
                  :ARG1 (t / trend-01
                        :ARG1 (v / videotape-01
                              :ARG0 (t2 / teen)
                              :ARG1 (c2 / cough-01
                                    :ARG0 t2
                                    :location (p4 / produce
                                          :location (s2 / store
                                                :mod (g / grocery)))))
                        :ARG0-of (d / disturb-01)))
            :ARG2 p2)
      :ARG2 p2)"
"(c / cap-01
      :ARG0 (g / government-organization
            :ARG0-of (g2 / govern-01
                  :ARG1 (c2 / country
                        :name (n / name
                              :op1 ""India""))))
      :ARG1 (a / and
            :op1 (m / monetary-quantity
                  :ARG2-of (p / price-01
                        :ARG1 (m2 / mask
                              :mod (s / surgery-01)
                              :consist (p2 / ply
                                    :quant 2))))
            :op2 (m3 / monetary-quantity
                  :ARG2-of (p3 / price-01
                        :ARG1 (m4 / mask
                              :mod s
                              :consist (p4 / ply
                                    :quant 3)))))
      :ARG2 a
      :op1 (m5 / monetary-quantity
            :quant 8
            :unit (d / dollar))
      :op2 (m6 / monetary-quantity
            :quant 10
            :unit (d2 / dollar))
      :purpose (b / bid-01
            :ARG0 g
            :ARG1 (c3 / curb-01
                  :ARG0 g
                  :ARG1 (o / overcharge-01
                        :time (b2 / buy-01
                              :manner (p5 / panic-01
                                    :ARG0 (v / virus
                                          :name (n2 / name
                                                :op1 ""Coronavirus"")
                                          :mod (n3 / novel))))))))"
"(t / think-01
      :ARG0 (y / you)
      :ARG1 (c / comeback-01
            :ARG0 (h / highwayman
                  :ARG0-of (h2 / heist-01
                        :ARG1 (v / van
                              :ARG0-of (d / deliver-01)
                              :mod (s / supermarket)))))
      :polarity (a / amr-unknown))"
"(c / create-01
      :ARG0 (c2 / chain
            :consist-of (s / supermarket)
            :location (c3 / country
                  :name (n / name
                        :op1 ""Russia"")))
      :ARG1 (k / kit
            :mod (e / emergency)
            :mod (c4 / coronavirus)
            :consist-of (t / trolley
                  :ARG1-of (l / load-01
                        :time (b / before))
                  :ARG1-of (d / divide-02
                        :ARG2 (c5 / category
                              :quant 3
                              :mod (m / monetary-quantity
                                    :ARG2-of (p / price-01))))))
      :ARG1-of (s2 / say-01
            :ARG0 (p2 / person
                  :name (n2 / name
                        :op1 ""Francesca""))
            :time (d2 / date-entity
                  :day 11
                  :month 3
                  :year 2020)))"
"(m / multi-sentence
      :snt1 (s / start-01
            :ARG0 (w / we)
            :ARG1 (s2 / season
                  :ord (o / ordinal-entity
                        :value 2)
                  :part-of (b / broadcast-program
                        :name (n / name
                              :op1 ""Counsel""
                              :op2 ""for""
                              :op3 ""the""
                              :op4 ""State"")))
            :ARG2 (p / podcast
                  :ARG0-of (f / focus-01
                        :ARG1 (ii / issue-02
                              :ARG0 (p2 / person
                                    :ARG0-of (c / consume-01))
                              :ARG1-of (r / relate-01
                                    :ARG2 (e / epidemic
                                          :name (n2 / name
                                                :op1 ""COVID"")))))))
      :snt2 (p3 / possible-01
            :ARG1 (l / listen-01
                  :ARG0 (y / you)
                  :medium (o2 / or
                        :op1 (c2 / company
                              :name (n3 / name
                                    :op1 ""iTunes""))
                        :op2 (c3 / company
                              :name (n4 / name
                                    :op1 ""Spotify""))
                        :op3 (w2 / website
                              :poss (o3 / office
                                    :poss (ii2 / i))))))
      :snt3 (s3 / string-entity
            :value ""IdahoCOVID19""))"
"(o / offer-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Brad""
                  :op2 ""Pakisley""))
      :ARG1 (d / deliver-01
            :ARG0 p
            :ARG1 (g / grocery)
            :ARG2 (p2 / person
                  :mod (e / elderly))
            :ARG1-of (f / free-03))
      :time (b / break-out-30
            :time (ii / incident
                  :name (n2 / name
                        :op1 ""COVID-19""))))"
"(m / mood
      :time (c / current)
      :poss (c2 / colleague
            :mod (s / supermarket)
            :mod (e / every))
      :mod (v / virus
            :mod (c3 / coronavirus)))"
(a / amr-empty)
"(ii / inspect-01
      :ARG1 (s / screen
            :ARG0-of (p / protect-01))
      :mod (f / final)
      :time (b / before
            :op1 (f2 / fit-01
                  :ARG1 s
                  :ARG2 (s2 / supermarket
                        :location (c / city)))))"
"(a / and
      :op1 (c / company
            :name (n / name
                  :op1 ""Coronavirus""))
      :op2 (c2 / company
            :name (n2 / name
                  :op1 ""onlinetraffic""))
      :domain (ii / industry
            :ARG1-of (g / grow-01
                  :ARG1-of (c3 / cause-01
                        :ARG0 (p / product
                              :name (n3 / name
                                    :op1 ""Covid19"")))
                  :ARG1-of (h / have-degree-91
                        :ARG2 (b / big)
                        :ARG3 (m / most))
                  :mod (t / traffic
                        :medium (o / online)))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (o / obligate-01
                  :ARG1 (ii / i)
                  :ARG2 (g / go-02
                        :ARG0 ii
                        :ARG4 (s / supermarket)
                        :ARG1-of (c / cause-01
                              :ARG0 (o2 / out-05
                                    :ARG1 ii
                                    :ARG2 (f / food)))))
            :op2 (e / experience-01
                  :ARG0 ii
                  :ARG1-of (t / terrible-01)))
      :snt2 (a2 / and
            :op1 (m2 / mill-01
                  :ARG0 (e2 / everyone)
                  :manner (a3 / as-if
                        :op1 (d / deal-03
                              :polarity -
                              :ARG1 (ii2 / it)
                              :mod (b / big)))
                  :location (a4 / around))
            :op2 (d2 / distance-01
                  :ARG1 (n / no-one)
                  :ARG2 (s2 / social-03)))
      :snt3 (c2 / contrast-01
            :ARG1 (l / look-01
                  :ARG0 (p / person)
                  :ARG1 (w / weird)
                  :ARG2 (d3 / distance-01
                        :ARG0 (ii3 / i)
                        :ARG1 ii3)
                  :time (t2 / try-01
                        :ARG0 ii3
                        :ARG1 d3))
            :ARG2 l
            :polarity -
            :location (t3 / there)))"
"(c / contrast-01
      :ARG1 (d / damage-01
            :ARG0 (p / product
                  :name (n / name
                        :op1 ""COVID-19""))
            :ARG1 (t / traffic
                  :location (s / store))
            :beneficiary (r / retailer
                  :quant (m / most)))
      :ARG2 (s2 / see-01
            :ARG0 (r2 / retailer
                  :quant (m2 / many)
                  :mod (o / other))
            :ARG1 (g / grow-01
                  :ARG1 (w / website
                        :poss r2
                        :mod (c2 / commerce))
                  :manner (r3 / rapid))))"
"(m / multi-sentence
      :snt1 (t / think-01
            :ARG0 (y / you)
            :ARG1 (p / possible-01
                  :ARG1 (a / and
                        :op1 (a2 / accept-01
                              :ARG0 (p2 / person
                                    :ARG0-of (h / have-org-role-91
                                          :ARG1 (s / supermarket)
                                          :ARG2 (c / cashier))
                                    :ARG1-of (l / local-02))
                              :ARG1 (m2 / mask
                                    :mod (f / face)
                                    :ARG1-of (r / reuse-01
                                          :ARG1-of p))
                              :consist-of (f2 / fabric))
                        :ARG1-of (l2 / legal-02))
                  :op2 (w / wear-01
                        :ARG0 p2
                        :ARG1 m2)))
      :polarity (a3 / amr-unknown)
      :condition (s2 / sew-01
            :ARG0 (ii / i)
            :ARG1 m2
            :ARG4 p2)
      :snt2 (w2 / want-01
            :ARG0 (t2 / they)
            :ARG1 m2
            :polarity (a4 / amr-unknown)))"
"(m / multi-sentence
      :snt1 (d / determine-01
            :ARG0 (ii / i)
            :ARG1 (w / waste-01
                  :polarity -
                  :ARG0 ii
                  :ARG1 (f / food
                        :mod (a / any))
                  :time (a2 / and
                        :op1 (p / panic-01
                              :ARG1 (p2 / person)
                              :ARG2 (b / buy-01
                                    :ARG0 p2))
                        :op2 (r / raid-01
                              :ARG0 p2
                              :ARG1 (f2 / fridge)))))
      :snt2 (l / let-01
            :polarity -
            :ARG0 (ii2 / i)
            :ARG1 (w2 / waste-01
                  :ARG1 (a3 / anything))))"
"(q / queue-01
      :ARG0 (p / person
            :mod (c / country
                  :name (n / name
                        :op1 ""Saudi""
                        :op2 ""Arabia"")))
      :purpose (a / amr-unknown))"
"(g / go-02
      :polarity -
      :mode imperative
      :ARG0 (y / you)
      :ARG4 (s / store
            :mod (g2 / grocery))
      :frequency (r / rate-entity-91
            :ARG3 (t / temporal-quantity
                  :quant 1
                  :unit (d / day)))
      :condition (p / possible-01
            :ARG1 (a / avoid-01
                  :ARG0 y
                  :ARG1 (ii / it))))"
"(w / way
      :domain (s / shop-01
            :location (o / online))
      :mod (g / great)
      :purpose (a / and
            :op1 (s2 / stay-01
                  :ARG1 (y / you)
                  :ARG3 (h / home))
            :op2 (s3 / stay-01
                  :ARG1 y
                  :ARG3 (s4 / safe-01
                        :ARG1 y))
            :time (p / pandemic
                  :name (n / name
                        :op1 ""Covid-19""))))"
"(c / contrast-01
      :ARG1 (t / tweak-01
            :ARG0 (c2 / company)
            :ARG1 (c3 / commercial)
            :purpose (u / underscore-01
                  :ARG0 c2
                  :ARG1 (a / and
                        :op1 (r / reality
                              :mod (f / finance)
                              :ARG1-of (n / new-01))
                        :op2 (a2 / anxiety
                              :mod (p / person
                                    :ARG0-of (c4 / consume-01))))))
      :ARG2 (a3 / advertise-01
            :ARG1-of (d / deaf-02
                  :ARG2 (t2 / tone))
            :quant (p2 / plenty)
            :mod (a4 / also)))"
(a / amr-empty)
"(m / multi-sentence
      :snt1 (r / risk-01
            :ARG1 (a / and
                  :op1 (p / person
                        :ARG0-of (w / work-01
                              :ARG1 (s / store))
                        :part (h / hand))
                  :op2 (p2 / person
                        :ARG0-of (a2 / attend-02
                              :ARG1 (g / gas)))
                  :op3 (p3 / person
                        :ARG0-of (h2 / have-org-role-91
                              :ARG2 (p4 / pharmacist))))
            :ARG2 (c / contract-04
                  :ARG1 a
                  :ARG2 (c2 / coronavirus))
            :ARG1-of (h3 / have-degree-91
                  :ARG2 (h4 / high-02
                        :ARG1 r)
                  :ARG3 (m2 / more)))
      :snt2 (a3 / ask-02
            :ARG0 (w2 / we)
            :ARG1 (d / do-02
                  :ARG0 (y / you
                        :part h)
                  :ARG1 (p5 / part
                        :purpose (h5 / help-01
                              :ARG0 y
                              :ARG1 (p6 / prevent-01
                                    :ARG1 (s2 / spread-02
                                          :ARG1 (v / virus))
                                    :manner (a4 / and
                                          :op1 (c3 / clean-01
                                                :ARG0 y
                                                :ARG1 h)
                                          :op2 (c4 / cover-01
                                                :ARG0 y
                                                :ARG1 (c5 / cough-01
                                                      :ARG0 y))
                                          :op3 (m3 / maintain-01
                                                :ARG0 y
                                                :ARG1 (d2 / distance-01
                                                      :ARG1 y
                                                      :ARG2 (p7 / person
                                                            :mod (o / other))
                                                      :mod (p8 / physical))))))))
            :ARG2 y))"
"(t / think-01
      :ARG0 (y / you)
      :ARG1 (h / have-degree-91
            :ARG1 (s / shop-01
                  :ARG2 (o / online)
                  :time (n / now)
                  :purpose (a / avoid-01
                        :ARG1 (c / contaminate-01
                              :ARG2 (p / product
                                    :name (n2 / name
                                          :op1 ""Covid-19""))))
                  :mod (o2 / only))
            :ARG2 (g / good-02
                  :ARG1 s)
            :ARG3 (m / most))
      :polarity (a2 / amr-unknown))"
"(s / seem-01
      :ARG1 (w / well-09
            :ARG1 (a / and
                  :op1 (s2 / sell-01
                        :ARG1 (c / cannabis))
                  :op2 (s3 / sell-01
                        :ARG2 (s4 / store
                              :mod (g / grocery))
                        :mod (r / robust)))
            :prep-under (o / outbreak-29
                  :name (n / name
                        :op1 ""COVID-19""))))"
"(r / reach-01
      :ARG0 (s / sell-01
            :ARG1 (s2 / supermarket)
            :location (c / country
                  :name (n / name
                        :op1 ""Ireland"")))
      :ARG1 (h / high-02
            :ARG1 s
            :mod (r2 / record))
      :time (d / date-entity
            :month 3)
      :ARG1-of (c2 / cause-01
            :ARG0 (s3 / stockpile-01
                  :ARG0 (p / person
                        :ARG0-of (s4 / shop-01))
                  :ARG1 (s5 / supply)
                  :ARG1-of c2
                  :ARG0 (a / anticipate-01
                        :ARG0 p
                        :ARG1 (p2 / pandemic
                              :name (n2 / name
                                    :op1 ""COVID-19""))))))"
"(ii / invite-01
      :ARG1 (y / you)
      :ARG2 (a / attend-01
            :ARG0 y
            :ARG1 (w / webinar)
            :purpose (l / learn-01
                  :ARG0 y
                  :ARG1 (a2 / answer-01
                        :ARG1 (q / question-01
                              :mod (t / this))))))"
"(p / possible-01
      :ARG1 (f / file-01
            :ARG1 (c / complain-01
                  :ARG1 (g / gouge-02
                        :ARG1 (t / thing
                              :ARG2-of (p2 / price-01))
                        :ARG1-of (r / relate-01
                              :ARG2 (c2 / coronavirus))))
            :ARG2 (o / or
                  :op1 (g2 / government-organization
                        :name (n / name
                              :op1 ""Attorney""
                              :op2 ""General's""
                              :op3 ""Office"")
                        :mod (s / state
                              :name (n2 / name
                                    :op1 ""Texas"")))
                  :op2 (p3 / page
                        :ARG0-of (p4 / protect-01
                              :ARG1 (p5 / person
                                    :ARG0-of (c3 / consume-01)))
                        :part-of (w / website
                              :poss g2)))))"
"(m / multi-sentence
      :snt1 (h / have-degree-91
            :ARG1 (n / nothing)
            :ARG2 (d / dignify-01
                  :polarity -
                  :ARG1 n)
            :ARG3 (m2 / more)
            :ARG4 (q / queue-01
                  :ARG2 (s / supermarket)))
      :snt2 (a / and
            :op2 (h2 / have-degree-91
                  :ARG1 (c / catch-02
                        :ARG0 (ii / i)
                        :ARG1 (p / product
                              :name (n2 / name
                                    :op1 ""COVID2019"")))
                  :ARG2 (l / least)
                  :ARG3 (p2 / problem
                        :poss ii)
                  :ARG1-of (l2 / look-02
                        :ARG0 (l3 / lot
                              :mod (t / this))))))"
"(d / deal-01
      :ARG0 (p / person
            :ARG0-of (r / retail-01))
      :ARG2 (a / and
            :op1 (p2 / person
                  :ARG1-of (e / employ-01))
            :op2 (c / compensate-01)
            :op3 (o / operate-01
                  :ARG1 (s / store)))
      :ARG2-of (r2 / respond-01
            :ARG1 (p3 / pandemic
                  :name (n / name
                        :op1 ""Covid-19""))))"
"(u / urge-01
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG1 (s / state
                        :name (n / name
                              :op1 ""Odhadesh""))
                  :ARG2 (m / minister
                        :topic (s2 / supply-01
                              :ARG1 (f / food)))))
      :ARG1 (p2 / person)
      :ARG2 (r / resort-01
            :polarity -
            :ARG0 p2
            :ARG1 (b / buy-01
                  :ARG0 p2
                  :manner (p3 / panic-01)
                  :medium (m2 / media
                        :mod (s3 / social)))
            :ARG2-of (r2 / respond-01
                  :ARG1 (b2 / broadcast-program
                        :name (n2 / name
                              :op1 ""Covid""
                              :op2 19))))
      :medium m2)"
"(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Mr""
                  :op2 ""Bharat""
                  :op3 ""Bhushan""
                  :op4 ""Ashu"")
            :ARG0-of (h / have-org-role-91
                  :ARG2 (m / minister
                        :topic (a / and
                              :op1 (f / food)
                              :op2 (s2 / supply-01
                                    :mod (c / civil))
                              :op3 (a2 / affair-02
                                    :ARG2 (c2 / consume-01))))))
      :ARG1 (d / deliver-01
            :ARG1 (c3 / cylinder
                  :quant 1972605
                  :mod (g / gas
                        :mod (p2 / petroleum)))
            :location (s3 / state)
            :time (b / before
                  :op1 (n2 / now)
                  :duration (t / temporal-quantity
                        :quant 4
                        :unit (d2 / day))))
      :time (a3 / assure-01
            :ARG0 p
            :ARG2 (s4 / supply-01
                  :ARG1 (c4 / cylinder
                        :mod g)
                  :manner (d3 / door-to-door))))"
"(c / contrast-01
      :ARG1 (w / will-02
            :ARG0 (ii / i)
            :ARG1 (n / negotiate-01
                  :ARG0 ii
                  :ARG2 (p / price-01
                        :ARG1 (w2 / write-01
                              :ARG0 ii
                              :ARG1 (a / album)
                              :mod (g / ghost)))))
      :ARG2 (n2 / need-01
            :ARG0 ii
            :ARG1 (m / monetary-quantity
                  :ARG1-of (p2 / pay-01
                        :ARG0 ii
                        :mod (d / down)))
            :time (b / before
                  :op1 (s / send-01
                        :ARG0 ii
                        :ARG1 (l / lyric
                              :mod (a2 / any))))))"
"(s / soar-01
      :ARG1 (p / price-01
            :ARG1 (e / equipment
                  :ARG3-of (p2 / protect-01
                        :ARG1-of (p3 / personal-02))))
      :location (s2 / state
            :name (n / name
                  :op1 ""Anambra""))
      :ARG1-of (c / cause-01
            :ARG0 (l / law
                  :name (n2 / name
                        :op1 ""COVID-19""))))"
"(s / strong-02
      :ARG1 (a / and
            :op1 (s2 / sell-01
                  :ARG1 (h / home))
            :op2 (t / thing
                  :ARG2-of (p / price-01
                        :ARG1 h))
            :location (a2 / area
                  :part-of (c / city
                        :name (n / name
                              :op1 ""Chicago""))))
      :time (b / before
            :op1 (t2 / take-root-00
                  :ARG1 (c2 / concern-01
                        :ARG0 (p2 / program
                              :name (n2 / name
                                    :op1 ""COVID-19"")))))
      :frequency (t3 / temporal-quantity
            :quant 3
            :unit (m / month)
            :mod (ii / in-a-row))
      :time (d / date-entity
            :month 2))"
"(t / think-01
      :ARG0 (y / you)
      :ARG1 (c / cost-01
            :ARG1 (p / paper
                  :purpose (t2 / toilet))
            :ARG2 (m / more-than
                  :op1 (v / volume-quantity
                        :quant 1
                        :unit (b / barrel
                              :mod (o / oil
                                    :mod (c2 / country
                                          :name (n / name
                                                :op1 ""Canada"")))))))
      :polarity (a / amr-unknown)
      :time (e / ever))"
"(a / announce-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Amazon""))
      :ARG1 (r / remove-01
            :ARG0 c
            :ARG1 (a2 / account
                  :quant (m / more-than
                        :op1 3900)
                  :ARG0-of (s / sell-01))
            :ARG2 (s2 / store
                  :location (c2 / country
                        :name (n2 / name
                              :op1 ""U.S.""))
                  :poss c)
            :ARG1-of (c3 / cause-01
                  :ARG0 (g / gouge-02
                        :ARG0 c
                        :ARG2 (p / price)
                        :ARG1-of (b / base-02
                              :ARG2 (v / virus
                                    :name (n3 / name
                                          :op1 ""Coronavirus""))))))
      :time (d / date-entity
            :weekday (m2 / monday)))"
"(m / multi-sentence
      :snt1 (p / panic-01
            :polarity -
            :mode imperative
            :ARG0 (y / you)
            :condition (s / short-06
                  :ARG1 (a / and
                        :op1 (s2 / supermarket
                              :poss y)
                        :op2 (s3 / site
                              :mod (c / commerce
                                    :mod (e / electronics))
                              :poss y))
                  :ARG2 (p2 / product
                        :ARG0-of (s4 / sanitize-01
                              :ARG1 (h / hand)))))
      :snt2 (h2 / hack
            :ARG1-of (s5 / simple-02)
            :quant (s6 / some)
            :purpose (m2 / make-01
                  :ARG0 y
                  :ARG1 (p3 / product
                        :ARG0-of (s7 / sanitize-01))
                  :location (h3 / home))))"
"(f / fact
      :ARG1-of (p / prove-01)
      :domain (c / cough-01
            :ARG0 (p2 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (n / notary)))
            :ARG1-of (h2 / have-quant-91
                  :ARG3 (l / less)
                  :ARG4 (c2 / cough-01
                        :ARG0 (p3 / person
                              :mod (o / other))))))"
"(a / agree-01
      :ARG0 (w / we)
      :ARG1 (a2 / accelerate-01
            :ARG0 (c / company
                  :name (n / name
                        :op1 ""Covid-19"")
                  :ARG0-of (r / responsible-03
                        :ARG1 (e / everything
                              :ARG1-of (r2 / range-01
                                    :ARG3 (b / behave-01
                                          :ARG0 (p / person
                                                :ARG0-of (c2 / consume-01)))
                                    :ARG4 (c3 / change-01
                                          :ARG1 (c4 / climate))
                                    :ARG5 (p2 / practice-01
                                          :ARG1 (s / supply-01))
                                    :ARG6 (f / future
                                          :poss (a3 / and
                                                :op1 (w2 / work-01)
                                                :op2 (m / mobility))
                                          :ARG0-of (a4 / alter-01
                                                :ARG1 (p3 / process-02
                                                      :ARG1 (ii / invest-01))
                                                :ARG1-of (p4 / possible-01)))))))
            :ARG1 (t / trend-01
                  :ARG2 c
                  :name (n2 / name
                        :op1 ""ESG"")))
      :degree (f2 / further
            :mod (e2 / even)))"
"(s / soar-01
      :ARG1 (s2 / sell-01
            :ARG1 (a / and
                  :op1 (p / product
                        :ARG0-of (s3 / sanitize-01
                              :ARG1 (h / hand)))
                  :op2 (p2 / product
                        :ARG0-of (s4 / sanitize-01
                              :ARG1 (s5 / soap)))))
      :location (a2 / across
            :op1 (w / world))
      :mod (u / url-entity
            :value ""https://www.al-monitor.com/pulse/originals/2020/03/turkey-kolonya-coronavirus-sanitizer-soap-shortage.html""))"
"(d / demand-01
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG1 (p2 / political-party
                        :name (n / name
                              :op1 ""Democratic""
                              :op2 ""Party""))))
      :ARG1 (a / at-least
            :op1 (m / monetary-quantity
                  :quant 500000000000
                  :ARG3-of (s / spend-01
                        :ARG1 (r / relieve-01
                              :ARG1 (d2 / disease
                                    :name (n2 / name
                                          :op1 ""Coronavirus"")
                                    :mod (e / emergency)))
                        :mod (a2 / additional))))
      :purpose (a3 / and
            :op1 (a4 / aid-01
                  :ARG1 (a5 / and
                        :op1 (h2 / hospital)
                        :op2 (g / government-organization
                              :ARG0-of (g2 / govern-01
                                    :ARG1 (s2 / state)))))
            :op2 (s3 / shore-up-01
                  :ARG1 (s4 / stamp
                        :purpose (f / food)))))"
"(m / multi-sentence
      :snt1 (s / start-off-02
            :ARG1 (w / week
                  :mod (t / this))
            :ARG2 (n / note
                  :mod (s2 / somber))
            :ARG1-of (c / cause-01
                  :ARG0 (h / hit-01
                        :ARG0 (r / reality
                              :mod (m2 / mitigate-01
                                    :ARG1 (l / law
                                          :name (n2 / name
                                                :op1 ""COVID19""))))
                        :ARG1 (s3 / sector
                              :ARG0-of (p / process-01))
                        :ARG1-of (f / full-09))))
      :snt2 (c2 / combine-01
            :ARG1 (p2 / precaution-02
                  :ARG1 (s4 / safe-01
                        :ARG1 (p3 / person
                              :ARG1-of (e / employ-01)))
                  :location (l2 / line))
            :ARG2 (r2 / result-01
                  :ARG1 (p4 / plane
                        :mod (d / demand-01)
                        :time (c3 / current))
                  :ARG2 (t2 / this))))"
"(t / think-01
      :ARG0 (ii / i)
      :ARG1 (c / cause-01
            :ARG0 (o / order-01
                  :ARG2 (c2 / control-01
                        :ARG1 (m / movement-07))
                  :mod (t2 / this))
            :ARG1 (c3 / case-04
                  :ARG1 (e / event
                        :name (n / name
                              :op1 ""COVID""
                              :op2 2019))
                  :quant (m2 / more))))"
"(s / storm-02
      :ARG0 (y / youth
            :mod (c / city
                  :name (n / name
                        :op1 ""Nnewi"")))
      :ARG1 (m / market)
      :purpose (c2 / control-01
            :ARG0 y
            :ARG1 (p / price-01
                  :ARG1 (f / food)))
      :source (c3 / city
            :name (n2 / name
                  :op1 ""Covid""
                  :op2 19)))"
"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (g / give-01
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""Rishi""
                              :op2 ""Sunak"")
                        :ARG0-of (h / have-org-role-91
                              :ARG2 (c2 / chancellor)))
                  :ARG1 (l / lifeline)
                  :ARG2 (p2 / person
                        :quant 5000000
                        :ARG0-of (w / work-01)
                        :ARG1-of (e / employ-01)
                        :ARG0-of e
                        :location (c3 / country
                              :name (n2 / name
                                    :op1 ""Britain""))))
            :ARG2 (h2 / have-quant-91
                  :ARG1 l
                  :ARG3 (e2 / enough)
                  :polarity (a / amr-unknown)))
      :snt2 (r / read-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (a2 / analyze-01
                  :ARG0 (w2 / we))
            :location (h3 / here)))"
"(p / plan-01
      :ARG1 (a / act-02)
      :ARG1-of (d / design-01
            :ARG3 (h / help-01
                  :ARG0 p
                  :ARG1 (s / stay-01
                        :ARG1 (p2 / person)
                        :ARG3 (l / live-01
                              :ARG0 p2)
                        :condition (s2 / situation
                              :ARG0-of (e / endanger-01)))
                  :ARG2 p2))
      :domain (s3 / strategy
            :purpose (s4 / survive-01)))"
"(a / and
      :op1 (g / go-02
            :ARG0 (ii / i)
            :ARG4 (s / store
                  :mod (g2 / grocery))
            :time (t / today))
      :op2 (f / find-out-03
            :ARG0 ii
            :ARG1 (e / eliminate-01
                  :ARG1 (p / pasta))))"
"(b / begin-01
      :ARG1 (l / line
            :location (c / company
                  :name (n / name
                        :op1 ""Costco"")
                  :mod (t / this)))
      :time (d / date-entity
            :time ""2:55"")
      :ARG1-of (c2 / cause-01
            :ARG0 (s / spook-01
                  :ARG0 (c3 / coronavirus)
                  :ARG1 (p / person
                        :ARG0-of (s2 / shop-01)))))"
"(b / be-located-at-91
      :ARG1 (ii / i)
      :ARG2 (ii2 / in-line-04
            :ARG1 ii
            :ARG2 (q / queue-01
                  :purpose (s / shop-01)
                  :mod (o / online)
                  :mod (v / virtual)))
      :ord (o2 / ordinal-entity
            :value 14799))"
"(s / spray-01
      :mode imperative
      :polite +
      :ARG0 (y / you)
      :ARG1 (l / Lysol)
      :ARG2 (p / produce
            :source (s2 / store
                  :mod (g / grocery))
            :poss y)
      :time (b / before
            :op1 (e / eat-01
                  :ARG0 y))
      :purpose (p2 / prevent-01
            :ARG0 y
            :ARG1 (s3 / spread-02
                  :ARG1 (c / chemical
                        :name (n / name
                              :op1 ""COVID-19"")))))"
"(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""RaminToloui"")
            :ARG0-of (h / have-org-role-91
                  :ARG1 (o / organization
                        :name (n2 / name
                              :op1 ""SIEPR""))
                  :ARG2 (p2 / professor
                        :topic (p3 / practice-01))))
      :ARG1 (n3 / now
            :domain (t / time
                  :purpose (d / deploy-01
                        :ARG1 (r / range
                              :mod (f / full)
                              :mod (t2 / tool))
                        :purpose (a / address-02
                              :ARG1 (s2 / shock-01
                                    :ARG0 (l / liquidity)
                                    :ARG1-of (h2 / have-degree-91
                                          :ARG2 (a2 / abrupt)
                                          :ARG3 (m / most)
                                          :ARG5 (h3 / history
                                                :mod (c / country
                                                      :name (n4 / name
                                                            :op1 ""U.S.""))))))))))"
"(a / avoid-01
      :ARG0 (ii / i)
      :ARG1 (p / person)
      :location (s / store
            :mod (g / grocery))
      :time (g2 / grab-01
            :ARG0 ii
            :ARG1 (m / milk
                  :quant (s2 / some))))"
"(w / want-01
      :ARG0 (ii / i)
      :ARG1 (k / know-01
            :ARG0 ii
            :ARG1 (p / person
                  :ARG1-of (b / beef-up-01)
                  :poss (l / line
                        :mod (b2 / bottom))))
      :purpose (p2 / possible-01
            :ARG1 (d / decide-01
                  :ARG0 ii
                  :ARG3 (p3 / person
                        :ARG0-of (c / consume-01))
                  :time (f / future)
                  :ARG1-of (b3 / base-02
                        :ARG2 k))))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG1 (h / hi)
            :ARG2 (p / person
                  :name (n / name
                        :op1 ""Simon"")))
      :snt2 (c / contrast-01
            :ARG1 (p2 / plan-01
                  :ARG0 (w / we)
                  :ARG1 (t / trip-03
                        :ARG0 w
                        :ARG1 (c2 / country
                              :name (n2 / name
                                    :op1 ""New""
                                    :op2 ""Zealand""))
                        :time (d / date-entity
                              :month 2
                              :year 2021)))
            :ARG2 (p3 / put-on-hold-09
                  :ARG0 w
                  :ARG1 t
                  :ARG1-of (c3 / cause-01
                        :ARG0 (l / law
                              :name (n3 / name
                                    :op1 ""CODID-19"")))))
      :snt3 (f / feel-02
            :ARG0 (ii / i)
            :ARG1 (r / risk-01
                  :ARG0 (y / you)
                  :ARG2 (b / book-03
                        :ARG0 y)
                  :time (n4 / now))
            :mod (g / gut))
      :snt4 (l2 / look-02
            :ARG1 (a / and
                  :op1 (t2 / take-01
                        :ARG0 (c4 / company)
                        :ARG1 (b2 / book-03)
                        :mod (a2 / again))
                  :op2 (s2 / start-01
                        :ARG1 (c5 / creep-01
                              :ARG1 (p4 / price-01
                                    :ARG1 (f2 / fly-01))
                              :direction (u / up))))
            :time (n5 / now)))"
"(r / recommend-01
      :ARG1 (u / use-01
            :ARG0 (o / one)
            :ARG1 (s / sanitizer)
            :manner (a / amr-unknown)))"
"(p / preside-01
      :ARG0 (p2 / person
            :ARG0-of (h / have-org-role-91
                  :ARG1 (g / government-organization
                        :name (n / name
                              :op1 ""COVID""
                              :op2 19
                              :op3 ""Hyd""))
                  :ARG2 (m / member))
            :ARG0-of (h2 / have-org-role-91
                  :ARG1 (g2 / government-organization
                        :name (n2 / name
                              :op1 ""MAP""))
                  :ARG2 m))
      :ARG1 (m2 / meet-03
            :ARG0 (a / association
                  :mod (m3 / mill
                        :mod (f / floor)))
            :location (c / city
                  :name (n3 / name
                        :op1 ""Shahbaz""
                        :op2 ""Hal""
                        :op3 ""Hyderabad""))
            :purpose (e / ensure-01
                  :ARG0 p2
                  :ARG1 (p3 / provide-01
                        :ARG1 (s / stuff
                              :mod (f2 / food)
                              :topic (t / thing
                                    :ARG2-of (p4 / price-01
                                          :ARG0 (g3 / government-organization
                                                :ARG0-of (g4 / govern-01)))))
                        :ARG2 (p5 / public)
                        :ARG1-of (b / brief-01
                              :ARG0 (p6 / person
                                    :name (n4 / name
                                          :op1 ""Syed""
                                          :op2 ""Sajjad""
                                          :op3 ""Shah"")
                                    :ARG0-of (h3 / have-org-role-91
                                          :ARG2 (c2 / commissioner
                                                :mod (a2 / additional))))
                              :ARG1 p2
                              :mod (a3 / also)))))
      :ARG2 m3
      :mod (f3 / flour))"
"(a / alert-01
      :ARG1 (g / government-organization
            :name (n / name
                  :op1 ""Fijian""
                  :op2 ""Competition""
                  :op3 ""and""
                  :op4 ""Consumer""
                  :op5 ""Commission""))
      :ARG2 (d / defraud-01
            :mod (a2 / any)
            :ARG1-of (a3 / arise-02
                  :ARG1-of (p / possible-01)
                  :time (c / continue-01
                        :ARG1 (g2 / grow-01
                              :ARG1 (ii / impact-01
                                    :ARG0 (c2 / coronavirus))))))
      :ARG1-of (h / high-02))"
"(c / cause-01
      :ARG0 (a / amr-unknown)
      :ARG1 (o / offer-01
            :polarity -
            :ARG0 (r / retailer
                  :mod (o2 / other)
                  :ARG1-of (c2 / close-01))
            :ARG1 (a2 / and
                  :op1 (v / van
                        :poss r)
                  :op2 (p / person
                        :ARG0-of (d / drive-01
                              :ARG1 v)))
            :ARG3 (s / supermarket)))"
"(c / contrast-01
      :ARG1 (t / try-01
            :ARG0 (ii / i
                  :part (h / hair))
            :ARG1 (d / do-02
                  :ARG0 ii
                  :ARG1 (s / something)
                  :ARG2 h))
      :ARG2 (s2 / shop-01
            :ARG0 ii
            :ARG1 (c2 / cap
                  :mod (b / baseball)
                  :mod (c3 / cute))
            :medium (o / online)
            :time (n / now)))"
"(o / obligate-01
      :ARG1 (s / store
            :mod (g / grocery))
      :ARG2 (l / limit-01
            :ARG0 s
            :ARG1 (n / number
                  :quant-of (p / person
                        :ARG0-of (s2 / shop-01))
                  :location s
                  :quant (a / at-a-time))
            :purpose (p2 / protect-01
                  :ARG0 s
                  :ARG1 (a2 / and
                        :op1 (p3 / person
                              :ARG1-of (e / employ-01))
                        :op2 (p4 / person
                              :ARG0-of (s3 / shop-01))))))"
"(c / close-01
      :ARG0 (s / state
            :ARG1-of (ii / include-91
                  :ARG2 (s2 / state)
                  :ARG3 (p / percentage-entity
                        :value 80)))
      :ARG1 (a / area
            :location-of (d / dine-01)))"
"(m / multi-sentence
      :snt1 (a / available-02
            :ARG2 (d / doctor)
            :mod (o / only)
            :medium (o2 / online))
      :snt2 (a2 / and
            :op1 (p / possible-01
                  :ARG1 (o3 / order-02
                        :ARG0 (y / you)
                        :ARG1 (m2 / medication)))
            :op2 (a3 / arrive-01
                  :ARG1 m2
                  :ARG4 (p2 / pharmacy
                        :ARG1-of (n / near-02
                              :ARG2 y
                              :ARG2-of (h / have-degree-91
                                    :ARG1 p2
                                    :ARG3 (m3 / most))))
                  :ARG4 (w / within
                        :op1 (d2 / distance-quantity
                              :quant 500
                              :unit (m4 / meter)))))
      :snt3 (c / contrast-01
            :ARG1 (s / sorry-01
                  :ARG1 (ii / i))
            :ARG2 (c2 / close-01
                  :ARG1 (s2 / store
                        :ARG2-of (e / except-01
                              :ARG1 (a4 / and
                                    :op1 (f / food)
                                    :op2 (w2 / water))))))
      :snt4 (t / thing
            :ARG1-of (n2 / need-01)
            :mod (b / bare)
            :mod (o4 / only)
            :ARG2-of (s3 / summarize-01))
      :snt5 (o5 / order-01
            :purpose (m5 / measure-02
                  :ARG2 (p3 / precaution-02))
            :mod (t2 / this)))"
"(n / nervous-01
      :ARG0 (h / handle-01
            :ARG0 (p / person
                  :name (n2 / name
                        :op1 ""Trump""))
            :ARG1 (p2 / pandemic))
      :ARG1 (p3 / person
            :ARG0-of (h2 / have-org-role-91
                  :ARG1 (p4 / political-party
                        :name (n3 / name
                              :op1 ""Republican""))))
      :ARG1-of (c / cause-01
            :ARG0 (p5 / possible-01
                  :ARG1 (h3 / hurt-01
                        :ARG0 h
                        :ARG1 (c2 / chance-02
                              :ARG0 p3
                              :ARG1 (r / reelect-01
                                    :ARG1 p3))))))"
"(c / change-01
      :ARG0 (l / law
            :name (n / name
                  :op1 ""COVID-19""))
      :ARG1 (t / thing
            :manner-of (l2 / live-01
                  :ARG0 (w / we)))
      :duration (p / permanent)
      :manner (m / make-02
            :ARG0 l
            :ARG1 (n2 / norm
                  :domain (a / and
                        :op1 (d / distance-01
                              :ARG1 (s / society)
                              :ARG2 (s2 / society))
                        :op2 (w2 / work-01
                              :location (h / home)
                              :mod (c2 / common))
                        :op3 (s3 / society
                              :ARG0-of (h2 / have-03
                                    :polarity -
                                    :ARG1 (c3 / cash)))
                        :op4 (s4 / surge-01
                              :ARG1 (s5 / shop-01
                                    :medium (o / online)))))))"
"(m / multi-sentence
      :snt1 (ii / insight
            :mod (s / some)
            :topic (t / thing
                  :manner-of (ii2 / impact-01
                        :ARG0 (o / organization
                              :name (n / name
                                    :op1 ""COVID-19""))
                        :ARG1 (r / retail
                              :location (c / country
                                    :name (n2 / name
                                          :op1 ""China""))))))
      :snt2 (b / back-02
            :ARG1 (p / population
                  :ARG1-of (ii3 / include-91
                        :ARG2 (p2 / population
                              :poss c)
                        :ARG3 (b2 / between
                              :op1 (p3 / percentage-entity
                                    :value 80)
                              :op2 (p4 / percentage-entity
                                    :value 85))))
            :ARG2 (w / work-01
                  :ARG0 p)
            :time (b3 / by
                  :op1 (d / date-entity
                        :month 3
                        :day 13)))
      :snt3 (s2 / start-01
            :ARG0 (t2 / traffic
                  :mod (f / foot)
                  :mod (s3 / store)))
      :snt4 (d2 / down-03
            :ARG1 (s4 / sell-01
                  :ARG0 (r2 / retail))
            :ARG2 (p5 / percentage-entity
                  :value 20.5)
            :time (a / and
                  :op1 (d3 / date-entity
                        :month 1)
                  :op2 (d4 / date-entity
                        :month 2
                        :year 2020))))"
"(a / ask-01
      :ARG0 (ii / i)
      :ARG1 (s / stock-up-02
            :ARG0 (w / world)
            :ARG1 (f / food
                  :ARG1-of (h / have-quant-91
                        :ARG3 (e / enough)))
            :polarity (a2 / amr-unknown))
      :ARG2 w)"
"(a / and
      :op1 (g / go-02
            :ARG0 (ii / i)
            :ARG4 (s / store
                  :name (n / name
                        :op1 ""Waitrose"")
                  :ARG1-of (l / local-02
                        :ARG2 (c / city-district
                              :name (n2 / name
                                    :op1 ""East""
                                    :op2 ""Sheen"")))
                  :poss ii)
            :time (y / yesterday))
      :op2 (s2 / surprise-01
            :ARG0 (t / thing
                  :quant-of (p / produce
                        :ARG1-of (f / fresh-04)
                        :ARG1-of (h / have-03
                              :ARG0 s)))
            :ARG1 ii))"
"(a / alert-01
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG2 (a2 / attorney
                        :mod (g / general))))
      :ARG1 (p2 / person
            :ARG0-of (r / rent-01)
            :ARG1-of (a3 / affect-01
                  :ARG0 (l / law
                        :name (n / name
                              :op1 ""COVID-19""))))
      :ARG2 (p3 / person
            :ARG0-of (c / consume-01))
      :ARG1-of (u / update-01))"
"(m / multi-sentence
      :snt1 (t / take-advantage-02
            :ARG0 (p / person
                  :ARG0-of (s / scam-01))
            :ARG1 (f / fear-01
                  :ARG1 (v / virus
                        :name (n / name
                              :op1 ""Coronavirus""))))
      :snt2 (v2 / visit-01
            :mode imperative
            :ARG0 (y / you)
            :purpose (t2 / tip-05
                  :ARG2 (h / help-01
                        :ARG1 (k / keep-04
                              :ARG0 y
                              :ARG1 (s2 / scamper)
                              :ARG2 (a / at-bay))
                        :ARG2 y)
                  :quant (s3 / some))))"
"(c / check-01
      :ARG0 (s / squad
            :ARG0-of (e / enforce-01
                  :ARG1 (s2 / supply-01
                        :mod (c2 / civil)))
            :location (c3 / city
                  :name (n / name
                        :op1 ""Puri"")
                  :mod (d / district)))
      :ARG1 (s3 / store
            :ARG1-of (d2 / differ-02))
      :purpose (e2 / ensure-01
            :ARG0 s
            :ARG1 (s4 / sell-01
                  :polarity -
                  :ARG1 (a / and
                        :op1 (m / mask)
                        :op2 (s5 / sanitiser
                              :mod (h / hand)))
                  :ARG3 (m2 / monetary-quantity
                        :mod (e3 / exorbitant))
                  :time (s6 / scare-01
                        :ARG0 (c4 / coronavirus)
                        :location (s7 / state
                              :name (n2 / name
                                    :op1 ""Odhashtra""))))))"
"(l / like-02
      :ARG0 (p / political-party
            :name (n / name
                  :op1 ""McEwanSNP""))
      :ARG1 (s / see-01
            :ARG0 p
            :ARG1 (p2 / price-01
                  :ARG1 (p3 / petrol)
                  :ARG1-of p2
                  :ARG1-of (e / even-02)))
      :purpose (a / avoid-01
            :ARG0 p
            :ARG1 (p4 / person
                  :ARG0-of (w / work-01)
                  :ARG1-of (k / key-02)
                  :ARG0-of (g / go-02
                        :ARG1 (d / distance-quantity
                              :quant 1
                              :unit (m / mile)
                              :mod (e2 / extra))
                        :time (a2 / already)
                        :ARG0-of (c / cause-01
                              :ARG1 (o / obligate-01
                                    :ARG1 p4
                                    :ARG2 (t / travel-01
                                          :ARG0 p4
                                          :ARG1 d)))))))"
"(a / and
      :op1 (c / change-01
            :ARG1 (c2 / consume-01
                  :ARG0 (p / person
                        :ARG1 (m / media))
                  :ARG0 p)
            :ARG1 m)
      :manner (a2 / amr-unknown)
      :time (c3 / coronavirus)
      :op2 (m2 / mean-01
            :ARG1 c
            :ARG2 (a3 / amr-unknown)
            :ARG3 (c4 / company
                  :ARG0-of (a4 / advertise-01))))"
"(f / face-01
      :ARG0 (b / bank
            :mod (f2 / food)
            :location (a / around
                  :op1 (c / country
                        :name (n / name
                              :op1 ""US""))))
      :ARG1 (ii / increase-01
            :ARG1 (d / demand-01
                  :ARG1 f2))
      :time (f3 / face-01
            :ARG0 b
            :ARG1 (d2 / difficulty
                  :mod (l / logistics)
                  :prep-with (a2 / and
                        :op1 (s / supply-01)
                        :op2 (p / person
                              :ARG0-of (v / volunteer-01))))
            :mod (s2 / simultaneous)))"
"(m / multi-sentence
      :snt1 (p / problem
            :domain (a / amr-unknown)
            :condition (o / or
                  :op1 (b / be-from-91
                        :ARG1 (g / group)
                        :ARG2 (h / household
                              :ARG1-of (s / same-01)))
                  :op2 (s2 / stay-01
                        :polarity -
                        :ARG1 g
                        :ARG3 (a2 / apart
                              :op1 g
                              :quant (d / distance-quantity
                                    :quant 2
                                    :unit (m2 / meter))))))
      :snt2 (d2 / differ-02
            :polarity -
            :ARG1 (ii / it)
            :ARG2 (s3 / stand-01
                  :ARG2 (q / queue-01
                        :ARG2 (s4 / supermarket))
                  :ARG1-of (d3 / do-02
                        :ARG0 (p2 / person
                              :quant (l / load))
                        :frequency (r / rate-entity-91
                              :ARG3 (t / temporal-quantity
                                    :quant 1
                                    :unit (d4 / day))))))
      :snt3 (a3 / and
            :op1 (n / need-01
                  :ARG0 (p3 / person)
                  :ARG1 (a4 / air
                        :ARG1-of (f / fresh-04)))
            :op2 (e / exercise-02
                  :ARG0 p3
                  :quant (m3 / many))))"
"(s / say-01
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG1 (g / government-organization
                        :name (n / name
                              :op1 ""FBI""))
                  :ARG2 (a / agent)))
      :ARG1 (ii / increase-01
            :ARG0 (w / we)
            :ARG1 (e / effort-01
                  :ARG0 w
                  :ARG1 (p2 / protect-01
                        :ARG0 w
                        :ARG1 (p3 / public))))
      :location (o / office
            :location (c / city
                  :name (n2 / name
                        :op1 ""Newark""))
            :topic (s2 / scam-01
                  :ARG1-of (r / relate-01
                        :ARG2 (c2 / coronavirus)))))"
"(c / consume-01
      :ARG0 (c2 / country
            :name (n / name
                  :op1 ""India""))
      :polarity (a / amr-unknown)
      :time (f / fortnight
            :ord (o / ordinal-entity
                  :value 1)
            :part-of (e / event
                  :name (n2 / name
                        :op1 ""COVID-19""))))"
"(a / and
      :op1 (g / go-02
            :ARG0 (ii / i)
            :ARG4 (s / supermarket)
            :ord (o / ordinal-entity
                  :value 1
                  :range (t / temporal-quantity
                        :quant 5
                        :unit (d / day))))
      :op2 (l / look-02
            :ARG0 (t2 / town
                  :poss ii)
            :ARG1 (v / village
                  :mod (g2 / ghost))))"
"(s / say-01
      :ARG1 (p / pick-01
            :ARG0 (y / you)
            :ARG1 (t / time
                  :ARG1-of (b / bad-07
                        :ARG2 (ii / increase-01
                              :ARG0 y
                              :ARG1 (p2 / price-01)))))
      :ARG2 (p3 / person
            :name (n / name
                  :op1 ""SkyUK"")))"
"(t / thing
      :ARG2-of (p / promise-01
            :ARG1 (w / we)))"
"(m / multi-sentence
      :snt1 (ii / impression-03
            :ARG0 (a / and
                  :op1 (p / person
                        :mod (s / some))
                  :op2 (o / outlet
                        :mod (m2 / media)))
            :ARG1 (e / empty-01
                  :ARG1 (s2 / shelf
                        :mod (s3 / supermarket)
                        :mod (a2 / all))
                  :time (a3 / after
                        :op1 (o2 / open-01
                              :ARG1 s2)
                        :mod (s4 / soon))))
      :snt2 (m3 / mislead-01
            :ARG0 (t / this)
            :ARG2 (c / contrast-01
                  :ARG1 (e2 / empty-01
                        :ARG1 (s5 / shelf
                              :mod (s6 / some)))
                  :ARG2 (s7 / stock-01
                        :ARG1 (s8 / shelf
                              :mod (o3 / other
                                    :quant (m4 / many)))
                        :manner (w / well-09))))
      :snt3 (h / have-condition-91
            :ARG1 (r / recommend-01
                  :ARG1 (f / fine-04
                        :ARG1 (y / you)))
            :ARG2 (k / know-03
                  :ARG0 y
                  :ARG1 (c2 / cook-01
                        :ARG0 y
                        :ARG1 (a4 / anything
                              :ARG2-of (e3 / except-01
                                    :ARG1 (p2 / pasta
                                          :ARG1-of (m5 / make-01
                                                :ARG1-of (p3 / pre-01)))))))))"
"(c / cook-01
      :ARG0 (ii / i)
      :ARG1 (b / batch
            :consist-of (f / food))
      :time (b2 / begin-01
            :ARG1 (w / week))
      :purpose (o / obligate-01
            :polarity -
            :ARG1 ii
            :ARG2 (c2 / cook-01
                  :ARG0 ii
                  :frequency (r / rate-entity-91
                        :ARG3 (t / temporal-quantity
                              :quant 1
                              :unit (d / day))))))"
"(ii / invoke-01
      :ARG1 (c / clause
            :mod (l / law
                  :name (n / name
                        :op1 ""Force""
                        :op2 ""Majeure"")))
      :location (c2 / contract
            :location (a / around
                  :op1 (w / world)))
      :ARG1-of (c3 / cause-01
            :ARG0 (o / outbreak-29
                  :ARG1 (d / disease
                        :name (n2 / name
                              :op1 ""coronavirus"")
                        :ARG1-of (o2 / originate-01
                              :ARG2 (c4 / country
                                    :name (n3 / name
                                          :op1 ""China"")))
                        :ARG1-of (s / spread-02
                              :ARG2 (a2 / and
                                    :op1 (c5 / country
                                          :name (n4 / name
                                                :op1 ""Italy""))
                                    :op2 (c6 / country
                                          :name (n5 / name
                                                :op1 ""Spain"")))
                              :time (s2 / since)))))
      :ARG1-of (h / have-degree-91
            :ARG2 (f / frequent-02
                  :ARG1 ii)
            :ARG3 (m / more)))"
"(p / plummet-01
      :ARG1 (p2 / price-01
            :ARG1 (p3 / pump))
      :location (a / across
            :op1 (n / nation)))"
"(m / multi-sentence
      :snt1 (p / plan-01
            :ARG0 (a / and
                  :op1 (ii / i)
                  :op2 (p2 / person
                        :ARG0-of (r / reside-01)
                        :mod (o / other)
                        :quant (s / some)))
            :ARG1 (t / take-over-12
                  :ARG0 a
                  :ARG1 (s2 / stock-01
                        :ARG0 (c / city)
                        :ARG1 (p3 / paper
                              :purpose (t2 / toilet)))))
      :snt2 (c2 / center-01
            :ARG1 (l / life
                  :poss (ii2 / i
                        :part (a2 / ass)))
            :ARG2 (w / wipe-01
                  :ARG0 ii2
                  :ARG1 a2
                  :manner (p4 / proper))
            :time (n / now)))"
"(c / contrast-01
      :ARG1 (c2 / close-01
            :ARG1 (u / union
                  :mod (s / store
                        :mod (g / grocery)))
            :duration (f / few
                  :op1 (t / temporal-quantity
                        :quant 1
                        :unit (w / week))))
      :ARG2 (s2 / stay-01
            :ARG1 (w2 / we)
            :ARG3 (o / open-09
                  :ARG1 w2)))"
"(r / reshape-01
      :ARG0 (p / product
            :name (n / name
                  :op1 ""Covid-19""))
      :ARG1 (a / and
            :op1 (c / consume-01
                  :ARG0 (p2 / person)
                  :ARG0 p2
                  :mod (c2 / country
                        :name (n2 / name
                              :op1 ""US"")))
            :ARG1 (c3 / content))
      :op2 (p3 / prefer-01
            :ARG0 p2
            :ARG1 (a2 / advertise-01)))"
"(p / panic-01
      :polarity -
      :mode imperative
      :polite +
      :ARG0 (y / you)
      :ARG1-of (c / cause-01
            :ARG0 (p2 / precaution-02
                  :ARG1 (m / measure-02
                        :ARG0 (g / government-organization
                              :ARG0-of (g2 / govern-01))
                        :mod (a / all)))))"
"(m / multi-sentence
      :snt1 (s / step-up-03
            :ARG0 (ii / industry
                  :mod (r / retail-01)
                  :location (c / country
                        :name (n / name
                              :op1 ""UK"")))
            :ARG1 (r2 / respond-01
                  :ARG0 ii
                  :ARG1 (l / law
                        :name (n2 / name
                              :op1 ""COVID-19"")))
            :ARG1-of (c2 / cause-01
                  :ARG0 (c3 / choose-01
                        :ARG0 (s2 / store
                              :quant (m2 / many))
                        :ARG1 (c4 / close-01
                              :ARG1 s2))))
      :snt2 (l2 / let-know-07
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (w / we)
            :ARG2 (n3 / notice-01
                  :ARG0 y
                  :ARG1 (c5 / close-01
                        :ARG1 (s3 / store)
                        :quant (a / any)
                        :location (o / or
                              :op1 (s4 / street
                                    :ARG1-of (h / high-02)
                                    :poss y)
                              :op2 (t / town
                                    :poss y)
                              :op3 (c6 / city
                                    :poss y)))
                  :polarity (a2 / amr-unknown))))"
"(d / decrease-01
      :ARG1 (m / monetary-quantity
            :ARG2-of (p / price-01
                  :ARG1 (f / food))
            :location (a / around
                  :op1 (w / world)))
      :time (d2 / date-entity
            :month 3))"
"(w / wear-01
      :polarity (a / amr-unknown)
      :ARG0 (y / you)
      :ARG1 (t / thing
            :mod (a2 / any)
            :ARG1-of (f / follow-01))
      :ARG2 (s / supermarket)
      :time (w2 / week
            :ord (o / ordinal-entity
                  :value 2)
            :time-of (a3 / and
                  :op1 (l / lock-down-06)
                  :op2 (d / distance-01
                        :ARG2 (s2 / society)))))"
"(c / contrast-01
      :ARG1 (s / say-01
            :ARG0 (g / grocer
                  :mod (t / top)
                  :mod (c2 / country
                        :name (n / name
                              :op1 ""Canada"")))
            :ARG1 (p / possible-01
                  :ARG1 (k / keep-up-05
                        :ARG0 g
                        :ARG1 (d / demand-01))
                  :time (o / outbreak-29
                        :name (n2 / name
                              :op1 ""COVID-19""))))
      :ARG2 (c3 / concern-01
            :ARG0 (ii / impact-01
                  :ARG0 (r / restrict-01
                        :ARG1 (b / border))
                  :ARG1 (p2 / produce-01
                        :ARG1 (f / food
                              :mod (a / agriculture)))
                  :ARG1-of (p3 / possible-01))
            :ARG1 (p4 / person
                  :ARG0-of (p5 / produce-01
                        :ARG1 (f2 / food))
                  :quant (s2 / some))))"
"(f / feel-01
      :polarity (a / amr-unknown)
      :ARG0 (a2 / anyone
            :mod (e / else))
      :ARG1 (w / way
            :mod (t / this))
      :time (s / shop-01
            :ARG0 a2
            :ARG1 (g / grocery)))"
"(c / challenge-01
      :ARG2 (t / try-01
            :ARG1 (d / distant-02
                  :ARG1 (s / society)
                  :location (s2 / supermarket
                        :ARG1-of (f / full-09
                              :ARG2 (f2 / fucktard
                                    :ARG1-of (r / retard-01)
                                    :mod (s3 / selfish))))))
      :source (u / url-entity
            :value ""uk""))"
"(w / wonder-01
      :ARG0 (ii / i)
      :ARG1 (t / thing
            :manner-of (ii2 / impact-01
                  :ARG0 (t2 / this)
                  :ARG1 (e / endowment
                        :poss (u / university
                              :name (n / name
                                    :op1 ""Penn"")))))
      :ARG1-of (c / cause-01
            :ARG0 (o / oppose-01
                  :ARG0 (p / person
                        :ARG0-of (h / have-org-role-91
                              :ARG1 u
                              :ARG2 (t3 / trustee)))
                  :ARG1 (d / divest-01
                        :ARG1 (f / fuel
                              :mod (f2 / fossil))))))"
"(a / announce-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Aldi""
                  :op2 ""USA""))
      :ARG1 (p / policy-01
            :ARG0 c
            :ARG0-of (l / limit-01
                  :ARG1 (n2 / number
                        :quant-of (c2 / customer
                              :location (s / store
                                    :mod (e / each))))
                  :ARG2 (r / rate-entity-91
                        :ARG1 5
                        :ARG2 (a2 / area-quantity
                              :quant 1000
                              :unit (s2 / square-foot))))
            :ARG1-of (n3 / new-01)))"
"(m / multi-sentence
      :snt1 (f / find-01
            :mode expressive
            :ARG0 (ii / i)
            :ARG1 (p / package
                  :quant 1
                  :consist-of (p2 / paper
                        :purpose (t / toilet)))
            :ARG1-of (a / actual-02)
            :location (s / store
                  :poss ii
                  :ARG1-of (l / local-02)))
      :snt2 (s2 / see-01
            :polarity -
            :ARG0 (ii2 / i)
            :ARG1 (a2 / any)
            :time (m2 / multiple
                  :op1 (t2 / temporal-quantity
                        :quant 1
                        :unit (w / week)))))"
"(m / multi-sentence
      :snt1 (s / see-01
            :ARG0 (ii / i)
            :ARG1 (a / and
                  :op1 (s2 / scaremonger
                        :quant (l / lot))
                  :op2 (s3 / suggest-01
                        :ARG0 (p / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG1 ii
                                    :ARG2 (c / client))
                              :quant (s4 / some))
                        :ARG1 (p2 / possible-01
                              :ARG1 (d / drop-01
                                    :ARG1 (p3 / price-01
                                          :ARG1 (h2 / house))
                                    :ARG2 (u / up-to
                                          :op1 (p4 / percentage-entity
                                                :value 60)))))))
      :snt2 (t / think-01
            :ARG0 (ii2 / i)
            :ARG1 (h3 / highlight-01
                  :ARG0 (a2 / article
                        :mod (t2 / this))
                  :ARG1 (ii3 / impact-01
                        :ARG0 (c2 / coronavirus)
                        :ARG1 (m2 / market
                              :mod (p5 / property))
                        :ARG1-of (r / realistic-03))
                  :ARG1-of (g / good-02
                        :ARG2-of (h4 / have-degree-91
                              :ARG1 h3
                              :ARG3 (m3 / more
                                    :quant (m4 / much)))))))"
"(m / multi-sentence
      :snt1 (c / create-01
            :ARG0 (p / pandemic)
            :ARG1 (p2 / pressure-01
                  :ARG2 (s / staff-01
                        :mod (a / again))
                  :mod (m2 / more))
            :mod (m3 / moment
                  :ARG0-of (f / fascinate-01
                        :ARG1 (r / retail-01
                              :ARG1 (f2 / food))
                        :degree (r2 / really))))
      :snt2 (h / have-concession-91
            :ARG1 (a2 / argue-01
                  :ARG1 (a3 / automate-01
                        :mod (m4 / more))
                  :mod (a4 / also))
            :ARG2 (ii / it)))"
"(r / require-01
      :ARG0 (g / government-organization
            :ARG0-of (g2 / govern-01
                  :ARG1 (c / country
                        :name (n / name
                              :op1 ""Albania""))))
      :ARG1 (k / keep-01
            :ARG0 (b / business
                  :mod (b2 / big)
                  :ARG0-of (s / supply-01
                        :ARG1 (a / and
                              :op1 (f / food)
                              :op2 (d / drug))))
            :ARG1 (r2 / reserve-01
                  :mod (a2 / adequate
                        :duration (t / temporal-quantity
                              :quant 3
                              :unit (m / month)))))
      :ARG2 b)"
"(d / decide-01
      :ARG0 (ii / i)
      :ARG1 (s / start-01
            :ARG0 ii
            :ARG1 (r / read-up-02
                  :ARG0 ii
                  :ARG1 (p / plant
                        :mod (w / wild)
                        :ARG1-of (e / eat-01
                              :ARG1-of (p2 / possible-01)))))
      :ARG1-of (c / cause-01
            :ARG0 (l / lack-01
                  :ARG1 (a / and
                        :op1 (s2 / salad)
                        :op2 (v / vegetable))
                  :location (s3 / supermarket)
                  :time (y / yesterday))))"
"(n / need-01
      :ARG0 (ii / i)
      :ARG1 (r / roll
            :ARG0-of (c / contain-01
                  :ARG1 (p / paper
                        :purpose (t / toilet)))))"
"(c / cool-04
      :ARG1 (a / article
            :ARG0-of (t / talk-01
                  :ARG1 (t2 / trend
                        :mod (b / buy-01
                              :ARG0 (p / person
                                    :ARG0-of (c2 / consume-01)))
                        :source (c3 / company
                              :name (n / name
                                    :op1 ""Visual""
                                    :op2 ""Capitalist"")))))
      :degree (p2 / pretty))"
"(r / ready-01
      :ARG1 (ii / i)
      :ARG2 (g / go-02
            :ARG0 ii
            :ARG4 (s / store
                  :mod (g2 / grocery))
            :purpose (g3 / get-01
                  :ARG0 ii
                  :ARG1 (a / and
                        :op1 (p / paper
                              :purpose (t / toilet)
                              :quant (s2 / some))
                        :op2 (c / chicken)))))"
"(m / multi-sentence
      :snt1 (r / remember-01
            :polite +
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (b / be-temporally-at-91
                  :ARG1 (b2 / become-01
                        :ARG1 (a / and
                              :op1 (p / person
                                    :ARG0-of (t / tend-01
                                          :ARG1 (b3 / bar)))
                              :op2 (p2 / person
                                    :ARG0-of (s / steward-01
                                          :ARG1 (e / event
                                                :mod (s2 / sport)
                                                :mod (m2 / music))))
                              :op3 (p3 / person
                                    :ARG2-of (s3 / staff-01
                                          :ARG1 (s4 / shop
                                                :mod (b4 / bet-01))))
                              :op4 (p4 / person
                                    :ARG0-of (d / drive-01
                                          :ARG1 (v / van
                                                :mod (s5 / school))))
                              :op5 (e2 / et-cetera))
                        :ARG2 (e3 / employ-01
                              :polarity -
                              :ARG1 a)
                        :manner (s6 / sudden))
                  :ARG2 (b5 / before
                        :op1 (n / now)
                        :quant (t2 / temporal-quantity
                              :quant 1
                              :unit (w / week))))
            :time (r2 / rush-01
                  :ARG1 y
                  :ARG2 (a2 / and
                        :op1 (s7 / stock-up-02
                              :ARG0 y
                              :ARG1 (f / food))
                        :op2 (d2 / drive-01
                              :ARG0 y
                              :ARG1 (m3 / monetary-quantity
                                    :ARG2-of (p5 / price-01
                                          :ARG1 (c / commodity
                                                :mod (o / other)
                                                :mod (e4 / essential))))
                              :ARG5 (u / up)))))
      :snt2 (n2 / need-01
            :ARG0 (t3 / they
                  :mod (t4 / too))
            :ARG1 (f2 / food
                  :beneficiary (f3 / family
                        :poss t3))))"
"(t / threaten-01
      :ARG0 (c / combine-01
            :ARG1 (c2 / coronavirus
                  :ARG1-of (n / new-01))
            :ARG2 (p / price-01
                  :ARG1 (o / oil)
                  :ARG1-of (f / fall-01)))
      :ARG2 (c3 / country
            :name (n2 / name
                  :op1 ""Iraq"")))"
"(w / walk-01
      :ARG2 (t / trip-03
            :ARG1 (s / supermarket)
            :location (c / city
                  :name (n / name
                        :op1 ""Mumbai""))
            :time (p / pandemic
                  :mod (c2 / coronavirus)))
      :domain (t2 / this))"
(a / amr-empty)
"(m / multi-sentence
      :snt1 (o / open-up-03
            :ARG1 (s / supermarket
                  :mod (t / this)
                  :location (c / country
                        :name (n / name
                              :op1 ""UK"")))
            :time (e / early)
            :beneficiary (p / person
                  :ARG0-of (w / work-01
                        :ARG1 (h / healthcare))
                  :ARG1-of (e2 / exclusive-02)))
      :snt2 (l / line-up-02
            :ARG1 (p2 / person
                  :ARG1-of (e3 / employ-01)
                  :mod (a / all))
            :manner (g / give-01
                  :ARG0 p2
                  :ARG1 (a2 / and
                        :op1 (o2 / ovation-01
                              :ARG1 p2
                              :manner (s2 / stand-01))
                        :op2 (f / flower))
                  :ARG2 p2
                  :time (w2 / walk-01
                        :ARG0 p2
                        :destination s))))"
"(c / contrast-01
      :ARG1 (p / possible-01
            :ARG1 (e / entitle-01
                  :ARG1 (t / thing
                        :ARG1-of (r / refund-01
                              :ARG2 (y / you)))
                  :ARG2 y))
      :ARG2 (p2 / possible-01
            :ARG1 (d / disappoint-01
                  :ARG0 (t2 / thing
                        :ARG1-of (g / get-01
                              :ARG0 y
                              :ARG2 (c2 / company
                                    :mod (t3 / train))))
                  :ARG1 y))
      :condition (a / and
            :op1 (w / work-01
                  :ARG0 y
                  :location (h / home))
            :op2 (u / use-01
                  :polarity -
                  :ARG0 y
                  :ARG1 (t4 / ticket
                        :poss y
                        :mod (s / season)))))"
"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (b / bare-02
                  :ARG1 (s / shelf
                        :mod (s2 / supermarket))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (b2 / buy-01
                              :purpose (ii / isolate-01
                                    :ARG0 (p / product
                                          :name (n / name
                                                :op1 ""Covid-19"")))
                              :manner (p2 / panic-01))))
            :ARG2 (s3 / simple-02
                  :ARG1 (m2 / make-01
                        :ARG1 (b3 / butter)
                        :ARG2 (c3 / cream
                              :ARG1-of (d / double-01)))
                  :degree (q / quite)))
      :snt2 (a / and
            :op1 (m3 / mix-01
                  :mode imperative
                  :ARG0 (y / you)
                  :ARG1 (b4 / butter)
                  :location (b5 / beyond
                        :op1 (c4 / cream)))
            :op2 (s4 / strain-01
                  :mode imperative
                  :ARG0 y
                  :ARG1 b4
                  :manner (l / liquid)))
      :snt3 (s5 / split-01
            :ARG1 (ii2 / it)))"
"(b / beware-01
      :ARG1 (a / and
            :op1 (s / scam-01
                  :ARG0 (c / charity
                        :ARG1-of (f / fake-02)))
            :op2 (d / defraud-01
                  :ARG0 c)
            :ARG1-of (ii / increase-01)
            :topic (d2 / deliver-01)))"
"(s / start-01
      :ARG0 (o / organization
            :name (n / name
                  :op1 ""SHG""
                  :op2 ""Didis"")
            :location (c / city
                  :name (n2 / name
                        :op1 ""Kudumbashree"")
                  :part-of (s2 / state
                        :name (n3 / name
                              :op1 ""Kerala""))))
      :ARG1 (s3 / supermarket
            :ARG1-of (f / float-01)
            :purpose (b / bring-01
                  :ARG0 o
                  :ARG1 (c2 / commodity
                        :mod (e / essential))
                  :ARG2 (d / doorstep
                        :poss (p / person))
                  :time (l / lock-down-06
                        :time (d2 / date-entity
                              :month 11
                              :day 19))))
      :location (c3 / city
            :name (n4 / name
                  :op1 ""Alappuzha"")
            :part-of s2))"
"(m / multi-sentence
      :snt1 (ii / include-91
            :ARG1 (g / go-02
                  :ARG0 (w / we)
                  :ARG4 (s / supermarket)
                  :purpose (b / buy-01
                        :ARG0 w
                        :ARG1 (e / essential)))
            :ARG2 (t / thing
                  :quant (f / few)
                  :ARG1-of (e2 / encourage-01
                        :ARG2 (d / do-02
                              :ARG0 w
                              :mod (s2 / still)))))
      :snt2 (t2 / thing
            :manner-of (m2 / minimize-01
                  :ARG0 (y / you)
                  :ARG1 (r / risk-01
                        :ARG0 y))
            :location (h / here)))"
"(r / remain-01
      :ARG1 (t / thing
            :ARG2-of (p / price-01
                  :ARG1 (a / and
                        :op1 (p2 / petrol)
                        :op2 (d / diesel))))
      :ARG3 (c / change-01
            :polarity -
            :ARG1 t)
      :time (l / lockdown
            :mod (p3 / program
                  :name (n / name
                        :op1 ""COVID-19"")))
      :frequency (t2 / temporal-quantity
            :quant 24
            :unit (d2 / day)
            :mod (c2 / consecutive)))"
"(s / shop-01
      :mode imperative
      :ARG0 (y / you)
      :location (o / online)
      :time (s2 / stay-01
            :ARG1 y
            :ARG3 (h / home)
            :purpose (s3 / save-01
                  :ARG0 y
                  :ARG1 (l / life))))"
"(m / multi-sentence
      :snt1 (r / run-out-05
            :ARG1 (s / stock-01
                  :ARG0 (s2 / store
                        :mod (c / confectionary)
                        :quant (m2 / many)
                        :ARG2-of r))
            :time (t / today)
            :time (a / after
                  :op1 (l / lock-down-06
                        :duration (t2 / temporal-quantity
                              :quant 1
                              :unit (w / week)
                              :mod (o / only)))))
      :snt2 (h / have-condition-91
            :ARG1 (n / need-01
                  :ARG1 (p / plan-01
                        :ARG1 (c2 / chain-01
                              :ARG1 (s3 / supply-01
                                    :mod (e / emergency)))))
            :ARG2 (ii / increase-01
                  :ARG1 l)
            :ARG1-of (c3 / cause-01
                  :ARG0 (s4 / spread-02
                        :ARG0 (o2 / organization
                              :name (n2 / name
                                    :op1 ""COVID-19""))
                        :ARG1 (c4 / community)
                        :location (c5 / city
                              :part-of (c6 / class
                                    :mod c6
                                    :mod (s5 / slash
                                          :op1 ""B""
                                          :op2 ""C"")))
                        :mod (e2 / especially)))))"
"(g / good-02
      :ARG1 (a / and
            :op1 (h / have-03
                  :ARG0 (y / you)
                  :ARG1 (t / time
                        :purpose (a2 / and
                              :op1 (a3 / art)
                              :op2 (c / craft-01))
                        :quant (m / more)))
            :op2 (p / possible-01
                  :ARG1 (r / read-01
                        :ARG0 y
                        :ARG1 (b / book
                              :mod (e / electronics))))
            :op3 (w / walk-01
                  :ARG0 y
                  :ARG1 (d / dog
                        :poss y)
                  :quant (m2 / more))
            :op4 (s / save-01
                  :ARG0 y
                  :ARG1 (g2 / gas))
            :op5 (s2 / shop-01
                  :ARG0 y
                  :medium (o / online)))
      :ARG2 (s3 / stick-01
            :ARG1 y
            :ARG2 (h2 / home)))"
"(m / multi-sentence
      :snt1 (g / glad-02
            :ARG0 (o / obligate-01
                  :polarity -
                  :ARG1 (ii / i)
                  :ARG2 (g2 / go-02
                        :ARG0 ii
                        :ARG4 (s / supermarket)
                        :time (p / pandemic
                              :mod (c / coronavirus)))
                  :time (e / ever))
            :ARG1 ii)
      :snt2 (s2 / sound-01
            :ARG1 (t / they)
            :ARG2 (h / hell
                  :location (p2 / planet
                        :name (n / name
                              :op1 ""Earth"")))))"
"(m / multi-sentence
      :snt1 (c / charge-05
            :ARG1 (m2 / man)
            :ARG2 (w / wipe-01
                  :ARG0 m2
                  :ARG1 (s / spit-01
                        :ARG0 m2)
                  :ARG2 (g / good
                        :mod (s2 / supermarket))
                  :manner (p / purpose)))
      :snt2 (a / and
            :op1 (a2 / apprehend-01
                  :ARG1 (p2 / person
                        :ARG2-of (s3 / suspect-01)
                        :age (t / temporal-quantity
                              :quant 20
                              :unit (y / year)))
                  :location (b / branch
                        :part-of (c2 / company
                              :name (n / name
                                    :op1 ""Lidl""))
                        :location (c3 / city
                              :name (n2 / name
                                    :op1 ""Bridport""))))
            :op2 (t2 / think-01
                  :polarity -
                  :ARG1 (h / have-03
                        :ARG0 p2
                        :ARG1 (p3 / product
                              :name (n3 / name
                                    :op1 ""Covid""
                                    :op2 19))))))"
"(a / arrest-01
      :ARG1 (w / woman
            :location (c / city-district
                  :name (n / name
                        :op1 ""Hanover""
                        :op2 ""Township"")))
      :ARG2 (c2 / cough-up-03
            :ARG0 w
            :ARG1 (f / food
                  :ARG1-of (w2 / worth-01
                        :ARG2 (m / monetary-quantity
                              :quant 35000
                              :unit (d / dollar))))
            :location (s / supermarket
                  :name (n2 / name
                        :op1 ""Gerrity's""
                        :op2 ""Supermarket""))))"
"(h / have-concession-91
      :ARG1 (p / possible-01
            :ARG1 (f / find-01
                  :ARG1 (l / life
                        :ARG1-of (n / normal-02))
                  :mod (s / still)))
      :ARG2 (ii / increase-01
            :ARG1 (a / anxiety
                  :topic (v / virus
                        :mod (c / coronavirus)))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (u / up-02
                  :ARG1 (d / demand-01
                        :ARG1 (m2 / milk
                              :quant (v / volume-quantity
                                    :quant ""1/2""
                                    :unit (g / gallon)))
                        :ARG1-of (g2 / good-02)))
            :op2 (g3 / get-05
                  :ARG1 m2
                  :ARG2 (s / store)))
      :snt2 (w / worry-02
            :ARG0 (p / person
                  :ARG0-of (f / farm-01))
            :ARG1 (a2 / and
                  :op1 (g4 / get-01
                        :ARG0 p
                        :ARG1 (t / thing
                              :ARG1-of (s2 / supply-01)
                              :ARG1-of (n / need-01)))
                  :op2 (k / keep-01
                        :ARG0 p
                        :ARG1 (h / healthy
                              :domain (w2 / workforce
                                    :poss p)))
                  :op3 (g5 / get-05
                        :ARG0 p
                        :ARG1 (m3 / milk)
                        :ARG2 (s3 / store))))
      :snt3 (t2 / tank-01
            :ARG0 (m4 / monetary-quantity
                  :ARG2-of (p2 / price-01
                        :ARG1 (m5 / milk))
                  :ARG1-of (b / bad-07))
            :ARG1 (u2 / up-02
                  :ARG1 m4
                  :degree (w3 / way
                        :degree (w4 / way)))))"
"(h / help-01
      :polarity -
      :ARG0 (w / wear-01
            :ARG1 (a / and
                  :op1 (m / mask)
                  :op2 (g / glove)))
      :condition (c / clean-04
            :polarity -
            :ARG1 (s / surface
                  :location-of (c2 / check-01
                        :mod (s2 / self)))))"
"(m / multi-sentence
      :snt1 (p / post-scriptum
            :domain (m2 / make-02
                  :ARG0 (a / and
                        :op1 (p2 / pick-up-04
                              :ARG0 (y / you)
                              :ARG1 (g / glove
                                    :ARG1-of (u / use-01))
                              :ARG2 (f / floor
                                    :part-of (s / store
                                          :mod (g2 / grocery)
                                          :ARG1-of (l / local-02)
                                          :poss y)))
                        :op2 (a2 / add-02
                              :ARG0 y
                              :ARG1 g
                              :ARG2 (l2 / list-01
                                    :ARG1 (t / thing
                                          :ARG1-of (d / do-02
                                                :ARG0 y)))))
                  :ARG1 (h / human
                        :mod (c / crappy)
                        :domain y)))
      :snt2 (p3 / person
            :name (n / name
                  :op1 ""Covid_19""))
      :snt3 (u2 / url-entity
            :value ""https://t.co/Bl1LRbPU2U""))"
"(m / multi-sentence
      :snt1 (h / have-condition-91
            :ARG1 (d / depress-01
                  :ARG1 (w / we)
                  :duration (m2 / multiple
                        :op1 (t / temporal-quantity
                              :quant 1
                              :unit (y / year))))
            :ARG2 (ii / intervene-01
                  :polarity -))
      :snt2 (a / and
            :op1 (s / spend-01
                  :ARG0 (p / person
                        :ARG0-of (c / consume-01))
                  :ARG1-of (ii2 / include-91
                        :ARG2 (p2 / product
                              :ARG1-of (g / gross-03)
                              :mod (d2 / domestic))
                        :ARG3 (n / nearly
                              :op1 ""3/4"")))
            :op2 (d3 / drown-01
                  :ARG0 (a2 / and
                        :op1 (c2 / card
                              :mod (c3 / credit-01))
                        :op2 (m3 / medicine))
                  :ARG1 (p3 / person
                        :mod (c4 / country
                              :name (n2 / name
                                    :op1 ""America""))
                        :quant (o / over
                              :op1 1000000)
                        :ARG1-of (e / employ-01
                              :polarity -
                              :time (s2 / so-far)))
                  :time (g2 / go-02
                        :ARG0 p2
                        :name (n3 / name
                              :op1 ""Covid-19"")))))"
"(c / create-01
      :ARG0 (p / publication
            :name (n / name
                  :op1 ""COVID-19"")
            :ARG1-of (ii / include-91
                  :ARG2 (p2 / publication
                        :name (n2 / name
                              :op1 ""Consumer""
                              :op2 ""Reports""))))
      :ARG1 (l / list
            :consist-of (p3 / product
                  :ARG0-of (h / help-01
                        :ARG1 (d / destroy-01
                              :ARG1 (c2 / coronavirus))
                        :ARG1-of (p4 / possible-01)))
            :ARG1-of (c3 / condense-01)))"
"(r / relieve-01
      :ARG1 (p / person)
      :time (f / find-out-03
            :ARG0 p
            :ARG1 (s / shelf
                  :part-of (s2 / supermarket)
                  :ARG1-of (s3 / stock-01
                        :ARG1-of (f2 / full-09)))))"
"(s / speak-01
      :ARG0 (c / contrast-01
            :ARG1 (s2 / shock-01
                  :ARG0 (d / demand-01
                        :ARG1 (f / food)))
            :ARG2 (ii / increase-01
                  :polarity -
                  :ARG1 (s3 / starve-01)
                  :location (c2 / country
                        :mod (t / this))))
      :ARG1 (e / excessive-02
            :ARG1 (l / life
                  :poss (w / we))
            :time (b / before
                  :op1 (e2 / event
                        :name (n / name
                              :op1 ""Covid-19"")))
            :degree (s4 / so)))"
"(d / debate-01
      :ARG0 (p / politician
            :location (g / government-organization
                  :name (n / name
                        :op1 ""Capitol""
                        :op2 ""Hill"")))
      :ARG1 (r / recommend-01
            :ARG1 (g2 / get-01
                  :ARG0 (f / folk
                        :mod (c / common))
                  :ARG1 (o / or
                        :op1 (m / monetary-quantity
                              :quant 1000
                              :unit (d2 / dollar))
                        :op2 (m2 / monetary-quantity
                              :quant 600
                              :unit (d3 / dollar)))
                  :time (p2 / pandemic)))
      :time (a / and
            :op1 (m3 / make-05
                  :ARG0 (p3 / person
                        :ARG0-of (h / have-org-role-91
                              :ARG2 (s / senator)))
                  :ARG1 (m4 / multiple
                        :op1 (m5 / monetary-quantity
                              :quant 1000000
                              :unit (d4 / dollar)))
                  :ARG2 (t / trade-01
                        :mod (ii / insider)))
            :op2 (d5 / double-01
                  :ARG0 (c2 / company
                        :name (n2 / name
                              :op1 ""Pharma""))
                  :ARG1 (t2 / thing
                        :ARG2-of (p4 / price-01
                              :ARG1 (v / vaccine))))))"
"(c / come-up-11
      :ARG0 (a / and
            :op1 (c2 / chain
                  :mod (s / store
                        :mod (g / grocery)))
            :op2 (p / person
                  :ARG0-of (r / retail-01)
                  :mod (o / other)))
      :ARG1 (w / way
            :instrument-of (e / ease-02
                  :ARG0 a
                  :ARG1 (f / fear-01
                        :ARG0 (c3 / citizen))
                  :ARG1-of (m / mean-01
                        :ARG2 (r2 / reserve-01
                              :ARG1 (t / time
                                    :time-of (s2 / shop-01))
                              :ARG2 c3
                              :manner (e2 / exclusive-02))))
            :time (d / deal-01
                  :ARG0 c3
                  :ARG1 (a2 / anxiety
                        :topic (c4 / coronavirus)))))"
(a / amr-empty)
"(s / sanitize-01
      :ARG0 (p / person
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (ii / i)
                  :ARG2 (b / brother)))
      :ARG1 (c / car)
      :mod (w / way
            :mod (c2 / country
                  :name (n / name
                        :op1 ""India"")))
      :time (a / after
            :op1 (c3 / come-01
                  :ARG1 p
                  :ARG3 (s2 / store
                        :mod (g / grocery))
                  :direction (b2 / back))))"
"(c / catch-03
      :ARG1 (p / police
            :mod (c2 / city
                  :name (n / name
                        :op1 ""Gweru"")))
      :ARG2 (b / beat-up-05
            :ARG0 p
            :ARG1 (p2 / person)
            :location (o / outside
                  :op1 (s / supermarket
                        :name (n2 / name
                              :op1 ""Simeac""
                              :op2 ""Supermarket"")))
            :purpose (e / enforce-01
                  :ARG0 p
                  :ARG1 (s2 / shut-down-05)))
      :medium (c3 / camera)
      :ARG1-of (r / regardless-91
            :ARG2 (a / announce-01
                  :ARG0 (g / government-organization
                        :ARG0-of (g2 / govern-01))
                  :ARG1 (f / free-04
                        :ARG1 p2
                        :ARG3 (s3 / shop-01
                              :ARG0 p2)
                        :mod (s4 / still)))))"
(a / amr-empty)
(a / amr-empty)
"(d / drop-01
      :ARG1 (t / thing
            :ARG2-of (p / price-01
                  :ARG1 (g / gas)))
      :location (s / state
            :name (n / name
                  :op1 ""Pennsylvania""))
      :time (s2 / spread-02
            :ARG1 (c / coronavirus)))"
"(r / report-01
      :ARG0 (w / we)
      :ARG1 (o / offset-01
            :polarity -
            :ARG0 (a / and
                  :op1 (m / migrate-01
                        :ARG2 (c / commerce
                              :mod (e / electronics)))
                  :op2 (r2 / retain-01
                        :ARG1 (c2 / customer)))
            :ARG1 (ii / impact-01
                  :ARG0 (d / drop-01
                        :ARG1 (d2 / demand-01
                              :ARG1 (r3 / retail-01))
                        :time (c3 / close-01
                              :ARG1 (s / store)
                              :location (c4 / continent
                                    :name (n / name
                                          :op1 ""North""
                                          :op2 ""America""))))
                  :ARG1-of (n2 / negative-02)))
      :time (t / today))"
"(m / multi-sentence
      :snt1 (c / collect-01
            :ARG0 (w / we)
            :ARG1 (a / article
                  :poss w
                  :topic (o / organization
                        :name (n / name
                              :op1 ""COVID19"")))
            :location (p / place
                  :quant 1))
      :snt2 (a2 / add-02
            :ARG0 (w2 / we)
            :ARG2 (p2 / page)
            :time (c2 / come-to-hand-14
                  :ARG1 (ii / information
                        :ARG1-of (n2 / new-01)
                        :beneficiary (p3 / person
                              :ARG0-of (c3 / consume-01))))))"
"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (s / store
                  :mod (v / village)
                  :ARG1-of (l / local-02)
                  :poss (ii / i)
                  :domain (t / this))
            :ARG2 (s2 / supermarket
                  :mod (b / behemoth)
                  :domain (t2 / this)))
      :snt2 (l2 / look-02
            :ARG0 (a / approach-02
                  :ARG1 (b2 / business)
                  :ARG1-of (r / responsible-02))
            :ARG1 (t3 / this))
      :snt3 (c2 / call-03
            :ARG0 (ii2 / i)
            :ARG1 (h / have-03
                  :ARG0 (s3 / supermarket)
                  :ARG1 (p / policy-01
                        :ARG1 (t4 / traffic
                              :mod (o / one-way)
                              :mod (o2 / only))
                        :location (a2 / aisle)))
            :mod (a3 / also)))"
"(m / multi-sentence
      :snt1 (f / face-01
            :ARG0 (c / chain
                  :mod (c2 / cannabis))
            :ARG1 (c3 / challenge-01
                  :ARG0 (l / law
                        :name (n / name
                              :op1 ""COVID-19""))))
      :snt2 (p / publication
            :name (n2 / name
                  :op1 ""Chain""
                  :op2 ""Store""
                  :op3 ""Age""))
      :snt3 (a / and
            :op1 (c4 / commerce)
            :op2 (c5 / company
                  :name (n3 / name
                        :op1 ""CX""))
            :op3 (a2 / acquire-01)
            :op4 (r / retail-01))
      :medium (u / url-entity
            :value ""https://t.co/P7sDdSvYJl""))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (p / post-scriptum)
            :op2 (e / et-cetera))
      :snt2 (n / need-01
            :ARG1 (r / report-01
                  :ARG1 (t / test-01
                        :ARG1 (p2 / person
                              :quant 2
                              :ARG1-of (e2 / employ-01
                                    :ARG0 (s / supermarket)))
                        :ARG2 (p3 / positive)
                        :ARG3 (l / law
                              :name (n2 / name
                                    :op1 ""COVID-19""))))
            :polarity (a2 / amr-unknown)
            :ARG1-of (r2 / real-04))
      :snt3 (s2 / serve-01
            :ARG0 (t2 / this)
            :ARG1 (a3 / amr-unknown)
            :ARG2 (t3 / thing
                  :ARG2-of (e3 / except-01
                        :ARG1 (f / frighten-01
                              :ARG0 t2
                              :ARG1 (p4 / person)))))
      :snt4 (r3 / report-01
            :ARG0 (y / you)
            :ARG1 (n3 / number
                  :quant-of (c / case-04
                        :location (b / business
                              :mod (o / other))
                        :example (s3 / station
                              :mod (g / gas))
                        :example (s4 / shop
                              :mod (c2 / coffee))
                        :example (e4 / et-cetera)))))"
"(h / hold-04
      :ARG0 (o / office
            :poss (a / attorney
                  :mod (g / general))
            :location (s / state
                  :name (n / name
                        :op1 ""West""
                        :op2 ""Virginia"")))
      :ARG1 (c / conference
            :mod (p / press))
      :time (s2 / soon)
      :purpose (a2 / address-02
            :ARG0 o
            :ARG1 (ii / issue-02
                  :ARG0 (p2 / person
                        :ARG0-of (c2 / consume-01))
                  :ARG1-of (r / relate-01
                        :ARG2 (o2 / outbreak-29
                              :ARG1 (d / disease
                                    :name (n2 / name
                                          :op1 ""COVID-19"")))))))"
"(a / affect-01
      :ARG0 (c / coronavirus)
      :ARG1 (c2 / category
            :quant 100
            :ARG1-of (g / grow-01
                  :ARG1-of (h / have-degree-91
                        :ARG2 (f / fast-02
                              :ARG1 g)
                        :ARG3 (m / most)))
            :ARG1-of (d / decline-01)
            :mod (t / top)
            :location (c3 / commerce)))"
"(m / multi-sentence
      :snt1 (a / absurd
            :domain (a2 / announce-01
                  :medium (p / PA)
                  :location (s / supermarket
                        :name (n / name
                              :op1 ""Woolworths""
                              :op2 ""Marrickville""
                              :op3 ""Metro""))
                  :ARG0-of (t / tell-01
                        :ARG1 (m2 / maintain-01
                              :ARG0 (p2 / person
                                    :ARG0-of (s2 / shop-01))
                              :ARG1 (d / distance-01
                                    :ARG1 p2))
                        :ARG2 p2)))
      :snt2 (h / have-quant-91
            :polarity -
            :ARG1 (r / room
                  :location (a3 / aisle
                        :part-of (s3 / supermarket)))
            :ARG3 (e / enough)
            :mod (j / just)))"
"(r / recommend-01
      :ARG1 (s / slash-02
            :ARG0 (p / person
                  :ARG0-of (m / make-01
                        :ARG1 (f / film))
                  :ARG0-of (d / depend-01
                        :polarity -))
            :ARG1 (m2 / monetary-quantity
                  :ARG2-of (p2 / price-01
                        :ARG1 (s2 / submit-01
                              :ARG0 p)))
            :ARG1-of (c / cause-01
                  :ARG0 (p3 / pandemic
                        :ord (o / ordinal-entity
                              :value 19)))))"
"(m / multi-sentence
      :snt1 (ii / important-01
            :ARG1 (s / safe-01)
            :time (o / or
                  :op1 (s2 / shop-01
                        :medium (o2 / online))
                  :op2 (t / trip-03
                        :ARG1 (s3 / store
                              :mod (g / grocery))))
            :mod (s4 / still))
      :snt2 (c / contrast-01
            :ARG1 (t2 / take-advantage-02
                  :ARG0 (p / person
                        :ARG0-of (d / defraud-01))
                  :ARG1 (v / virus
                        :mod (c2 / coronavirus)))
            :ARG2 (p2 / possible-01
                  :ARG1 (a / avoid-01
                        :ARG1 v
                        :instrument (p3 / product
                              :name (n / name
                                    :op1 ""CardValet""))))))"
"(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (t / take-01
                  :ARG0 (p2 / person
                        :ARG0-of (s / shop-01)
                        :location (s2 / state
                              :name (n / name
                                    :op1 ""New""
                                    :op2 ""Hampshire"")))
                  :ARG1 (b / bag
                        :ARG1-of (r / reuse-01
                              :ARG1-of p))
                  :poss p2)
            :ARG3 (o / or
                  :op1 (s3 / supermarket)
                  :op2 (s4 / store
                        :mod (o2 / other))))
      :time (n2 / no-longer)
      :snt2 (t2 / think-01
            :ARG0 (y / you)
            :ARG1 (ii / idea
                  :ARG1-of (g / good-02)
                  :domain (t3 / this))
            :polarity (a / amr-unknown)))"
"(m / multi-sentence
      :snt1 (a / allow-01
            :li 1
            :ARG1 (b / buy-01
                  :ARG0 (p / person)
                  :ARG1 (t / thing
                        :ARG1-of (n / need-01)
                        :quant (a2 / amount
                              :ARG1-of (l / limit-01))
                        :frequency (r / rate-entity-91
                              :ARG3 (t2 / temporal-quantity
                                    :quant 1
                                    :unit (d / day))))
                  :ARG2 (s / supermarket))
            :mod (o / only))
      :snt2 (r2 / recommend-01
            :li 3
            :ARG1 (g / give-01
                  :ARG0 (g2 / government-organization
                        :ARG0-of (g3 / govern-01))
                  :ARG1 (m2 / money
                        :ARG0-of (r3 / relieve-01))
                  :ARG2 (p2 / person
                        :ARG0-of (h / have-03
                              :ARG1 (j / job
                                    :ARG0-of (p3 / pay-01
                                          :ARG2 p2
                                          :frequency (r4 / rate-entity-91
                                                :ARG3 (t3 / temporal-quantity
                                                      :quant 1
                                                      :unit (d2 / day)))))))))
      :snt3 (r5 / recommend-01
            :ARG1 (l2 / lock-down-06
                  :ARG1 (a3 / area
                        :ARG1-of (r6 / risk-01
                              :ARG1-of (h2 / high-02))))))"
"(ii / increase-01
      :ARG1 (p / potential
            :purpose (r / return-06
                  :time (f / future)))
      :time (f2 / fall-01
            :ARG1 (p2 / price-01
                  :ARG1 (s / stock))))"
"(m / multi-sentence
      :snt1 (h / hear-01
            :ARG0 (ii / i)
            :ARG1 (s / story
                  :topic (o / obligate-01
                        :ARG1 (p / person
                              :ARG0-of (d / drive-01
                                    :ARG1 (s2 / supermarket))
                              :ARG0-of (d2 / deliver-01))
                        :ARG2 (c / call-02
                              :ARG0 p
                              :ARG1 (p2 / police))
                        :ARG1-of (c2 / cause-01
                              :ARG0 (f / follow-01
                                    :ARG0 (p3 / person)
                                    :ARG1 p
                                    :purpose (s3 / see-01
                                          :ARG0 p3
                                          :ARG1 (t / thing
                                                :location (w / wagon
                                                      :poss p))))))))
      :snt2 (a / and
            :op1 (t2 / think-01
                  :ARG0 (p4 / person
                        :quant 1
                        :ARG0-of (d3 / drive-01))
                  :ARG1 (r / rob-01
                        :ARG1 p4
                        :location (r2 / road
                              :name (n / name
                                    :op1 ""A19"")
                              :ARG1-of (n2 / near-02
                                    :ARG2 (c3 / city
                                          :name (n3 / name
                                                :op1 ""Sunderland""))))))
            :op2 (o2 / obligate-01
                  :ARG1 p4
                  :ARG2 (g / get-01
                        :ARG0 p4
                        :ARG1 (e / escort
                              :mod (p5 / police)))))
      :snt3 (w2 / wonder-01
            :ARG0 (ii2 / i)
            :ARG1 t
            :ARG1-of (g2 / go-on-15)))"
"(m / multi-sentence
      :snt1 (o / overpay-01
            :polarity -
            :mode imperative
            :ARG0 (y / you)
            :ARG3 (o2 / or
                  :op1 (g / good
                        :mod (h / household)
                        :mod (a / any)
                        :ARG1-of (p / personal-02))
                  :op2 (s / serve-02
                        :mod a)
                  :ARG1-of (n / need-01
                        :purpose (o3 / or
                              :op1 (t / treat-03
                                    :ARG2 (d / disease
                                          :name (n2 / name
                                                :op1 ""COVID""
                                                :op2 19)
                                          :mod (c / coronavirus)))
                              :op2 (l / limit-01
                                    :ARG1 (s2 / spread-02
                                          :ARG1 d))))))
      :snt2 (l2 / legal-02
            :polarity -
            :ARG1 (ii / increase-01
                  :ARG1 (t2 / thing
                        :ARG2-of (p2 / price-01
                              :ARG1 (a2 / and
                                    :op1 g
                                    :op2 (s3 / serve-02)
                                    :mod (t3 / this))))
                  :ARG2 (a3 / at-least
                        :op1 (p3 / percentage-entity
                              :value 10)))
            :ARG1-of (s4 / say-01
                  :ARG0 (l3 / law
                        :name n2
                        :op1 ""Consumer""
                        :op2 ""Protection""
                        :op3 ""Law"")
                  :poss (c2 / city))))"
"(m / multi-sentence
      :snt1 (a / agriculture)
      :snt2 (s / see-01
            :ARG0 (p / person
                  :ARG0-of (f / farm-01))
            :ARG1 (a2 / and
                  :op1 (r / rot-01
                        :ARG1 (p2 / produce
                              :poss p)
                        :location (f2 / field))
                  :op2 (w / wash-01
                        :ARG1 (d / dairy)
                        :ARG2 (d2 / drain)
                        :direction (d3 / down)))
            :time (r2 / rush-01
                  :ARG1 p
                  :ARG2 (a3 / and
                        :op1 (f3 / find-01
                              :ARG0 p
                              :ARG1 (a4 / area
                                    :ARG1-of (d4 / demand-01)))
                        :op2 (p3 / prevent-01
                              :ARG0 p
                              :ARG1 (c / close-01))))))"
"(p / person
      :name (n / name
            :op1 ""Daniel""
            :op2 ""Dale"")
      :time (d / date-entity
            :day 28
            :month 5
            :year 2020))"
"(c / contrast-01
      :ARG1 (m / make-05
            :ARG0 (p / person
                  :ARG0-of (w / work-01
                        :ARG1 (g / grocery))
                  :location (s / state
                        :name (n / name
                              :op1 ""Michigan""))
                  :ARG0-of (s2 / serve-02
                        :ARG1 (c2 / customer)
                        :time (p2 / pandemic
                              :mod (c3 / coronavirus))))
            :ARG1 (m2 / money
                  :quant (l / lot))
            :ARG2 (o / overtime))
      :ARG2 (w2 / wonder-01
            :ARG0 p
            :ARG1 (t / truth-value
                  :polarity-of (p3 / put-03
                        :ARG0 (j / job
                              :poss p)
                        :ARG1 p
                        :ARG2 (r / risk-01
                              :ARG0 p
                              :ARG2 (g2 / get-01
                                    :ARG0 p
                                    :ARG1 (v / virus))))
                  :mod (a / also))))"
"(c / contrast-01
      :ARG1 (s / stockpile-01
            :polarity -
            :ARG0 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (ii / i)
                        :ARG2 (n / nana))
                  :age (t / temporal-quantity
                        :quant 79
                        :unit (y / year)))
            :ARG1 (o / or
                  :op1 (f / food)
                  :op2 (r / roll
                        :purpose (t2 / toilet))))
      :ARG2 (s2 / stock-up-02
            :ARG0 p
            :ARG1 (c2 / cupboard
                  :poss p)
            :ARG2 (h2 / horlicks
                  :quant (v / volume-quantity
                        :quant 2
                        :unit (t3 / tub
                              :ARG1-of (f2 / full-09))))))"
"(o / offer-01
      :ARG0 (r / restaurant
            :location (s / state
                  :name (n / name
                        :op1 ""Victoria"")))
      :ARG1 (s2 / stock
            :consist-of (f / food)
            :mod (e / entire)
            :poss r)
      :ARG3 (p / person
            :ARG2-of (s3 / staff-01))
      :time (c / close-01
            :ARG1 r
            :ARG1-of (c2 / cause-01
                  :ARG0 (ii / incident
                        :name (n2 / name
                              :op1 ""COVID-19"")))))"
"(u / urge-01
      :ARG1 (p / person
            :mod (c / city
                  :name (n / name
                        :op1 ""New""
                        :op2 ""York"")))
      :ARG2 (o / or
            :op1 (c2 / call-02
                  :ARG0 p
                  :ARG1 (p2 / phone-number-entity
                        :value ""1-800-697-1220""))
            :op2 (c3 / complete-01
                  :ARG0 p
                  :ARG1 (f / form
                        :mod (c4 / complain-01
                              :ARG0 (p3 / person
                                    :ARG0-of (c5 / consume-01)))))
            :purpose (r / report-01
                  :ARG0 p
                  :ARG1 (ii / increase-01
                        :ARG1 (p4 / price-01
                              :ARG1 (p5 / product
                                    :example (a / and
                                          :op1 (s / supply-01
                                                :ARG1 (c6 / clean-01
                                                      :mod (h / household)))
                                          :op2 p5
                                          :ARG0-of (s2 / sanitize-01
                                                :ARG1 (h2 / hand))))))
                  :ARG2 (f2 / fair-01
                        :polarity -)))
      :time (o2 / outbreak-29
            :name (n2 / name
                  :op1 ""COVID-19"")))"
"(m / multi-sentence
      :snt1 (p / person
            :ARG0-of (d / drive-01
                  :ARG1 (d2 / deliver-01
                        :ARG0 p
                        :ARG1 (f / food)))
            :domain (g / group
                  :mod (a / another)
                  :consist-of (p2 / person)
                  :location (f2 / front
                        :part-of (l / line
                              :name (n / name
                                    :op1 ""COVID-19"")))))
      :snt2 (l2 / leave-13
            :ARG0 (ii / increase-01
                  :ARG1 (d3 / demand-01)
                  :mod (h / huge))
            :ARG1 (w / worry-01
                  :ARG0 (s / safe-01
                        :ARG1 (t / they
                              :quant (m2 / many)
                              :ARG1-of w)))))"
"(b / be-temporally-at-91
      :ARG1 (h / hour
            :mod (s / store
                  :mod (g / grocery))
            :beneficiary (a / and
                  :op1 (p / person
                        :ARG1-of (c / compromise-02
                              :ARG2 (ii / immunocompromised-02
                                    :ARG1 p)))
                  :op2 (p2 / person
                        :mod (e / elderly)))
            :location (c2 / city
                  :name (n / name
                        :op1 ""Seattle"")))
      :ARG2 (d / date-interval
            :op1 (d2 / date-entity
                  :time ""7:00"")
            :op2 (d3 / date-entity
                  :time ""8:00"")))"
"(c / come-up-11
      :ARG0 (s / supermarket
            :mod (c2 / country
                  :name (n / name
                        :op1 ""Denmark"")))
      :ARG1 (t / trick-01
            :ARG2 (p / price-01)
            :ARG1-of (b / brilliant-01)
            :purpose (s2 / stop-01
                  :ARG0 s
                  :ARG1 (h / hoard-01
                        :ARG1 (s3 / sanitize-01
                              :ARG1 (h2 / hand))))))"
"(w / work-01
      :mod (s / still)
      :location (c / city
            :name (n / name
                  :op1 ""Olympia""))
      :time (f / fight-01
            :ARG1 (c2 / coronavirus)
            :ARG1-of (g / go-on-15)
            :ARG0-of (ii / impact-01
                  :ARG1 (p / policy-01
                        :ARG0 (s2 / state
                              :name (n2 / name
                                    :op1 ""Washington""))
                        :topic (a / and
                              :op1 (m / monetary-quantity
                                    :ARG2-of (p2 / price-01
                                          :ARG1 (ii2 / insulin)))
                              :op2 (t / tax
                                    :ARG1-of (p3 / pink-04))
                              :op3 (m2 / more)))
                  :time (t2 / time
                        :mod (t3 / this)))))"
"(m / multi-sentence
      :snt1 (h / have-03
            :ARG0 (m2 / mask
                  :mod (t / this))
            :ARG1 (d / date
                  :mod (e / expire-01
                        :ARG1 m2))
            :polarity (a / amr-unknown))
      :snt2 (p / possible-01
            :ARG1 (s / sanitize-01
                  :ARG0 (y / you)
                  :ARG1 (m3 / mask)
                  :manner (a2 / amr-unknown))
            :condition (b / buy-01
                  :ARG0 (e2 / everyone
                        :location (c / city
                              :poss y))
                  :ARG1 (p2 / product
                        :ARG0-of (s2 / sanitize-01
                              :ARG1 (h2 / hand))
                        :mod (a3 / all))))
      :snt3 (d2 / damage-01
            :ARG0 (b2 / bleach-01)
            :ARG1 (f / fiber)
            :polarity (a4 / amr-unknown)))"
"(p / place
      :domain (t / this)
      :location-of (l / likely-01
            :ARG1 (g / get-01
                  :ARG0 (y / you)
                  :ARG1 (o / or
                        :op1 (d / disease
                              :name (n / name
                                    :op1 ""COD""))
                        :op2 (d2 / disease
                              :name (n2 / name
                                    :op1 ""influenza"")
                              :ARG1-of (r / regular-03))
                        :op3 (c / cold))
                  :ARG2 (s / store
                        :mod (g2 / grocery)))
            :ARG1-of (c2 / cause-01
                  :ARG0 (a / and
                        :op1 (n3 / need-01
                              :ARG0 (w / we
                                    :mod (a2 / all))
                              :ARG1 (f / food))
                        :op2 (o2 / obligate-01
                              :ARG1 y
                              :ARG2 (b / be-located-at-91
                                    :ARG1 y
                                    :ARG2 (a3 / around
                                          :op1 (p2 / person
                                                :quant (l2 / lot)))))))
            :ARG2-of (h / have-degree-91
                  :ARG1 g
                  :ARG3 (m / most))))"
"(n / need-01
      :ARG0 (w / we)
      :ARG1 (r / rethink-01
            :ARG0 w
            :ARG1 (m / model-01
                  :ARG0 w
                  :ARG1 (e / economy))
            :manner (r2 / rapid))
      :ARG1-of (c / cause-01
            :ARG0 (v / virus
                  :mod (c2 / coronavirus))))"
"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (w / want-01
                  :ARG0 (w2 / we)
                  :ARG1 (r / refund-01
                        :ARG2 w2
                        :ARG3 (f / fly-01
                              :ARG1-of (c2 / cancel-01
                                    :ARG1-of (c3 / cause-01
                                          :ARG0 (c4 / company
                                                :name (n / name
                                                      :op1 ""Covid-19"")))))
                        :mod (f2 / full)))
            :ARG2 (w3 / want-01
                  :polarity -
                  :ARG0 w2
                  :ARG1 (r2 / refund-01
                        :ARG2 w2
                        :mod (v / voucher))))
      :snt2 (c5 / complain-01
            :ARG0 (w4 / we)
            :ARG2 (a / authority
                  :mod (c6 / country
                        :name (n2 / name
                              :op1 ""Italy""))
                  :ARG0-of (r3 / responsible-01
                        :ARG1 (p / protect-01
                              :ARG1 (p2 / person
                                    :ARG0-of (c7 / consume-01)))))
            :condition (r4 / receive-01
                  :polarity -
                  :ARG0 w4
                  :ARG1 (r5 / refund-01
                        :ARG2 w4))))"
"(t / tip-05
      :quant 5
      :ARG0 (p / psychologist
            :mod (p2 / person
                  :ARG0-of (c / consume-01)))
      :ARG2 (r / recommend-01
            :ARG1 (r2 / respond-01
                  :ARG0 (b / brand)
                  :ARG1 (c2 / coronavirus)))
      :location (h / here))"
"(p / possible-01
      :ARG1 (h / help-01
            :ARG0 (y / you
                  :part (h2 / hand))
            :ARG1 (s / stop-01
                  :ARG0 y
                  :ARG1 (s2 / spread-02
                        :ARG1 (d / disease
                              :name (n / name
                                    :op1 ""coronavirus"")))
                  :manner (p2 / precaution-02
                        :ARG0 y
                        :example (a / and
                              :op1 (w / wash-01
                                    :ARG0 y
                                    :ARG1 h2)
                              :op2 (a2 / avoid-01
                                    :ARG0 y
                                    :ARG1 (c / contact-01
                                          :ARG0 y
                                          :ARG1 (p3 / person
                                                :ARG1-of (s3 / sick-05))
                                          :ARG1-of (c2 / close-10))))
                        :ARG1-of (s4 / simple-02)))))"
"(m / multi-sentence
      :snt1 (s / set-08
            :ARG1 (w / we)
            :ARG2 (h / hit-02
                  :ARG0 w
                  :ARG1 (r / road)
                  :time (t / today
                        :day 11
                        :month 4
                        :year 2020)
                  :purpose (r2 / reach-01
                        :ARG0 w
                        :ARG1 (f / family
                              :quant 200))))
      :snt2 (s2 / share-01
            :ARG0 (w2 / we)
            :ARG1 (u / update-02)
            :time (a / after
                  :op1 (n / now))
            :time (d / day)))"
"(c / concern-01
      :ARG0 (ii / impact-01
            :ARG0 (l / law
                  :name (n / name
                        :op1 ""COVID""
                        :op2 19))
            :ARG1 (r / right-05
                  :ARG1 (p / person
                        :ARG2-of (s / staff-01
                              :ARG1 (s2 / shop)))))
      :ARG1 (p2 / person
            :ARG1-of (e / expert-01
                  :ARG2 l)))"
"(m / multi-sentence
      :snt1 (s / shake-01
            :ARG0 (e / earthquake
                  :quant (s2 / seismic-quantity
                        :quant 4.9))
            :ARG1 (a / area
                  :ARG1-of (n / near-02
                        :ARG2 (c / county
                              :name (n2 / name
                                    :op1 ""Riverside""
                                    :op2 ""County""))))
            :time (l / late
                  :op1 (d / date-entity
                        :weekday (f / friday))))
      :snt2 (d2 / damage-01
            :polarity -
            :ARG0 (a2 / and
                  :op1 (b / bare-02
                        :ARG1 (s3 / shelf
                              :part-of (s4 / supermarket)))
                  :op2 (e2 / empty-02
                        :ARG1 (a3 / and
                              :op1 (b2 / bar)
                              :op2 (r / restaurant)
                              :op3 (c2 / church)
                              :op4 (t / theater)))))
      :snt3 (c3 / credit-01
            :ARG0 (p / person
                  :name (n3 / name
                        :op1 ""Trump""))
            :ARG1 (c4 / coronavirus
                  :poss (w / we)
                  :mod (m2 / marvelous))
            :ARG2 (s5 / save-02
                  :ARG0 c4
                  :ARG1 (l2 / life
                        :quant (m3 / multiple
                              :op1 1000)))
            :time (ii / immediate)))"
"(t / test-01
      :ARG1 (p / person
            :ARG1-of (e / employ-01
                  :ARG0 (l / location
                        :location (a / and
                              :op1 (l2 / location
                                    :name (n / name
                                          :op1 ""Westminster""))
                              :op2 (l3 / location
                                    :name (n2 / name
                                          :op1 ""Rutherford""))))))
      :ARG2 (p2 / positive)
      :ARG3 (p3 / percentage-entity
            :value 19))"
"(p / possible-01
      :ARG1 (c / consider-02
            :ARG0 (c2 / company
                  :name (n / name
                        :op1 ""Sugar""
                        :op2 ""Supermarkets""))
            :ARG1 (a / and
                  :op1 (a2 / and
                        :op1 (r / recruit-01
                              :ARG0 c2
                              :ARG1 (a3 / and
                                    :op1 (p2 / person
                                          :ARG0-of (p3 / pick-01
                                                :ARG1 (s / stock))
                                          :mod (e / extra))
                                    :op2 (p4 / person
                                          :ARG2-of (s2 / staff-01
                                                :ARG1 (d / deliver-01))
                                          :mod e)))
                        :op2 (t / train-01
                              :ARG0 c2
                              :ARG2 a3)
                        :op3 (h / hire-01
                              :ARG0 c2
                              :ARG1 (v / van
                                    :mod (s3 / standard)
                                    :mod (a4 / additional)
                                    :ARG0-of (h2 / have-03
                                          :polarity -
                                          :ARG1 (h3 / heater))))
                        :op4 (o / offer-01
                              :ARG0 c2
                              :ARG1 (d2 / deliver-01
                                    :ARG0 c2
                                    :ARG1 (o2 / order-01
                                          :ARG1-of (e2 / exclusive-02
                                                :ARG2 (ii / item
                                                      :ARG1-of (f / freeze-01)))))
                              :ARG3 (p5 / person
                                    :ARG0-of (s4 / shop-01)))
                        :op5 (p6 / prioritize-01
                              :ARG0 c2
                              :ARG1 (d3 / deliver-01
                                    :ARG0 c2
                                    :ARG2 (a5 / and
                                          :op1 (p7 / person
                                                :mod (e3 / elderly))
                                          :op2 (p8 / person
                                                :ARG1-of (v2 / vulnerable-01)))))))))"
"(p / push-01
      :ARG0 (c / close-01
            :ARG1 (f / facility
                  :mod (t / this))
            :accompanier (l / list
                  :ARG1-of (g / grow-01)
                  :consist-of (p2 / plant
                        :ARG1-of (s / shutter-01)
                        :mod (o / other)
                        :location (a / across
                              :op1 (ii / industry
                                    :poss (w / we))))))
      :ARG1 (c2 / country
            :poss w)
      :ARG2 (c3 / close-06
            :ARG1 c2
            :ARG2 (e / edge)
            :topic (s2 / supply-01
                  :ARG0 w
                  :ARG1 (m / meat))
            :manner (p3 / perilous)))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (g / go-02
                  :ARG0 (p / person
                        :ARG0-of (w / work-01
                              :ARG1 (h / healthcare)))
                  :ARG4 (w2 / work-01))
            :op2 (r / risk-01
                  :ARG0 p
                  :ARG2 (ii / infect-01
                        :ARG1 p
                        :ARG2 (c / coronavirus)))
            :purpose (g2 / good-04
                  :ARG1-of (h2 / have-degree-91
                        :ARG2 (g3 / great)
                        :ARG3 (m2 / more))))
      :snt2 (a2 / and
            :op1 (g4 / go-02
                  :ARG0 (p2 / person
                        :ARG0-of (w3 / work-01
                              :ARG1 (r2 / retail-01)))
                  :ARG4 (w4 / work-01
                        :ARG0 p2
                        :ARG2 (s / store
                              :mod (g5 / grocery)))
                  :purpose (p3 / possible-01
                        :ARG1 (g6 / get-01
                              :ARG0 (p4 / person)
                              :ARG1 (t / thing
                                    :mod (b / basic)
                                    :purpose (s2 / survive-01)
                                    :ARG1-of (n / need-01)))))
            :op2 (a3 / and
                  :op1 (g7 / go-02
                        :ARG0 (ii2 / i
                              :ARG1-of (e / employ-01
                                    :ARG0 (r3 / restaurant)))
                        :ARG4 w2)
                  :op2 (r4 / risk-01
                        :ARG0 ii2
                        :ARG2 (ii3 / infect-01
                              :ARG1 ii2))
                  :purpose (p5 / possible-01
                        :ARG1 (g8 / get-01
                              :ARG0 p4
                              :ARG1 (t2 / tender
                                    :mod (c2 / chicken)
                                    :poss p4))))))"
"(ii / interest-01
      :ARG2 (r / rely-01
            :ARG0 (p / person
                  :ARG0-of (c / consider-01
                        :ARG1 (p2 / person
                              :ARG0-of (w / work-01)
                              :domain (a / and
                                    :op1 (p3 / person
                                          :ARG0-of (c2 / care-03))
                                    :op2 (p4 / person
                                          :ARG0-of (d / drive-01
                                                :ARG1 (d2 / deliver-01)))
                                    :op3 (p5 / person
                                          :ARG2-of (s / staff-01
                                                :ARG1 (s2 / supermarket)))
                                    :op4 (p6 / person
                                          :ARG0-of (c3 / clean-01))))
                        :ARG2 (p7 / person
                              :ARG0-of (w2 / work-01)
                              :mod (s3 / skill
                                    :polarity -))))
            :ARG1 a
            :ARG2 (r2 / risk-01
                  :ARG0 a
                  :ARG2 (h / health
                        :poss a)
                  :time (p8 / pandemic
                        :name (n / name
                              :op1 ""CODID-19"")))
            :time (n2 / now)))"
"(a / affect-01
      :polarity -
      :ARG0 (d / decrease-01
            :ARG1 (t / thing
                  :ARG2-of (p / price-01
                        :ARG1 (c / carbon))
                  :location (c2 / continent
                        :name (n / name
                              :op1 ""Europe""))))
      :ARG1 (m / market
            :mod c
            :location (c3 / country
                  :name (n2 / name
                        :op1 ""Australia""))))"
"(m / material
      :ARG1-of (w / worth-02
            :ARG2 (r / read-01))
      :domain (t / this))"
"(a / and
      :op1 (ii / income
            :mod (b / basic)
            :domain (a2 / amr-unknown))
      :op2 (t / trigger-01
            :ARG0 (p / person
                  :ARG0-of (c / consume-01))
            :ARG1 (e / economy
                  :poss p)
            :manner (a3 / amr-unknown)
            :condition (p2 / possible-01
                  :polarity -
                  :ARG1 (g / get-01
                        :ARG0 p
                        :ARG1 (k / kit
                              :purpose (t2 / test-01
                                    :ARG1 (a4 / and
                                          :op1 (p3 / product
                                                :name (n / name
                                                      :op1 ""COVID-19""))
                                          :op2 (p4 / paper
                                                :purpose (t3 / toilet))
                                          :op3 (e2 / et-cetera)))
                              :location (h / home))))))"
"(c / confirm-01
      :ARG0 (c2 / company
            :name (n / name
                  :op1 ""Apple""))
      :ARG1 (p / possible-01
            :polarity -
            :ARG1 (p2 / pick-up-04
                  :ARG1 (d / device
                        :ARG1-of (l / leave-12
                              :ARG2 (r / repair-01
                                    :ARG1 d)
                              :location (s / store
                                    :mod (r2 / retail-01)))))
            :ARG1-of (c3 / cause-01
                  :ARG0 (l2 / law
                        :name (n2 / name
                              :op1 ""COVID-19"")))))"
"(b / begin-01
      :ARG0 (p / person
            :location (c / country
                  :name (n / name
                        :op1 ""United""
                        :op2 ""States"")))
      :ARG1 (b2 / buy-01
            :ARG0 p
            :manner (p2 / panic-01
                  :ARG1 p))
      :time (a / after
            :op1 (r / report-01
                  :ARG1 (ii / infect-01
                        :ARG1 p
                        :ARG2 (d / disease
                              :name (n2 / name
                                    :op1 ""CODID-19""))
                        :ord (o / ordinal-entity
                              :value 1)))))"
"(f / find-02
      :ARG0 (ii / i)
      :ARG1 (e / extort-01
            :ARG2 (t / thing
                  :ARG2-of (p / price-01
                        :ARG1 (a / and
                              :op1 (s / sanitize-01
                                    :ARG1 (h / hand))
                              :op2 (t2 / thermometer)
                              :op3 (f2 / formula
                                    :beneficiary (b / baby))))))
      :concession (c / crack-down-06))"
"(a / affect-01
      :ARG0 (d / demand-01
            :ARG1 (t / tool
                  :purpose (w / work-01
                        :mod (r / remote))
                  :example (a2 / and
                        :op1 (n / notebook)
                        :op2 (s / smartphone)
                        :op3 (e / electronics
                              :mod (p / person
                                    :ARG0-of (c / consume-01))))))
      :ARG1 (g / giant
            :name (n2 / name
                  :op1 ""Micron""
                  :op2 ""Tech"")
            :mod (s2 / storage)
            :mod (m / memory))
      :manner (a3 / amr-unknown)
      :ARG1-of (c2 / cause-01
            :ARG0 (s3 / shift-01
                  :ARG0 (e2 / event
                        :name (n3 / name
                              :op1 ""COVID-19"")
                        :mod (p2 / pandemic))
                  :ARG1 (d2 / demand-01
                        :ARG1 (t2 / technology
                              :mod (ii / information)))
                  :ARG2 (d3 / demand-01
                        :ARG1 (d4 / dataCenter)))))"
"(a / arrive-01
      :ARG1 (o / order-02
            :ARG0 (ii / i)
            :ARG1 (s / shop-01
                  :ARG0 ii
                  :medium (o2 / online)))
      :accompanier (m / message-01
            :ARG0 (t / they)
            :ARG1 (c / cause-01
                  :ARG0 (l / lack-01
                        :ARG1 (p / paper
                              :purpose (t2 / toilet)))
                  :ARG1 (s2 / supply-01
                        :ARG0 t
                        :ARG1 (a2 / alternative)
                        :ARG2 ii
                        :instrument (n / newspaper
                              :name (n2 / name
                                    :op1 ""The""
                                    :op2 ""Sun""))))))"
"(c / contrast-01
      :ARG1 (t / think-01
            :ARG0 (ii / i)
            :ARG1 (s / stress-02
                  :ARG0 (a / and
                        :op1 (p / pandemic
                              :name (n / name
                                    :op1 ""COVID-19""))
                        :op2 (m / move-01
                              :ARG1 (c2 / class
                                    :poss ii
                                    :mod (a2 / all))
                              :ARG2 (o / online)))))
      :ARG2 (s2 / stress-02
            :ARG0 (a3 / and
                  :op1 (d / decide-01
                        :ARG1 (p2 / put-01
                              :ARG1 (t2 / turnip
                                    :poss ii
                                    :mod (a4 / all))
                              :ARG2 (m2 / market
                                    :mod (s3 / stalk))
                              :time (d2 / date-entity
                                    :weekday (s4 / sunday)
                                    :mod (p3 / past))))
                  :op2 (b / bug-02
                        :ARG1 (p4 / person
                              :mod (a5 / all)
                              :ARG0-of (h / have-rel-role-91
                                    :ARG1 ii
                                    :ARG2 (f / friend)))
                        :ARG2 (p5 / price-01
                              :ARG1 (t3 / turnip)
                              :ARG2 (g / good-02))
                        :purpose (s5 / sell-01
                              :ARG0 p4
                              :ARG1 t3)))
            :ARG1-of (r / real-04)))"
"(m / measure-02
      :ARG0 (g / government-organization
            :name (n / name
                  :op1 ""Ministry""
                  :op2 ""of""
                  :op3 ""Commerce""
                  :op4 ""and""
                  :op5 ""Industry"")
            :poss (c / country
                  :name (n2 / name
                        :op1 ""Qatar"")))
      :ARG1 (c2 / control-01
            :ARG0 g
            :ARG1 (t / thing
                  :ARG2-of (p / price-01
                        :ARG1 (a / and
                              :op1 (s / sanitizer
                                    :mod (h / hand))
                              :op2 (w / wipe
                                    :mod h)
                              :op3 (s2 / soap)))))
      :time (c3 / continue-01
            :ARG0 c
            :ARG1 (c4 / combat-01
                  :ARG0 c
                  :ARG1 (s3 / spread-02
                        :ARG1 (c5 / coronavirus
                              :name (n3 / name
                                    :op1 ""COVID-19"")
                              :mod (n4 / novel))))))"
"(m / mix-01
      :ARG1 (p / price-01
            :ARG1 (c / chemical))
      :ARG2 (s / stock
            :location (c2 / continent
                  :name (n / name
                        :op1 ""Europe"")))
      :time (s2 / start-01
            :ARG1 (w / wear-off-02
                  :ARG1 (e / effect-03
                        :ARG0 (s3 / stimulus
                              :mod (c3 / country
                                    :name (n2 / name
                                          :op1 ""US"")))))))"
"(c / contrast-01
      :ARG1 (s / scare-01
            :polarity -
            :ARG0 (p / product
                  :name (n / name
                        :op1 ""COVID-19""))
            :ARG1 (ii / i)
            :mod (e / even))
      :ARG2 (s2 / scare-01
            :ARG0 (l / leave-17
                  :polarity -
                  :ARG1 (m / manteca
                        :ARG1-of (h / have-quant-91
                              :ARG3 (e2 / enough)))
                  :location (s3 / store
                        :mod (g / grocery)))
            :ARG1 ii
            :mod (j / just)))"
"(d / decrease-01
      :ARG1 (p / price-01)
      :ARG4 (r / rate-entity-91
            :ARG1 (m / monetary-quantity
                  :quant 20
                  :unit (d2 / dollar))
            :ARG2 (v / volume-quantity
                  :quant 1
                  :unit (b / barrel)))
      :condition (s / stop-01
            :ARG0 (c / company)
            :ARG1 (p2 / pay-01
                  :ARG0 c
                  :ARG3 (o / oil))))"
"(s / say-01
      :ARG0 (ii / i)
      :ARG1 (a / and
            :op1 (c / come-on-25
                  :mode imperative
                  :ARG1 (e / everyone))
            :op2 (d / do-02
                  :mode imperative
                  :ARG0 e
                  :ARG1 (ii2 / it)
                  :beneficiary (a2 / and
                        :op1 (p / person
                              :name (n / name
                                    :op1 ""Dawn""))
                        :op2 (o / other
                              :quant (m / many)))))
      :ARG2 e)"
"(a / and
      :op1 (c / conserve-01
            :ARG0 (ii / i)
            :ARG1 (w / water)
            :manner (s / skip-01
                  :ARG0 ii
                  :ARG1 (s2 / shower-01)))
      :op2 (s3 / start-01
            :ARG0 ii
            :ARG1 (m / make-01
                  :ARG0 ii
                  :ARG1 (a2 / alcohol
                        :poss ii)
                  :purpose (b / barter-01
                        :ARG0 ii
                        :ARG1 a2))
            :time (o / once
                  :op1 (g / go-08
                        :ARG1 (w2 / world)
                        :ARG2 (p / person
                              :name (n / name
                                    :op1 ""Mad""
                                    :op2 ""Max"")
                              :mod (a3 / all)))))
      :op3 (g2 / go-through-20
            :ARG0 ii
            :ARG1 (p2 / pile
                  :ARG1-of (ii2 / include-91
                        :ARG2 (f / food
                              :ARG1-of (s4 / stable-03
                                    :location (s5 / shelf)))
                        :ARG3 ""1/2"")
                  :ARG1-of (h / hoard-01
                        :ARG0 ii
                        :ARG1-of (t / try-01
                              :ARG0 ii))
                  :mod (s6 / stock))))"
"(h / hold-04
      :ARG0 (c / church
            :mod (l / large)
            :location (n / near
                  :op1 (ii / i)))
      :ARG1 (s / service)
      :time (w / weekend
            :mod (t / this))
      :manner (d / defy-01
            :ARG0 c
            :ARG1 (o / order-01
                  :ARG0 (p / person
                        :ARG0-of (h2 / have-org-role-91
                              :ARG2 (g / governor)))
                  :ARG2 (d2 / distance-01
                        :ARG2 (s2 / society)))))"
"(s / say-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Saputo""
                  :op2 ""Inc.""))
      :ARG1 (s2 / see-01
            :ARG0 c
            :ARG1 (s3 / shift-01
                  :ARG1 (d / demand-01
                        :ARG1 (p / product
                              :poss c))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (o / outbreak-29
                              :name (n2 / name
                                    :op1 ""COVID-19"")))
                  :ARG1-of (m / mean-01
                        :ARG2 (c3 / contrast-01
                              :ARG1 (s4 / skyrocket-01
                                    :ARG1 (s5 / sell-01
                                          :ARG1 (r / retail-01)))
                              :ARG2 (f / fall-01
                                    :ARG1 (o2 / order-02
                                          :ARG0 (p2 / person
                                                :ARG0-of (o3 / operate-01
                                                      :ARG1 (s6 / serve-01
                                                            :ARG1 (f2 / food)))))))))))"
"(a / and
      :op1 (r / reduce-01
            :ARG0 (c / company)
            :ARG1 (m / monetary-quantity
                  :ARG2-of (p / price-01
                        :ARG1 (p2 / product
                              :ARG0-of (s / sanitize-01
                                    :ARG1 (h / hand)))))
            :ARG1-of (f / follow-01
                  :ARG2 (d / directive
                        :source (g / government-organization
                              :ARG0-of (g2 / govern-01)))))
      :op2 (ii / increase-01
            :ARG0 c
            :ARG1 (p3 / produce-01
                  :ARG0 c)
            :mod (a2 / also)
            :purpose (m2 / meet-01
                  :ARG0 c
                  :ARG1 (s2 / spike-04
                        :ARG1 (d2 / demand-01
                              :ARG1 p2)
                        :manner (s3 / sudden)
                        :time (s4 / scare-01)))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (g / go-02
                  :ARG0 (ii / i)
                  :ARG1 (s / shop-01
                        :ARG0 ii
                        :ARG1 (g2 / grocery))
                  :time (t / today))
            :op2 (c / crowd-01
                  :ARG1 s
                  :degree (v / very)))
      :snt2 (a2 / and
            :op1 (ii2 / i)
            :op2 (p / person
                  :mod (c2 / continent
                        :name (n / name
                              :op1 ""Asia""))
                  :quant (s2 / some))
            :mod (o / only)
            :domain (p2 / person
                  :ARG0-of (w / wear-01
                        :ARG1 (m2 / mask))))
      :snt3 (a3 / and
            :op1 (p3 / person
                  :polarity -
                  :ARG1-of (e / employ-01
                        :ARG0 (s3 / store)))
            :op2 (b / be-located-at-91
                  :polarity -
                  :ARG1 (o2 / or
                        :op1 (d / department
                              :mod (p4 / produce))
                        :op2 (r / register)
                        :ARG2-of b)
                  :op1 d
                  :op2 r)
            :mod (e2 / even)))"
"(a / appropriate-02
      :polarity -
      :ARG1 (ii / inflate-01
            :ARG1 (p / price-01
                  :ARG1 (l / laptop))
            :time (c / crisis
                  :name (n / name
                        :op1 ""Corona""
                        :op2 ""Crisis""))))"
"(a / add-02
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (c / company
            :name (n / name
                  :op1 ""Vodafone""))
      :ARG2 (l / list-01
            :ARG1 (c2 / company
                  :ARG0-of (ii / increase-01
                        :ARG1 (p / price-01
                              :ARG1 c2)
                        :time (p2 / pandemic
                              :mod (v / virus
                                    :name (n2 / name
                                          :op1 ""Coronavirus"")))))))"
"(m / multi-sentence
      :snt1 (s / see-01
            :ARG0 (ii / i)
            :ARG1 (a / and
                  :op1 (t / take-01
                        :ARG0 (b / boy
                              :age (o / or
                                    :op1 (t2 / temporal-quantity
                                          :quant 13
                                          :unit (y / year))
                                    :op2 (t3 / temporal-quantity
                                          :quant 14
                                          :unit (y2 / year))))
                        :ARG1 (a2 / and
                              :op1 (p / pasta)
                              :op2 (p2 / paper
                                    :purpose (t4 / toilet))
                              :mod (a3 / all))
                        :ARG2 (c / cart
                              :purpose (s2 / shop-01)
                              :poss (p3 / person
                                    :ARG0-of (h / have-rel-role-91
                                          :ARG1 b
                                          :ARG2 (m2 / mother)))))
                  :op2 (p4 / put-01
                        :ARG0 b
                        :ARG1 a2
                        :ARG2 (c2 / cart
                              :purpose (s3 / shop-01)
                              :poss (m3 / man
                                    :mod (t5 / transgender)
                                    :ARG1-of (d / disable-01)))))
            :time (j / just))
      :snt2 (t6 / tell-01
            :ARG0 (h2 / he)
            :ARG1 (t7 / think-01
                  :ARG0 (p5 / person
                        :ARG0-of (h3 / have-rel-role-91
                              :ARG1 h2
                              :ARG2 (m4 / mother)))
                  :ARG1 (o2 / other
                        :ARG0-of (n / need-01)))
            :ARG2 p5)
      :snt3 (a4 / applaud-01
            :ARG0 (s4 / supermarket
                  :mod (w / whole))))"
"(m / multi-sentence
      :snt1 (ii / immense
            :domain (d / demand-01
                  :ARG1 (s / serve-01
                        :ARG0-of (p / profit-01
                              :polarity -)
                        :ARG2-of (ii2 / include-91
                              :ARG1 (a / and
                                    :op1 (f / food)
                                    :op2 (s2 / shelter-01)
                                    :mod (e / especially))))
                  :ARG1-of (ii3 / increase-01)))
      :snt2 (h / help-01
            :ARG0 (o / organization
                  :name (n / name
                        :op1 ""CODV""
                        :op2 19
                        :op3 ""Response""
                        :op4 ""Fund"")
                  :location (c / county
                        :name n
                        :op1 ""York""))))"
"(d / down-03
      :ARG1 (m / market
            :mod (s / stock)
            :mod (c / country
                  :name (n / name
                        :op1 ""U.S."")))
      :ARG3 (p / percentage-entity
            :value 26.69)
      :ARG4 (p2 / percentage-entity
            :value 36.17)
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (r / recession-02
                        :ARG1-of (l / loom-01)
                        :ARG1-of (s2 / stem-01
                              :ARG2 (c3 / coronavirus)))
                  :op2 (h / hit-01
                        :ARG1 (a2 / and
                              :op1 (s3 / spend-01
                                    :ARG0 (p3 / person
                                          :ARG0-of (c4 / consume-01)))
                              :op2 (t / thing
                                    :ARG2-of (r2 / rate-entity-91
                                          :ARG1 (p4 / percentage-entity
                                                :value 1)
                                          :ARG3 (t2 / time))
                                    :ARG1-of (e / estimate-01))
                              :op3 (c5 / cut-02
                                    :ARG1 (d2 / dividend)
                                    :ARG1-of (p5 / possible-01))
                              :op4 (e2 / event
                                    :mod (c6 / credit-02)
                                    :mod (ii / income
                                          :ARG1-of (f / fix-03)))
                              :op5 (c7 / contract-02
                                    :ARG1 (p6 / product
                                          :ARG1-of (g / gross-03)
                                          :mod (d3 / domestic))))))))"
"(a / act-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1-of (r / responsible-02)
      :conj-as-if (h / have-03
            :ARG0 y
            :ARG1 (p / product
                  :name (n / name
                        :op1 ""COVID19"")))
      :time (u / until
            :op1 (t / test-01
                  :mod (m / mass))))"
"(m / multi-sentence
      :snt1 (p / provide-01
            :ARG0 (g / government-organization
                  :name (n / name
                        :op1 ""White""
                        :op2 ""House""
                        :op3 ""Coronavirus""
                        :op4 ""Task""
                        :op5 ""Force""))
            :ARG1 (u / update-02
                  :ARG1 (p2 / product
                        :name (n2 / name
                              :op1 ""COVID-19"")))
            :time (b / brief))
      :snt2 (p3 / possible-01
            :ARG1 (w / watch-01
                  :ARG0 (y / you)
                  :ARG1 u)
            :location (u2 / url-entity
                  :value ""https://www.whitehouse.gov/live/"")))"
"(a / agree-01
      :ARG0 (a2 / and
            :op1 (o / organization
                  :name (n / name
                        :op1 ""OPEC""))
            :op2 (a3 / ally
                  :ARG1-of (l / lead-02
                        :ARG0 (c / country
                              :name (n2 / name
                                    :op1 ""Russia"")))))
      :ARG1 (c2 / cut-01
            :ARG1 (o2 / output)
            :mod (r / record)
            :purpose (p / prop-up-01
                  :ARG0 a2
                  :ARG1 (p2 / price-01
                        :ARG1 (o3 / oil))
                  :time (p3 / pandemic
                        :mod (c3 / coronavirus))))
      :time (d / date-entity
            :weekday (s / sunday))
      :ARG1-of (c4 / cause-01
            :ARG0 (d2 / deal-01
                  :ARG0 a2
                  :ARG1 (n3 / nation
                        :mod (f / fellow)
                        :mod (o4 / oil)
                        :ARG2-of (ii / include-91
                              :ARG1 (c5 / country
                                    :name (n4 / name
                                          :op1 ""United""
                                          :op2 ""States""))))
                  :ARG2 (c6 / curb-01
                        :ARG0 n3
                        :ARG1 (s2 / supply-01
                              :ARG1 (o5 / oil)
                              :mod (g / globe))
                        :ARG2 (p4 / percentage-entity
                              :value 20)
                        :ARG1-of (p5 / possible-01))
                  :mod (p6 / precedent
                        :polarity -))))"
"(e / explore-01
      :ARG1 (a / and
            :op1 (b / buy-01
                  :ARG1 (t / toiletpaper)
                  :manner (p / panic-01))
            :op2 (s / spend-01
                  :ARG0 (p2 / person
                        :ARG0-of (c / consume-01))
                  :mod (m / macro))
            :time (p3 / pandemic
                  :name (n / name
                        :op1 ""COVID-19"")))
      :medium (b2 / blog-01
            :ARG0 (c2 / company
                  :name n
                  :op1 ""channeladvisor""))
      :mod (t2 / this))"
"(m / multi-sentence
      :snt1 (f / fun-01
            :polarity -
            :ARG1 (f2 / festival
                  :name (n / name
                        :op1 ""Mother's""
                        :op2 ""Day""))
            :condition (p / person
                  :quant 2
                  :ARG0-of (h / have-rel-role-91
                        :ARG2 (m2 / mom))))
      :snt2 (a / argue-02
            :ARG1 (p2 / person
                  :ARG1-of (ii / include-91
                        :ARG2 (w / we))
                  :ARG0-of (d / deserve-01
                        :ARG1 (d2 / day
                              :mod (o / off))))
            :ARG1-of (l / long-03)
            :mod (j / just))
      :snt3 (a2 / and
            :op2 (w2 / win-01
                  :ARG0 (n2 / nobody)))
      :snt4 (a3 / and
            :op2 (f3 / fight-01
                  :ARG2 (a4 / and
                        :op1 (g / get-22
                              :ARG0 (p3 / person)
                              :ARG1 (s / stay-on-02
                                    :ARG1 p3))
                        :op2 (g2 / get-22
                              :ARG0 (p4 / person
                                    :name (n3 / name
                                          :op1 ""Covid_19""))))
                  :time (n4 / now)
                  :ARG1-of (c / cause-01
                        :ARG0 p4))))"
"(a / and
      :op1 (g / go-02
            :ARG0 (ii / i)
            :ARG4 (s / supermarket)
            :mod (j / just)
            :ord (o / ordinal-entity
                  :value 1
                  :range (m / multiple
                        :op1 (t / temporal-quantity
                              :quant 1
                              :unit (w / week)))))
      :op2 (f / feel-05
            :ARG1 s
            :ARG2 (w2 / weird
                  :degree (s2 / so))))"
"(m / multi-sentence
      :snt1 (c / cancel-01
            :ARG1 (a / and
                  :op1 (s / surgery-01
                        :mod (w / ward))
                  :op2 (v / visit-01
                        :ARG1 (h / home))
                  :mod (a2 / all))
            :duration (f / future
                  :ARG1-of (f2 / foresee-01
                        :ARG1-of (p / possible-01))))
      :snt2 (r / report-01
            :mode imperative
            :polite +
            :ARG0 (y / you)
            :ARG1 a
            :op1 (t / take-advantage-02
                  :ARG0 (b / business
                        :mod (a3 / any))
                  :ARG1 (c2 / community
                        :poss (w2 / we)))
            :op2 (p2 / put-up-11
                  :ARG0 b
                  :ARG1 (p3 / price-01)))
      :location (e / email-address-entity
            :value ""covidabuse@lbbd gov uk""))"
"(f / follow-04
      :ARG1 (a / and
            :op1 (w / wake-up-02
                  :ARG1 (ii / i))
            :op2 (c / check-01
                  :ARG0 ii
                  :ARG1 (p / price-01
                        :ARG1 (t / turnip)))
            :op3 (g / go-02
                  :ARG0 ii
                  :ARG4 (w2 / work-01
                        :ARG0 ii))
            :op4 (a2 / attend-01
                  :ARG0 ii
                  :ARG1 (m / meet-03
                        :ARG0 ii
                        :ARG1 (c2 / company
                              :name (n / name
                                    :op1 ""Covid""
                                    :op2 19))))
            :op5 (a3 / attend-01
                  :ARG0 ii
                  :ARG1 (m2 / meet-03
                        :topic c2
                        :quant (m3 / more)))
            :op6 (d / dream-01
                  :ARG0 ii
                  :ARG1 (a4 / and
                        :op1 (p2 / price-01
                              :ARG1 t)
                        :op2 (t2 / terraform
                              :ARG1-of (n2 / new-01)))
                  :time (d2 / day)))
      :ARG2 (d3 / day
            :prep-to (d4 / day)))"
"(s / see-01
      :ARG0 (y / you)
      :ARG1 (f / flux-01
            :ARG1 (s2 / sell-01))
      :time (a / already)
      :condition (s3 / sell-01
            :ARG0 (b / brand
                  :poss y)
            :ARG1 (ii / item
                  :ARG1-of (r / relate-01
                        :ARG2 (a2 / and
                              :op1 (h / hygiene)
                              :op2 (s4 / sick-05))))))"
"(r / risk-01
      :ARG1 (y / you)
      :ARG2 (c / contract-04
            :ARG1 y
            :ARG2 (c2 / coronavirus))
      :time (l / leave-11
            :ARG0 y
            :ARG1 (h / house
                  :poss y)
            :manner (s / sanitize-01
                  :ARG0 (p / product
                        :name (n / name
                              :op1 ""Purell""))
                  :ARG1 (h2 / hand)
                  :polarity -
                  :poss y)))"
"(c / come-01
      :ARG1 (m / mop
            :ARG0-of (c2 / clean-01
                  :ARG1 (f / floor)
                  :instrument (s / steam))
            :mod (t / this))
      :accompanier (a / and
            :op1 (p / pad
                  :polarity -)
            :op2 (s2 / ship-01
                  :ARG1-of (f2 / free-03))))"
"(b / brand
      :location (h / here)
      :ARG1-of (h2 / hear-01
            :ARG0 (p / person
                  :ARG0-of (c / consume-01))
            :ARG1-of (w / want-01
                  :ARG0 p)
            :concession (e / even-if
                  :op1 (o / operate-01
                        :ARG0 b
                        :ARG1 (c2 / category
                              :ARG1-of (r / relevant-01
                                    :ARG1-of (s / seem-01
                                          :polarity -
                                          :time (o2 / outbreak-29)
                                          :ARG1-of (p2 / possible-01))
                                    :degree (s2 / so)))))))"
"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (t / trend
                  :time (t2 / today)
                  :consist-of (b / bag
                        :ARG1-of (m2 / mix-01
                              :degree (b2 / bit))))
            :ARG2 (c2 / certain
                  :domain (t3 / time
                        :time-of (s / shine-01
                              :ARG1 (b3 / broadcast-program
                                    :name (n / name
                                          :op1 ""CountdownNZ""))))))
      :snt2 (s2 / stop-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (p / panic-01))
      :snt3 (v / virus
            :mod (c3 / coronavirus)))"
"(m / multi-sentence
      :snt1 (g / go-02
            :ARG0 (ii / i)
            :ARG4 (c / company
                  :name (n / name
                        :op1 ""Tesco""))
            :time (d / date-entity
                  :dayperiod (m2 / morning)
                  :mod (t / today))
            :purpose (t2 / take-advantage-02
                  :ARG0 ii
                  :ARG1 (o / open-01
                        :time (e / early)
                        :beneficiary (a / and
                              :op1 (s / staff-01
                                    :ARG0 (g2 / government-organization
                                          :name (n2 / name
                                                :op1 ""NHS"")))
                              :op2 (s2 / staff-01
                                    :ARG0 c)))))
      :snt2 (w / wonder-01
            :ARG0 (ii2 / i)
            :ARG1 (o2 / or
                  :op1 (h / hour
                        :ARG1-of (c2 / civilize-01)
                        :time-of (a2 / and
                              :op1 (s3 / stock-01
                                    :ARG1 (s4 / shelf)
                                    :degree (f / full))
                              :op2 (p / possible-01
                                    :ARG1 (w2 / walk-01
                                          :ARG0 (w3 / we)
                                          :ARG2 (a3 / around)
                                          :purpose (p2 / pick-up-04
                                                :ARG0 w3
                                                :ARG1 (t3 / thing
                                                      :ARG1-of (n3 / need-01
                                                            :ARG0 w3)))))))
                  :op2 (r / resemble-01
                        :ARG1 h
                        :ARG2 (s5 / sweep-01
                              :ARG2 (s6 / supermarket))))))"
"(s / say-01
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG2 (m / minister
                        :topic (f / finance))))
      :ARG1 (e / expect-01
            :ARG0 (t / they)
            :ARG1 (l / lose-02
                  :ARG0 t
                  :ARG1 (r / revenue)
                  :ARG2 (m2 / monetary-quantity
                        :quant 5000000000
                        :unit (d / dollar))
                  :ARG1-of (c / cause-01
                        :ARG0 (a / and
                              :op1 (d2 / depress-01
                                    :ARG1 (p2 / price-01
                                          :ARG1 (e2 / energy)))
                              :op2 (ii / impact-01
                                    :ARG0 (s2 / slow-01
                                          :ARG1 (b / business)
                                          :ARG1-of (c2 / cause-01
                                                :ARG0 (e3 / event
                                                      :name (n / name
                                                            :op1 ""Covid_19"")
                                                      :location (a2 / and
                                                            :op1 (c3 / country
                                                                  :name (n2 / name
                                                                        :op1 ""Trinidad""))
                                                            :op2 (ii2 / island
                                                                  :name (n3 / name
                                                                        :op1 ""Tobago""))))))))))))"
"(h / have-03
      :ARG0 (s / store
            :ARG1-of (n / new-01)
            :location (t / town))
      :ARG1 (p / price
            :ARG0-of (a / amaze-01)))"
"(p / publish-01
      :ARG0 (ii / i)
      :ARG1 (u / update-01
            :ARG0 ii
            :ARG1 (g / guide
                  :topic (p2 / problem
                        :topic (w / wed-01))
                  :mod (c / company
                        :name (n / name
                              :op1 ""Whichuk"")))
            :purpose (ii2 / include-01
                  :ARG0 ii
                  :ARG1 (a / advise-01
                        :ARG1 (a2 / anyone
                              :ARG0-of (p3 / plan-01
                                    :ARG1 (d / day
                                          :mod (b / big)
                                          :poss a2)
                                    :ARG1-of (w2 / wreck-01
                                          :ARG0 (v / virus
                                                :mod (c2 / coronavirus))))))
                  :ARG2 g)))"
"(m / multi-sentence
      :snt1 (s / see-01
            :ARG1 (g / graffiti-01
                  :ARG1 (f / fuck-01
                        :mode expressive
                        :ARG1 (l / law
                              :name (n / name
                                    :op1 ""COVID""
                                    :op2 19))))
            :location (c / city-district
                  :name (n2 / name
                        :op1 ""Elmhurst"")
                  :part-of c
                  :name (n3 / name
                        :op1 ""Queens"")
                  :part-of (c2 / city
                        :name (n4 / name
                              :op1 ""New""
                              :op2 ""York""
                              :op3 ""City""))))
      :snt2 (w / walk-01
            :ARG0 (p / person
                  :quant 2
                  :ARG0-of (w2 / wear-01
                        :ARG1 (m2 / mask
                              :mod (f2 / face))))
            :ARG2 (s2 / street)))"
"(g / get-02
      :ARG0 (s / supermarket
            :mod (c / country
                  :name (n / name
                        :op1 ""Denmark"")))
      :ARG1 (ii / it)
      :ARG2-of (r / right-06))"
"(ii / increase-01
      :ARG1 (p / price-01
            :ARG1 (e / egg))
      :ARG2 (s / significant-02)
      :ARG1-of (c / cause-01
            :ARG0 (ii2 / increase-01
                  :ARG1 (d / demand-01
                        :ARG1 e)
                  :time (o / outbreak-29
                        :name (n / name
                              :op1 ""COVID-19"")))))"
"(s / say-01
      :ARG0 (e / economist
            :quant 1)
      :ARG1 (c / cause-01
            :ARG0 (c2 / coronavirus)
            :ARG1 (d / decline-01
                  :ARG0 c2
                  :ARG1 (s2 / spend-01
                        :ARG0 (p / person
                              :ARG0-of (c3 / consume-01)))
                  :ARG1-of (s3 / sharp-02)
                  :location (c4 / country
                        :name (n / name
                              :op1 ""U.S."")))))"
"(m / multi-sentence
      :snt1 (d / disappoint-01
            :ARG0 (a / allow-01
                  :ARG0 (c / company
                        :name (n / name
                              :op1 ""Amazon""))
                  :ARG1 (j / jack-up-02
                        :ARG0 (p / person
                              :ARG0-of (r / resell-01))
                        :ARG1 (m2 / monetary-quantity
                              :ARG2-of (p2 / price-01))
                        :ARG1-of (h / have-quant-91
                              :ARG3 (t / times
                                    :quant (m3 / many))
                              :ARG4 (m4 / monetary-quantity
                                    :ARG2-of (p3 / price-01)
                                    :ARG2-of (v / value-01
                                          :ARG1 (p4 / product))
                                    :ARG1-of (a2 / actual-02))))))
      :snt2 (b / buy-01
            :ARG0 (w / we)
            :ARG1 (a3 / anything)
            :ARG2 (s / site
                  :poss (y / you))
            :time (n2 / no-longer)))"
"(a / ask-02
      :ARG0 (a2 / attorney
            :quant 33)
      :ARG1 (s / stop-01
            :ARG0 (a3 / and
                  :op1 (c / company
                        :name (n / name
                              :op1 ""Amazon""))
                  :op2 (c2 / company
                        :name (n2 / name
                              :op1 ""Walmart""))
                  :op3 (c3 / company
                        :ARG0-of (r / retail-01)
                        :mod (o / other)))
            :ARG1 (g / gouge-02
                  :ARG0 a3
                  :ARG1 (t / thing
                        :ARG2-of (p / price-01))
                  :time (p2 / pandemic
                        :mod (c4 / coronavirus))))
      :ARG2 a3)"
"(m / multi-sentence
      :snt1 (h / hard-02
            :ARG1 (c / contain-01
                  :ARG1 (p / product
                        :name (n / name
                              :op1 ""Covid""
                              :op2 19)))
            :condition (a / as-long-as
                  :op1 (k / keep-02
                        :ARG0 (p2 / person)
                        :ARG1 (s / shop-01
                              :ARG0 p2))))
      :snt2 (n2 / need-01
            :ARG0 (w / we)
            :ARG1 (a2 / and
                  :op1 (ii / introduce-02
                        :ARG0 w
                        :ARG1 (c2 / concept
                              :topic (s2 / shop-01
                                    :medium (o / online))))
                  :op2 (l / let-01
                        :ARG0 w
                        :ARG1 (s3 / shop-01
                              :ARG0 (p3 / person
                                    :mod (t / that)
                                    :ARG0-of (a3 / access-01
                                          :polarity -
                                          :ARG1 (ii2 / internet)))
                              :location (s4 / store
                                    :mod (p4 / physical)))
                        :mod (o2 / only)))
            :purpose (r / reduce-01
                  :ARG0 w
                  :ARG1 (m2 / move-01
                        :ARG1 (p5 / person))))
      :snt3 (s5 / shop-01
            :location (s6 / store
                  :mod (p6 / physical))))"
"(p / possible-01
      :ARG1 (o / order-02
            :ARG0 (y / you)
            :ARG1 (g / grocery)
            :ARG3 (s / store
                  :ARG1-of (l / local-02
                        :ARG2 y))
            :manner (o2 / online))
      :time (n / now))"
"(a / amr-choice
      :op1 (t / thing
            :ARG2-of (p / price-01
                  :ARG3 (t2 / tax-01
                        :ARG3 (ii / income)))
            :domain (t3 / this)
            :mod (s / still))
      :op2 (c / cause-01
            :ARG0 (p2 / product
                  :name (n / name
                        :op1 ""Covid-19""))
            :ARG1 (d / deal-01)))"
"(t / theorize-01
      :ARG0 (ii / i)
      :ARG1 (y / yell-01
            :ARG0 (h / he)
            :ARG1 (l / let-01
                  :ARG1 (h2 / have-03
                        :ARG0 (t2 / they)
                        :ARG1 (b / beer
                              :mod (b2 / buck-a-Beer)
                              :location (a / and
                                    :op1 (s / supermarket)
                                    :op2 (s2 / store
                                          :mod (g / grocery)))
                              :manner (ii2 / incidental))))
            :time (d / disinfect-01
                  :ARG0 h
                  :instrument (a2 / and
                        :op1 (p / product
                              :name (n / name
                                    :op1 ""Tequila""
                                    :op2 925))
                        :op2 (p2 / product
                              :name (n2 / name
                                    :op1 ""Diva""
                                    :op2 ""Vodka""))
                        :op3 (p3 / product
                              :name (n3 / name
                                    :op1 ""Dalmore""
                                    :op2 62))))
            :mod (c / conspiracy)))"
"(c / cough-01
      :ARG0 (p / person
            :mod (t / teenage))
      :source (p2 / produce
            :ARG1-of (s / store-01
                  :ARG2 (g / grocery)))
      :ARG0-of (e / endanger-01)
      :ARG0-of (s2 / spread-03
            :ARG1 (c2 / coronavirus)
            :ARG1-of (p3 / possible-01)))"
"(m / multi-sentence
      :snt1 (l / low-04
            :ARG1 (t / thing
                  :ARG2-of (p / price-01
                        :ARG1 (p2 / petrol))
                  :location (s / station
                        :ARG0-of (s2 / service-05)
                        :ARG1-of (l2 / local-02)
                        :poss (ii / i)))
            :degree (r / really)
            :time (m2 / moment))
      :snt2 (s3 / see-01
            :polarity -
            :ARG0 (ii2 / i)
            :ARG1 (l3 / low-04
                  :ARG1 (t2 / they)
                  :degree (t3 / this))
            :time (m3 / multiple
                  :op1 (t4 / temporal-quantity
                        :quant 1
                        :unit (y / year)))))"
"(u / use-01
      :ARG0 (u2 / university
            :name (n / name
                  :op1 ""Central""
                  :op2 ""Luzon""
                  :op3 ""State""
                  :op4 ""University""))
      :ARG1 (n2 / nanotechnology)
      :ARG2 (p / produce-01
            :ARG0 u2
            :ARG1 (a / and
                  :op1 (e / ethanol
                        :ARG1-of (l / local-02))
                  :op2 (t / thing
                        :ARG0-of (s / sanitize-01
                              :ARG1 (h / hand))))))"
"(m / multi-sentence
      :snt1 (s / send-01
            :ARG1 (ii / i)
            :ARG2 (h / home)
            :source (w / work-01)
            :time (y / yesterday)
            :ARG1-of (c / cause-01
                  :ARG0 (a / and
                        :op1 (t / test-01
                              :ARG1 (p / person
                                    :ARG0-of (h2 / have-org-role-91
                                          :ARG1 (f / family)
                                          :ARG2 (m2 / member)))
                              :ARG2 (p2 / positive)
                              :ARG3 (p3 / product
                                    :name (n / name
                                          :op1 ""Covid-19"")))
                        :op2 (t2 / timeline
                              :ARG1-of (p4 / possible-01)
                              :ARG0-of (e / expose-01
                                    :ARG1 (a2 / and
                                          :op1 ii
                                          :op2 (f2 / family
                                                :poss ii))
                                    :ARG1-of (p5 / possible-01))))))
      :snt2 (f3 / frighten-01
            :ARG0 (t3 / this)))"
"(c / contrast-01
      :ARG1 (g / go-02
            :polarity -
            :ARG0 (ii / i)
            :ARG4 (s / supermarket)
            :time (s2 / since
                  :op1 (l / lock-down-06))
            :time (e / ever))
      :ARG2 (f / face-01
            :polarity -
            :ARG0 ii
            :ARG1 (s3 / short-06
                  :mod (a / any))
            :mod (s4 / still)
            :ARG0-of (c2 / cause-01
                  :ARG1 (ii2 / important-01
                        :ARG1 (c3 / crowd-01
                              :polarity -
                              :ARG1 (a2 / around
                                    :op1 s))))))"
"(c / cause-01
      :ARG0 (a / amr-unknown)
      :ARG1 (h / high-02
            :ARG1 (t / thing
                  :ARG2-of (p / price-01
                        :ARG1 (g / gas)))
            :degree (s / so)
            :location (a2 / area
                  :name (n / name
                        :op1 ""Crestview""))))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person)
            :ARG1 (s2 / show-01
                  :ARG0 (e / event
                        :name (n / name
                              :op1 ""COVID2019""))
                  :ARG1 (p2 / person
                        :ARG1-of (ii / important-01)
                        :location (s3 / society
                              :poss (w / we))
                        :domain (a / and
                              :op1 (p3 / professional
                                    :mod (m2 / medicine))
                              :op2 (p4 / person
                                    :ARG0-of (w2 / work-01
                                          :ARG1 (s4 / store
                                                :mod (g / grocery))))
                              :op3 (p5 / person
                                    :ARG2-of (s5 / staff-01
                                          :ARG1 (c / clean-01)))
                              :op4 (p6 / person
                                    :ARG0-of (b / bag-01))
                              :op5 (p7 / person
                                    :ARG0-of (h / hand-01
                                          :ARG1 (f / farm)))
                              :op6 (p8 / person
                                    :mod (a2 / all)
                                    :ARG0-of (k / keep-02
                                          :ARG1 (t / turn-01
                                                :ARG0 p8
                                                :ARG1 (w3 / wheel
                                                      :frequency (r / rate-entity-91
                                                            :ARG3 (t2 / temporal-quantity
                                                                  :quant 1
                                                                  :unit (d / day)))))))))))
      :snt2 a
      :op1 (a3 / applaud-01
            :ARG0 (ii2 / i)
            :ARG1 (a4 / acknowledge-01))
      :op2 (a5 / agree-01
            :ARG0 ii2
            :ARG1 a4))"
"(c / contrast-01
      :ARG1 (w / way
            :ARG1-of (h / have-degree-91
                  :ARG2 (g / good-02)
                  :ARG3 (m / most))
            :manner-of (p / prevent-01
                  :ARG1 (s / spread-02
                        :ARG1 (d / disease
                              :name (n / name
                                    :op1 ""COVID-19""))
                        :time (p2 / pandemic)))
            :domain (s2 / stay-01
                  :ARG1 (w2 / we
                        :mod (a / all))
                  :location (h2 / home)))
      :ARG2 (n2 / need-01
            :ARG0 w2
            :ARG1 (h3 / head-02
                  :ARG0 w2
                  :ARG1 (s3 / store
                        :mod (g2 / grocery))
                  :purpose (s4 / stock-up-02
                        :ARG0 w2
                        :ARG1 (f / food)))
            :time (p3 / point
                  :mod (s5 / some))))"
"(m / multi-sentence
      :snt1 (a / amount
            :ARG1-of (c / crazy-03)
            :domain (ii / it))
      :snt2 (h / have-concession-91
            :ARG1 (t / think-01
                  :ARG0 (p / person
                        :mod (s / some))
                  :ARG1 (a2 / appropriate-02
                        :ARG1 (e / exercise-02
                              :frequency (r / rate-entity-91
                                    :ARG1 (b / between
                                          :op1 (t2 / temporal-quantity
                                                :quant 2
                                                :unit (h2 / hour))
                                          :op2 (t3 / temporal-quantity
                                                :quant 4
                                                :unit (h3 / hour)))
                                    :ARG2 (t4 / temporal-quantity
                                          :quant 1
                                          :unit (d / day)))))
                  :mod (s2 / still))
            :ARG2 (o / out-05
                  :ARG1 (p2 / person
                        :ARG2-of (s3 / staff-01)
                        :quant (p3 / percentage-entity
                              :value 50))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (c3 / contract-02
                              :ARG0 p2
                              :ARG1 (c4 / company
                                    :name (n / name
                                          :op1 ""COVID"")))))))"
"(r / report-01
      :ARG0 (n / news
            :ARG1-of (l / local-02))
      :ARG1 (p / possible-01
            :ARG1 (ii / impact-01
                  :ARG0 (l2 / law
                        :name (n2 / name
                              :op1 ""COVID-19""))
                  :ARG1 (m / market
                        :mod (r2 / real-estate)))))"
"(a / and
      :op1 (r / recommend-01
            :ARG1 (s / sell-01
                  :ARG1 (t / thing
                        :ARG2-of (p / price-01))
                  :location (o / online)
                  :purpose (m / maintain-01
                        :ARG1 (d / distance-01
                              :ARG2 (s2 / society)))
                  :mod (o2 / only))
            :time (t2 / time
                  :ARG1-of (s3 / same-01)))
      :op2 (r2 / recommend-01
            :ARG1 (d2 / donate-01
                  :ARG1 (m2 / money
                        :mod (a2 / any)
                        :ARG1-of (g / get-01
                              :ARG0 (p2 / person
                                    :ARG0-of (r3 / retail-01))
                              :ARG2 (ii / inflate-01
                                    :ARG1 t
                                    :ARG2-of (p3 / price-01)))))
            :ARG2 (o3 / organization
                  :name (n / name
                        :op1 ""COVID-19""
                        :op2 ""Fund""
                        :op3 ""for""
                        :op4 ""SMMEs"")
                  :ARG1-of (a3 / affect-01))))"
"(p / possible-01
      :polarity -
      :ARG1 (s / sell-01
            :ARG0 (w / we)
            :ARG1 (c / crop
                  :mod (l / last)
                  :poss w))
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (d / drought)
                  :op2 (t / trend
                        :mod (b / buy-01
                              :ARG0 (p2 / person
                                    :ARG0-of (c3 / consume-01)))
                        :mod (p3 / product
                              :name (n / name
                                    :op1 ""COVID-19"")
                              :time (c4 / current))))))"
"(m / multi-sentence
      :snt1 (t / think-01
            :ARG0 (ii / i)
            :ARG1 (r / reveal-01
                  :ARG0 (p / pandemic
                        :mod (w / whole)
                        :mod (t2 / this))
                  :ARG1 (d / deserve-01
                        :ARG0 (a / and
                              :op1 (p2 / person
                                    :ARG2-of (s / staff-01
                                          :ARG1 (g / government-organization
                                                :name (n / name
                                                      :op1 ""NHS""))))
                              :op2 (p3 / person
                                    :ARG0-of (t3 / teach-01))
                              :op3 (p4 / person
                                    :ARG2-of (s2 / staff-01
                                          :ARG1 (s3 / supermarket))))
                        :ARG1 (p5 / pay-01
                              :ARG1 (m2 / more)
                              :ARG2 a))))
      :snt2 (d2 / deal-01
            :ARG0 (t4 / they)
            :ARG2 (s4 / situation
                  :mod (t5 / this))
            :ARG1-of (r2 / real-04)
            :ARG1-of (w2 / well-09
                  :degree (s5 / so))))"
"(s / see-01
      :ARG0 (ii / i)
      :ARG1 (b / building
            :mod (d / date-entity
                  :century 19))
      :location (s2 / store
            :mod (g / grocery))
      :time (t / today))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (s / speak-01
                  :ARG0 (ii / i)
                  :ARG2 (p / person
                        :ARG2-of (s2 / staff-01
                              :ARG0 (y / you))))
            :op2 (a2 / ask-01
                  :ARG0 ii
                  :ARG1 (t / truth-value
                        :polarity-of (a3 / affect-01
                              :ARG0 (s3 / shut-down-05)
                              :ARG1 (b / business
                                    :poss y)))))
      :snt2 (s4 / say-01
            :ARG0 (h / he)
            :ARG1 (c / cancel-01
                  :ARG0 (p2 / person
                        :quant (l / lot))
                  :ARG1 (b2 / book-03
                        :ARG0 p2)))
      :snt3 (a4 / and
            :op1 (c2 / check-01
                  :ARG0 (ii2 / i)
                  :location (o / online))
            :op2 (ii3 / increase-01
                  :ARG1 (p3 / price-01
                        :ARG0 (y2 / you)))
            :ARG1-of (c3 / cause-01
                  :ARG0 (a5 / and
                        :op1 (s5 / supply-01)
                        :op2 (d / demand-01))
                  :polarity (a6 / amr-unknown)))
      :snt4 (p4 / pick-01
            :ARG0 (ii4 / i)
            :ARG1 (p5 / person
                  :ARG0-of (o2 / operate-01)
                  :mod (a7 / another))
            :ARG1-of c3
            :ARG0 (k / keen-02
                  :ARG1 (y3 / you
                        :ARG2 (p6 / put-03
                              :ARG1 (h2 / health
                                    :poss (p7 / person)))
                        :ARG0-of p6
                        :degree (s6 / so)))))"
"(f / find-01
      :ARG0 (ii / i)
      :ARG1 (s / supply-01
            :ARG1 (p / paper
                  :purpose (t / toilet))
            :mod (l / large)))"
"(ii / increase-01
      :ARG1 (s / sell-01
            :ARG1 (g / grocery
                  :mod (e / electronics))
            :location (c / country
                  :name (n / name
                        :op1 ""China"")))
      :ARG1-of (c2 / cause-01
            :ARG0 (c3 / change-01
                  :ARG1 (d / diet
                        :poss (p / person
                              :ARG0-of (c4 / consume-01)))
                  :time (e2 / epidemic))))"
"(s / see-01
      :ARG0 (f / facility
            :name (n / name
                  :op1 ""519""))
      :ARG1 (s2 / spike-01
            :ARG1 (d / demand-01
                  :ARG1 (s3 / serve-01
                        :ARG1 (f2 / food)))
            :mod (b / big)
            :time (p / pandemic
                  :name (n2 / name
                        :op1 ""COVID-19""))))"
"(r / rush-01
      :ARG1 (p / person)
      :ARG2 (b / buy-01
            :ARG0 p
            :ARG1 (p2 / paper
                  :purpose (t / toilet))
            :ARG2 (s / store
                  :mod (g / grocery)))
      :time (f / find-out-03
            :ARG0 p
            :ARG1 (a / arrive-01
                  :ARG1 (s2 / shipment
                        :ARG1-of (n / new-01)))))"
"(s / seek-01
      :ARG0 (o / organization
            :name (n / name
                  :op1 ""Second""
                  :op2 ""Harvest""
                  :op3 ""Food""
                  :op4 ""Bank""))
      :ARG1 (d / donate-01
            :ARG1 (m / money))
      :purpose (p / prepare-02
            :ARG0 o
            :ARG1 (d2 / demand-01
                  :ARG1-of (ii / increase-01))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (c / change-01
                  :ARG0 (o / outbreak-29
                        :name (n / name
                              :op1 ""COVID19""))
                  :ARG1 (b / behave-01
                        :ARG0 (p / person
                              :ARG0-of (c2 / consume-01))))
            :op2 (r / recommend-01
                  :ARG1 (p2 / prepare-02
                        :ARG0 (p3 / professional
                              :mod (s / small-molecule
                                    :name (n2 / name
                                          :op1 ""SEM"")))
                        :ARG2 c)))
      :snt2 (s2 / share-01
            :ARG0 (p4 / person
                  :name (n3 / name
                        :op1 ""DutcherKimberly"")
                  :poss (c3 / company
                        :name (n4 / name
                              :op1 ""Merkle"")))
            :ARG1 (m2 / more)
            :medium (p5 / publication
                  :name (n5 / name
                        :op1 ""MarketingLand""))))"
"(c / change-01
      :polarity -
      :ARG1 (t / thing
            :ARG2-of (p / price-01
                  :ARG1 (a / and
                        :op1 (p2 / petrol)
                        :op2 (d / diesel))))
      :time (l / lockdown
            :location (f / facility
                  :name (n / name
                        :op1 ""Covid-19"")))
      :frequency (t2 / temporal-quantity
            :quant 22
            :unit (d2 / day)
            :mod (ii / in-a-row)))"
"(m / multi-sentence
      :snt1 (s / seize-01
            :ARG0 (a / and
                  :op1 (g / government-organization
                        :name (n / name
                              :op1 ""DOJ""))
                  :op2 (g2 / government-organization
                        :name (n2 / name
                              :op1 ""HHS"")))
            :ARG1 (a2 / and
                  :op1 (m2 / mask
                        :quant 192000
                        :mod (r / respirator
                              :name (n3 / name
                                    :op1 ""N95"")))
                  :op2 (g3 / glove
                        :quant 598000)
                  :op3 (a3 / and
                        :op1 (e / equipment
                              :ARG3-of (p / protect-01)
                              :ARG1-of (p2 / personal-02)
                              :mod (o / other))
                        :op2 (d / disinfectant)))
            :ARG2 (s2 / someone
                  :ARG0-of (h / hoard-01
                        :ARG1 a2)))
      :snt2 (d2 / distribute-01
            :ARG1 (t / they)
            :ARG2 (p3 / person
                  :ARG0-of (w / work-01
                        :ARG1 (c / care-03
                              :ARG1 (h2 / health)))
                  :location (a4 / and
                        :op1 (s3 / state
                              :name (n4 / name
                                    :op1 ""NY""))
                        :op2 (s4 / state
                              :name (n5 / name
                                    :op1 ""NJ""))))
            :time (a5 / already)))"
"(c / change-01
      :ARG1 (s / situation)
      :time (a / already)
      :ARG1-of (s2 / say-01
            :ARG0 (p / publication
                  :name (n / name
                        :op1 ""Farm""
                        :op2 ""Journal""))
            :time (d / date-entity
                  :day 18
                  :month 3
                  :year 2020)))"
"(c / cut-02
      :ARG0 (a / and
            :op1 (p / publication
                  :name (n / name
                        :op1 ""HUL_News""))
            :op2 (p2 / publication
                  :name (n2 / name
                        :op1 ""PypAyurved""))
            :op3 (p3 / publication
                  :name (n3 / name
                        :op1 ""GodrejGroup"")))
      :ARG1 (t / thing
            :ARG2-of (p4 / price-01
                  :ARG1 (a2 / and
                        :op1 (s / soap)
                        :op2 (s2 / sanitiser))))
      :ARG2-of (r / respond-01
            :ARG1 (o / outbreak-29
                  :ARG1 (c2 / coronavirus))))"
"(c / cause-01
      :ARG0 (s / stockpile-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Karen""))
            :ARG1 (f / food
                  :ARG1-of (w / worth-01
                        :ARG2 (t / temporal-quantity
                              :quant 17
                              :unit (y / year)))))
      :ARG1 (c2 / cook-01
            :ARG0 (ii / i)
            :duration (m / month
                  :mod (n2 / next))))"
"(d / do-02
      :ARG0 (s / store
            :mod (g / grocery)
            :poss (y / you))
      :ARG1 (a / amr-unknown)
      :ARG2 (p / protect-01
            :ARG0 s
            :ARG1 (p2 / person
                  :ARG1-of (e / employ-01)
                  :ARG1-of (v / vulnerable-01
                        :ARG2 (d2 / disease
                              :name (n / name
                                    :op1 ""Covid-19""))))))"
"(a / and
      :op1 (c / change-01
            :ARG1 (t / time)
            :degree (s / so))
      :op2 (c2 / change-01
            :ARG1 (p / price-01)
            :degree s))"
"(m / multi-sentence
      :snt1 (q / queue-01
            :polarity -
            :ARG1 (w / we
                  :mod (a / all))
            :ARG2 (s / supermarket)
            :purpose (w2 / wait-01
                  :ARG1 w
                  :ARG2 (o / open-01
                        :ARG1 s)))
      :snt2 (a2 / and
            :op1 (c / come-01
                  :mode imperative
                  :ARG1 (y / you))
            :op2 (s2 / see-01
                  :mode imperative
                  :ARG0 y
                  :ARG1 w)
            :op3 (b / buy-01
                  :mode imperative
                  :ARG0 y
                  :ARG1 (a3 / and
                        :op1 (b2 / bread
                              :ARG1-of (f / fresh-04
                                    :ARG1 (c2 / cake
                                          :ARG1-of (m2 / make-01
                                                :ARG0 (t / team
                                                      :poss (ii / i))
                                                :duration (t2 / through-out
                                                      :op1 (n / night))))))
                        :op2 c2))
            :condition (o2 / open-01
                  :ARG1 (d / door))))"
"(s / say-01
      :ARG0 (p / person
            :ARG0-of (w / work-01
                  :ARG2 (p2 / person
                        :name (n / name
                              :op1 ""Cuomo""))
                  :location (p3 / prison)))
      :ARG1 (c / contrast-01
            :ARG1 (m / make-01
                  :polarity -
                  :ARG0 p
                  :ARG1 (t / thing
                        :ARG0-of (s2 / sanitize-01
                              :ARG1 (h / hand)))
                  :ARG1-of (a / actual-02))
            :ARG2 (a2 / and
                  :op1 (t2 / take-01
                        :ARG0 p
                        :ARG1 (t3 / thing
                              :ARG0-of (s3 / sanitize-01
                                    :ARG1 (h2 / hand))
                              :ARG1-of (e / exist-01))
                        :mod (j / just))
                  :op2 (r / rebot-01
                        :ARG0 p
                        :ARG1 t3
                        :prep-into (t4 / thing
                              :ARG1-of (p4 / package-01)
                              :ARG1-of (l / label-01
                                    :ARG2 (p5 / product
                                          :name (n2 / name
                                                :op1 ""NYS""
                                                :op2 ""Clean""))))))))"
"(m / multi-sentence
      :snt1 (h / have-condition-91
            :ARG1 (a / amr-unknown)
            :ARG2 (u / use-01
                  :ARG0 (y / you)
                  :ARG1 (m2 / multiple
                        :op1 1000000000
                        :instrument-of (b / bail-out-02
                              :ARG0 y
                              :ARG1 (c / corporation)))
                  :ARG2 (b2 / bail-out-02
                        :ARG0 y
                        :ARG1 (d / debt
                              :poss (e / everyone
                                    :ARG0-of (m3 / make-05
                                          :ARG1 (u2 / under
                                                :op1 (m4 / monetary-quantity
                                                      :quant 200000
                                                      :unit (d2 / dollar)))))))))
      :snt2 (a2 / and
            :op1 (b3 / bet-01
                  :ARG0 (ii / i)
                  :ARG2 (l / less-than
                        :op1 (m5 / multiple
                              :op1 1000000000
                              :ARG1-of (u3 / use-01
                                    :ARG0 (y2 / you)))))
            :op2 (m6 / make-02
                  :ARG0 (ii2 / it)
                  :ARG1 (r / rebuy-00
                        :ARG0 (p / person
                              :ARG0-of (c2 / consume-01))
                        :ARG1-of (h2 / have-quant-91
                              :ARG3 (m7 / more
                                    :quant (l2 / lot)))))
            :op3 (m8 / money
                  :ARG1-of (t / tax-01
                        :ARG2 (w / we))
                  :domain ii2
                  :mod (p2 / plus))))"
"(n / notice-01
      :ARG0 (y / you
            :part (t / tooth))
      :ARG1 (f / find-01
            :ARG0 y
            :ARG1 (t2 / thing
                  :ARG2-of (p / price-01
                        :ARG1 (l / lettuce)))
            :location t
            :time (a / after
                  :quant (m / multiple
                        :op1 (t3 / temporal-quantity
                              :quant 1
                              :unit (h / hour))))
            :time (e / eat-01
                  :ARG0 y
                  :ARG1 (s / salad)))
      :polarity (a2 / amr-unknown)
      :time (e2 / ever))"
"(c / continue-01
      :ARG0 (ii / industry
            :mod (r / retail-01))
      :ARG1 (c2 / combat-01
            :ARG0 ii
            :ARG1 (s / shop-01
                  :mod (c3 / cyber)
                  :ARG1-of (a / arise-02
                        :time (b / before
                              :op1 (o / outbreak-29
                                    :name (n / name
                                          :op1 ""COVID-19""))
                              :quant (w / well)))))
      :ARG1-of (c4 / cause-01
            :ARG0 (s2 / shut-down-05
                  :ARG0 o
                  :ARG1 (s3 / store
                        :quant (m / multiple
                              :op1 100000)
                        :location (c5 / country)))))"
"(w / work-01
      :ARG0 (c / country
            :name (n / name
                  :op1 ""Canon""
                  :op2 ""India""))
      :ARG1-of (a / amaze-01)
      :concession (a2 / adversity))"
"(h / hold-04
      :ARG0 (o / organization
            :name (n / name
                  :op1 ""OPEC""))
      :ARG1 (m / meet-03
            :ARG0 o
            :ARG1 (a / and
                  :op1 (c / country
                        :name (n2 / name
                              :op1 ""Russia""))
                  :op2 (o2 / other))
            :topic (c2 / cut-02
                  :ARG1 (o3 / output))
            :mod (e / emergency)))"
"(a / and
      :op1 (d / decrease-01
            :ARG1 (s / sell-01
                  :ARG1 (l / lamb)
                  :ARG1-of (c / cause-01
                        :ARG0 (c2 / coronavirus)))
            :ARG2 (s2 / significant-02))
      :op2 (e / experience-01
            :ARG0 (p / person
                  :ARG0-of (f / farm-01
                        :ARG1 (s3 / sheep))
                  :location (w / worldwide))
            :ARG1 (a2 / and
                  :op1 (s4 / sad-02
                        :ARG1 p
                        :degree (e2 / extreme))
                  :op2 (d2 / disappoint-01
                        :ARG1 p
                        :degree (e3 / extreme)))
            :ARG1-of (c3 / cause-01
                  :ARG0 (d3 / demand-01
                        :ARG1 (f2 / food
                              :purpose (h / holiday-01))
                        :mod (l2 / little
                              :degree (v / very))
                        :time (y / year
                              :mod (t / this))
                        :ARG1-of (c4 / cause-01
                              :ARG0 (o / outbreak-29
                                    :ARG1 c2))))))"
"(m / multi-sentence
      :snt1 (a / and
            :op2 (d / do-02
                  :ARG0 (t / they)
                  :ARG1 (e / everything
                        :ARG1-of (d2 / do-02
                              :ARG0 t
                              :ARG1-of (p / possible-01)))
                  :ARG2 (s / stop-03
                        :ARG0 t
                        :ARG1 (b / become-01
                              :ARG1 (w / we)
                              :ARG2 (d3 / depend-01
                                    :polarity -
                                    :ARG0 w
                                    :ARG1 (e2 / energy))))))
      :snt2 p
      :ARG1 (r / right-06
            :ARG1 (p2 / person
                  :name (n / name
                        :op1 ""Trump""))
            :ARG2 (c / country
                  :name (n2 / name
                        :op1 ""China""))))"
"(ii / imagine-01
      :polarity -
      :ARG0 (ii2 / i)
      :ARG1 (m / monitor-01
            :ARG0 (r / role
                  :poss ii2
                  :mod (s / society
                        :mod (d / dystopian)))
            :ARG1 (d2 / distribute-01
                  :ARG1 (p / paper
                        :purpose (t / toilet))))
      :time (e / ever))"
(a / amr-empty)
"(g / give-01
      :ARG0 (p / photography
            :ARG1-of (ii / include-91
                  :ARG2 (m / medium
                        :ARG1-of (p2 / powerful-02
                              :ARG2-of (h / have-degree-91
                                    :ARG1 m
                                    :ARG3 (m2 / most))))))
      :ARG1 (l / look-into-11
            :ARG0 (y / you)
            :ARG1 (t / thing
                  :manner-of (a / affect-01
                        :ARG0 (c / coronavirus)
                        :ARG1 (l2 / live-01
                              :ARG0 (p3 / person
                                    :ARG0-of (c2 / consume-01)
                                    :mod (c3 / country
                                          :name (n / name
                                                :op1 ""US"")))))))
      :ARG2 y)"
"(m / multi-sentence
      :snt1 (m2 / miss-01
            :ARG0 (ii / i)
            :ARG1 (p / possible-01
                  :ARG1 (s / shop-01
                        :ARG0 ii
                        :location (a / and
                              :op1 (o / online)
                              :op2 (o2 / offline)))))
      :snt2 (n / need-01
            :ARG0 (ii2 / i)
            :ARG1 (g / go-back-19
                  :ARG1 (t / this
                        :mod (a2 / all))
                  :ARG2 (n2 / normal-02
                        :ARG1 t)))
      :snt3 (c / create-01
            :ARG0 (p2 / person
                  :name (n3 / name
                        :op1 ""Corona""))
            :ARG1 (b / barrier
                  :mod (s2 / such)))
      :snt4 (h / have-mod-91
            :polarity -
            :ARG1 (t2 / transport-01
                  :ARG1-of (p3 / public-02))
            :ARG2 (ii3 / it)
            :mod (j / just))
      :snt5 (n4 / need-01
            :ARG0 (w / we)
            :ARG1 (d / do-02
                  :ARG1 (t3 / this)
                  :time (a3 / already))
            :purpose (p4 / possible-01
                  :ARG1 (e / enjoy-01
                        :ARG0 (ii4 / i)
                        :ARG1 ii4))))"
"(m / multi-sentence
      :snt1 (d / do-02
            :ARG1 (a / amr-unknown
                  :mod (e / else))
            :ARG2-of (e2 / except-01
                  :ARG1 (r / relieve-01
                        :ARG1 (s / stress-02
                              :quant (s2 / some))
                        :ARG2 (h / humor
                              :mod (v / virus
                                    :name (n / name
                                          :op1 ""Corona""))
                              :quant (s3 / some)))))
      :snt2 (o / open-01
            :ARG1 (o2 / office
                  :mod (p / post)
                  :mod (c / country
                        :name (n2 / name
                              :op1 ""US"")))
            :mod (s4 / still)
            :ARG2-of (t / thankful-02)
            :ARG0-of (c2 / cause-01
                  :ARG1 (p2 / possible-01
                        :ARG1 (s5 / ship-01
                              :ARG0 (w / we)
                              :ARG1 (p3 / product
                                    :poss w)
                              :mod (s6 / still))))))"
"(m / multi-sentence
      :snt1 (d / double-01
            :ARG0 (c / corporation
                  :name (n / name
                        :op1 ""Rising""
                        :op2 ""Pharmaceuticals"")
                  :mod (d2 / drug))
            :ARG1 (t / thing
                  :ARG2-of (p / price-01
                        :ARG1 (t2 / thing
                              :ARG3-of (t3 / treat-03
                                    :ARG2 (c2 / coronavirus)
                                    :mod (p2 / potential)))))
            :time (d3 / date-entity
                  :month 1))
      :snt2 (n2 / need-01
            :ARG0 (g / government-organization
                  :name (n3 / name
                        :op1 ""Department""
                        :op2 ""of""
                        :op3 ""Health""
                        :op4 ""and""
                        :op5 ""Human""
                        :op6 ""Services""))
            :ARG1 (u / use-01
                  :ARG0 g
                  :ARG1 (t4 / thing
                        :ARG0-of (s / safeguard-01))
                  :ARG2 (k / keep-04
                        :ARG0 t4
                        :ARG1 (c3 / company
                              :name (n4 / name
                                    :op1 ""Big""
                                    :op2 ""Pharma""))
                        :ARG2 (j / jack-up-02
                              :ARG0 c3
                              :ARG1 (t5 / thing
                                    :ARG2-of (p3 / price-01
                                          :ARG1 (d4 / drug)))
                              :time (p4 / pandemic
                                    :mod (g2 / globe)))))))"
"(m / multi-sentence
      :snt1 (f / fall-01
            :ARG1 (p / price-01
                  :ARG1 (c / commodity
                        :ARG2-of (e / except-01
                              :ARG1 (g / gold))))
            :manner (s / sharp)
            :time (b / before
                  :op1 (n / now)
                  :duration (t / temporal-quantity
                        :quant 1
                        :unit (m2 / month))))
      :snt2 (d / decline-01
            :ARG1 (m3 / market)
            :manner (r / rapid)
            :ARG1-of (c2 / cause-01
                  :ARG0 (o / outbreak-29
                        :ARG1 (c3 / coronavirus
                              :ARG1-of (n2 / new-01)))))
      :snt3 (s2 / say-01
            :ARG0 (p2 / person
                  :name (n3 / name
                        :op1 ""Kline""))
            :time (d2 / date-entity
                  :day 12
                  :month 2
                  :year 2020)))"
"(p / possible-01
      :ARG1 (f / find-01
            :ARG0 (ii / i)
            :ARG1 (s / soda
                  :mod (c / club))
            :time (f2 / final)
            :location (s2 / supermarket
                  :ARG1-of (l / local-02)))
      :ARG1-of (c2 / cause-01
            :ARG0 (p2 / party-01
                  :ARG0 (p3 / person
                        :location (a / area
                              :poss ii))
                  :mod (c3 / cocktail)
                  :time (n / no-longer))))"
"(m / multi-sentence
      :snt1 (c / change-01
            :ARG1 (b / behave-01
                  :ARG0 (p / person
                        :ARG0-of (c2 / consume-01)))
            :ARG2-of (r / result-01
                  :ARG1 (p2 / product
                        :name (n / name
                              :op1 ""COVID-19""))))
      :snt2 (n2 / notice-01
            :ARG0 (w / we)
            :ARG1 (c3 / combine-01
                  :ARG1 (p3 / product)
                  :ARG2-of (ii / interest-01)
                  :ARG1-of (s / see-01
                        :polarity -
                        :ARG0 w
                        :mod (u / usual)
                        :time (b2 / behave-01
                              :ARG1 (s2 / shop-01
                                    :medium (o / online))
                              :ARG1-of (r2 / regular-03)))
                  :quant (s3 / some))
            :location (c4 / company
                  :name (n3 / name
                        :op1 ""ChannelSight"")))
      :snt3 (r3 / read-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (b3 / blog-01
                  :ARG0 w))
      :purpose (l / learn-01
            :ARG0 y
            :ARG1 (m2 / more)))"
"(p / possible-01
      :ARG1 (a / attribute-01
            :ARG1 (t / transform-01
                  :ARG1 (m / market
                        :mod (p2 / property)
                        :mod (c / country
                              :name (n / name
                                    :op1 ""Australia"")))
                  :ARG2 (b / bust-06
                        :ARG1 m)
                  :ARG3 (b2 / boom-02
                        :ARG0 m))
            :ARG2 (s / supply-01
                  :ARG1 (c2 / credit-02)))
      :mod (ii / invest-01)
      :mod (c3 / city
            :name (n2 / name
                  :op1 ""Sydney""))
      :mod (c4 / city
            :name (n3 / name
                  :op1 ""Melbourne"")))"
"(e / explore-01
      :ARG0 (f / firm
            :example (a / and
                  :op1 (c / company
                        :name (n / name
                              :op1 ""Comfort""
                              :op2 ""Delgro""))
                  :op2 (c2 / company
                        :name (n2 / name
                              :op1 ""SMRT""
                              :op2 ""Roads""))))
      :ARG1 (o / option
            :manner-of (h / help-01
                  :ARG0 f
                  :ARG1 (d / deliver-01)
                  :ARG2 (p / platform
                        :mod (g / grocery
                              :mod (o2 / online)))
                  :time (s / surge-01
                        :ARG1 (d2 / demand-01)))))"
"(d / define-01
      :ARG1 (ii / insanity)
      :ARG2 (a / and
            :op1 (d2 / do-02
                  :ARG1 (t / thing
                        :ARG1-of (s / same-01))
                  :frequency (o / over-and-over))
            :op2 (e / expect-01
                  :ARG1 (t2 / thing
                        :ARG2-of (r / result-01)
                        :ARG1-of (d3 / differ-02)))))"
"(w / write-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""DomYanchunas"")
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (ii / i)
                  :ARG2 (c / colleague)))
      :ARG1 (a / article
            :ARG0-of (d / detail-01
                  :ARG1 (l / lose-02
                        :ARG1 (j / job)
                        :time (s / so-far)
                        :location (s2 / sector
                              :mod (p2 / person
                                    :ARG0-of (c2 / consume-01
                                          :ARG1 (m / metal))))
                        :ARG1-of (c3 / cause-01
                              :ARG0 (a2 / assail-01
                                    :ARG0 (c4 / company
                                          :name (n2 / name
                                                :op1 ""Covid-19""))
                                    :ARG1 (e / economy
                                          :mod (c5 / country
                                                :name (n3 / name
                                                      :op1 ""US"")))))))
            :mod (c6 / comprehensive)))"
"(m / multi-sentence
      :snt1 (f / fix-03
            :ARG0 (g / government-organization
                  :name (n / name
                        :op1 ""Ministry""
                        :op2 ""of""
                        :op3 ""Rwanda""
                        :op4 ""Trade""))
            :ARG1 (m2 / monetary-quantity
                  :ARG2-of (p / price-01
                        :ARG1 (f2 / food)))
            :purpose (p2 / prevent-01
                  :ARG0 g
                  :ARG1 (h / hike-02
                        :ARG0 (m3 / market)
                        :ARG1 (m4 / monetary-quantity
                              :ARG2-of (p3 / price-01))
                        :time (o / outbreak-29
                              :ARG1 (d / disease
                                    :name (n2 / name
                                          :op1 ""coronavirus""))))))
      :snt2 (l / lead-02))"
"(k / keep-up-05
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (d / date-01
            :ARG1 (d2 / disrupt-01
                  :ARG0 (v / virus
                        :mod (c / coronavirus))
                  :ARG1 (a / and
                        :op1 (c2 / company
                              :ARG0-of (r / retail-01))
                        :op2 (c3 / chain
                              :ARG0-of (s / supply-01))
                        :op3 (c4 / company
                              :mod (g / good
                                    :mod (p / person
                                          :ARG0-of (c5 / consume-01)))))
                  :mod (l / last)))
      :manner (s2 / sign-up-03
            :ARG0 y
            :ARG3 (n / newsletter
                  :name (n2 / name
                        :op1 ""Consumers""
                        :op2 ""Edge""))))"
"(c / cause-01
      :ARG0 (c2 / close-01
            :ARG1 (b / border
                  :location (a / and
                        :op1 (s / state
                              :name (n / name
                                    :op1 ""Andhra""
                                    :op2 ""Pradesh""))
                        :op2 (s2 / state
                              :name (n2 / name
                                    :op1 ""Telangana"")))
                  :mod (ii / interstate)))
      :ARG1 (d / drop-01
            :ARG1 (p / price-01
                  :ARG1 (p2 / paddy)))
      :location s2)"
"(p / possible-01
      :ARG1 (l / learn-01
            :ARG0 (p2 / person
                  :ARG0-of (p3 / play-01
                        :ARG1 (c / commerce
                              :mod (o / online)))
                  :mod (t / travel-01))
            :ARG1 (a / amr-unknown)
            :source (p4 / perspective
                  :mod (d / defraud-01))
            :time (s / surge-01
                  :ARG1 (s2 / shop-01
                        :medium (o2 / online))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (p5 / pandemic
                              :mod (c3 / coronavirus))))))"
"(p / publish-01
      :ARG1 (a / article
            :ARG1-of (n / new-01)
            :ARG1-of (t / title-01
                  :ARG2 (s / struggle-02
                        :ARG0 (b / bank
                              :mod (f / food)
                              :location (s2 / state
                                    :name (n2 / name
                                          :op1 ""Arkansas"")))
                        :ARG1 (m / meet-01
                              :ARG0 b
                              :ARG1 (d / demand-01))
                        :ARG1-of (c / cause-01
                              :ARG0 (ii / impact-01
                                    :ARG0 (p2 / program
                                          :name (n3 / name
                                                :op1 ""COVID-19""))
                                    :ARG1 (j / job))))))
      :medium (c2 / company
            :name (n4 / name
                  :op1 ""Fintech""
                  :op2 ""Zoom"")))"
"(c / cause-01
      :ARG0 (a / amr-unknown)
      :ARG1 (l / let-01
            :polarity -
            :ARG0 (c2 / company
                  :name (n / name
                        :op1 ""Trader""
                        :op2 ""Joe's""))
            :ARG1 (w / wear-01
                  :ARG0 (p / person
                        :ARG1-of (e / employ-01
                              :ARG0 c2))
                  :ARG1 (g / glove))))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (o / organization
                  :name (n / name
                        :op1 ""COVID-19""))
            :ARG1 (n2 / normal-02
                  :ARG1 (d / day
                        :mod (e / every))
                  :ARG1-of (n3 / new-01)))
      :snt2 (p / person
            :ARG0-of (w / work-01
                  :mod (e2 / emergency))
            :mod (e3 / essential)
            :domain (p2 / person
                  :ARG1-of (e4 / employ-01
                        :ARG0 (s2 / store
                              :mod (g / grocery))))))"
"(p / possible-01
      :ARG1 (ii / interest-01
            :ARG2 (t / this)))"
"(a / and
      :op1 (c / change-01
            :ARG0 (s / shop-01
                  :mod (o / online))
            :ARG1 (b / behave-01
                  :ARG0 (s2 / shop-01
                        :mod (r / retail-01)))
            :duration (p / permanent))
      :op2 (b2 / benefit-01
            :ARG0 s
            :ARG1 (a2 / and
                  :op1 (c2 / company
                        :name (n / name
                              :op1 ""BZUN""))
                  :op2 (c3 / company
                        :name (n2 / name
                              :op1 ""JD""))
                  :op3 (c4 / company
                        :name (n3 / name
                              :op1 ""BABA"")))
            :time (r2 / run-13
                  :ARG1-of (l / long-03))))"
"(p / present-01
      :ARG0 (a / and
            :op1 (p2 / person
                  :name (n / name
                        :op1 ""Troy""
                        :op2 ""Jenkins""))
            :op2 (p3 / person
                  :name (n2 / name
                        :op1 ""Matthew""
                        :op2 ""White"")))
      :ARG1 (w / webinar
            :name (n3 / name
                  :op1 ""Third""
                  :op2 ""Party""
                  :op3 ""Payroll""
                  :op4 ""Processors""
                  :op5 ""Association""))
      :time (d / date-entity
            :day 14
            :month 4
            :year 2020
            :time ""14:00""
            :timezone ""ET""
            :weekday (t / tuesday)))"
(a / amr-empty)
"(c / contribute-01
      :ARG0 (ii / increase-01
            :ARG1 (e / employ-01
                  :polarity -)
            :mod (d / drastic)
            :ARG1-of (c2 / cause-01
                  :ARG0 (p / pandemic
                        :name (n / name
                              :op1 ""COVID-19""))))
      :ARG2 (d2 / demand-01
            :ARG1 (a / assist-01
                  :ARG2 (f / food))
            :ARG1-of (r / rise-01)
            :time (s / struggle-02
                  :ARG0 (p2 / person
                        :location (s2 / state
                              :name (n2 / name
                                    :op1 ""Missouri"")))
                  :ARG1 (m / make-02
                        :ARG0 p2
                        :ARG1 (m2 / meet-05
                              :ARG0 (e2 / end))))))"
"(g / go-02
      :ARG0 (ii / i)
      :ARG4 (s / store
            :mod (g2 / grocery))
      :purpose (g3 / get-01
            :ARG0 ii
            :ARG1 (f / food
                  :beneficiary (f2 / family))))"
"(m / multi-sentence
      :snt1 (h / have-03
            :polarity (a / amr-unknown)
            :ARG0 (y / you)
            :ARG1 (q / question-01
                  :ARG0 y
                  :ARG1 (r / right-05
                        :ARG1 (y2 / you)
                        :ARG2 (c / consume-01
                              :ARG0 y2))
                  :time (p / pandemic
                        :mod (c2 / coronavirus))))
      :snt2 (v / visit-01
            :mode imperative
            :ARG0 (y3 / you)
            :ARG1 (h2 / hub
                  :mod (c3 / company
                        :name (n / name
                              :op1 ""WhichUK"")))
            :purpose (a2 / and
                  :op1 (n2 / news
                        :mod (l / last))
                  :op2 (a3 / advise-01
                        :mod l)
                  :op3 (d / discuss-01
                        :mod (c4 / community)
                        :mod l)
                  :ARG1-of (r2 / relate-01
                        :ARG2 (l2 / law
                              :name (n3 / name
                                    :op1 ""COVID-19""))))))"
"(m / multi-sentence
      :snt1 (h / have-condition-91
            :ARG1 (a / and
                  :op1 (d / drop-05
                        :ARG0 (o / organization
                              :ARG0-of (h2 / have-03
                                    :ARG1 (o2 / or
                                          :op1 (s / set-up-03
                                                :ARG0 o
                                                :ARG1-of (s2 / slow-05
                                                      :mod (u / usual)))
                                          :op2 (p / process-02
                                                :ARG0 o
                                                :ARG1 (o3 / onboard-01
                                                      :ARG0 o)))))
                        :ARG1 (w / work-01
                              :ARG0 o
                              :mod (o4 / other)
                              :mod (a2 / all)))
                  :op2 (w2 / work-01
                        :ARG0 o
                        :time (w3 / weekend))
                  :purpose (g / get-04
                        :ARG0 o
                        :ARG1 (d2 / do-02
                              :ARG0 o
                              :ARG1 (s3 / stuff)
                              :ARG2 (y / you))))
            :ARG2 (w4 / work-01
                  :ARG0 y
                  :ARG1 (p2 / program
                        :name (n / name
                              :op1 ""COVID-19""))))
      :snt2 (a3 / ask-01
            :mode imperative
            :ARG0 y
            :mod (j / just)))"
"(m / multi-sentence
      :snt1 (m2 / make-02
            :ARG0 (a / and
                  :op1 (c / cycleway)
                  :op2 (r / route
                        :mod (p / pedestrian)))
            :ARG1 (a2 / and
                  :op1 (h / have-degree-91
                        :ARG1 (t / transport-01)
                        :ARG2 (r2 / resilience)
                        :ARG3 (m3 / more))
                  :op2 (h2 / have-degree-91
                        :ARG1 t
                        :ARG2 (f / fair-01
                              :ARG1 t)
                        :ARG3 (m4 / more))))
      :snt2 (a3 / and
            :op1 (ii / immune-02
                  :ARG1 (t2 / they)
                  :ARG2 (p2 / price-01
                        :ARG1 (o / oil)))
            :op2 (r3 / resilience
                  :domain t2
                  :degree (q / quite)
                  :prep-to (a4 / and
                        :op1 (w / weather
                              :mod (e / extreme))
                        :op2 (v / virus))))
      :snt3 (d / discriminate-02
            :polarity -
            :ARG0 t2
            :ARG1 (o2 / or
                  :op1 (g / gender)
                  :op2 (r4 / race)
                  :domain (ii2 / income))))"
"(m / multi-sentence
      :snt1 (e / event
            :mod (a / amr-unknown)
            :topic (t / thing
                  :ARG2-of (p / price-01
                        :ARG0 (s / store
                              :ARG1-of (o / obligate-01
                                    :ARG2 (o2 / or
                                          :op1 (s2 / shut-down-05
                                                :ARG1 s)
                                          :op2 (s3 / shorten-04
                                                :ARG0 s
                                                :ARG1 (h / hour
                                                      :poss s)))))))
            :time (r / reopen-01
                  :ARG1 s))
      :snt2 (g / guess-01
            :ARG0 (ii / i)
            :ARG1 (b / be-temporally-at-91
                  :ARG1 (a2 / affect-01
                        :ARG0 (c / crisis
                              :mod (c2 / city
                                    :name (n / name
                                          :op1 ""Corona"")))
                        :ARG1 (w / we))
                  :ARG2 (a3 / after
                        :op1 (g2 / go-02
                              :ARG0 (b2 / bug))
                        :ARG1-of (l / long-03)))))"
"(d / decrease-01
      :ARG1 (p / price-01
            :ARG1 (l / lamb))
      :ARG1-of (s / significant-02)
      :ARG1-of (c / cause-01
            :ARG0 (p2 / possible-01
                  :polarity -
                  :ARG1 (k / keep-up-05
                        :ARG0 (c2 / chain
                              :mod (s2 / supply-01))
                        :ARG1 (d2 / demand-01
                              :ARG1 l)))))"
"(m / multi-sentence
      :snt1 (o / open-09
            :ARG1 (w / we)
            :purpose (a / and
                  :op1 (o2 / order-02
                        :instrument (p / phone))
                  :op2 (o3 / operate-01
                        :ARG1 w))
            :time (c / current))
      :snt2 (c2 / close-01
            :ARG1 (s / store
                  :mod (r / retail-01)
                  :poss (w2 / we))))"
"(m / multi-sentence
      :snt1 (c / company
            :name (n / name
                  :op1 ""CVIDClassy""))
      :snt2 (d / donate-01
            :ARG0 c
            :ARG1 (t / tablet
                  :quant (m2 / multiple
                        :op1 1000000))
            :time (m3 / meanwhile)
            :purpose (f / fight-01
                  :ARG0 c
                  :ARG1 (c2 / criminal-organization
                        :name (n2 / name
                              :op1 ""COVID"")))
            :ARG1-of (ii / instead-of-91
                  :ARG2 (r / raise-01
                        :ARG0 c
                        :ARG1 (t2 / thing
                              :ARG2-of (p / price-01))))))"
"(p / possible-01
      :ARG1 (d / drop-01
            :ARG0 (d2 / delay-01
                  :ARG1 (m / meet-03
                        :ARG0 (o / organization
                              :name (n / name
                                    :op1 ""OPEC""))
                        :ARG0-of (h / help-01
                              :ARG1 (e / ease-02
                                    :ARG1 (t / tension
                                          :mod (b / between
                                                :op1 (c / country
                                                      :name (n2 / name
                                                            :op1 ""Saudi""
                                                            :op2 ""Arabia""))
                                                :op2 (c2 / country
                                                      :name (n3 / name
                                                            :op1 ""Russia""))))
                                    :ARG1-of (p2 / possible-01)))))
            :ARG1 (p3 / price-01
                  :ARG1 (o2 / oil))
            :manner (s / sharp))
      :condition (c3 / continue-01
            :ARG1 (e2 / escalate-01
                  :ARG1 t)))"
"(m / multi-sentence
      :snt1 (r / respond-01
            :ARG1 (a / announce-01
                  :ARG1 (p / product
                        :name (n / name
                              :op1 ""COVID""
                              :op2 19))
                  :mod (l / last))
            :ARG2 (c / close-01
                  :ARG1 (s / store
                        :mod (r2 / retail-01)
                        :poss (w / we))
                  :ARG1-of (s2 / start-01
                        :time (t / today))
                  :time (u / until
                        :op1 (d / date-entity
                              :month 3
                              :day 31))))
      :snt2 (o / operate-01
            :ARG1 (s3 / store
                  :mod (o2 / online)
                  :poss (w2 / we))
            :mod (a2 / as-usual))
      :snt3 (p2 / possible-01
            :ARG1 (o3 / or
                  :op1 (v / visit-01
                        :ARG0 (y / you)
                        :ARG1 (w3 / website
                              :poss (w4 / we)))
                  :op2 (r3 / reach-02
                        :ARG0 y
                        :ARG1 w4
                        :medium p
                        :name (n2 / name
                              :op1 ""Whatsapp"")))))"
"(m / multi-sentence
      :snt1 (h / have-03
            :ARG0 (c / city
                  :name (n / name
                        :op1 ""New""
                        :op2 ""York""))
            :ARG1 (c2 / case-04
                  :ARG1 (d / disease
                        :name (n2 / name
                              :op1 ""Coronavirus""))
                  :ARG1-of (ii / increase-01
                        :frequency (t / temporal-quantity
                              :quant 1
                              :unit (d2 / day))))
            :time (d3 / date-entity
                  :year 2003
                  :month 7
                  :day 24))
      :snt2 (n3 / next
            :domain (s / state
                  :name (n4 / name
                        :op1 ""New""
                        :op2 ""Jersey"")))
      :snt3 (w / want-01
            :ARG0 (ii2 / i)
            :ARG1 (s2 / say-01
                  :ARG0 ii2
                  :ARG1 (k / keep-02
                        :polarity -
                        :mode imperative
                        :ARG0 (y / you)
                        :ARG1 (h2 / hoard-01
                              :ARG0 y
                              :ARG1 (ii3 / item
                                    :quant (m2 / many))
                              :purpose (p / possible-01
                                    :ARG1 (g / get-01
                                          :ARG0 (o / other)
                                          :ARG1 ii3
                                          :mod (s3 / still))))
                        :condition (s4 / stock-up-02
                              :ARG0 y
                              :ARG1 ii3
                              :time (a / already)))
                  :ARG2 (p2 / person
                        :mod (t2 / that)))
            :mod (a2 / also)))"
"(l / launch-01
      :ARG0 (c / company)
      :ARG1 (s / store
            :mod c
            :name (n / name
                  :op1 ""Tmall""))
      :purpose (m / make-up-16
            :ARG0 c
            :ARG1 (d / drop-01
                  :ARG1 (s2 / sell-01)
                  :ARG1-of (c2 / cause-01
                        :ARG0 (c3 / close-down-04
                              :ARG0 c
                              :ARG1 (s3 / store
                                    :poss c
                                    :mod (b / brick-and-mortar)))))))"
"(h / hit-02
      :ARG0 (t / thing
            :ARG2-of (p / price-01
                  :ARG1 (w / wheat))
            :location (c / country
                  :name (n / name
                        :op1 ""UK"")))
      :ARG1 (h2 / high-02
            :ARG1 t
            :ARG2 (r / rate-entity-91
                  :ARG1 (m / monetary-quantity
                        :quant 175
                        :unit (p2 / pound))
                  :ARG2 (t2 / ton))))"
"(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (b / believe-01
                  :ARG1 (d / destroy-01
                        :ARG0 (a / and
                              :op1 (s / sanitizer)
                              :op2 (s2 / shop))
                        :ARG1 (d2 / disease
                              :name (n / name
                                    :op1 ""Coronavirus""))))
            :ARG1 (p / possible-01
                  :ARG1 (u / use-01
                        :ARG1 (a2 / alcohol
                              :mod (b2 / base))
                        :ARG2 (d3 / develop-02
                              :ARG1 (a3 / and
                                    :op1 (m2 / medication)
                                    :op2 (v / vaccine)
                                    :beneficiary (h / human))))))
      :snt2 (l / look-up-05
            :ARG0 (c2 / country
                  :name (n2 / name
                        :op1 ""India""))
            :ARG1 (g / guy
                  :mod (y / you))
            :ARG2 (c3 / company
                  :name (n3 / name
                        :op1 ""Solutions""))
            :ARG1-of c
            :ARG0 (s3 / send-01
                  :ARG0 (w / we)
                  :ARG1 (m3 / medicine)))
      :snt3 (ii / idea
            :mod (w2 / wild)
            :ARG1-of (o / out-06
                  :ARG2 (b3 / box))
            :mod (j / just)))"
"(b / buy-01
      :ARG0 (p / person)
      :ARG1 (g / gas
            :quant (l / less))
      :time (p2 / pandemic
            :mod (c / coronavirus)))"
"(s / struggle-02
      :ARG0 (r / retailer
            :mod (c / commerce
                  :mod (e / electronics))
            :ARG1-of (h / have-degree-91
                  :ARG2 (l / large)
                  :ARG3 (m / most)))
      :ARG1 (k / keep-up-05
            :ARG0 r
            :ARG1 (d / demand-01
                  :ARG0 (p / person
                        :ARG0-of (c2 / consume-01))
                  :mod (p2 / precedent
                        :polarity -)))
      :time (p3 / pandemic
            :ARG1-of (g / go-on-15)))"
"(c / contain-01
      :ARG0 (k / kit
            :purpose (p / prepare-02
                  :ARG2 (d / disease
                        :name (n / name
                              :op1 ""PES""))))
      :ARG1 (a / amr-unknown))"
"(h / have-degree-91
      :ARG1 (c / cost-01
            :ARG1 (t / test
                  :quant 19
                  :ARG1-of (d / do-02
                        :ARG0 (l / lab
                              :ARG1-of (p / private-03)
                              :location (c2 / country
                                    :name (n / name
                                          :op1 ""India""))))
                  :mod (c3 / company
                        :name (n2 / name
                              :op1 ""Covid""))))
      :ARG2 (h2 / high-02
            :ARG1 c)
      :ARG3 (t2 / too))"
"(m / multi-sentence
      :snt1 (o / or
            :op1 (r / reduce-01
                  :ARG1 (a / access-01
                        :ARG0 (p / person
                              :ARG0-of (d / drive-01))
                        :ARG1 (s / service
                              :ARG1-of (c / critical-02))))
            :op2 (c2 / cut-off-04
                  :ARG1 a
                  :mod (e / even)))
      :snt2 (b / become-01
            :ARG1 (t / track-down-02
                  :ARG1 (p2 / place
                        :mod (d2 / decent)
                        :location-of (o2 / or
                              :op1 (s2 / sleep-01
                                    :ARG0 p)
                              :op2 (s3 / shower-01
                                    :ARG0 p)
                              :op3 (u / use-01
                                    :ARG0 p
                                    :ARG1 (t2 / toilet
                                          :ARG1-of (c3 / clean-04))
                                    :mod (e2 / even)))))
            :ARG2 (d3 / difficult)))"
"(m / multi-sentence
      :snt1 (s / see-01
            :ARG0 (b / bank
                  :mod (f / food)
                  :location (a / across
                        :op1 (c / country
                              :name (n / name
                                    :op1 ""US"")))
                  :ARG1-of (l / local-02))
            :ARG1 (d / demand-01
                  :ARG1 (f2 / food)
                  :ARG1-of (ii / increase-01))
            :ARG1-of (c2 / cause-01
                  :ARG0 (o / or
                        :op1 (l2 / lose-02
                              :ARG0 (p / person)
                              :ARG1 (j / job
                                    :poss p))
                        :op2 (s2 / stock-up-02
                              :ARG0 p
                              :ARG1 (t / thing
                                    :ARG1-of (s3 / supply-01))
                              :ARG1-of (c3 / cause-01
                                    :ARG0 (p2 / pandemic
                                          :name (n2 / name
                                                :op1 ""COVID""
                                                :op2 19)))))))
      :snt2 (p3 / possible-01
            :ARG1 (d2 / donate-01
                  :ARG0 (y / you)
                  :ARG2 (b2 / bank
                        :mod (f3 / food)
                        :ARG1-of (l3 / local-02)
                        :poss y))
            :polarity (a2 / amr-unknown)))"
"(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Greg""
                  :op2 ""Hunt"")
            :ARG0-of (h / have-org-role-91
                  :ARG1 (p2 / parliament)
                  :ARG2 (m / member)))
      :ARG1 (r / recommend-01
            :ARG1 (b / ban-01
                  :ARG1 (q / queue-01
                        :ARG2 (s2 / supermarket))
                  :purpose (p3 / protect-01
                        :ARG1 (w / we)
                        :ARG2 (l / law
                              :name (n2 / name
                                    :op1 ""COVID-19""))))))"
"(r / recipe
      :mod (s / secret)
      :ARG1-of (e / experience-01
            :ARG0 (ii / i))
      :domain (t / treat-03
            :ARG2 (d / disease
                  :name (n / name
                        :op1 ""Covid-19""))
            :mod (f / food)
            :location (s2 / supermarket)
            :condition (a / as-long-as
                  :op1 (t2 / take-01
                        :frequency 1
                        :ARG0 ii
                        :ARG1 (ii2 / it))
                  :op2 (a2 / and
                        :op1 (d2 / disappear-01
                              :ARG1 (p / phlegm))
                        :op2 (r2 / recover-01
                              :ARG1 (b / breathe-01)
                              :ARG1-of (s3 / smooth-04))))))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (a / agree-01
                  :ARG0 ii
                  :ARG2 (p / person
                        :name (n / name
                              :op1 ""Mr.""
                              :op2 ""President"")))
            :ARG2 p)
      :snt2 (m2 / mean-01
            :ARG0 (ii2 / i)
            :ARG2 (c / care-01
                  :ARG0 (a2 / amr-unknown)
                  :ARG1 (o / or
                        :op1 (l / live-01
                              :ARG0 (p2 / person
                                    :quant 250000
                                    :mod (c2 / country
                                          :name (n2 / name
                                                :op1 ""America""))))
                        :op2 (s2 / system
                              :mod (h / healthcare)
                              :mod c2
                              :ARG1-of (g / general-02)))
                  :time (d / down-03
                        :ARG1 (t / thing
                              :ARG2-of (p3 / price-01
                                    :ARG1 (s3 / stock
                                          :poss (a3 / and
                                                :op1 (c3 / company
                                                      :name (n3 / name
                                                            :op1 ""Comcast""))
                                                :op2 (c4 / company
                                                      :name (n4 / name
                                                            :op1 ""Delta""
                                                            :op2 ""Airlines""))))))
                        :quant (p4 / point
                              :quant 10))))
      :snt3 (p5 / publication
            :name (n5 / name
                  :op1 ""COVID2019""))
      :snt4 (v / virus
            :mod (p6 / person
                  :name (n6 / name
                        :op1 ""Trump""))))"
"(w / warn-01
      :ARG1 (a / and
            :op1 (n / near-02
                  :polarity -
                  :ARG1 (l / lockdown
                        :mod (c / coronavirus))
                  :ARG2 (e / end-01))
            :op2 (s / set-08
                  :ARG1 (c2 / case-04)
                  :ARG2 (r / rise-01
                        :ARG1 c2
                        :duration (m / multiple
                              :op1 (t / temporal-quantity
                                    :quant 1
                                    :unit (w2 / week))))))
      :ARG2 (p / person
            :mod (c3 / country
                  :name (n2 / name
                        :op1 ""Britain""))))"
"(c / contrast-01
      :ARG1 (p / pride-01
            :ARG0 (ii / i)
            :ARG1 (p2 / person
                  :age (t / temporal-quantity
                        :quant 16
                        :unit (y / year))
                  :poss ii)
            :ARG2 (g / get-01
                  :ARG0 p2
                  :ARG1 (j / job
                        :location (s / supermarket
                              :ARG1-of (l / local-02)))
                  :purpose (h / help-01
                        :ARG0 p2
                        :ARG1 (f / fight-01
                              :ARG1 (c2 / coronavirus)
                              :mod (n / nation))))
            :degree (s2 / so))
      :ARG2 (c3 / cause-01
            :ARG0 (p3 / person
                  :ARG0-of (w / work-01)
                  :ARG1-of (k / key-02)
                  :domain p2
                  :time (n2 / now))
            :ARG1 (m / mean-01
                  :ARG2 (o / obligate-01
                        :ARG1 ii
                        :ARG2 (g2 / go-02
                              :ARG0 ii
                              :ARG4 (s3 / school)))
                  :polarity (a / amr-unknown))))"
"(m / multi-sentence
      :snt1 (r / rise-01
            :ARG1 (p / price-01
                  :ARG1 (f / food))
            :location (g / globe)
            :ARG1-of (c / cause-01
                  :ARG0 (a / and
                        :op1 (c2 / cancel-01
                              :ARG0 (c3 / company
                                    :ARG0-of (s / ship-01))
                              :ARG1 (s2 / sail-01
                                    :quant (o / over
                                          :op1 160)))
                        :op2 (ii / increase-01
                              :ARG0 (c4 / company
                                    :name (n / name
                                          :op1 ""Boeing""))
                              :ARG1 (s3 / shut-down-05
                                    :ARG1 (f2 / factory))))))
      :snt2 (s4 / stick-01
            :ARG1 (p2 / person
                  :ARG0-of (w / work-01
                        :ARG1 (s5 / ship
                              :mod (c5 / cargo))))
            :ARG2 (s6 / sea)
            :ARG1-of (c6 / cause-01
                  :ARG0 (r2 / restrict-01
                        :ARG1 (t / travel-01)))))"
"(m / multi-sentence
      :snt1 (w / work-09
            :ARG1 (d / distance-01
                  :ARG1 (s / society))
            :manner (a / and
                  :op1 (s2 / shut-01
                        :ARG1 (s3 / shop
                              :mod (a2 / all)
                              :ARG2-of (e / except-01
                                    :ARG1 (s4 / shop
                                          :mod (f / food)))))
                  :op2 (a3 / allow-01
                        :ARG1 (e2 / enter-01
                              :ARG0 (p / person
                                    :ARG1-of (h / have-quant-91
                                          :ARG2 (m2 / many)
                                          :ARG3 (s5 / so)))
                              :mod (o / only)
                              :mod (a4 / at-a-time))
                        :mod (o2 / only))))
      :snt2 (w2 / work-01
            :ARG0 (ii / i)
            :ARG1 (s6 / supermarket)
            :ARG0-of (c / cause-01
                  :ARG1 (p2 / possible-01
                        :polarity -
                        :ARG1 (d2 / distance-01
                              :ARG0 ii
                              :ARG1 ii))))
      :snt3 (n / need-01
            :ARG0 (p3 / person)
            :ARG1 (s7 / start-01
                  :ARG0 p3
                  :ARG1 (r / realize-01
                        :ARG0 p3
                        :ARG1 (t / thing
                              :degree-of (b / bad-04
                                    :ARG1 (t2 / this)
                                    :ARG0-of c
                                    :ARG1 (v / virus
                                          :mod (c2 / coronavirus))))))))"
"(m / multi-sentence
      :snt1 (t / talk-01
            :ARG0 (ii / i)
            :ARG2 (a / and
                  :op1 (p / person
                        :ARG0-of (o / operate-01
                              :ARG1 (t2 / till
                                    :mod (s / supermarket))))
                  :op2 (p2 / person
                        :ARG0-of (p3 / post-04)))
            :concession (o2 / occurrence
                  :ARG1-of (r / regular-02)))
      :snt2 (c / contrast-01
            :ARG1 (b / become-01
                  :ARG1 (y / you)
                  :ARG2 (u / use-02
                        :ARG0 y
                        :ARG1 (ii2 / isolate-01
                              :degree (l / level)))
                  :time (s2 / solo
                        :domain y))
            :ARG2 (m2 / make-02
                  :ARG0 (a2 / and
                        :op1 (p4 / person
                              :name (n / name
                                    :op1 ""Covid_19""))
                        :op2 (w / work-01
                              :ARG0 y
                              :location (h / home))
                        :op3 (d / distance-01
                              :ARG1 y
                              :ARG2 (s3 / society)))
                  :ARG1 (a3 / appreciate-02
                        :ARG0 y
                        :ARG1 (ii3 / interact-01
                              :ARG0 (h2 / human)
                              :mod (a4 / any))))))"
"(c / cause-01
      :ARG0 (ii / incident
            :mod (p / process-02
                  :ARG1-of (s / serious-02))
            :location (c2 / company
                  :name (n / name
                        :op1 ""Albert""
                        :op2 ""Heijn"")
                  :ARG1-of (h / have-degree-91
                        :ARG2 (l / large)
                        :ARG3 (m / most)
                        :ARG5 (s2 / supermarket
                              :location (c3 / country
                                    :name (n2 / name
                                          :op1 ""Netherlands""))))))
      :ARG1 (d / disrupt-01
            :ARG0 ii
            :ARG1 (a / and
                  :op1 (c4 / chain
                        :mod (l2 / logistics)
                        :poss c2)
                  :op2 (c5 / chain
                        :mod (s3 / supply-01)
                        :poss c2))
            :ARG1-of (m2 / major-02)))"
"(n / need-01
      :ARG0 (y / you)
      :ARG1 (a / and
            :op1 (e / energy
                  :duration (t / temporal-quantity
                        :quant 5
                        :unit (h / hour)))
            :op2 (p / paper
                  :purpose (t2 / toilet)))
      :purpose (s / survive-01
            :ARG0 y
            :ARG1 (d / disease
                  :name (n2 / name
                        :op1 ""coronavirus""))))"
"(p / paper
      :polarity -
      :purpose (t / toilet)
      :beneficiary (b / bunghole
            :poss (y / you)))"
"(a / announce-01
      :ARG0 (g / government-organization
            :ARG0-of (g2 / govern-01
                  :ARG1 (c / country
                        :name (n / name
                              :op1 ""Saudi""
                              :op2 ""Arabia""))))
      :ARG1 (c2 / cut-02
            :ARG0 g
            :ARG1 (s / spend-01)
            :ARG2 (p / percentage-entity
                  :value 5)
            :ARG3 (a2 / about
                  :op1 (m / monetary-quantity
                        :quant 13000000000
                        :unit (d / dollar)))
            :purpose (o / offset-01
                  :ARG0 g
                  :ARG1 (ii / impact-01
                        :ARG0 (a3 / and
                              :op1 (p2 / price-01
                                    :ARG1 (o2 / oil)
                                    :ARG1-of (p3 / plunge-01))
                              :op2 (a4 / affect-01
                                    :ARG0 (c3 / coronavirus)
                                    :ARG1 (o3 / outlook
                                          :mod (e / economy)
                                          :poss g)))
                        :ARG1 g))))"
"(m / multi-sentence
      :snt1 (e / empty-01
            :mode imperative
            :polite +
            :ARG0 (y / you)
            :ARG1 (s / supermarket)
            :ARG2 (a / and
                  :op1 (m2 / milk)
                  :op2 (e2 / egg)
                  :op3 (c / chicken)
                  :op4 (m3 / meat)))
      :snt2 (n / need-01
            :ARG0 (p / person
                  :mod (o / other))
            :ARG1 (t / thing
                  :mod (t2 / this))
            :time (c2 / crisis
                  :mod (n2 / nation)
                  :ARG1-of (c3 / cause-01
                        :ARG0 (c4 / coronavirus)))))"
"(a / article
      :ARG1-of (w / write-01
            :ARG1-of (w2 / well-09))
      :topic (a2 / and
            :op1 (t / trend
                  :mod (p / person
                        :ARG0-of (c / consume-01))
                  :time (l / lock-down-06
                        :ARG0 (c2 / country
                              :name (n / name
                                    :op1 ""China""))))
            :op2 (l2 / lesson
                  :source l))
      :frequency (r / rate-entity-91
            :ARG3 (t2 / temporal-quantity
                  :quant 1
                  :unit (d / day))
            :duration (t3 / temporal-quantity
                  :quant 3
                  :unit (m / month)))
      :domain (t4 / this))"
"(s / say-01
      :ARG0 (r / report
            :ARG1-of (n / new-01))
      :ARG1 (p / possible-01
            :ARG1 (c / collapse-01
                  :ARG0 (l / leave-15
                        :ARG1 (c2 / country
                              :name (n2 / name
                                    :op1 ""Great""
                                    :op2 ""Britain"")))
                  :ARG1 (p2 / price-01
                        :ARG1 (h / house))
                  :ARG2 (p3 / percentage-entity
                        :value 20)))
      :ARG2 (p4 / political-party
            :name (n3 / name
                  :op1 ""Labour"")
            :mod c2))"
"(a / article
      :mod (s / science)
      :topic (ii / ionize-01
            :ARG1 (a2 / and
                  :op1 (a3 / air)
                  :op2 (v / virus)))
      :domain (t / this))"
"(m / multi-sentence
      :snt1 (r / remain-01
            :ARG1 (m2 / market
                  :mod (e / equity)
                  :mod (c / country
                        :name (n / name
                              :op1 ""US"")))
            :ARG3 (u / upbeat)
            :ARG1-of (c2 / cause-01
                  :ARG0 (o / optimism
                        :topic (p / possible-01
                              :ARG1 (s / slow-01
                                    :ARG1 (p2 / pace-01
                                          :ARG1 (c3 / case-03
                                                :mod (l / law
                                                      :name (n2 / name
                                                            :op1 ""COVID-19""))
                                                :ARG1-of (n3 / new-01))))))))
      :snt2 (a / and
            :op1 (u2 / up-02
                  :ARG1 (ii / index
                        :mod (c4 / company
                              :name (n4 / name
                                    :op1 ""S&P""
                                    :op2 500)))
                  :ARG2 (p3 / percentage-entity
                        :value 3.4))
            :op2 (f / follow-02
                  :ARG0 (a2 / and
                        :op1 (m3 / monetary-quantity
                              :ARG2-of (p4 / price-01
                                    :ARG1 (o2 / oil)))
                        :op2 (m4 / monetary-quantity
                              :ARG2-of (y / yield-01
                                    :ARG1 (b / bond))))
                  :ARG1-of (f2 / follow-suit-06))
            :op3 (h / have-degree-91
                  :ARG1 (a3 / and
                        :op1 m3
                        :op2 m4)
                  :ARG2 (h2 / high-02
                        :ARG1 a3
                        :mod (a4 / also))
                  :ARG3 (m5 / more))))"
"(a / attempt-01
      :ARG0 (s / store
            :mod (d / department)
            :ARG1-of (h / hold-01
                  :ARG1-of (p / private-03))
            :ARG1-of (r / resemble-01
                  :ARG2 (r2 / retailer
                        :quant (m / many))))
      :ARG1 (s2 / shore-up-01
            :ARG0 s
            :ARG1 (f / finance
                  :poss s))
      :time (p2 / pandemic
            :name (n / name
                  :op1 ""COVID-19"")))"
"(m / multi-sentence
      :snt1 (ii / increase-01
            :ARG1 (p / price-01
                  :ARG1 (m2 / mask
                        :mod (f / face)))
            :manner (d / dramatic)
            :ARG1-of (c / cause-01
                  :ARG0 (ii2 / increase-01
                        :ARG1 (s / spread-02
                              :ARG1 (v / virus))))
            :ARG1-of (r / reach-01
                  :polarity -
                  :ARG0 (m3 / man
                        :mod (c2 / common))
                  :mod (a / almost)))
      :snt2 (s2 / sell-01
            :ARG1 (m4 / mask
                  :mod (p2 / product
                        :name (n / name
                              :op1 ""N95""))
                  :ARG1-of (s3 / single-02))
            :ARG3 (m5 / monetary-quantity
                  :quant 200
                  :unit (r2 / rupee))))"
"(m / multi-sentence
      :snt1 (h / have-03
            :ARG0 (y / you)
            :ARG1 (m2 / mouth
                  :mod (p / potty)
                  :mod (s / such))
            :prep-with (p2 / person
                  :ARG0-of (r / report-01)
                  :mod (g / great))
            :mod (e / especially))
      :snt2 (a / and
            :op2 (s2 / secure
                  :polarity -
                  :domain (y2 / you))
            :op3 (k / kill-01
                  :ARG0 y2
                  :ARG1 (c / country
                        :name (n / name
                              :op1 ""America""))))
      :snt3 (b / become-01
            :ARG1 (f / find-01
                  :ARG1 (p3 / paper
                        :purpose (t / toilet)))
            :ARG2 (c2 / challenge-01
                  :ARG2 (v / virus))
            :time (n2 / now))
      :snt4 (m3 / more
            :polarity -))"
"(s / secure-02
      :ARG0 (u / union
            :mod (c / country
                  :name (n / name
                        :op1 ""Spain"")))
      :ARG1 (p / protect-01
            :ARG1 (p2 / person
                  :ARG0-of (w / work-01
                        :ARG2 (s2 / supermarket))
                  :ARG0-of (s3 / say-01
                        :ARG1 (e / experience-01
                              :ARG0 p2
                              :ARG1 (h / have-degree-91
                                    :ARG1 (c2 / condition
                                          :location (w2 / work-01))
                                    :ARG2 (b / bad-07
                                          :ARG1 c2)
                                    :ARG3 (m / most))
                              :ARG1-of (c3 / cause-01
                                    :ARG0 (e2 / event
                                          :name (n2 / name
                                                :op1 ""COVID19""))))))
            :ARG1-of h
            :ARG2 (g / good-02)
            :ARG1-of g
            :ARG3 (m2 / more)))"
"(a / and
      :op1 (s / skip-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (s2 / store
                  :mod (g / grocery))
            :instrument (c / company
                  :name (n / name
                        :op1 ""Misfits""
                        :op2 ""Market"")))
      :op2 (g2 / get-01
            :mode imperative
            :ARG0 y
            :ARG1 (o / order-02
                  :ARG0 y
                  :quant (p / percentage-entity
                        :value 50))
            :ARG3 (c2 / code
                  :mod (c3 / coupon)
                  :value ""COOKWME-FE8VLT"")))"
"(r / realize-01
      :polarity -
      :ARG0 (ii / i
            :part (f / face))
      :ARG1 (t / thing
            :degree-of (ii2 / itch-01
                  :ARG1 f
                  :location (s / store
                        :mod (g / grocery))
                  :time (b / before
                        :op1 (e / event
                              :name (n / name
                                    :op1 ""Coronavirus""
                                    :op2 ""Pandemic"")))))
      :time (e2 / ever))"
"(m / multi-sentence
      :snt2 (ii / influence-01
            :ARG0 (o / organization
                  :name (n / name
                        :op1 ""Covid-19""))
            :ARG1 (t / team)
            :ARG2 (c / cash-in-03
                  :ARG0 t
                  :ARG1 (a / asset
                        :poss t)
                  :purpose (s / stay-01
                        :ARG1 t
                        :ARG3 (a2 / afloat)))
            :manner (a3 / amr-unknown))
      :snt1 (h / have-concession-91
            :ARG1 (s2 / say-01
                  :polarity -
                  :ARG0 (ii2 / i)
                  :ARG1 (w / worth-01
                        :ARG1 (t2 / they)
                        :ARG2 (t3 / thing
                              :mod (t4 / that)
                              :ARG2-of (p / price-01)
                              :ARG1-of (q / quote-01
                                    :ARG0 ii2))
                        :ARG1-of (w2 / want-01
                              :ARG0 (c2 / club
                                    :poss t2))))
            :ARG2 (a4 / assin-00
                  :ARG0 t2
                  :ARG1 a)))"
"(s / sue-02
      :ARG0 (m / man)
      :ARG1 (s2 / supermarket)
      :ARG2 (ii / injure-01
            :ARG1 m
            :ARG1-of (r / receive-01
                  :ARG0 m
                  :ARG2 (p / paper
                        :purpose (t / toilet)))))"
"(s / say-01
      :ARG0 (t / thing
            :ARG2-of (a / advise-01
                  :ARG0 (p / person
                        :location (q / quarantine-01))))
      :ARG1 (h / have-03
            :ARG0 (y / you)
            :ARG1 (ii / item
                  :domain (a2 / amr-unknown)
                  :ARG1-of (h2 / have-degree-91
                        :ARG2 (u / useful-05
                              :ARG1 ii)
                        :ARG3 (m / most)))
            :location (h3 / home
                  :poss y)
            :time (n / now
                  :mod (r / right))))"
"(c / concern-01
      :ARG0 (g / gouge-02
            :ARG1 (t / thing
                  :ARG2-of (p / price-01)))
      :ARG1 (p2 / person
            :ARG0-of (s / shop-01)
            :ARG1-of (p3 / price-01))
      :ARG1-of (c2 / cause-01
            :ARG0 (a / allow-01
                  :ARG1 (w / work-01
                        :ARG0 (s2 / supermarket
                              :ARG1-of (m / major-02))
                        :manner (t2 / together))
                  :time (n / now))))"
(a / amr-empty)
(a / amr-empty)
"(m / multi-sentence
      :snt1 (a / and
            :op1 (d / drive-01
                  :ARG0 (ii / i)
                  :path (p / past
                        :op1 (r / road
                              :name (n / name
                                    :op1 ""Golf""
                                    :op2 ""Links""
                                    :op3 ""Road""))))
            :op2 (d2 / disgust-01
                  :ARG1 ii))
      :snt2 (g / great
            :domain (b / be-located-at-91
                  :ARG1 (p2 / person
                        :name (n2 / name
                              :op1 ""GardaTraffic""))
                  :ARG2 (c / company
                        :name (n3 / name
                              :op1 ""Lidl"")))))"
"(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (b / buy-01
                  :ARG0 (y / you)
                  :ARG1 (f / food)
                  :ARG2 (s / supermarket)
                  :mod (s2 / still)
                  :purpose (l / lunch)
                  :location (c / city
                        :name (n / name
                              :op1 ""Bangkok"")))
            :prep-under (s3 / spread-02
                  :ARG1 (l2 / law
                        :name (n2 / name
                              :op1 ""COVID2019""))))
      :snt2 (c2 / contrast-01
            :ARG2 (s4 / start-01
                  :ARG1 (c3 / curfew
                        :time (d / date-interval
                              :op1 (d2 / date-entity
                                    :time ""10:00"")
                              :op2 (d3 / date-entity
                                    :time ""4:00"")))
                  :time (d4 / date-entity
                        :dayperiod (n3 / night)
                        :mod (t / today)))))"
"(a / auction-off-01
      :ARG0 (s / somebody)
      :ARG1 (t / tissue
            :source (t2 / toilet)
            :ARG1-of (u / use-01))
      :medium (c / company
            :name (n / name
                  :op1 ""eBay""))
      :ARG2-of (j / joke-01
            :ARG0 (ii / i)))"
"(r / reduce-01
      :ARG0 (s / supermarket
            :quant (m / many))
      :ARG1 (t / thing
            :ARG2-of (c / cost-01))
      :purpose (h / help-01
            :ARG0 s
            :ARG1 (a / and
                  :op1 (p / person
                        :ARG1-of (v / vulnerable-01))
                  :op2 (f / family))
            :time (n / need-01
                  :mod (t2 / this))))"
"(s / spread-03
      :ARG1 (n / news
            :topic (a / and
                  :op1 (c / close-01
                        :ARG1 (a2 / and
                              :op1 (b / bar)
                              :op2 (r / restaurant)))
                  :op2 (s2 / shelf
                        :part-of (s3 / store
                              :mod (g / grocery))
                        :ARG1-of (e / empty-02))))
      :medium (m / media
            :mod (s4 / social))
      :time (b2 / before
            :op1 (n2 / now)
            :duration (t / temporal-quantity
                  :quant 1.5
                  :unit (w / week)))
      :manner (a3 / amr-unknown))"
"(u / up-02
      :ARG1 (d / demand-01
            :ARG1 (p / pay-01
                  :mod (d2 / digital)))
      :degree (w / way)
      :time (p2 / pandemic
            :mod (c / coronavirus)))"
"(c / contrast-01
      :ARG1 (r / rise-01
            :ARG1 (t / thing
                  :ARG2-of (p / price-01
                        :ARG1 (g / gas
                              :ARG1-of (n / natural-03)
                              :mod (s / spot)
                              :ARG1-of (l / liquefy-01)))
                  :location (c2 / continent
                        :name (n2 / name
                              :op1 ""Asia"")))
            :ARG4 (d / demand-01
                  :ARG1 g
                  :ARG1-of (r2 / recover-01
                        :ARG1-of (s2 / slow-05))
                  :location (c3 / country
                        :name (n3 / name
                              :op1 ""China"")))
            :ARG1-of (c4 / cause-01
                  :ARG0 (e / ease-02
                        :ARG1 (t2 / transmit-01
                              :ARG1 (c5 / coronavirus)
                              :ARG1-of (l2 / local-02))))
            :frequency (t3 / temporal-quantity
                  :quant 3
                  :unit (w / week)
                  :ord (o / ordinal-entity
                        :value 1)))
      :ARG2 (e2 / expect-01
            :ARG1 (w2 / weigh-01
                  :ARG0 (f / flood-01
                        :ARG2 (c6 / cargo))
                  :ARG1 (m / market)
                  :time (t4 / term
                        :ARG1-of (n4 / near-02)))))"
"(w / wear-01
      :ARG0 (ii / i)
      :ARG1 (b / balaclava
            :poss ii)
      :location (s / store
            :mod (g / grocery))
      :purpose (s2 / stay-01
            :ARG1 ii
            :ARG3 (s3 / safe-01
                  :ARG1 ii
                  :ARG2 (p / product
                        :name (n / name
                              :op1 ""COVID-19"")))))"
"(m / multi-sentence
      :snt1 (s / send-01
            :mode imperative
            :polite +
            :ARG0 (y / you)
            :ARG1 (m2 / message-01
                  :ARG1 (o / obligate-01
                        :ARG1 (ii / i)
                        :ARG2 (w / wait-01
                              :ARG1 ii
                              :duration (t / temporal-quantity
                                    :quant 45
                                    :unit (m3 / minute))
                              :purpose (g / get-05
                                    :ARG1 ii
                                    :ARG2 (s2 / store
                                          :mod (g2 / grocery))
                                    :mod (j / just))))
                  :ARG2 (s3 / senior
                        :mod (a / any))
                  :mod (t2 / this))
            :ARG2 s3)
      :snt2 (r / recommend-01
            :polarity -
            :ARG1 (o2 / obligate-01
                  :ARG1 (t3 / they)
                  :ARG2 (v / virus
                        :name (n / name
                              :op1 ""Coronavirus""))))
      :snt3 (u / url-entity
            :value ""https://t.co/6YmT3vsvbH""))"
"(c / classify-01
      :ARG0 (s / state
            :name (n / name
                  :op1 ""Minnesota""))
      :ARG1 (p / person
            :ARG0-of (w / work-01
                  :ARG2 (s2 / store
                        :mod (g / grocery))))
      :ARG2 (p2 / personnel
            :mod (e / emergency))
      :ARG0-of (a / allow-01
            :ARG1 (a2 / access-01
                  :ARG0 p
                  :ARG1 (c2 / care-03
                        :ARG1 (c3 / child)
                        :ARG1-of (f / free-03)
                        :ARG1-of (p3 / provide-01
                              :ARG0 s
                              :time (o / outbreak-29
                                    :ARG1 (d / disease
                                          :name n
                                          :op1 ""coronavirus"")))))))"
"(m / multi-sentence
      :snt1 (b / be-located-at-91
            :mode expressive
            :ARG1 (s / shop
                  :mod (f / farm))
            :ARG2 (a / area
                  :poss (y / you)))
      :snt2 (l / long-03
            :ARG1 (l2 / list-01
                  :ARG1 (w / wait-01
                        :ARG2 (d / deliver-01))
                  :mod (s2 / supermarket))
            :degree (v / very)
            :ARG1-of (s3 / surprise-01
                  :polarity -))
      :snt3 (c / contrast-01
            :ARG2 (a2 / and
                  :op1 (r / ring-02
                        :ARG0 (w2 / we)
                        :ARG1 (s4 / shop
                              :mod (f2 / farm)
                              :ARG1-of (l3 / local-02))
                        :time (j / just)
                        :purpose (s5 / see-01
                              :ARG0 w2
                              :ARG1 (d2 / deliver-01
                                    :ARG0 s4)))
                  :op2 (o / order-02
                        :ARG0 w2
                        :ARG1 (a3 / and
                              :op1 (f3 / fruit)
                              :op2 (v2 / vegetable)
                              :op3 (m2 / milk)
                              :op4 (s6 / soup)
                              :op5 (e / et-cetera)
                              :ARG1-of (p / price-01
                                    :ARG1-of (d3 / decent-03))
                              :quant (l4 / lot)))))
      :snt4 (c2 / come-01
            :ARG1 (ii / it)
            :time (d4 / date-entity
                  :weekday (t / tuesday)))
      :snt5 (c3 / check-out-05
            :mode imperative
            :ARG0 y)
      :ARG1 (s7 / shop
            :mod (f4 / farm)))"
"(e / establish-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Atag""
                  :op2 ""Heating""))
      :ARG1 (h / holiday-01
            :mod (s / service))
      :time (p / pandemic
            :mod (c2 / coronavirus)))"
"(r / recommend-01
      :ARG1 (a / and
            :op1 (s / sing-01
                  :ARG0 (e / everybody)
                  :ARG1 (s2 / song
                        :name (n / name
                              :op1 ""Don't""
                              :op2 ""Stand""
                              :op3 ""So""
                              :op4 ""Close""
                              :op5 ""to""
                              :op6 ""I"")
                        :mod (o / organization
                              :name n
                              :op1 ""Police""))))
      :op2 (p / play-11
            :ARG0 e
            :ARG1 s2)
      :location (s3 / supermarket
            :mod (e2 / every)))"
"(m / multi-sentence
      :snt1 (l / leave-14
            :polite +
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (a / alone
                  :domain (ii / i)))
      :snt2 (n / need-01
            :ARG0 (ii2 / i)
            :ARG1 (a2 / and
                  :op1 (m2 / medicine)
                  :op2 (g / glove)
                  :op3 (f / food)
                  :op4 (p / paper
                        :purpose (t / toilet)))))"
"(m / multi-sentence
      :snt1 (h / hit-01
            :ARG1 (s / state
                  :name (n / name
                        :op1 ""Tennessee""))
            :ARG2 (l / law
                  :name (n2 / name
                        :op1 ""COVID-19""))
            :ARG1-of (h2 / hard-04)
            :time (a / about-to)
            :ARG0-of (c / cause-01
                  :ARG1 (c2 / care-04
                        :ARG0 (y / you))))
      :snt2 (w / wear-01
            :mode imperative
            :ARG0 (y2 / you)
            :ARG1 (a2 / and
                  :op1 (m2 / mask)
                  :op2 (g / glove
                        :mod (l2 / latex)))
            :condition (s2 / shop-01
                  :ARG0 y2
                  :ARG1 (g2 / grocery)))
      :snt3 (s3 / stock-up-02
            :mode imperative
            :ARG0 (y3 / you)
            :ARG1 (a3 / and
                  :op1 (p / pasta)
                  :op2 (e / egg)
                  :op3 (p2 / paper
                        :purpose (t / toilet)))
            :time (n3 / now))
      :snt4 (g3 / get-01
            :mode imperative
            :ARG0 (y4 / you)
            :ARG1 (f / food
                  :ARG1-of (s4 / supply-01
                        :ARG2 (a4 / and
                              :op1 (c3 / cat
                                    :poss y4)
                              :op2 y4)
                        :duration (a5 / at-least
                              :op1 (t2 / temporal-quantity
                                    :quant 1
                                    :unit (m3 / month)))))))"
"(r / result-01
      :ARG1 (b / buy-01
            :manner (p / panic-01))
      :ARG2 (c / contrast-01
            :ARG1 (g / gain-02
                  :ARG1 (f / food
                        :quant (s / some)))
            :ARG2 (l / lose-02
                  :ARG1 (s2 / state
                        :mod (m / mind)
                        :poss (o / one)))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (d / distance-01
                  :ARG0 (ii / i)
                  :manner (s / social))
            :op2 (r / return-01
                  :ARG1 ii
                  :purpose (t / trip-03
                        :ARG0 ii
                        :ARG1 (s2 / supermarket)
                        :mod (a2 / another))))
      :snt2 (a3 / and
            :op1 (g / go-02
                  :ARG0 (ii2 / i)
                  :ARG4 (f / family
                        :mod (o / one))
                  :time (d2 / day
                        :mod o)))
      :op2 (g2 / go-02
            :ARG0 ii2
            :ARG4 (f2 / family
                  :mod a2))
      :time (d3 / day
            :mod (n / next))
      :snt3 (s3 / stay-01
            :ARG1 (p / person
                  :name (n2 / name
                        :op1 ""StayHomeSaveLives""))))"
"(m / multi-sentence
      :snt1 (s / speak-01
            :ARG0 (ii / i)
            :ARG2 (s2 / someone
                  :ARG0-of (w / work-01
                        :ARG1 (c / checkout)
                        :ARG2 (s3 / supermarket
                              :ARG1-of (m2 / major-02)))))
      :snt2 (t / tell-01
            :ARG0 (t2 / they)
            :ARG1 (a / and
                  :op1 (b / be-located-at-91
                        :ARG1 t2
                        :ARG2 (r / relative-position
                              :op1 (c2 / customer
                                    :quant (m3 / multiple
                                          :op1 100))
                              :quant (b2 / between
                                    :op1 (d / distance-quantity
                                          :quant 1
                                          :unit (f / foot))
                                    :op2 (d2 / distance-quantity
                                          :quant 2
                                          :unit (f2 / foot)))
                              :frequency (t3 / temporal-quantity
                                    :quant 1
                                    :unit (d3 / day))))
                  :op2 (g / give-01
                        :polarity -
                        :ARG1 (o / or
                              :op1 (m4 / mask)
                              :op2 (g2 / glove))
                        :ARG2 t2))
            :ARG2 ii)
      :snt3 (n / need-01
            :ARG1 (c3 / change-01
                  :ARG1 (t4 / this))
            :ARG1-of (s4 / sure-02)
            :polarity (a2 / amr-unknown)))"
"(s / signal-07
      :ARG1 (ii / it)
      :ARG3 (t / time)
      :ARG1-of (s2 / sad-02)
      :ARG1-of (c / cause-01
            :ARG0 (d / dream-01
                  :ARG0 (ii2 / i)
                  :ARG1 (a / and
                        :op1 (b / be-located-at-91
                              :ARG1 ii2
                              :ARG2 (s3 / store
                                    :mod (g / grocery)))
                        :op2 (h / have-03
                              :ARG0 s3
                              :ARG1 (a2 / and
                                    :op1 (b2 / bleach)
                                    :op2 (p / product
                                          :name (n / name
                                                :op1 ""Tylenol""))
                                    :op3 (t2 / thing
                                          :mod (o / other)
                                          :ARG1-of (n2 / need-01
                                                :ARG0 (e / everyone)))
                                    :quant (p2 / plenty)))
                        :time (b3 / before
                              :op1 (g2 / go-off-16
                                    :ARG1 (a3 / alarm))
                              :mod (j / just)))
                  :ARG1-of (w / wonderful-03)
                  :time (d2 / date-entity
                        :dayperiod (m / morning)
                        :mod (t3 / today)))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (w / work-01
                  :ARG0 (ii / i)
                  :location (s / school
                        :ARG1-of (s2 / special-02))
                  :time (d / day
                        :mod (a2 / all)))
            :op2 (t / tell-01
                  :ARG1 (o / obligate-01
                        :ARG2 (r / remain-01
                              :ARG1 ii
                              :location (s3 / school)
                              :time (a3 / after
                                    :op1 (c / close-01
                                          :ARG1 s3))))
                  :ARG2 ii))
      :snt2 (a4 / and
            :op1 (b / be-located-at-91
                  :ARG1 (w2 / we)
                  :ARG2 (p / point
                        :mod (b2 / break-01
                              :ARG1 w2)))
            :op2 (c2 / come-01
                  :ARG1 w2
                  :ARG4 (h / home)
                  :time (t2 / try-01
                        :ARG0 w2
                        :ARG1 (b3 / buy-01
                              :ARG0 w2
                              :ARG1 (f / food)))))
      :snt3 (l / limit-01
            :polarity -
            :ARG0 (c3 / company
                  :name (n / name
                        :op1 ""Sainsburys""))
            :ARG1 (p2 / purchase-01))
      :snt4 (a5 / and
            :op1 (t3 / test-01
                  :ARG0 ii))
      :op2 (g / get-01
            :ARG0 ii
            :ARG1 (w3 / water
                  :quant (v / volume-quantity
                        :quant 6
                        :unit (b4 / bottle)
                        :mod (f2 / fizzy)))))"
"(m / multi-sentence
      :snt1 (c / cringe-01
            :ARG0 (ii / i)
            :topic (p / portfolio
                  :mod (t / this)))
      :snt2 (w / write-off-08
            :ARG0 (p2 / person
                  :ARG0-of (ii2 / invest-01
                        :ARG2 (m2 / market
                              :ARG1-of (p3 / public-02))))
            :ARG1 (f / fund
                  :mod (m3 / monetary-quantity
                        :quant 100000000000
                        :unit (d / dollar)))
            :time (a / already)))"
"(a / and
      :op1 (p / publication
            :name (n / name
                  :op1 ""StreetsblogUSA""))
      :op2 (o / organization
            :name (n2 / name
                  :op1 ""PeopleForBikes""))
      :op3 (o2 / organization
            :name (n3 / name
                  :op1 ""NACTO""))
      :op4 (o3 / organization
            :name (n4 / name
                  :op1 ""ITDP_cities""))
      :op5 (o4 / organization
            :name (n5 / name
                  :op1 ""WRI_cities""))
      :op6 (c / company
            :name (n6 / name
                  :op1 ""SustainableTran""))
      :op7 (c2 / company
            :name (n7 / name
                  :op1 ""Transport_for_All""))
      :op8 (c3 / company
            :name (n8 / name
                  :op1 ""Transalt""))
      :op9 (s / streetfilms)
      :op10 (p2 / publication
            :name (n9 / name
                  :op1 ""Streetsblogchi""))
      :op11 (o5 / organization
            :name (n10 / name
                  :op1 ""LACBC""))
      :op12 (o6 / organization
            :name (n11 / name
                  :op1 ""BikeEastBay"")))"
"(a / affect-01
      :ARG0 (p / pandemic
            :mod (c / coronavirus))
      :time (d / date-entity
            :year 2020))"
"(m / multi-sentence
      :snt1 (j / join-04
            :mode imperative
            :polite +
            :ARG0 (y / you)
            :ARG1 (w / we)
            :ARG2 (s / session
                  :ord (o / ordinal-entity
                        :value 2)
                  :subevent-of (b / broadcast-program
                        :name (n / name
                              :op1 ""TVCWebinarSeries"")
                        :poss w)
                  :time (d / date-entity
                        :month 4
                        :day 16
                        :time ""12:00""
                        :timezone ""EDT""
                        :weekday (t / thursday))))
      :snt2 (e / examine-01
            :ARG0 (w2 / we)
            :ARG1 (a / and
                  :op1 (b2 / behave-01
                        :ARG0 (p / person
                              :ARG0-of (c / consume-01)))
                  :op2 (ii / insight
                        :mod (r / research-01
                              :ARG1 (m2 / market))))
            :time (c2 / crisis
                  :name (n2 / name
                        :op1 ""COVID-19""))))"
(a / amr-empty)
"(p / possible-01
      :ARG1 (e / enforce-01
            :ARG0 (c / country
                  :name (n / name
                        :op1 ""UK""))
            :ARG1 (ii / isolate-01
                  :ARG1 (p2 / person
                        :age (b / between
                              :op1 (t / temporal-quantity
                                    :quant 70
                                    :unit (y / year))
                              :op2 (t2 / temporal-quantity
                                    :quant 89
                                    :unit (y2 / year))
                              :ARG2-of (h / have-degree-91
                                    :ARG1 p2
                                    :ARG3 (m / more)))))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (s / shop-01
                  :ARG0 (ii / i)
                  :ARG1 (g / grocery)
                  :ARG2 (c / company
                        :name (n / name
                              :op1 ""Foody""
                              :op2 ""Mart"")
                        :domain (s2 / store
                              :mod (g2 / grocery)
                              :mod (c2 / country
                                    :name (n2 / name
                                          :op1 ""China"")))))
            :op2 (h / have-03
                  :ARG0 (e / everyone)
                  :ARG1 (m2 / mask)))
      :snt2 (c3 / contrast-01
            :ARG1 (h2 / have-03
                  :ARG0 (p / person
                        :ARG2-of (s3 / staff-01)
                        :mod (a2 / all))
                  :ARG1 (a3 / and
                        :op1 (m3 / mask)
                        :op2 (g3 / glove)))
            :ARG2 (p2 / possible-01
                  :polarity -
                  :ARG1 (f / find-01
                        :ARG0 (ii2 / i)
                        :ARG1 (o / or
                              :op1 (m4 / mask
                                    :ARG1-of (s4 / single-02))
                              :op2 (g4 / glove))
                        :location (a4 / anywhere))
                  :mod (e2 / even)))
      :snt3 (p3 / publication
            :name (n3 / name
                  :op1 ""COVID2019"")))"
"(a / and
      :op1 (t / take-over-12
            :ARG0 (s / state
                  :mod (n / nanny)))
      :op2 (p / possible-01
            :polarity -
            :ARG1 (b / buy-01
                  :ARG0 (y / you)
                  :ARG1 (r / roll-01
                        :ARG1 (p2 / paper
                              :purpose (t2 / toilet))
                        :quant (m / more-than
                              :op1 12)
                        :mod (a2 / at-a-time))
                  :mod (e / even))))"
"(s / say-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Nielsen""))
      :ARG1 (ii / identify-01
            :ARG1 (t / threshold
                  :ARG1-of (k / key-02)
                  :mod (b / behave-01
                        :ARG0 (p / person
                              :ARG0-of (c2 / consume-01))))
            :time (e / evolve-01
                  :ARG2 (o / outbreak-29
                        :ARG1 (c3 / coronavirus)))))"
"(m / multi-sentence
      :snt1 (p / product
            :name (n / name
                  :op1 ""Clorox""
                  :op2 ""Scentiva""
                  :op3 ""Toilet""
                  :op4 ""Bowl""
                  :op5 ""Cleaner"")
            :domain (t / this)
            :quant (m2 / mass-quantity
                  :quant 24
                  :unit (o / ounce))
            :ARG1-of (s / scent-02
                  :ARG2 (l / lavender)))
      :snt2 (a / and
            :op1 (d / disinfectant)
            :op2 (s2 / sanitize-01)
            :domain (ii / it)))"
(a / amr-empty)
"(m / multi-sentence
      :snt1 (a / and
            :op1 (s / supply-01
                  :ARG1 (f / food))
            :op2 (s2 / security))
      :snt2 (ii / include-01
            :ARG1 (ii2 / information
                  :topic (a2 / and
                        :op1 (s3 / short-06
                              :ARG2 (f2 / food))
                        :op2 (c / chain
                              :mod (s4 / supply-01))
                        :op3 (p / prepare-02)
                        :op4 (m2 / market
                              :mod (s5 / stock))))
            :ARG2 (u / update-02
                  :ARG2 (c2 / coronavirus)
                  :mod (l / last))))"
"(h / have-03
      :ARG0 (a / and
            :op1 (p / plant)
            :op2 (p2 / plant)
            :op3 (p3 / plant))
      :ARG1 (m / material
            :mod (r / raw)))"
"(a / affect-01
      :ARG0 (d / downturn
            :mod (f / finance)
            :ARG1-of (c / cause-01
                  :ARG0 (l / law
                        :name (n / name
                              :op1 ""COVID-19""))))
      :ARG1 (a2 / and
            :op1 (f2 / finance
                  :ARG1-of (p / personal-02))
            :op2 (f3 / finance
                  :mod (p2 / person
                        :ARG0-of (c2 / consume-01))))
      :ARG1-of (l2 / long-03)
      :ARG1-of (s / short-07))"
"(m / multi-sentence
      :snt1 (a / affect-01
            :ARG0 (v / virus
                  :name (n / name
                        :op1 ""Covid""
                        :op2 19)
                  :ARG1-of (m2 / mean-01
                        :ARG2 (v2 / virus
                              :name (n2 / name
                                    :op1 ""Corona""))))
            :ARG1 (l / light
                  :poss (w / we))
            :mod (t / too))
      :snt2 (a2 / and
            :op1 (d / darkness
                  :location (p / phase
                        :mod 4
                        :part-of (f / facility
                              :name (n3 / name
                                    :op1 ""Kubwa"")))
                  :time (s / since
                        :op1 (y / yesterday)))
            :op2 (s2 / spoil-01
                  :ARG1 (f2 / food
                        :ARG1-of (c / cook-01
                              :ARG0 (ii / i))
                        :ARG1-of (s3 / store-01
                              :ARG0 ii
                              :ARG2 (f3 / freezer)))))
      :snt3 (e / event
            :polarity (a3 / amr-unknown)
            :ARG1-of (r / real-04)))"
"(p / possible-01
      :ARG1 (h / help-01
            :ARG0 (y / you)
            :ARG1 (w / we)
            :time (n / now
                  :mod (r / right))
            :manner (w2 / way
                  :mod (b / big))))"
"(b / buy-01
      :ARG0 (ii / i)
      :ARG1 (e / egg
            :mod (a / all))
      :ARG0-of (c / cause-01
            :ARG1 (l / leave-17
                  :ARG1 (e2 / egg
                        :quant (n / none))
                  :location (s / supermarket))))"
"(h / hail-02
      :mode imperative
      :ARG0 (a / all)
      :ARG1 (c / capitalism)
      :ARG1-of (c2 / cause-01
            :ARG0 (o / obligate-01
                  :ARG0 (p / political-movement
                        :name (n / name
                              :op1 ""socialism""))
                  :ARG1 (q / queue-01
                        :ARG1 (y / you)
                        :ARG2 (s / shelf
                              :part-of (s2 / supermarket)
                              :ARG1-of (e / empty-02))))))"
"(c / cause-01
      :ARG0 (c2 / coronavirus)
      :ARG1 (b / buy-01
            :manner (p / panic-01)
            :location (s / store
                  :ARG1-of (r / retail-01)
                  :location (n / nationwide)))
      :ARG0-of (l / lead-03
            :ARG2 (c3 / close-01
                  :ARG1 (r2 / restaurant))))"
"(o / offer-01
      :ARG0 (t / team
            :name (n / name
                  :op1 ""Liverpool""
                  :op2 ""FC""))
      :ARG1 (s / steward
            :ARG0-of (h / help-01
                  :ARG1 (c / control-01
                        :ARG1 (c2 / crowd
                              :location (s2 / supermarket)))))
      :ARG3 (c3 / crisis
            :mod (c4 / coronavirus)))"
"(a / and
      :op1 (s / start-01
            :ARG1 (q / quarantine-01
                  :mod (n / nation))
            :time (d / date-entity
                  :day 18
                  :weekday (w / wednesday)))
      :op2 (t / tell-01
            :ARG1 (s2 / stock-up-02
                  :ARG0 (p / person)
                  :ARG1 (a2 / and
                        :op1 (e / essential)
                        :op2 (f / food)
                        :op3 (a3 / ammo)))
            :ARG2 p))"
"(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Dennis""
                  :op2 ""Cullinane"")
            :ARG0-of (h / have-org-role-91
                  :ARG2 (o / officer
                        :mod (c / chief)
                        :mod (e / executive))))
      :ARG1 (h2 / hamper-01
            :polarity -
            :ARG0 (b / buy-01
                  :ARG1-of (f / fuel-01
                        :ARG0 (b2 / buy-01
                              :ARG1-of (c2 / cause-01
                                    :ARG0 (p2 / pandemic
                                          :name (n2 / name
                                                :op1 ""COVID""
                                                :op2 19)))))
                  :ARG1-of (c3 / cause-01
                        :ARG0 (b3 / buy-01
                              :ARG0 (o2 / organization
                                    :ARG1 (f2 / food)
                                    :ARG2 (a / and
                                          :op1 (c4 / cooperative)
                                          :op2 (c5 / company
                                                :ARG0-of (m / manufacture-01))))))
                  :ARG1 (o3 / operate-01
                        :ARG1 o2
                        :name (n3 / name
                              :op1 ""East""
                              :op2 ""Texas""
                              :op3 ""Food""
                              :op4 ""Bank"")))))"
"(d / demand-01
      :ARG1 (a / and
            :op1 (s / sanitizer
                  :instrument-of (h / hand))
            :op2 (m / mask
                  :mod (f / face))
            :op3 (p / paper
                  :instrument-of (t / toilet-01))
            :mod (a2 / all))
      :ARG1-of (h2 / high-02)
      :ARG1-of (c / cause-01
            :ARG0 (p2 / pandemic)))"
"(d / decrease-01
      :ARG1 (t / thing
            :ARG2-of (p / price-01
                  :ARG1 (c / commodity)))
      :ARG2 (s / significant-02)
      :time (s2 / since
            :op1 (b / break-out-30
                  :ARG1 (d2 / disease
                        :name (n / name
                              :op1 ""COVID-19"")))))"
"(p / publication-91
      :ARG0 (p2 / person
            :name (n / name
                  :op1 ""Bloomberg""))
      :ARG4 (b / business)
      :time (d / date-entity
            :day 18
            :month 3
            :year 2020))"
"(r / release-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Kroll""
                  :op2 ""Bond""
                  :op3 ""Rating""
                  :op4 ""Agency""))
      :ARG1 (r2 / report
            :mod (r3 / research)
            :ARG0-of (d / discuss-01
                  :ARG1 (r4 / ramification-02
                        :ARG0 (p / pandemic
                              :name (n2 / name
                                    :op1 ""Coronavirus""
                                    :op2 ""COVID-19""))
                        :ARG1 (s / securitization
                              :mod (p2 / product
                                    :name (n3 / name
                                          :op1 ""ABS""))
                              :mod (p3 / person
                                    :ARG0-of (c2 / consume-01)))
                        :mod (p4 / potential)))))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (e / evolve-01
                  :ARG1 (d / data
                        :mod (t / this))
                  :ARG1-of (q / quick-02)
                  :ARG0-of (c / cause-01
                        :ARG1 (p / provide-01
                              :ARG0 (w / we)
                              :ARG1 (u / update-02
                                    :ARG0 w
                                    :frequency (r / rate-entity-91
                                          :ARG3 (t2 / temporal-quantity
                                                :quant 1
                                                :unit (w2 / week)))))))
            :ARG2 (p2 / person
                  :name (n / name
                        :op1 ""CARAVAN_US"")))
      :snt2 (p3 / provide-01
            :ARG0 (l / link
                  :location (b / below))
            :ARG1 (ii2 / information
                  :ARG1-of (h / have-degree-91
                        :ARG2 (r2 / recent)
                        :ARG3 (m2 / most)))))"
"(w / wonder-01
      :ARG0 (ii / i)
      :ARG1 (t / truth-value
            :polarity-of (o / okay-04
                  :ARG1 (g / go-02
                        :ARG0 ii
                        :ARG4 (s / store
                              :mod (g2 / grocery))
                        :time (a / after
                              :op1 (a2 / announce-01
                                    :ARG0 (p / person
                                          :ARG0-of (h / have-org-role-91
                                                :ARG2 (g3 / governor)))
                                    :topic (s2 / state
                                          :name (n / name
                                                :op1 ""CA""))
                                    :time (d / date-entity
                                          :dayperiod (n2 / night)
                                          :mod (y / yesterday))))
                        :mod (s3 / still)))))"
"(m / multi-sentence
      :snt1 (s / shift-01
            :ARG1 (a / attitude
                  :poss (p / public
                        :ARG1-of (g / general-02)))
            :mod (h / huge)
            :manner (h2 / have-03
                  :polarity -
                  :ARG0 p
                  :ARG1 (ii / idea
                        :topic (t / thing
                              :ARG0-of (c / cause-01
                                    :ARG1 s)))))
      :snt2 (a2 / and
            :op1 (w / wear-01
                  :polarity -
                  :ARG0 (p2 / person)
                  :ARG1 (o / or
                        :op1 (m2 / mask)
                        :op2 (g2 / glove)))
            :op2 (c2 / come-01
                  :ARG1 p2
                  :manner (g3 / group
                        :mod (l / large)))
            :op3 (p3 / possible-01
                  :polarity -
                  :ARG1 (d / distance-01
                        :ARG2 (s2 / society))
                  :degree (a3 / all-but)))
      :snt3 (m3 / mingle-01
            :ARG0 (f / family)
            :ARG1 (f2 / family
                  :mod (o2 / other)))
      :snt4 (r / resemble-01
            :ARG1 (ii2 / it)
            :ARG2 (d2 / decide-01
                  :ARG0 (e / everyone)
                  :ARG1 (o3 / over-02
                        :ARG1 e
                        :ARG2 ii2)
                  :mod (j / just))))"
"(m / multi-sentence
      :snt1 (y / yeast
            :domain (t / thing
                  :quant 1
                  :ARG1-of (m2 / miss-01
                        :location (s / shelf)
                        :time (s2 / since
                              :op1 (s3 / start-01
                                    :ARG1 (b / buy-01
                                          :ARG1 (a / and
                                                :op1 (p / product
                                                      :name (n / name
                                                            :op1 ""Covid19""))
                                                :op2 (p2 / product
                                                      :name (n2 / name
                                                            :op1 ""Coronavirus"")))
                                          :location (s4 / store
                                                :mod (g / grocery)
                                                :location (c / country
                                                      :name (n3 / name
                                                            :op1 ""Hungary"")))))))))
      :snt2 (f / find-01
            :ARG0 (p3 / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (ii / i)
                        :ARG2 (w / wife)))
            :ARG1 (t2 / this)
            :location (s5 / supermarket
                  :ARG1-of (l / local-02))
            :time (t3 / then))
      :snt3 (s6 / say-01
            :ARG0 (s7 / she)
            :ARG1 (m3 / mark-02
                  :ARG1 (ii2 / it)
                  :ARG2 (p4 / product
                        :name (n4 / name
                              :op1 ""Kvasac"")
                        :ARG1-of (l2 / look-01
                              :ARG0 (p5 / person)))
                  :mod (o / only))))"
"(ii / include-01
      :ARG1 (p / person
            :ARG2-of (s / staff-01
                  :ARG1 (s2 / store
                        :mod (g / grocery))))
      :ARG2 (p2 / person
            :ARG0-of (w / work-01
                  :mod (f / frontline)
                  :time (p3 / pandemic
                        :name (n / name
                              :op1 ""COVID19"")))
            :mod (o / other)))"
"(m / multi-sentence
      :snt1 (t / tweet-01
            :ARG0 (ii / i)
            :ARG1 (t2 / this)
            :mod (a / again))
      :snt2 (s / say-01
            :ARG2 (a2 / and
                  :op1 (p / person
                        :ARG0-of (w / work-01
                              :ARG2 (h / hospital)))
                  :op2 (p2 / person
                        :ARG0-of (r / respond-01
                              :ord (o / ordinal-entity
                                    :value 1)))
                  :op3 (p3 / person
                        :ARG0-of (w2 / work-01
                              :ARG2 (s2 / store
                                    :mod (g / grocery))))
                  :op4 (p4 / person
                        :ARG0-of (v / volunteer-01))
                  :mod (a3 / all)
                  :ARG0-of (f / fight-01
                        :ARG1 (v2 / virus
                              :mod (t3 / this)
                              :snt3-of m))))
      :name (n / name
            :op1 ""coronavirus""))"
"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (o / operate-01
                  :ARG1 (d / distillery
                        :poss (w / we))
                  :mod (s / still)
                  :time (t / time
                        :mod (t2 / this)))
            :ARG2 (o2 / offer-01
                  :polarity -
                  :ARG0 w
                  :ARG1 (o3 / or
                        :op1 (t3 / tour-01
                              :ARG1-of (p / public-02))
                        :op2 (f / function-01
                              :ARG1-of (h / host-01
                                    :ARG0 w))
                        :op3 (e / event))))
      :snt2 (c2 / close-01
            :ARG1 (s2 / store
                  :mod (r / retail-01)
                  :poss (w2 / we))
            :mod (a / also)))"
"(h / have-03
      :ARG0 (m / market
            :mod (n / nation))
      :ARG1 (a / and
            :op1 (s / supply-01
                  :ARG1-of (n2 / normal-02))
            :op2 (p / price-01
                  :ARG1-of (s2 / stable-03))))"
"(b / battle-01
      :beneficiary (a / all)
      :ARG1-of (f / fight-01
            :mode imperative
            :ARG0 (w / we)
            :manner (t / together)))"
"(p / possible-01
      :ARG1 (u / use-01
            :ARG0 (y / you)
            :ARG1 (c / code
                  :mod (t / this))
            :ARG2 (g / get-01
                  :ARG0 y
                  :ARG1 (f / food)
                  :ARG1-of (c2 / cause-01
                        :ARG0 (s / stockpile-01)))
            :ARG3 (m / monetary-quantity
                  :quant 20
                  :unit (p2 / pound)
                  :ARG1-of (ii / include-91
                        :ARG2 (b / box
                              :name (n / name
                                    :op1 ""Hello""
                                    :op2 ""Fresh"")
                              :ord (o / ordinal-entity
                                    :value 1)
                              :poss y
                              :mod (p3 / product
                                    :name (n2 / name
                                          :op1 ""S-L1JHX4WML""))
                              :mod (c3 / company
                                    :name (n3 / name
                                          :op1 ""Covid19uk""))
                              :mod p3
                              :name (n4 / name
                                    :op1 ""COVID19""))
                        :mod (v / virus)
                        :mod (v2 / virus)
                        :mod (o2 / out))))
      :condition (w / worry-02
            :ARG0 y
            :ARG1 g))"
"(a / and
      :op1 (l / lock-down-06
            :ARG1 (w / world))
      :op2 (c / change-01
            :ARG1 (a2 / aspect
                  :mod (p / physical)
                  :poss (c2 / consumerism))
            :ARG2 (e / experience-01
                  :ARG0 (p2 / person
                        :ARG0-of (r / retail-01
                              :ARG1 (f / fashion)))
                  :mod (o / online))))"
"(t / thank-01
      :ARG1 (p / person
            :ARG0-of (t2 / teach-01
                  :ARG1 (s / school))
            :mod (a / all)
            :ARG0-of (w / work-01
                  :ARG1 (p2 / pandemic
                        :name (n / name
                              :op1 ""COVID-19"")))))"
"(p / plan-01
      :ARG0 (a / and
            :op1 (s / state
                  :name (n / name
                        :op1 ""Vermont""))
            :op2 (s2 / state
                  :name (n2 / name
                        :op1 ""Minnesota"")))
      :ARG1 (c / classify-01
            :ARG0 a
            :ARG1 (p2 / person
                  :ARG0-of (w / work-01
                        :ARG2 (s3 / store
                              :mod (g / grocery))))
            :ARG2 (p3 / personnel
                  :mod (e / emergency))))"
"(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""laurenthomas"")
            :ARG0-of (h / have-org-role-91
                  :ARG1 (p2 / publication
                        :name (n2 / name
                              :op1 ""CNBC""))))
      :ARG1 (h2 / head-02
            :ARG0 (w / we)
            :ARG1 (c / close-01
                  :ARG1 (s2 / store
                        :mod (r / retail)
                        :quant (m / many))
                  :location (c2 / country
                        :name (n3 / name
                              :op1 ""U.S."")))
            :mod (c3 / certain)
            :ARG1-of (c4 / cause-01
                  :ARG0 (v / virus
                        :mod (c5 / coronavirus)))))"
"(a / and
      :op1 (b / buy-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (r / roll
                  :mod (e / extra)))
      :op2 (s / store-01
            :mode imperative
            :ARG0 y
            :ARG1 r
            :ARG2 (p / place
                  :ARG1-of (s2 / safe-01)))
      :purpose (a2 / avoid-01
            :ARG0 y
            :ARG1 (r2 / run-out-05
                  :ARG1 (p2 / paper
                        :purpose (t / toilet))
                  :time (a3 / apocalypse)))
      :time a3)"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (d / diary)
            :op2 (l / lockdown)
            :op3 (c / company
                  :name (n / name
                        :op1 ""Ocado""))
            :op4 (c2 / company
                  :name (n2 / name
                        :op1 ""Morrisons"")))
      :snt2 (a2 / available-02
            :polarity -
            :ARG1 (a3 / and
                  :op1 c
                  :op2 (c3 / company
                        :name (n3 / name
                              :op1 ""Morrisons"")))
            :ARG2 (s / slot
                  :mod (d2 / deliver-01)
                  :mod (a4 / any))
            :time (o / or
                  :op1 (d3 / date-entity
                        :month 3)
                  :op2 (d4 / date-entity
                        :month 4))
            :location (a5 / area
                  :mod (c4 / city
                        :name (n4 / name
                              :op1 ""Harrow"")))))"
"(n / need-01
      :ARG0 (w / we
            :mod (a / all))
      :ARG1 (b / buy-01
            :ARG0 (s / senior)
            :ARG1 (p / paper
                  :purpose (t / toilet))
            :ARG4 w))"
"(s / strange
      :domain (r / realize-01
            :ARG0 (p / planet
                  :mod (w / whole))
            :ARG1 (h / have-degree-91
                  :ARG1 (a / and
                        :op1 (d / doctor)
                        :op2 (n / nurse)
                        :op3 (p2 / person
                              :ARG0-of (k / keep-01
                                    :ARG1 (s2 / shop)))
                        :op4 (p3 / person
                              :ARG0-of (t / teach-01))
                        :op5 (p4 / person
                              :ARG2-of (s3 / staff-01
                                    :ARG1 (s4 / supermarket)))
                        :op6 (p5 / person
                              :ARG0-of (d2 / drive-01
                                    :ARG1 (d3 / deliver-01))))
                  :ARG2 (ii / important-01
                        :ARG1 a)
                  :ARG3 (m / more
                        :quant (f / far))
                  :ARG4 (a2 / and
                        :op1 (p6 / person
                              :ARG0-of (p7 / play-01
                                    :ARG1 (f2 / football)))
                        :op2 (p8 / person
                              :ARG0-of (a3 / act-01))
                        :op3 (c / celebrity)))
            :duration (t2 / temporal-quantity
                  :quant 1
                  :unit (w2 / week)
                  :mod (j / just))))"
"(m / multi-sentence
      :snt1 (r / respect-01
            :ARG0 (ii / i)
            :ARG1 (a / and
                  :op1 (p / person
                        :ARG0-of (g / grocery-01))
                  :op2 (p2 / person
                        :ARG0-of (k / keep-01
                              :ARG1 (s / shop)))
                  :mod (a2 / all)
                  :ARG0-of (o / open-01
                        :ARG1 (s2 / store
                              :poss a)
                        :purpose (l / let-01
                              :ARG0 a
                              :ARG1 (s3 / stock-up-02
                                    :ARG0 (p3 / person)
                                    :ARG1 (a3 / and
                                          :op1 (f / food)
                                          :op2 (e / essential))))))
            :degree (a4 / absolute))
      :snt2 (t / thank-01
            :ARG1 (a5 / and
                  :op1 (n / nurse)
                  :op2 (d / doctor)
                  :mod (a6 / all)
                  :ARG1-of (t2 / turn-up-15
                        :purpose (f2 / fight-01
                              :ARG0 a5
                              :ARG1 (m2 / monster
                                    :mod (t3 / this)))))))"
"(m / multi-sentence
      :snt1 (m2 / move-01
            :ARG1 (s / serve-01
                  :ARG0 (c / company
                        :name (n / name
                              :op1 ""Shop""
                              :op2 ""D""
                              :op3 ""Caribbean""))
                  :ARG1 (a / and
                        :op1 (s2 / shop-01
                              :ARG1 (g / grocery)
                              :mod (o / online))
                        :op2 (d / deliver-01
                              :ARG1 g
                              :ARG2 (ii / island)))))
      :snt2 (c2 / check-out-05
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (ii2 / information
                  :mod (m3 / more))))"
"(c / consider-02
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (a / and
            :op1 (s / sell-01
                  :ARG0 y
                  :ARG1 (p / product
                        :poss y)
                  :medium (o / online)
                  :instrument (c2 / company
                        :name (n / name
                              :op1 ""Shopify"")))
            :op2 (d / deliver-01
                  :ARG0 y
                  :ARG1 p
                  :ARG2 (l / local-02)))
      :condition (o2 / obligate-01
            :ARG1 y
            :ARG2 (c3 / close-01
                  :ARG0 y
                  :ARG1 (s2 / store
                        :mod (r / retail-01)
                        :poss y)
                  :ARG1-of (c4 / cause-01
                        :ARG0 (r2 / restrict-01
                              :ARG0 (d2 / disease
                                    :name n
                                    :op1 ""Coronavirus""))))))"
"(s / survive-01
      :ARG0 (ii / i)
      :ARG1 (s2 / store
            :mod (g / grocery))
      :manner (o / or
            :polarity -
            :op1 (p / paper-tow
                  :mod (p2 / paper))
            :op2 p2
            :purpose (t / toilet)))"
"(m / multi-sentence
      :snt1 (t / talk-01
            :ARG0 (ii / i)
            :ARG1 (t2 / tax-01
                  :ARG3 (s / sell-01
                        :medium (ii2 / internet)))
            :ARG1-of (c / cause-01
                  :ARG0 (l / live-01
                        :ARG0 (p / person
                              :ARG0-of (r / retail-01
                                    :ARG1 (b / business
                                          :mod (s2 / small))))
                        :location (e / edge)
                        :time (a / already)
                        :time (b2 / before
                              :op1 (c2 / coronavirus)))))
      :snt2 (b3 / business
            :mod (s3 / small)
            :domain (c3 / close-01
                  :ARG1 (s4 / store
                        :quant 15000
                        :ARG1-of (r2 / retail-01)
                        :mod (p2 / permanent))
                  :ARG1-of (ii3 / include-91
                        :ARG2 (v / virus
                              :ARG0-of (ii4 / induce-01))
                        :ARG3 (m2 / most)))))"
"(w / want-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Bob""
                  :op2 ""Ferguson""))
      :ARG1 (r / report-01
            :ARG0 (y / you)
            :ARG1 (g / gouge-02
                  :ARG1 (p2 / price)
                  :ARG1-of (r2 / relate-01
                        :ARG2 (l / law
                              :name (n2 / name
                                    :op1 ""COVID-19""))))))"
"(s / say-01
      :ARG0 (p / person
            :ARG0-of (g / grow-03)
            :ARG1-of (l / local-02))
      :ARG1 (r / recommend-01
            :ARG1 (b / buy-01
                  :ARG0 (p2 / person
                        :ARG0-of (s2 / shop-01))
                  :ARG1 (f / food
                        :source (c / country
                              :name (n / name
                                    :op1 ""Wales"")))
                  :ARG2 (c2 / company
                        :ARG0-of (s3 / supply-01))
                  :ARG1-of (d / direct-02)
                  :time (n2 / now)))
      :ARG1-of (c3 / cause-01
            :ARG0 (e / expose-01
                  :ARG0 (p3 / pandemic
                        :name (n3 / name
                              :op1 ""Coronavirus""))
                  :ARG1 (f2 / flaw-01
                        :ARG1 (c4 / chain
                              :mod (s4 / supply-01
                                    :ARG2 (s5 / supermarket))))))
      :medium (u / url-entity
            :value ""http://www.christianfarm.com""))"
"(g / go-01
      :ARG1 (c / company)
      :ARG3 (m / make-02
            :ARG0 c
            :ARG1 (l / look-02
                  :ARG0 (h / hair)
                  :ARG1 (c2 / cool-04
                        :ARG1 h)))
      :ARG4 (f / fight-01
            :ARG0 c
            :ARG1 (c3 / coronavirus)))"
"(ii / introduce-02
      :ARG0 (g / government-organization
            :ARG0-of (g2 / govern-01
                  :ARG1 (s / state
                        :name (n / name
                              :op1 ""Queensland""))))
      :ARG1 (l / legislate-01
            :ARG1 (l2 / lift-02
                  :ARG0 g
                  :ARG1 (c / curfew
                        :mod (c2 / council
                              :ARG1-of (l3 / local-02))
                        :time (d / deliver-01
                              :time (o / overnight)))
                  :ARG2-of (r / respond-01
                        :ARG1 (d2 / demand-01
                              :ARG0 (p / person
                                    :ARG0-of (c3 / consume-01))
                              :mod (p2 / precedent
                                    :polarity -)
                              :time (p3 / pandemic
                                    :name (n2 / name
                                          :op1 ""Covid-19"")
                                    :mod (c4 / coronavirus)))))))"
"(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (a / amr-unknown)
            :ARG1 (g / go-01
                  :ARG1 (p / price-01
                        :ARG1 (g2 / gas))
                  :ARG4 (d / down)
                  :ARG1-of (q / quick-02
                        :degree (s / so)))
            :ARG1-of (s2 / say-01
                  :ARG0 (p2 / person
                        :name (n / name
                              :op1 ""Dr.""
                              :op2 ""Dena""
                              :op3 ""Grayson""))
                  :time (d2 / date-entity
                        :day 25
                        :month 3
                        :year 2020)))
      :snt2 (u / use-01
            :ARG0 (w / we)
            :ARG1 (e / event)
            :ARG2 (a2 / amr-unknown)
            :condition (s3 / survive-01
                  :ARG0 w
                  :ARG1 (c2 / crisis
                        :name (n2 / name
                              :op1 ""Corona"")
                        :mod (t / this)))
            :ARG1-of (w2 / word-01
                  :mod (o / other))))"
"(c / contrast-01
      :ARG1 (t / think-01
            :ARG0 (ii / i)
            :ARG1 (o / or
                  :op1 (r / reduce-01
                        :ARG0 (c2 / coronavirus)
                        :ARG1 (p / price-01))
                  :op2 (l / leave-14
                        :ARG0 c2
                        :ARG1 (p2 / price-01
                              :ARG1-of (s / same-01))
                        :mod (a / at-least))
                  :purpose (p3 / possible-01
                        :ARG1 (s2 / stock-up-02
                              :ARG0 (p4 / person)))))
      :ARG2 (m / make-02
            :ARG0 c2
            :ARG1 (o2 / overprice-01
                  :ARG1 (e / everything)
                  :degree (h / high-02))
            :mod (j / just)
            :ARG1-of (ii2 / instead-of-91)))"
"(m / multi-sentence
      :snt1 (t / think-01
            :ARG0 (ii / i
                  :prep-as (a / and
                        :op1 (p / person
                              :ARG0-of (m2 / market-01))
                        :op2 (p2 / person
                              :ARG0-of (c / consume-01))))
            :ARG1 (n / nail-01
                  :ARG0 (m3 / message-01
                        :ARG1 (b / brand-01)
                        :mod (t2 / this))
                  :ARG1 (ii2 / it)
                  :ARG1-of (c2 / cause-01
                        :ARG0 (a2 / and
                              :op1 (r / relevant-01)
                              :op2 (p3 / place-01
                                    :ARG1 m3
                                    :ARG2 (m4 / market-sector
                                          :name (n2 / name
                                                :op1 ""Times""
                                                :op2 ""Square"")
                                          :location (c3 / city
                                                :name (n3 / name
                                                      :op1 ""NYC"")))
                                    :manner (c4 / context))
                              :op3 (s / sentiment)))))
      :snt2 (d / do-02
            :ARG0 (c5 / company
                  :name (n4 / name
                        :op1 ""CocaCola""))
            :ARG1 (w / well-09)))"
"(s / say-01
      :ARG1 (e / exist-01
            :polarity -
            :ARG1 (t / thing
                  :name (n / name
                        :op1 ""Corona""
                        :op2 ""Diet"")))
      :ARG2 (p / person
            :name n
            :op1 ""Flattenthecurve""))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (t / think-01
                  :ARG0 ii
                  :ARG1 (p / problem
                        :topic (r / road
                              :name (n / name
                                    :op1 ""Route""
                                    :op2 36))))
            :ARG2 (p2 / person
                  :name n
                  :op1 ""kcmetrobus""))
      :snt2 (a / and
            :op1 (s2 / seem-01
                  :polarity -
                  :ARG1 (r2 / run-01
                        :ARG1 (ii2 / it)
                        :frequency (o / often
                              :degree (v / very))))
            :op2 (c / cause-01
                  :ARG0 ii2
                  :ARG1 (p3 / pack-01
                        :ARG1 (b / bus)
                        :ARG1-of (h / have-quant-91
                              :ARG3 (m2 / more)
                              :ARG4 (n2 / need-01)))))
      :snt3 (a2 / and
            :op1 (o2 / obligate-01
                  :ARG1 (ii3 / i)
                  :ARG2 (r3 / run-01
                        :ARG0 ii3
                        :destination (s3 / store
                              :mod (g / grocery))))
            :op2 (a3 / allow-01
                  :polarity -
                  :ARG0 (b2 / bus)
                  :ARG1 (d / distance-01
                        :ARG2 (s4 / social)))))"
"(m / multi-sentence
      :snt1 (w / waste-01
            :ARG1 (t / time)
            :ARG2 (e / email-01)
            :ARG1-of (c / cause-01
                  :ARG0 (g / get-01
                        :ARG0 (y / you)
                        :ARG1 (r / reply-01
                              :mod (a / auto)
                              :ARG0-of (s / say-01
                                    :ARG1 (c2 / contrast-01
                                          :ARG1 (s2 / sorry-01
                                                :ARG1 (c3 / company))
                                          :ARG2 (b / busy-01
                                                :ARG1 c3))))
                        :time (e2 / ever))))
      :snt2 (r2 / recommend-01
            :ARG1 (a2 / and
                  :op1 (d / do-02
                        :ARG0 c3
                        :ARG1 (t2 / thing
                              :ARG1-of (h / honorable-03)))
                  :op2 (g2 / give-01
                        :ARG0 c3
                        :ARG1 (r3 / refund-01
                              :ARG0 c3
                              :ARG2 (p / person)
                              :mod (f / full))
                        :ARG2 p)
                  :ARG1-of (ii / instead-of-91
                        :ARG2 (p2 / profit-01
                              :ARG0 c3
                              :manner (c4 / charge-01
                                    :ARG0 c3
                                    :ARG1 (p3 / price
                                          :ARG1-of (e3 / extort-01))
                                    :ARG3 (b2 / book-03
                                          :ARG0 p
                                          :mod (a3 / again))))))))"
"(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (s / say-01
                  :ARG0 (n / no-one)
                  :ARG1 (t / thing
                        :location-of (c / contract-04
                              :ARG1 (t2 / they)
                              :ARG2 (v / virus)))
                  :ARG1-of (s2 / sure-02
                        :ARG0 n)))
      :snt2 (c2 / contrast-01
            :ARG1 (w / work-01
                  :ARG0 (ii / i)
                  :location (h / hospital))
            :ARG2 (m2 / mean-01
                  :polarity -
                  :ARG1 w
                  :ARG2 (g / get-01
                        :ARG0 ii
                        :ARG1 v
                        :location h)
                  :ARG1-of (n2 / need-01)))
      :snt3 (p2 / possible-01
            :ARG1 (p3 / pick-up-04
                  :ARG0 ii
                  :ARG1 (ii2 / it)
                  :ARG2 (a / anywhere
                        :example (o / or
                              :op1 (s3 / supermarket)
                              :op2 (s4 / station
                                    :mod (p4 / petrol))
                              :op3 (e / et-cetera)))))
      :snt4 (p5 / possible-01
            :ARG1 (u / understand-01
                  :ARG0 (y / you)
                  :ARG1 (t3 / that)
                  :ARG1-of s2))
      :polarity (a2 / amr-unknown))"
"(s / say-01
      :ARG0 (n / newspaper
            :name (n2 / name
                  :op1 ""The""
                  :op2 ""Washington""
                  :op3 ""Post""))
      :ARG1 (b / begin-01
            :ARG1 (d / die-01
                  :ARG1 (p / person
                        :ARG0-of (w / work-01
                              :ARG1 (g / grocery)))
                  :ARG1-of (c / cause-01
                        :ARG0 (c2 / coronavirus)))))"
"(m / multi-sentence
      :snt1 (s / supermarket
            :domain (p / place
                  :mod (o / only)
                  :ARG1-of (s2 / see-01
                        :ARG0 (ii / i)
                        :manner (r / resemble-01
                              :ARG1 (c / crowd)
                              :mod (a / any)))))
      :snt2 (a2 / and
            :op1 (a3 / anxious
                  :domain (p2 / person)
                  :topic (s3 / stay-01
                        :ARG1 p2
                        :ARG3 (a4 / apart
                              :op1 s
                              :quant (m2 / more-than
                                    :op1 (d / distance-quantity
                                          :quant 1
                                          :unit (m3 / meter))))))
            :op2 (c2 / caution-01
                  :ARG0 (n / notice-03)
                  :ARG1 (p3 / put-01
                        :polarity -
                        :ARG0 (y / you
                              :part (m4 / mouth))
                        :ARG1 (c3 / cash)
                        :ARG2 m4)))
      :snt3 (t / take-away-05
            :mod (o2 / only)
            :domain (c4 / cafe
                  :ARG1-of (n2 / new-01))))"
"(d / deliver-01
      :ARG0 (l / lorry
            :time (a / after
                  :op1 (l2 / lorry)))
      :ARG2 (c / chain
            :mod (s / supply-01))
      :purpose (d2 / deliver-01
            :ARG0 l
            :ARG2 (s2 / supermarket
                  :ARG1-of (l3 / local-02)
                  :poss (y / you))
            :mod (o / onward)))"
"(j / jack-up-01
      :ARG0 (s / store
            :mod (g / grocery))
      :ARG1 (t / thing
            :ARG2-of (p / price-01
                  :ARG1 (e / everything))))"
"(ii / issue-01
      :ARG0 (g / government-organization
            :name (n / name
                  :op1 ""The""
                  :op2 ""Consumer""
                  :op3 ""Product""
                  :op4 ""Safety""
                  :op5 ""Commission""))
      :ARG1 (g2 / guide-01
            :ARG2 (s / safe-01
                  :ARG1 (h / home)))
      :time (c / crisis
            :name (n2 / name
                  :op1 ""COVID-19"")))"
"(ii / idiot
      :domain (y / you)
      :condition (t / think-01
            :ARG0 y
            :ARG1 (o / okay-04
                  :ARG1 (u / use-01
                        :ARG0 y
                        :ARG1 (w / word
                              :mod (t2 / that))))))"
"(m / multi-sentence
      :snt1 (p / person
            :ARG0-of (o / own-01))
      :snt2 (p2 / publish-01
            :ARG0 (w / we)
            :ARG1 (d / data
                  :topic (a / activity-06
                        :ARG0 (p3 / person
                              :ARG0-of (c / consume-01))
                        :location (a2 / and
                              :op1 (a3 / across
                                    :op1 (c2 / country))
                              :op2 (a4 / across
                                    :op1 (ii / industry)))))
            :time (j / just)
            :purpose (s / show-01
                  :ARG0 w
                  :ARG1 (t / thing
                        :ARG1-of (d2 / do-02
                              :ARG0 (p4 / program
                                    :name (n / name
                                          :op1 ""COVID""
                                          :op2 19))
                              :ARG2 (ii2 / industry
                                    :ARG1-of (l / local-02)
                                    :mod (s2 / service))))))
      :snt3 (c3 / challenge-01
            :ARG1 (p5 / person
                  :ARG0-of (o2 / own-01
                        :ARG1 (b / business
                              :mod (s3 / small))))
            :mod (t2 / this)))"
"(c / cause-01
      :ARG0 (a / available-02
            :ARG2 (ii / item
                  :mod (f / food)
                  :ARG1-of (n / need-01
                        :ARG0 (y / you))
                  :mod (e / every))
            :location (s / store
                  :mod (l / local)
                  :mod (k / kirana)
                  :poss y))
      :ARG1 (p / panic-01
            :polarity -
            :mode imperative
            :ARG0 y))"
"(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (u / use-01
                  :ARG0 (y / you)
                  :ARG1 (w / water)
                  :ARG2 (c / cleanse-01
                        :ARG0 y
                        :ARG1 y
                        :time (a / after
                              :op1 (d / do-02
                                    :ARG0 y
                                    :ARG1 (b / business
                                          :poss y)))))
            :condition (w2 / worry-02
                  :ARG0 (h / have-03
                        :polarity -
                        :ARG0 y
                        :ARG1 (p2 / paper
                              :purpose (t / toilet)
                              :ARG1-of (h2 / have-quant-91
                                    :ARG3 (e / enough))))
                  :ARG1 y))
      :snt2 (a2 / and
            :op1 (p3 / practice-01
                  :ARG1 (t2 / this)
                  :mod (c2 / common)
                  :location (n / nation
                        :quant (m2 / many)
                        :location (w3 / world-region
                              :name (n2 / name
                                    :op1 ""East""))))
            :op2 (w4 / way
                  :manner-of (u2 / use-01
                        :ARG1 (p4 / paper
                              :purpose (t3 / toilet)
                              :ARG1-of (h3 / have-quant-91
                                    :ARG3 (l / less))))
                  :domain t2
                  :ARG1-of (g / good-02))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (s / surgery-01
                  :ARG1 (ii / i)
                  :time (y / yesterday))
            :op2 (o / obligate-01
                  :ARG1 ii
                  :ARG2 (s2 / stand-01
                        :ARG2 (ii2 / in-line-04)
                        :purpose (g / get-05
                              :ARG1 ii
                              :ARG2 (s3 / store
                                    :mod (g2 / grocery))
                              :mod (j / just)))
                  :ARG1-of (c / cause-01
                        :ARG0 (b / buy-01
                              :mod (p / panic-01)
                              :mod (a2 / all)))
                  :time (n / now)))
      :snt2 (s4 / swell-01
            :ARG1 (p2 / person)
            :ARG1-of (s5 / sure-02)))"
"(m / multi-sentence
      :snt1 (r / recommend-01
            :ARG1 (l / look-down-06
                  :ARG0 (n / no-one)
                  :ARG1 (p / person
                        :ARG0-of (w / work-01
                              :ARG2 (s / store
                                    :mod (g / grocery))))
                  :time (e / ever))
            :time (a / after
                  :op1 (t / this)))
      :snt2 (t2 / think-01
            :ARG0 (y / you)
            :ARG1 (e2 / enjoy-01
                  :ARG0 (t3 / they)
                  :ARG1 (s2 / sense-01
                        :ARG1 (s3 / secure-02
                              :ARG1 (j / job))
                        :ARG1-of (n2 / new-01))
                  :concession (s4 / stress-02
                        :ARG1 t3))
            :polarity (a2 / amr-unknown)
            :mod (a3 / also)))"
"(j / join-04
      :mode imperative
      :polite +
      :ARG0 (y / you)
      :ARG1 (w / we)
      :location (c / city
            :name (n / name
                  :op1 ""London""))
      :time (d / date-entity
            :time ""22:00"")
      :purpose (s / show-01
            :ARG0 y
            :ARG1 (a / appreciate-02
                  :ARG0 w
                  :ARG1 (a2 / and
                        :op1 (g / government-organization
                              :name (n2 / name
                                    :op1 ""NHS""))
                        :op2 (s2 / supermarket)
                        :op3 (p / person
                              :ARG0-of (w2 / work-01)
                              :mod (s3 / superhero))))
            :manner (c2 / clap-01
                  :ARG0 y)))"
"(a / announce-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Northern""
                  :op2 ""Railway""))
      :ARG1 (h / hike-02
            :ARG1 (m / monetary-quantity
                  :ARG2-of (p / price-01
                        :ARG1 (t / ticket
                              :mod (p2 / platform))))
            :ARG2 (p3 / percentage-entity
                  :value 400))
      :purpose (c2 / contain-01
            :ARG0 c
            :ARG1 (ii / infect-01
                  :ARG0 (c3 / coronavirus)
                  :location (c4 / country
                        :name (n2 / name
                              :op1 ""India"")))))"
"(c / contrast-01
      :ARG1 (m / make-light-11
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (s / situation))
      :ARG2 (m2 / mechanism
            :ARG1-of (g / good-02)
            :purpose (c2 / cope-01)
            :domain (h / humor)
            :frequency (s2 / sometimes)))"
"(p / possible-01
      :polarity -
      :ARG1 (b / believe-01
            :ARG0 (ii / i)
            :ARG1 (t / thing
                  :degree-of (e / empty-02
                        :ARG1 (s / supermarket
                              :location-of (w / work-01
                                    :ARG0 ii)))))
      :mod (s2 / still)
      :concession (h / have-03
            :ARG0 ii
            :ARG1 (d / deliver-01
                  :ARG1-of (f / full-09)
                  :mod (a / as-usual))))"
"(m / multi-sentence
      :snt1 (n / need-01
            :ARG0 (d / day
                  :ord (o / ordinal-entity
                        :value 2)
                  :time-of (s / shelf
                        :ARG1-of (e / empty-02)
                        :location (s2 / street-address-91
                              :ARG2 (r / road
                                    :name (n2 / name
                                          :op1 ""10DowningStreet"")))
                        :mod (s3 / supermarket)))
            :ARG1 (c / close-01
                  :ARG1 (s4 / supermarket)
                  :time (ii / immediate)
                  :duration (t / temporal-quantity
                        :quant 48
                        :unit (h / hour))
                  :purpose (a / allow-01
                        :ARG0 s4
                        :ARG1 (r2 / restock-01
                              :ARG0 s4
                              :ARG1 (s5 / shelf)))
                  :time (t2 / then
                        :op1 (s6 / set-up-03
                              :ARG0 s4
                              :ARG1 (c2 / card
                                    :mod (r3 / ration-01))))))
      :snt2 (s7 / start-01
            :ARG0 (p / person)
            :ARG1 (g / go-06
                  :ARG0 p
                  :ARG1 (f / food
                        :polarity -)
                  :manner (t3 / thank-01
                        :polarity -
                        :ARG0 (p2 / person
                              :ARG0-of (b / buy-01
                                    :mod (b2 / bulk))
                              :mod (g2 / greedy))
                        :ARG1 p))))"
"(m / multi-sentence
      :snt1 (s / sell-01
            :ARG0 (ii / i)
            :ARG1 (l / list
                  :consist-of (c / company
                        :ARG0-of (v / vend-01
                              :ARG1 (s2 / supermarket)))
                  :ARG2-of (ii2 / include-01
                        :ARG1 (a / and
                              :op1 (d / date
                                    :time-of (s3 / ship-01))
                              :op2 (t / time
                                    :time-of s3))))
            :ARG0-of (c2 / cause-01
                  :ARG1 (k / know-01
                        :ARG0 (y / you)
                        :ARG1 t
                        :time-of (h / have-03
                              :ARG0 c
                              :ARG1 (a2 / and
                                    :op1 (p / paper
                                          :purpose (t2 / toilet))
                                    :op2 (p2 / product
                                          :purpose (c3 / clean-01))
                                    :op3 (w / water))))
                  :ord (o / ordinal-entity
                        :value 1)))
      :snt2 (m2 / monetary-quantity
            :quant 5
            :unit (d2 / dollar)
            :mod (o2 / only)))"
"(g / glad-02
      :ARG0 (s / see-01
            :ARG0 (ii / i)
            :ARG1 (s2 / step-01
                  :ARG1 (c / chain
                        :consist-of (s3 / slash
                              :op1 (c2 / company
                                    :name (n / name
                                          :op1 ""Loblaws""))
                              :op2 (c3 / company
                                    :name (n2 / name
                                          :op1 ""Superstore""))
                              :op3 (c4 / company
                                    :name (n3 / name
                                          :op1 ""No""
                                          :op2 ""Frills""))
                              :op4 (e / et-cetera)
                              :ARG0-of (s4 / store-01
                                    :ARG1 (g2 / grocery))))
                  :ARG2 (h / help-01
                        :ARG0 c
                        :ARG1 (p / prevent-01
                              :ARG1 (s5 / spread-02
                                    :ARG1 (d / disease
                                          :name (n4 / name
                                                :op1 ""Covid_19"")))))
                  :mod (t / this)))
      :ARG1 ii)"
"(ii / include-01
      :li 19
      :ARG1 (a / and
            :op1 (s / stay-01
                  :ARG1 (y / you
                        :part (h / hand))
                  :location (h2 / home)
                  :condition (s2 / sick-05
                        :ARG1 y))
            :op2 (w / wash-01
                  :ARG0 y
                  :ARG1 h
                  :frequency (o / often))
            :op3 (a2 / avoid-01
                  :ARG0 y
                  :ARG1 (c / contact-01
                        :ARG0 y
                        :ARG1 (p / person
                              :ARG1-of (s3 / sick-05))
                        :ARG1-of (c2 / close-10))))
      :ARG2 (a3 / and
            :op1 (w2 / warn-01
                  :ARG1 (e / endanger-01
                        :ARG1 p
                        :ARG0-of (c3 / consume-01))))
      :op2 (t / tip-05
            :ARG2 (s4 / safe-01))
      :beneficiary (l / law
            :name (n / name
                  :op1 ""COVID-19"")))"
"(m / multi-sentence
      :snt1 (t / take-advantage-02
            :ARG0 (c / chemist
                  :quant (m2 / many))
            :ARG1 (s / situation)
            :ARG2 (c2 / charge-01
                  :ARG0 c
                  :ARG1 (m3 / more)
                  :ARG3 (a / and
                        :op1 (m4 / mask)
                        :op2 (s2 / sanitizer))))
      :snt2 (a2 / appreciate-02
            :ARG0 (ii / i)
            :condition (p / possible-01
                  :ARG1 (s3 / step-01
                        :ARG1 (y / you)
                        :ARG2 (f / fix-02
                              :ARG0 y
                              :ARG1 (t2 / thing
                                    :ARG2-of (p2 / price-01
                                          :ARG1 (ii2 / item
                                                :mod (t3 / this))))
                              :duration (f2 / few
                                    :op1 (t4 / temporal-quantity
                                          :quant 1
                                          :unit (d / day))))
                        :ARG1-of (n / need-01)))))"
"(h / hope-01
      :ARG0 (ii / i)
      :ARG1 (d / die-01
            :ARG1 ii
            :location (f / foot
                  :part-of (p / person
                        :ARG0-of (h2 / hoard-01)
                        :mod (s / selfish)
                        :ARG0-of (h3 / hoard-01
                              :ARG1 (p2 / pack
                                    :quant (m / multiple)
                                    :consist-of (p3 / paper
                                          :purpose (t / toilet))))))
            :time (s2 / shop-01
                  :ARG0 ii
                  :ARG1 (g / grocery)
                  :time (w / week
                        :mod (n / next))))
      :condition (d2 / die-01
            :ARG1 ii))"
"(m / multi-sentence
      :snt1 (g / go-02
            :polarity -
            :mode imperative
            :ARG0 (y / you)
            :ARG4 (s / store
                  :mod (g2 / grocery))
            :ARG1-of (c / cause-01
                  :ARG0 (a / and
                        :op1 (b / bore-02
                              :ARG1 y)
                        :op2 (w / want-01
                              :ARG0 y
                              :ARG1 (g3 / get-05
                                    :ARG1 y
                                    :ARG2 (o / out-06
                                          :ARG1 y
                                          :ARG2 (h / house)))))
                  :mod (j / just)))
      :snt2 a
      :op1 (ii / intend-01
            :mode imperative
            :ARG0 (y2 / you)
            :degree (ii2 / incredible)
            :time (s2 / shop-01
                  :ARG0 y2
                  :manner (l / list
                        :ARG1-of (m2 / maintain-01
                              :ARG0 (m3 / member
                                    :quant 1
                                    :ARG1-of (ii3 / include-91
                                          :ARG2 (h2 / household
                                                :poss y2))
                                    :mod (o2 / only))))))
      :op2 (k / kind-01
            :mode imperative
            :ARG0 y2
            :ARG2 (p / person
                  :ARG0-of (w2 / work-01))))"
"(t / thank-01
      :ARG1 (a / and
            :op1 (d / doctor)
            :op2 (n / nurse)
            :op3 (p / person
                  :ARG2-of (s / staff-01
                        :ARG1 (s2 / supermarket)))
            :op4 (p2 / person
                  :ARG0-of (t2 / teach-01))
            :op5 (s3 / service-05
                  :ARG2 (e / emergency))
            :op6 (p3 / person
                  :mod (o / other))
            :ARG0-of (c / contribute-01
                  :ARG2 (h / help-01
                        :ARG0 a
                        :ARG2 (w / we)
                        :time (p4 / pandemic
                              :name (n2 / name
                                    :op1 ""Covid_19"")))
                  :manner (w2 / way
                        :mod (a2 / any)
                        :mod o)))
      :mod (a3 / all)
      :ARG2 (y / you))"
"(p / potential
      :domain (c / create-01
            :ARG0 (p2 / product
                  :name (n / name
                        :op1 ""COVID-19""))
            :ARG1 (c2 / change-01
                  :ARG0 p2
                  :ARG1 (a / and
                        :op1 (t / thing
                              :manner-of (s / shop-01
                                    :ARG0 (p3 / person)))
                        :op2 (t2 / thing
                              :manner-of (c3 / consume-01
                                    :ARG0 p3
                                    :ARG1 (m / media)))
                        :op3 (t3 / thing
                              :manner-of (r / regard-01
                                    :ARG0 p3
                                    :ARG1 (b / brand
                                          :ARG2-of (d / do-02
                                                :ARG0 p3
                                                :ARG1 (b2 / business))))))
                  :ARG2 (t4 / thing
                        :ARG1-of (b3 / behave-01)
                        :ARG1-of (h / have-degree-91
                              :ARG2 (p4 / permanent)
                              :ARG3 (m2 / more))))))"
"(m / multi-sentence
      :snt1 (g / get-01
            :polarity -
            :ARG0 (g2 / government-organization
                  :ARG0-of (g3 / govern-01
                        :ARG1 (c / country
                              :name (n / name
                                    :op1 ""UK""))))
            :ARG1 (ii / it))
      :snt2 (s / stop-01
            :polarity -
            :ARG0 (s2 / say-01
                  :ARG1 (a / and
                        :op1 (h / have-03
                              :ARG0 (w / we)
                              :ARG1 (f / food
                                    :ARG1-of (h2 / have-quant-91
                                          :ARG3 (e / enough))))
                        :op2 (s3 / stockpile-01
                              :polarity -
                              :ARG0 w))
                  :frequency (o / over-and-over))
            :ARG1 (t / this))
      :snt3 (o2 / obligate-01
            :ARG2 (e2 / enforce-01
                  :ARG0 (l / law)))
      :snt4 (p / possible-01
            :polarity -
            :ARG1 (l2 / limit-01
                  :ARG0 (t2 / they)
                  :ARG1 (a2 / adult
                        :quant 4)
                  :ARG2 (r / rate-entity-91
                        :ARG1 (ii2 / item
                              :quant 3)
                        :ARG2 (p2 / product)))
            :condition (a3 / and
                  :op1 (a4 / arrive-01
                        :ARG1 a2
                        :manner (c2 / car
                              :ARG1-of (s4 / same-01)))
                  :op2 (s5 / shop-01
                        :ARG0 a2
                        :manner (s6 / separate-02)))))"
"(l / let-know-07
      :polite +
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (w / we)
      :ARG2 (o / or
            :op1 (u / update-02
                  :ARG0 (s / store
                        :mod (g / grocery)))
            :op2 (e / experience-01
                  :ARG0 y
                  :ARG1 (s2 / shop-01
                        :ARG0 y)
                  :time (o2 / or
                        :op1 (w2 / weekend
                              :mod (t / this))
                        :op2 (t2 / today)))))"
"(c / contrast-01
      :ARG1 (h / help-out-03
            :ARG0 (c2 / country
                  :location (c3 / continent
                        :name (n / name
                              :op1 ""Europe"")))
            :ARG2 (e / each
                  :mod (o / other)))
      :ARG2 (a / and
            :op1 (o2 / outbid-01
                  :ARG0 (s / state
                        :location (c4 / country
                              :name (n2 / name
                                    :op1 ""US"")))
                  :ARG1 s)
            :op2 (r / raise-01
                  :ARG0 s
                  :ARG1 (p / price-01
                        :ARG1 (s2 / supply-01
                              :ARG1 (m / medicine)
                              :ARG1-of (c5 / critical-02))))))"
"(m / multi-sentence
      :snt1 (s / space
            :domain (s2 / store
                  :mod (r / record))
            :mod (p / physical)
            :ARG1-of (c / change-01
                  :manner (c2 / constant))
            :mod (d / dynamic))
      :snt2 (a / and
            :op1 (s3 / swarm-01
                  :ARG0 (e / excite-01
                        :ARG1 (t / they))
                  :ARG1 t
                  :mod (a2 / also))
            :op2 (p2 / possible-01
                  :polarity -
                  :ARG1 (a3 / actualize-01
                        :ARG1 (e2 / essence
                              :mod (t2 / that))
                        :degree (f / full)
                        :location (s4 / shop
                              :mod (o / online))
                        :time (e3 / ever)))))"
(a / amr-empty)
"(ii / include-01
      :ARG1 (a / and
            :op1 (d / deflate-01)
            :op2 (p / profit-01
                  :ARG1-of (d2 / deflate-01))
            :op3 (d3 / depress-01))
      :ARG2 (a2 / affect-01
            :ARG0 (l / law
                  :name (n / name
                        :op1 ""COVID-19""))
            :mod (s / secondary))
      :concession (o / operate-01
            :ARG0 (b / bank
                  :mod (c / central))
            :ARG1 (p2 / print-01
                  :ARG0 b
                  :ARG1 (m / money))))"
"(r / report-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Beard""))
      :ARG1 (r2 / risk-01
            :ARG0 (p2 / person
                  :quant 1000)
            :ARG2 (h / hunger-01
                  :ARG0 p2)
            :ARG1-of (c / cause-01
                  :ARG0 (b / buckle-01
                        :ARG1 (s / supermarket)
                        :ARG2 (d / demand-01
                              :ARG1 (d2 / deliver-01
                                    :ARG1 (a / and
                                          :op1 (p3 / person
                                                :quant 1500000
                                                :ARG1-of (v / vulnerable-01))
                                          :op2 (p4 / person
                                                :quant (m / multiple
                                                      :op1 1000000)
                                                :mod (m2 / more)
                                                :ARG1-of (a2 / ask-02
                                                      :ARG2 (s2 / shield-01
                                                            :ARG0 p4))))
                                    :ARG2 (h2 / home)))))))"
"(t / think-01
      :ARG0 (y / you)
      :ARG1 (h / have-06
            :ARG0 (ii / industry
                  :mod (a / amr-unknown))
            :ARG1 (s / spike-01
                  :ARG1 (d / demand-01))
            :time (b / be-done-08
                  :ARG1 (p / product
                        :name (n / name
                              :op1 ""COVID-19"")))))"
"(c / contrast-01
      :ARG1 (p / praise-01
            :ARG1 (p2 / person
                  :ARG0-of (w / work-01
                        :ARG1 (h / healthcare)))
            :ARG2 (w2 / work-01
                  :ARG0 p2)
            :ARG1-of (r / right-02))
      :ARG2 (r2 / recommend-01
            :ARG1 (f / forget-01
                  :polarity -
                  :ARG0 (w3 / we)
                  :ARG1 (e / expose-01
                        :ARG1 (a / and
                              :op1 (p3 / person
                                    :ARG0-of (w4 / work-01
                                          :ARG2 (s / store
                                                :mod (g / grocery))))
                              :op2 (p4 / person
                                    :ARG0-of (w5 / work-01
                                          :ARG2 (s2 / store
                                                :mod (d / drug)))))
                        :ARG2 (p5 / program
                              :name (n / name
                                    :op1 ""COVID-19""))
                        :frequency (r3 / rate-entity-91
                              :ARG3 (t / temporal-quantity
                                    :quant 1
                                    :unit (d2 / day))))
                  :concession (m / mind-15
                        :polarity -
                        :mode imperative
                        :ARG0 w3
                        :ARG1 (a2 / and
                              :op1 (s3 / shift
                                    :ARG1-of (l / long-03
                                          :degree (v / very)))
                              :op2 (c2 / customer
                                    :ARG1-of (a3 / anger-01)))
                        :time (e2 / ever)))))"
"(m / multi-sentence
      :snt1 (s / sum-up-01
            :ARG0 (t / this)
            :ARG1 (s2 / state
                  :poss (c / country
                        :name (n / name
                              :op1 ""UK""))
                  :time (m2 / moment))
            :mod (a / about))
      :snt2 (w / worry-01
            :ARG0 (a2 / and
                  :op1 (s3 / shop
                        :ARG1-of (e / empty-02))
                  :op2 (c2 / case-04
                        :ARG1 (c3 / coronavirus)
                        :quant (l / lot)))
            :ARG1 (p / person)
            :ARG1-of (u / understand-01
                  :ARG1-of (p2 / possible-01))))"
"(p / possible-01
      :ARG1 (c / come-01
            :ARG1 (a / and
                  :op1 (p2 / person
                        :ARG0-of (w / work-01
                              :ARG2 (s / store
                                    :mod (g / grocery))))
                  :op2 (p3 / person
                        :ARG0-of (h / have-org-role-91
                              :ARG1 (p4 / police)
                              :ARG2 (o / officer)))
                  :op3 (p5 / person
                        :ARG0-of (n / nurse-01)))
            :ARG4 (w2 / work-01)
            :purpose (g2 / get-04
                  :ARG0 a
                  :ARG1 (b / be-done-08
                        :ARG0 a
                        :ARG1 (j / job))
                  :time (n2 / now
                        :mod (r / right))))
      :condition-of (p6 / possible-01
            :ARG1 c
            :ARG1 (p7 / person
                  :ARG0-of (h2 / have-org-role-91
                        :ARG1 (g3 / government-organization
                              :name (n3 / name
                                    :op1 ""U.S.""
                                    :op2 ""House""
                                    :op3 ""of""
                                    :op4 ""Representatives""))
                        :ARG2 (m / member)))
            :ARG4 w2))"
"(m / multi-sentence
      :snt1 (w / work-01
            :ARG0 (w2 / we)
            :ARG1 (r / restock-01
                  :ARG0 w2
                  :purpose (p / possible-01
                        :ARG1 (g / get-05
                              :ARG0 w2
                              :ARG1 (f / food
                                    :ARG1-of (h / have-quant-91
                                          :ARG2 (m2 / much)
                                          :ARG3 (e / equal)
                                          :ARG4 (p2 / possible-01
                                                :ARG1 (e2 / eat-01
                                                      :location (h2 / home
                                                            :quant (m3 / many))))))))
                  :ARG2 (c / company
                        :ARG0-of (s / supply-01)))
            :snt2 (c2 / contrast-01
                  :ARG2 (a / and
                        :op1 (e3 / experience-01
                              :ARG0 (w3 / we)
                              :ARG1 (d / demand-01
                                    :ARG1-of (h3 / high-02))
                              :time (c3 / current))
                        :op2 (a2 / apologize-01
                              :ARG0 w3
                              :ARG1 (r2 / receive-01
                                    :polarity -
                                    :ARG0 (y / you)
                                    :ARG1 (ii / item
                                          :mod (e4 / exact)
                                          :ARG1-of (o / order-02
                                                :ARG0 y))))))
            :snt3 (s2 / see-01
                  :mode imperative
                  :polite +
                  :ARG0 y)
            :ARG1 (p3 / person
                  :name (n / name
                        :op1 ""Kelsie""))
            :purpose (ii2 / information
                  :mod (m4 / more))))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG1 (n / need-01
                  :ARG0 (p / person
                        :mod (t / that)
                        :ARG1-of (ii / include-91
                              :ARG2 (y / you))
                        :ARG0-of (s2 / stockpile-01))
                  :ARG1 (s3 / stop-01
                        :ARG0 p
                        :ARG1 s2))
            :ARG2 p)
      :snt2 (p2 / possible-01
            :polarity -
            :ARG1 (g / get-01
                  :ARG0 (p3 / person
                        :ARG0-of (w / work-01)
                        :ARG0-of (t2 / try-01
                              :ARG1 (t3 / treat-03
                                    :ARG0 p3
                                    :ARG1 (p4 / person
                                          :ARG1-of (v / victimize-01
                                                :ARG0 (ii2 / incident
                                                      :name (n2 / name
                                                            :op1 ""Covid-19"")))))))
                  :ARG1 (f / food
                        :ARG1-of (f2 / fresh-04))
                  :mod (e / even))
            :ARG1-of (c / cause-01
                  :ARG0 (t4 / take-01
                        :ARG0 (y2 / you)
                        :ARG1 (e2 / everything)))))"
"(b / begin-01
      :ARG1 (d / die-01
            :ARG1 (p / person
                  :ARG0-of (w / work-01
                        :ARG1 (g / grocery)))
            :ARG1-of (c / cause-01
                  :ARG0 (c2 / coronavirus))))"
"(c / call-on-05
      :ARG0 (p / person
            :ARG0-of (a / analyze-01
                  :ARG1 (e / economy))
            :quant (s / some))
      :ARG1 (g / government-organization
            :ARG0-of (g2 / govern-01))
      :ARG2 (ii / increase-01
            :ARG0 g
            :ARG1 (b / benefit-01
                  :ARG0 (p2 / program
                        :name (n / name
                              :op1 ""SNP"")))
            :ARG2 (p3 / percentage-entity
                  :value 15))
      :ARG1-of (c2 / cause-01
            :ARG0 (a2 / afford-01
                  :ARG0 (e2 / everyone
                        :polarity -)
                  :ARG1 (s2 / stock-01
                        :ARG0 e2
                        :ARG1 (p4 / pantry
                              :poss e2)
                        :purpose (p5 / prepare-02
                              :ARG0 e2
                              :ARG1 e2
                              :ARG2 (q / quarantine-01
                                    :ARG0 e2
                                    :ARG1 e2
                                    :mod (p6 / potential)))))))"
"(s / suffice-01
      :ARG0 (g / garden
            :poss (ii / i)
            :ARG1-of s))"
"(p / prepare-02
      :ARG0 (ii / industry
            :mod (a / agriculture)
            :location (s / state
                  :name (n / name
                        :op1 ""California"")))
      :ARG2 (s2 / short-06
            :ARG2 (p2 / person
                  :ARG0-of (w / work-01))
            :ARG0-of (ii2 / impact-01
                  :ARG1 (e / economy
                        :poss s)
                  :degree (l / large)
                  :ARG1-of (p3 / possible-01))
            :ARG1-of (p4 / possible-01)))"
"(m / multi-sentence
      :snt1 (f / fail-01
            :ARG1 (s / supermarket
                  :location (c / country
                        :name (n / name
                              :op1 ""England""))
                  :mod (a / all))
            :ARG1-of (c2 / cause-01
                  :ARG0 (c3 / collude-01
                        :ARG0 s
                        :ARG1 (c4 / company
                              :name (n2 / name
                                    :op1 ""PsyOp"")
                              :mod (b / buy-01
                                    :manner (p / panic-01))
                              :poss (o / organization
                                    :name (n3 / name
                                          :op1 ""Nudge""
                                          :op2 ""Unit"")
                                    :mod (s2 / shadowy)))
                        :ARG1-of (r / result-01
                              :ARG2 (s3 / short-06
                                    :ARG2 (f2 / food))))))
      :snt2 (a2 / and
            :op1 (s4 / shop-01
                  :polarity -
                  :ARG0 (ii / i)
                  :ARG1 (s5 / supermarket)
                  :time (n4 / now)
                  :duration (o2 / over
                        :op1 (t / temporal-quantity
                              :quant 1
                              :unit (m2 / month))))
            :op2 (p2 / possible-01
                  :ARG1 (s6 / shop-01
                        :polarity -
                        :ARG0 ii
                        :ARG1 s5
                        :mod (a3 / again)
                        :time (e / ever)
                        :ARG1-of (c5 / cause-01
                              :ARG0 (p3 / profit-01
                                    :ARG0 s5))))))"
"(s / send-01
      :ARG0 (p / person
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (ii / i)
                  :ARG2 (f / friend)))
      :ARG1 (p2 / photo
            :mod (t / this))
      :ARG2 ii
      :time (d / date-entity
            :dayperiod (m / morning)
            :mod (t2 / today)))"
"(a / and
      :op1 (b / be-located-at-91
            :polarity -
            :ARG1 (b2 / breast
                  :mod (c / chicken))
            :ARG2 (t / truck)
            :time (y / yesterday))
      :op2 (b3 / be-located-at-91
            :ARG1 (m / meat
                  :ARG1-of (r / red-02))
            :ARG2 t
            :time (t2 / today)))"
"(a / and
      :op1 (p / produce-01
            :ARG0 (c / company
                  :mod (v / vodka
                        :mod (c2 / country
                              :name (n / name
                                    :op1 ""Sweden"")))
                  :mod (t / this))
            :ARG1 (p2 / product
                  :ARG0-of (s / sanitize-01
                        :ARG1 (h / hand))
                  :quant (m / more))
            :ARG1-of (q / quick-02))
      :op2 (b / bring-01
            :ARG0 c
            :ARG1 p2
            :ARG2 (s2 / shelf
                  :mod (s3 / store)
                  :ARG1-of (e / empty-02))))"
"(p / put-01
      :mode expressive
      :ARG0 (s / shop
            :name (n / name
                  :op1 ""POS3"")
            :mod (p2 / premier))
      :ARG1 (p3 / price-01
            :ARG1 (b / beer
                  :poss s)
            :ARG2 (u / up)))"
"(r / realize-01
      :ARG0 (y / you)
      :ARG1 (s / sell-01
            :ARG1 (k / kit
                  :ARG1-of (f / fake-02)
                  :purpose (t / test-01
                        :ARG2 (h / home)))
            :location (o / or
                  :op1 (o2 / online)
                  :op2 (s2 / setting
                        :mod (p / person
                              :ARG0-of (c / consume-01))
                        :ARG1-of (d / direct-01
                              :manner (f2 / formal
                                    :polarity -))))))"
"(c / close-01
      :ARG1 (s / supermarket
            :mod (o / only)
            :location (n / near
                  :op1 (ii / i)))
      :ARG1-of (c2 / cause-01
            :ARG0 (g / get-01
                  :ARG0 (p / person
                        :ARG0-of (o2 / own-01
                              :ARG1 s))
                  :ARG1 (p2 / product
                        :name (n2 / name
                              :op1 ""Covid-19"")))))"
"(m / multi-sentence
      :snt1 (b / become-01
            :ARG1 (o / or
                  :op1 (g / go-02
                        :ARG4 (s / store
                              :mod (g2 / grocery)))
                  :op2 (w / walk-01)
                  :op3 (d / drive-01))
            :ARG2 (h / highlight-01
                  :ARG1 (d2 / day))
            :time g)
      :snt2 (s2 / stay-01
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""StayHomeSaveLives""))))"
"(h / help-01
      :ARG0 (s / shift-01
            :ARG1 (r / restaurant
                  :ARG0-of (h2 / have-03
                        :ARG1 (o / order-02
                              :ARG1 (ii / item
                                    :mod (f / food))
                              :ARG2 r)
                        :time (a / already))
                  :ARG0-of (s2 / stock-01
                        :ARG1 (p / product
                              :mod f)
                        :time a))
            :ARG2 (s3 / store
                  :mod (g / grocery)
                  :mod (s4 / small))
            :duration (t / temporary)
            :ARG1-of (ii2 / instead-of-91
                  :ARG2 (o2 / obligate-01
                        :ARG1 r
                        :ARG2 (c / close-01
                              :ARG1 r
                              :ARG1-of (c2 / complete-02)))))
      :polarity (a2 / amr-unknown))"
"(f / flood-01
      :ARG1 (a / and
            :op1 (m / market)
            :op2 (s / street))
      :ARG2 (p / person
            :ARG0-of (r / reside-01
                  :ARG1 (c / city
                        :name (n / name
                              :op1 ""Ilorin""))))
      :purpose (s2 / stock-up-02
            :ARG0 p
            :ARG1 (a2 / and
                  :op1 (f2 / food)
                  :op2 (t / thing
                        :ARG1-of (s3 / supply-01)
                        :mod (o / other))))
      :time (l / lock-down-06
            :name (n2 / name
                  :op1 ""COVID-19""))
      :time (d / date-entity
            :year 2020))"
"(s / say-01
      :ARG1 (c / contrast-01
            :ARG1 (l / last-04
                  :polarity -
                  :ARG1 (p / product
                        :name (n / name
                              :op1 ""Pandemic""))
                  :ARG2 (l2 / long-03))
            :ARG2 (l3 / last-04
                  :ARG1 (m / memory)
                  :ARG2 (l4 / long-03)))
      :ARG2 (p2 / possible-01
            :ARG1 (w / want-01
                  :ARG0 (y / you)
                  :ARG1 (t / think-01
                        :ARG0 y
                        :ARG2 (s2 / strategy
                              :topic (b / business)
                              :ARG1-of (l5 / long-03)
                              :poss y))))
      :topic (s3 / shop
            :ARG1-of (l6 / local-02)
            :ARG0-of (h / hike-02
                  :ARG1 (p3 / price-01
                        :ARG1 (w2 / wash-01
                              :ARG1 (h2 / hand)))
                  :ARG2 (u / up-to
                        :op1 (m2 / monetary-quantity
                              :quant 7
                              :unit (p4 / pound))))))"
"(a / apparatus
      :instrument-of (b / breathe-01)
      :ARG1-of (c / contain-01
            :ARG0 (s / self))
      :domain (t / this)
      :ARG1-of (u / use-01
            :location (s2 / supermarket)))"
"(m / multi-sentence
      :snt1 (w / warn-01
            :ARG0 (o / organization
                  :name (n / name
                        :op1 ""The""
                        :op2 ""Better""
                        :op3 ""Business""
                        :op4 ""Bureau""))
            :ARG1 (r / raise-01
                  :polarity -
                  :ARG0 (b / business)
                  :ARG1 (p / price-01
                        :ARG1 (ii / item
                              :ARG1-of (d / demand-01
                                    :ARG1-of (h / high-02))
                              :example (a / and
                                    :op1 (s / sanitizer
                                          :mod (h2 / hand))
                                    :op2 (t / tissue))))
                  :time (o2 / outbreak-29
                        :ARG1 (d2 / disease
                              :name (n2 / name
                                    :op1 ""Coronavirus""))))
            :ARG2 b)
      :snt2 (p2 / possible-01
            :ARG1 (r2 / report-01
                  :ARG0 (y / you)
                  :ARG1 (g / gouge-02
                        :ARG2 (p3 / price-01))
                  :ARG2 (o3 / or
                        :op1 o
                        :op2 (o4 / office
                              :poss (s2 / state
                                    :poss y)
                              :mod (a2 / attorney
                                    :mod (g2 / general)))))))"
"(g / go-06
      :ARG0 (w / we)
      :ARG1 (p / propose-01
            :ARG1 (c / credit-02
                  :ARG2 (p2 / person
                        :ARG0-of (c2 / consume-01)))
            :ARG1-of (o / outline-01
                  :time (w2 / week
                        :mod (l / last)))
            :ARG0-of (p3 / provide-01
                  :ARG1 (r / relieve-01
                        :ARG1 (f / financial)
                        :ARG2 (p4 / person
                              :mod (t / that)
                              :ARG0-of (f2 / face-01
                                    :ARG1 (d / difficulty
                                          :mod (p5 / pay-01))
                                    :time (p6 / pandemic
                                          :name (n / name
                                                :op1 ""Covid""
                                                :op2 19))))
                        :duration (t2 / temporary)))))"
"(f / find-02
      :ARG0 (g / group
            :mod (a / amr-unknown)
            :ARG0-of (c / consume-01))
      :ARG1 (p / price-01
            :ARG1 (a2 / and
                  :op1 (r / roll
                        :purpose (t / toilet))
                  :op2 (t2 / thermometer
                        :instrument-of (s / sanitize-01
                              :ARG1 (h / hand)))
                  :op3 (f2 / formula
                        :beneficiary (b / baby)))
            :ARG1-of (o / over-03)
            :ARG1-of (c2 / consistent-02))
      :concession (c3 / crack-down-06
            :ARG0 (a3 / and
                  :op1 (c4 / company
                        :name (n / name
                              :op1 ""Amazon""))
                  :op2 (c5 / company
                        :name (n2 / name
                              :op1 ""eBay"")))))"
(a / amr-empty)
"(m / multi-sentence
      :snt1 (a / ask-02
            :ARG0 (p / person
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (m2 / minister
                              :mod (p2 / prime))))
            :ARG1 (a2 / and
                  :op1 (p3 / panic-01
                        :polarity -
                        :ARG1 (p4 / person))
                  :op2 (s / stock-01
                        :ARG0 p4
                        :ARG1 (f / food)))
            :ARG2 p4
            :mod (a3 / also))
      :snt2 (s2 / say-01
            :ARG0 (h2 / he)
            :ARG1 (s3 / shop-01
                  :ARG0 (p5 / person)
                  :ARG1 (c / commodity
                        :mod (e / essential))
                  :mod (a4 / as-usual)
                  :ARG1-of (c2 / cause-01
                        :ARG0 (r / run-01
                              :polarity -
                              :ARG1 c
                              :condition (s4 / short-06
                                    :ARG2 c))))))"
"(c / create-01
      :ARG0 (m / measure-02
            :ARG1 (a / and
                  :op1 (d / distance-01
                        :mod (s / social))
                  :op2 (s2 / stay-01
                        :location (h / home)))
            :mod (c2 / coronavirus))
      :ARG1 (o / opportunity
            :beneficiary (p / platform
                  :mod (c3 / commerce)
                  :location (a2 / around
                        :op1 (w / world))
                  :ARG2-of (ii / include-91
                        :ARG1 (c4 / company
                              :name (n / name
                                    :op1 ""Gobeba"")
                              :location (c5 / country
                                    :name (n2 / name
                                          :op1 ""Kenya""))
                              :ARG0-of (s3 / see-01
                                    :ARG1 (t / triple-01
                                          :ARG1 (o2 / order-01
                                                :ARG1 (a3 / and
                                                      :op1 (f / food)
                                                      :op2 (ii2 / item
                                                            :mod (h2 / household))
                                                      :mod (e / especially)))
                                          :ARG1-of (c6 / cause-01
                                                :ARG0 (s4 / shift-01
                                                      :ARG0 (p2 / person
                                                            :mod c5
                                                            :quant (m2 / more))
                                                      :ARG2 (s5 / shop-01
                                                            :ARG0 p2
                                                            :medium (o3 / online)))))))))))"
"(t / tout-01
      :ARG1 (p / person
            :ARG1-of (e / employ-01
                  :ARG0 (s / supermarket)))
      :ARG2 (h / hero
            :mod s))"
"(l / lead-03
      :ARG0 (o / outbreak-29
            :ARG1 (c / coronavirus))
      :ARG2 (g / gouge-02
            :ARG1 (g2 / good
                  :mod (e / essential))
            :ARG2 (p / price-01)))"
"(m / multi-sentence
      :snt1 (t / tire-01
            :ARG0 (a / act-01
                  :ARG0 (p / person
                        :ARG0-of (w / work-01
                              :ARG2 (s / supermarket)))
                  :ARG1 (h / hero))
            :ARG1 (ii / i))
      :snt2 (c / care-01
            :polarity -
            :ARG0 (ii2 / i)
            :ARG1 (r / risk-01
                  :ARG0 (y / you)
                  :ARG2 (g / get-01
                        :ARG0 y
                        :ARG1 (v / virus
                              :mod (c2 / coronavirus))))
            :ARG1-of (c3 / cause-01
                  :ARG0 (a2 / and
                        :op1 (p2 / person
                              :ARG0-of (s2 / stack-01
                                    :ARG2 (s3 / shelf))
                              :mod (b / bloody)
                              :mod (j / just)
                              :mod (s4 / still)
                              :domain y)
                        :op2 (d / doctor
                              :polarity -
                              :mod (b2 / bloody)
                              :domain y))))
      :snt3 (p3 / person
            :name (n / name
                  :op1 ""COVID19"")))"
"(s / shelf
      :ARG1-of (e / empty-02)
      :quant (p / plenty)
      :location (c / company
            :name (n / name
                  :op1 ""Walmart"")))"
"(s / say-01
      :ARG0 (p / publication
            :name (n / name
                  :op1 ""COVID-19""))
      :ARG1 (h / have-03
            :ARG0 (a / and
                  :op1 (p2 / person
                        :mod (c / country
                              :name (n2 / name
                                    :op1 ""Canada"")))
                  :op2 (p3 / person
                        :mod (c2 / country
                              :name (n3 / name
                                    :op1 ""America""))))
            :ARG1 (t / temporal-quantity
                  :quant 2
                  :unit (d / day)
                  :mod (m / more)
                  :mod (o / only))
            :purpose (s2 / stock-up-02
                  :ARG0 a
                  :ARG2 (a2 / and
                        :op1 (f / food)
                        :op2 (w / water)
                        :mod (e / extra))
                  :time (b / before
                        :op1 (l / lock-down-06
                              :ARG1 (c3 / city
                                    :mod (a3 / all)
                                    :location (w2 / world))
                              :ARG1-of (l2 / long-03))))))"
"(s / spend-02
      :ARG0 (ii / i)
      :ARG1 (t / time
            :mod (t2 / this))
      :ARG2 (s2 / shop-01
            :ARG0 ii
            :ARG1 (o / outfit
                  :poss ii
                  :mod (n / next))
            :medium (o2 / online))
      :mod (j / just)
      :location (q / quarantine))"
"(s / stop-01
      :ARG0 (d / distiller
            :location (c / country-region
                  :name (n / name
                        :op1 ""San""
                        :op2 ""Francisco""
                        :op3 ""Bay""
                        :op4 ""Area"")))
      :ARG1 (p / produce-01
            :ARG0 d
            :ARG1 (a / and
                  :op1 (w / whiskey)
                  :op2 (r / rum)
                  :op3 (s2 / spirit
                        :mod (o / other)))
            :purpose (m / make-01
                  :ARG0 d
                  :ARG1 (s3 / sanitizer
                        :ARG3-of (p2 / protect-01
                              :ARG1 (p3 / person
                                    :ARG0-of (r2 / respond-01
                                          :ord (o2 / ordinal-entity
                                                :value 1)))
                              :ARG2 (p4 / product
                                    :name (n2 / name
                                          :op1 ""COVID-19"")))
                        :instrument (h / hand)))))"
"(s / say-01
      :ARG0 (o / organization
            :name (n / name
                  :op1 ""Trade""
                  :op2 ""Promotion""
                  :op3 ""Council""
                  :op4 ""of""
                  :op5 ""India""))
      :ARG1 (a / and
            :op1 (s2 / surge-01
                  :ARG1 (d / demand-01
                        :ARG1 (p / product
                              :mod (f / food))
                        :location (m / market
                              :mod (g / globe)))
                  :ARG1-of (c / cause-01
                        :ARG0 (o2 / outbreak-29
                              :ARG1 (c2 / coronavirus))))
            :op2 (t / tap-02
                  :ARG0 (c3 / country
                        :name (n2 / name
                              :op1 ""India""))
                  :ARG1 s2
                  :purpose (b / boost-01
                        :ARG0 c3
                        :ARG1 (e / export-01
                              :ARG0 c3))
                  :mod (p2 / potential)))
      :time (d2 / date-entity
            :weekday (m2 / monday)))"
"(m / multi-sentence
      :snt1 (c / close-01
            :ARG1 (s / shop
                  :location (h / high-street)
                  :poss (t / they)))
      :snt2 (b / build-01
            :ARG0 (c2 / company
                  :name (n / name
                        :op1 ""Redshift""))
            :ARG1 (t2 / thing
                  :ARG0-of (c3 / connect-01
                        :ARG1 (s2 / store)
                        :ARG2 (s3 / store))
                  :mod (o / online)
                  :ARG1-of (b2 / brilliant-01
                        :ARG2 (b3 / business
                              :mod (s4 / small)
                              :ARG0-of (s5 / seek-01
                                    :ARG1 (c4 / continue-01
                                          :ARG0 b3
                                          :ARG1 (t3 / trade-01
                                                :ARG0 b3)
                                          :time c)))))
            :time (r / recent)))"
"(a / appreciate-02
      :ARG0 (ii / i)
      :ARG1 (p / possible-01
            :ARG1 (a2 / and
                  :op1 (s / smell-01
                        :ARG0 ii
                        :ARG1 (n / nature))
                  :op2 (n2 / notice-01
                        :ARG0 ii
                        :ARG1 (b / beautiful-02
                              :ARG1 n
                              :degree (s2 / so)))
                  :time (c / cross-02
                        :ARG0 ii
                        :ARG1 (s3 / street)
                        :purpose (g / go-02
                              :ARG0 ii
                              :ARG4 (s4 / store
                                    :mod (g2 / grocery)))
                        :ARG1-of (a3 / avoid-01
                              :ARG1-of (p2 / possible-01
                                    :polarity -)))))
      :time (t / today))"
"(s / say-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Moody's""
                  :op2 ""Corporation""))
      :ARG1 (h / have-concession-91
            :ARG1 (b / become-01
                  :ARG1 (c2 / company
                        :ARG0-of (m / mine-01))
                  :ARG2 (h2 / have-degree-91
                        :ARG1 c2
                        :ARG2 (r / resilience)
                        :ARG3 (m2 / more))
                  :time (s2 / since
                        :op1 (c3 / crash-01
                              :mod (l / last)
                              :time (d / date-interval
                                    :op1 (d2 / date-entity
                                          :year 2015)
                                    :op2 (d3 / date-entity
                                          :year 2016)))))
            :ARG2 (c4 / cause-01
                  :ARG0 (c5 / coronavirus)
                  :ARG1 (f / fall-01
                        :ARG1 (p / price-01
                              :ARG1 (c6 / commodity))))))"
"(r / recommend-01
      :ARG1 (p / prioritize-01
            :ARG0 (s / supermarket
                  :name (n / name
                        :op1 ""SainsburysSupermarkets""))
            :ARG1 (a / and
                  :op1 (d / deliver-01
                        :mod (o / online))
                  :op2 (c / collect-01
                        :mod (c2 / click-01)))
            :beneficiary (p2 / person
                  :ARG1-of (v / vulnerable-01)
                  :ARG0-of (f / fear-01
                        :ARG1 (s2 / shop-01
                              :ARG0 p2)
                        :ARG1-of (c3 / cause-01
                              :ARG0 (f2 / fear-01
                                    :ARG0 p2
                                    :ARG1 (c4 / contract-04
                                          :ARG0 p2
                                          :ARG2 (c5 / coronavirus)))))))
      :ARG2 s)"
"(m / multi-sentence
      :snt1 (e / experience-01
            :ARG0 (p / person
                  :ARG0-of (s / shop-01))
            :ARG1 (s2 / symptom
                  :mod (w / withdraw-01
                        :ARG1 p
                        :ARG2 (p2 / possible-01
                              :polarity -
                              :ARG1 (s3 / shop-01
                                    :ARG0 p))))
            :ARG1-of (r / resemble-01
                  :ARG2 (p3 / person
                        :ARG1-of (a / addict-01)
                        :ARG0-of (g / go-12
                              :ARG2 (w2 / withdraw-01
                                    :ARG1 p3)))))
      :snt2 (b / bring-01
            :ARG0 (r2 / retailer)
            :ARG1 (t / they)
            :ARG3 (a2 / amr-unknown)
            :direction (b2 / back)))"
"(r / recommend-01
      :ARG1 (p / promote-02
            :ARG0 (g / government-organization
                  :ARG0-of (g2 / govern-01))
            :ARG1 (s / shop-01
                  :medium (o / online))
            :purpose (c / curtail-01
                  :ARG0 g
                  :ARG1 (s2 / spread-02
                        :ARG1 (a / and
                              :op1 (p2 / product
                                    :name (n / name
                                          :op1 ""COVID-19""))
                              :op2 (l / lose-02
                                    :ARG1 (j / job)))))))"
"(m / multi-sentence
      :snt1 (ii / impact-01
            :ARG0 (p / pandemic
                  :name (n / name
                        :op1 ""COVID-19""))
            :ARG1 (ii2 / industry
                  :mod (b / business
                        :mod (c / consumer)))
            :ARG1-of (s / significant-02))
      :snt2 (c2 / create-01
            :ARG0 (w / we)
            :ARG1 (c3 / checklist
                  :name n
                  :op1 ""COVID-19""
                  :op2 ""Consumer""
                  :op3 ""Business""
                  :op4 ""Response""
                  :op5 ""Checklist""))
      :purpose (h / help-01
            :ARG0 w
            :ARG1 (w2 / weather-01
                  :ARG0 (b2 / business)
                  :ARG1 (s2 / storm))
            :ARG2 b2))"
"(c / contrast-01
      :ARG1 (m / message-01
            :ARG0 (g / government-organization
                  :ARG0-of (g2 / govern-01))
            :ARG1 (p / panic-01
                  :polarity -
                  :mode imperative
                  :ARG0 (a / available-02
                        :ARG2 (ii / item
                              :mod (f / food)))))
      :ARG2 (s / seem-01
            :ARG1 (d / differ-02
                  :ARG1 (r / reality
                        :mod (g3 / ground)))))"
"(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""killianwoods""))
      :ARG1 (h / have-degree-91
            :ARG1 (s2 / spend-01
                  :ARG4 (g / grocery)
                  :time (d / date-entity
                        :month 3))
            :ARG2 (h2 / high-02
                  :ARG1 s2)
            :ARG3 (m / most)
            :ARG5 (r / record-01)))"
"(c / cause-01
      :ARG0 (u / use-01
            :polarity -
            :ARG0 (p / person
                  :mod (w / world-region
                        :name (n / name
                              :op1 ""South""
                              :op2 ""Asia"")))
            :ARG1 (p2 / paper
                  :purpose (t / toilet)))
      :ARG1 (f / freak-out-02
            :polarity -
            :ARG0 p2
            :ARG1 p)
      :mod (m / main))"
"(u / use-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""CNC""
                  :op2 ""Routing""
                  :op3 ""Ltd"")
            :ARG1-of (b / base-01
                  :location (c2 / city
                        :name (n2 / name
                              :op1 ""Birmingham""))))
      :ARG1 (t / tool
            :instrument-of (c3 / cut-01)
            :source (c4 / company
                  :name (n3 / name
                        :op1 ""ITC"")))
      :ARG2 (p / produce-01
            :ARG0 c
            :ARG1 (s / screen
                  :mod 19
                  :purpose (s2 / sneeze-01)
                  :purpose (c5 / check-out-06
                        :ARG2 (s3 / supermarket))
                  :mod (c6 / company
                        :name (n4 / name
                              :op1 ""Covid""
                              :op2 19)))))"
"(m / multi-sentence
      :snt1 (r / realize-01
            :ARG0 (w / we)
            :ARG1 (s / scam-01
                  :ARG2-of (ii / involve-01
                        :ARG1 (p / pandemic
                              :name (n / name
                                    :op1 ""Covid-19"")))
                  :ARG1-of (n2 / new-01)))
      :snt2 (c / call-02
            :polarity -
            :ARG0 (g / government-organization
                  :ARG0-of (g2 / govern-01)
                  :mod (f / federal))
            :ARG1 (ii2 / individual)
            :purpose (r2 / request-01
                  :ARG0 g
                  :ARG1 (o / or
                        :op1 (ii3 / information)
                        :op2 (m2 / money))))
      :snt3 (v / visit-01
            :mode imperative
            :polite +
            :ARG0 (y / you)
            :ARG1 (w2 / website
                  :location (b / below))
            :purpose (ii4 / information
                  :mod (m3 / more))))"
"(s / show-01
      :ARG0 (s2 / study-01
            :mod (j / joint)
            :ARG1-of (c / carry-out-03
                  :ARG0 (o / organization
                        :quant 4
                        :mod (r / research-01)
                        :mod (c2 / country
                              :name (n / name
                                    :op1 ""Finland"")))
                  :instrument (s3 / supercomputer)))
      :ARG1 (a / and
            :op1 (r2 / remain-01
                  :ARG1 (a2 / airborne)
                  :ARG3 (a3 / air)
                  :ARG1-of (h / have-degree-91
                        :ARG2 (l / long-03
                              :ARG1 r2)
                        :ARG3 (m / more)
                        :ARG4 (t / think-01)))
            :op2 (p / possible-01
                  :ARG1 (ii / infect-01
                        :ARG0 (c3 / cough-01
                              :quant 1)
                        :ARG1 (p2 / person)
                        :location (r3 / relative-position
                              :op1 (s4 / supermarket)
                              :direction (a4 / away)
                              :quant (u / up-to
                                    :op1 (d / distance-quantity
                                          :quant 30
                                          :unit (f / foot)))
                              :location (a5 / aisle
                                    :quant 2))))))"
"(t / thing
      :ARG2-of (l / list-01)
      :ARG1-of (u / update-01
            :ARG1-of (r / regular-02))
      :source (p / person
            :name (n / name
                  :op1 ""adage""))
      :topic (m / move-02
            :ARG0 (p2 / person
                  :ARG0-of (m2 / market-01
                        :ARG1 (b / brand
                              :mod (p3 / person
                                    :ARG0-of (c / consume-01)))))
            :mod (l2 / last)
            :ARG2-of (r2 / respond-01
                  :ARG0 p2
                  :ARG1 (v / virus
                        :mod (c2 / coronavirus))))
      :domain (t2 / this))"
"(c / call-02
      :mode imperative
      :polite +
      :ARG0 (y / you)
      :ARG1 (h / hotline
            :mod (p / person
                  :ARG0-of (c2 / consume-01))
            :poss (w / we))
      :condition (s / spot-01
            :ARG0 y
            :ARG1 (o / or
                  :op1 (s2 / scam-01)
                  :op2 (c3 / claim-01
                        :ARG1 (c4 / cure-01)
                        :ARG0-of (d / deceive-01))))
      :ARG1-of (c5 / call-response-91
            :ARG2 (p2 / phone-number-entity
                  :value ""1-800-368-8808"")))"
"(m / multi-sentence
      :snt1 (h / have-03
            :ARG0 (a / and
                  :op1 (p / person
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 (p2 / police)
                              :ARG2 (c / chief)))
                  :op2 (p3 / person
                        :ARG0-of (w / work-01
                              :ARG1 (p4 / pharmacy)))
                  :op3 (p5 / person
                        :ARG0-of (w2 / work-01
                              :ARG1 (s / supermarket)))
                  :op4 (f / faculty
                        :mod (n / nurse)
                        :ARG1-of (q / quarantine-01))
                  :mod (a2 / all))
            :ARG1 (c2 / coronavirus)
            :location (t / town
                  :poss (ii / i)))
      :snt2 (f2 / feel-01
            :ARG0 (ii2 / i)
            :ARG1 (w3 / warzone
                  :location-of (d / drop-01
                        :ARG1 (b / bomb)
                        :ARG4 (a3 / around
                              :op1 ii2
                              :mod a2)))))"
"(m / multi-sentence
      :snt1 (d / disgust-01
            :ARG0 (r / respond-01
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""booksamillion""))
                  :ARG1 (a / and
                        :op1 (e / event
                              :name (n2 / name
                                    :op1 ""COVID2019""))
                        :op2 (s / shut-down-05
                              :ARG1 (s2 / state
                                    :part s2)))))
      :snt2 (s3 / shop
            :mod (p2 / pawn-01
                  :mod (s4 / secondhand))
            :domain (l / location
                  :name (n3 / name
                        :op1 ""2nd""
                        :op2 ""&""
                        :op3 ""Charles""))
            :domain (o / or
                  :polarity -
                  :op1 (s5 / store
                        :mod (g / grocery))
                  :op2 (p3 / pharmacy)
                  :op3 (h / hospital))))"
"(p / possible-01
      :ARG1 (a / and
            :op1 (m / make-02
                  :ARG0 (p2 / person
                        :name (n / name
                              :op1 ""Trump""))
                  :ARG1 (u / useful-05
                        :ARG1 p2)
                  :time (c / crisis
                        :name (n2 / name
                              :op1 ""COVID19"")))
            :op2 (e / engage-01
                  :ARG0 p2
                  :ARG2 (a2 / activity-06
                        :quant 1
                        :ARG1-of (ii / include-91
                              :ARG2 (a3 / activity-06
                                    :ARG0 p2
                                    :ARG2-of (r / respond-01
                                          :ARG1 (c2 / crisis))
                                    :ARG1-of (f / favor-01
                                          :ARG0 p2))))
                  :mod (a4 / at-least)
                  :manner (t / throw-out-06
                        :ARG0 p2
                        :ARG1 (r2 / roll
                              :consist-of (p3 / paper
                                    :purpose (t2 / toilet)))
                        :beneficiary (p4 / person
                              :mod (c3 / country
                                    :name (n3 / name
                                          :op1 ""America""))))))
      :polarity (a5 / amr-unknown))"
"(m / multi-sentence
      :snt1 (a / act-02
            :mode imperative
            :polite +
            :ARG0 (y / you)
            :mod (s / strict)
            :prep-against (p / person
                  :ARG0-of (f / follow-02
                        :polarity -
                        :ARG1 (l / lock-down-06)))
            :duration (m2 / multiple
                  :op1 (t / temporal-quantity
                        :quant 1
                        :unit (d / day))
                  :mod (m3 / more)))
      :snt2 (s2 / see-01
            :ARG0 (ii / i)
            :ARG1 (a2 / and
                  :op1 (o / open-09
                        :ARG1 (s3 / shop
                              :mod (a3 / all)))
                  :op2 (ii2 / increase-01
                        :ARG1 (t2 / thing
                              :ARG2-of (p2 / price-01
                                    :ARG1 (a4 / and
                                          :op1 (v / vegetable)
                                          :op2 (e / essential
                                                :frequency (r / rate-entity-91
                                                      :ARG3 (t3 / temporal-quantity
                                                            :quant 1
                                                            :unit (d2 / day)))))))
                        :ARG2 (m4 / multiple)
                        :location (c / city
                              :name (n / name
                                    :op1 ""Hyderabad"")))))
      :snt3 (s4 / stay-01
            :mode imperative
            :polite +
            :ARG1 (p3 / person)
            :location (h / home)
            :duration (f2 / few
                  :op1 (t4 / temporal-quantity
                        :quant 1
                        :unit (d3 / day)
                        :mod (m5 / more)))))"
"(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (w / work-01
                  :ARG0 (b / business)
                  :ARG1 (m2 / meet-01
                        :ARG0 b
                        :ARG1 (n / need-01
                              :ARG0 (c / community)))
                  :manner (t / together))
            :manner (a / amr-unknown))
      :snt2 (a2 / amr-unknown
            :condition (ii / increase-01
                  :ARG0 (b2 / business)
                  :ARG1 (p2 / price-01
                        :ARG1 (g / good
                              :mod (s / scarce)))
                  :manner (d / drastic))))"
"(w / wear-01
      :polarity -
      :mode imperative
      :polite +
      :ARG0 (y / you)
      :ARG1 (a / and
            :op1 (g / goggles)
            :op2 (c / cap
                  :mod (s / shower-01)))
      :time (o / or
            :op1 (g2 / go-02
                  :ARG0 y
                  :ARG1 (s2 / shop-01
                        :ARG0 y
                        :ARG1 (g3 / grocery)))
            :op2 (d / do-02
                  :ARG0 y
                  :ARG1 (a2 / anything
                        :mod (e / else)))))"
"(m / multi-sentence
      :snt1 (n / need-01
            :ARG0 (w / we)
            :ARG1 (s / shut-down-05
                  :ARG1 (p / province
                        :ARG2-of (ii / include-91
                              :ARG1 (c / city
                                    :name (n2 / name
                                          :op1 ""Toronto"")
                                    :mod (e / especially))))
                  :degree (t / total)))
      :snt2 (c2 / cause-01
            :ARG0 (a / amr-unknown)
            :ARG1 (o / open-01
                  :ARG1 (m2 / mall)
                  :mod (s2 / still)))
      :snt3 (a2 / and
            :op1 (e2 / epicentre
                  :poss (o2 / outbreak-29)
                  :domain (s3 / store
                        :mod (g / grocery)
                        :location-of (w2 / work-01
                              :ARG0 (ii2 / i))))
            :op2 (p2 / possible-01
                  :ARG1 (f / feel-01
                        :ARG0 ii2
                        :ARG1 e2)))
      :snt4 (s4 / stop-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (p3 / put-01
                  :ARG0 y
                  :ARG1 (p4 / person
                        :ARG0-of (w3 / work-01))
                  :ARG2 (r / risk-01
                        :ARG0 y))))"
"(p / possible-01
      :ARG1 (e / existential
            :domain (t / threaten-01
                  :ARG1 (m / market
                        :ARG1-of (c / close-01
                              :ARG1-of (c2 / cause-01
                                    :ARG0 (l / law
                                          :name (n / name
                                                :op1 ""COVID-19"")))))))
      :beneficiary (p2 / person
            :ARG0-of (f / farm-01)
            :ARG0-of (r / rely-01
                  :ARG1 (a / and
                        :op1 (m2 / market
                              :poss p2)
                        :op2 (s / sell-01
                              :ARG2 (p3 / person
                                    :ARG0-of (c3 / consume-01))
                              :mod (o / other)
                              :ARG1-of (d / direct-02)))
                  :ARG2 (p4 / portion-01
                        :ARG1 (ii / income
                              :poss p2)
                        :ARG1-of (m3 / major-02)))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (h / have-03
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""Zafar""
                              :op2 ""Mirza""))
                  :ARG1 (a2 / and
                        :op1 (t / thing
                              :name (n2 / name
                                    :op1 ""MBBS"")
                              :source (c / company
                                    :name (n3 / name
                                          :op1 ""RMC""
                                          :op2 ""Pakistan"")))
                        :op2 (t2 / thing
                              :name (n4 / name
                                    :op1 ""MSc""
                                    :op2 ""in""
                                    :op3 ""Public""
                                    :op4 ""Health"")
                              :source (c2 / company
                                    :name (n5 / name
                                          :op1 ""LSH""
                                          :op2 ""UK"")))))
            :op2 (h2 / have-org-role-91
                  :ARG0 p
                  :ARG1 (o / organization
                        :name (n6 / name
                              :op1 ""Network""
                              :op2 ""for""
                              :op3 ""Consumer""
                              :op4 ""Protection""
                              :op5 ""Pakistan""))
                  :ARG2 (a3 / and
                        :op1 (p2 / person
                              :ARG0-of (f / found-01
                                    :ARG1 o))
                        :op2 (p3 / person
                              :ARG0-of (c3 / coordinate-01
                                    :ARG1 o
                                    :mod (e / executive))))))
      :snt2 (a4 / and
            :op1 (h3 / have-org-role-91
                  :ARG0 (h4 / he)
                  :ARG1 (o2 / organization
                        :name (n7 / name
                              :op1 ""WHO""))
                  :ARG2 (p4 / person
                        :ARG0-of (a5 / advise-01
                              :mod (r / region)))
                  :mod (a6 / also)
                  :time (e2 / ex))
            :op2 (c4 / coordinate-01
                  :ARG0 h4
                  :ARG1 o2
                  :mod (g / globe)
                  :mod e2)))"
"(c / call-02
      :ARG0 (p / person
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (ii / i)
                  :ARG2 (c2 / coworker)))
      :ARG1 ii
      :manner (t / tear-03
            :ARG1 p)
      :time (a / after
            :op1 (c3 / call-02
                  :ARG1 p
                  :ARG2 (p2 / person
                        :ARG0-of (e / eat-01
                              :ARG1 (b / bat))
                        :ARG1-of (d / dirty-02))))
      :time (t2 / try-01
            :ARG0 p
            :ARG1 (s / shop-01
                  :ARG0 p
                  :ARG1 (s2 / supermarket))
            :ARG1-of (s3 / simple-02)))"
"(p / possible-01
      :ARG1 (q / qualify-02
            :ARG1 (t / tobacco)
            :ARG2 (g / good
                  :ARG1-of (k / key-02)
                  :mod (p2 / person
                        :ARG0-of (c / consume-01))
                  :mod (e / essential
                        :purpose (m / maintain-01
                              :ARG1 (w / well-09
                                    :ARG1 (p3 / person)))))
            :manner (a / amr-unknown)))"
"(l / likely-01
      :ARG1 (r / rise-01
            :ARG1 (p / price-01
                  :ARG1 (g / gold))
            :ARG2-of (r2 / respond-01
                  :ARG1 (n / news
                        :topic (r3 / rate-01
                              :ARG1 (e / employ-01
                                    :polarity -)
                              :ARG1-of (h / high-02))))))"
"(s / say-01
      :ARG0 (e / economist
            :mod (c / chief))
      :ARG1 (p / phase
            :quant 2
            :mod (a / activity-06
                  :ARG1 (e2 / economy))
            :time (e3 / event
                  :name (n / name
                        :op1 ""Covid""
                        :op2 19))
            :domain (a2 / and
                  :op1 (p2 / phase
                        :mod 1
                        :time-of (d / drop-01
                              :ARG1 (p3 / product
                                    :ARG1-of (g / gross-03)
                                    :mod (d2 / domestic))))
                  :op2 (m / mean-01
                        :polarity -
                        :ARG1 (s2 / stimulus
                              :mod (e4 / economy))))
            :op2 (p4 / phase
                  :mod 2
                  :time-of (a3 / and
                        :op1 (s3 / start-01
                              :ARG1 (b / bounce-01
                                    :ARG1 (e5 / economy)
                                    :direction (b2 / back)))
                        :op2 (p5 / possible-01
                              :ARG1 (h / help-01
                                    :ARG0 (a4 / and
                                          :op1 (g2 / grant-01)
                                          :op2 (r / reduce-01
                                                :ARG1 (c2 / cost-01))
                                          :op3 (h2 / handout
                                                :mod (c3 / cash)
                                                :beneficiary (p6 / person
                                                      :ARG0-of (c4 / consume-01))))))))))"
"(p / possible-01
      :ARG1 (t / turn-off-07
            :ARG0 (y / you)
            :ARG1 (s / screen
                  :ARG1-of (e / essential-01
                        :polarity -)
                  :ARG1-of (r / resemble-01
                        :ARG2 (s2 / screen
                              :ARG1-of (u / use-01
                                    :ARG0 y
                                    :ARG2 (e2 / enter-01
                                          :ARG0 y
                                          :ARG1 (n / number
                                                :ARG2-of (r2 / register-02
                                                      :ARG1 (c / car))
                                                :location (p2 / park
                                                      :mod (s3 / supermarket))))
                                    :ARG2-of (o / obligate-01
                                          :ARG1 y))))))
      :polarity (a / amr-unknown)
      :polite +)"
"(a / and
      :op1 (p / possible-01
            :ARG1 (b / buy-01
                  :ARG0 (p2 / person
                        :ARG0-of (h / have-org-role-91
                              :ARG1 (m / market
                                    :name (n / name
                                          :op1 ""Rouses""
                                          :op2 ""Market""))
                              :ARG2 (c / customer)))
                  :ARG1 (m2 / meal)
                  :ARG2 (r / restaurant
                        :location (s / store))))
      :op2 (k / keep-01
            :ARG0 r
            :ARG1 (p3 / profit-01)))"
"(m / multi-sentence
      :snt1 (t / tell-01
            :ARG0 (ii / i)
            :ARG1 (a / and
                  :op1 (c / change-01
                        :ARG1 (t2 / thing
                              :quant (l / lot)))
                  :op2 (ii2 / increase-01
                        :ARG1 (t3 / thing
                              :ARG2-of (p / price-01)))
                  :time (a2 / after
                        :op1 (o / over-01
                              :ARG1 (l2 / law
                                    :name (n / name
                                          :op1 ""COVID-19"")))))
            :ARG2 (p2 / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (p3 / person
                              :ARG0-of (h2 / have-rel-role-91
                                    :ARG1 ii
                                    :ARG2 (m2 / mother)))
                        :ARG2 (u / uncle))))
      :snt2 a
      :op1 (l3 / look-01
            :ARG0 (m3 / man
                  :mod (t4 / this))
            :ARG1 (ii3 / i))
      :op2 (s / say-01
            :ARG0 m3
            :ARG1 (l4 / leave-12
                  :ARG1 (a3 / amr-unknown)
                  :time (a4 / after
                        :op1 l2))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (s / shutter-01
                  :ARG1 (s2 / shop
                        :mod (m2 / music)))
            :op2 (s3 / struggle-02
                  :ARG0 s2
                  :ARG1 (s4 / survive-01
                        :ARG0 s2))
            :time (f / face-01
                  :ARG0 s2
                  :ARG1 (p / pandemic
                        :name (n / name
                              :op1 ""COVID""
                              :op2 19)))
            :ARG1-of (c / contrast-01
                  :ARG2 (f2 / focus-01
                        :ARG0 (c2 / company
                              :name (n2 / name
                                    :op1 ""Amazon""))
                        :ARG2 (g / good
                              :mod (h / household)))))
      :snt2 (t / thing
            :location (h2 / here)
            :ARG2-of (s5 / store-01
                  :ARG1 (r / retail-01
                        :mod (p2 / physical)))))"
"(d / deem-01
      :mode imperative
      :polite +
      :ARG0 (y / you)
      :ARG1 (e / essential
            :polarity -
            :domain (l / landscape-01))
      :ARG1-of (d2 / describe-01
            :ARG0 (p / publication
                  :name (n / name
                        :op1 ""VID19""))))"
"(r / receive-01
      :ARG0 (ii / i)
      :ARG1 (s / square
            :quant (s2 / some)
            :ARG1-of (s3 / spare-02))
      :ARG2 (p / person
            :name (n / name
                  :op1 ""Trump""))
      :ARG1-of (a / actual-02)
      :time (t / today)
      :medium (m / mail)
      :mod (h / hey
            :mode expressive))"
"(m / multi-sentence
      :snt1 (h / have-mod-91
            :polarity -
            :ARG1 (t / this)
            :ARG2 (s / snowstorm))
      :snt2 (p / possible-01
            :polarity -
            :ARG1 (s2 / stock-up-02
                  :ARG0 (y / you)
                  :mod (j / just)
                  :purpose (g / get-through-13
                        :ARG0 y
                        :ARG1 (ii / it))))
      :snt3 (n / need-01
            :ARG0 (y2 / you)
            :ARG1 (f / few
                  :op1 (t2 / temporal-quantity
                        :quant 1
                        :unit (w / week))
                  :mod (e / extra))
            :purpose (r / run-out-05
                  :polarity -
                  :ARG1 y2
                  :condition (q / quarantine-01
                        :ARG1 y2))
            :mod (a / all)))"
"(s / send-01
      :ARG0 (m / man
            :mod (t / this))
      :ARG1 (m2 / message-01
            :ARG0 m
            :ARG1 (s2 / stop-01
                  :ARG0 (p / person
                        :ARG0-of (k / keep-01
                              :ARG1 (s3 / shop))
                        :mod (o / other)
                        :mod (c / continent
                              :name (n / name
                                    :op1 ""Asia"")))
                  :ARG1 (a / and
                        :op1 (d / double-01
                              :ARG0 p
                              :ARG1 (t2 / thing
                                    :ARG2-of (p2 / price-01)))
                        :op2 (r / rip-off-02
                              :ARG0 p
                              :ARG1 (p3 / person))))
            :ARG2 p))"
"(s / see-01
      :ARG0 (ii / i)
      :ARG1 (p / panic-01
            :ARG0 (a / and
                  :op1 (b / buy-01
                        :ARG0 (p2 / person)
                        :ARG1 (f / food))
                  :op2 (h / hoard-01
                        :ARG0 p2
                        :ARG1 f)
                  :location (s2 / store
                        :mod (g / grocery)))
            :ARG1 p2))"
"(f / find-01
      :ARG0 (y / you)
      :ARG1 (s / slash
            :op1 (b / buy-01
                  :ARG0 y
                  :ARG1 (ii / item
                        :ARG1-of (h / have-quant-91
                              :ARG3 (m / more)
                              :ARG4 (b2 / before))
                        :ARG1-of (d / deliver-01
                              :medium (o / online))))
            :op2 (s2 / shop-01
                  :ARG0 y
                  :ARG1 ii))
      :polarity (a / amr-unknown)
      :time (s3 / since
            :op1 (o2 / outbreak-29
                  :ARG1 (o3 / organization
                        :name (n / name
                              :op1 ""COVID-19"")))))"
"(c / contrast-01
      :ARG1 (r / recommend-01
            :ARG1 (s / stay-01
                  :ARG1 (ii / i)
                  :ARG3 (ii2 / inside)))
      :ARG2 (o / obligate-01
            :ARG1 ii
            :ARG2 (w / wait-01
                  :ARG2 (g / get-05
                        :ARG1 ii
                        :ARG2 ii2
                        :purpose (b / buy-01
                              :ARG0 ii
                              :ARG1 (f / food
                                    :ARG1-of (l / leave-17)
                                    :example (a / and
                                          :op1 (c2 / cookie
                                                :name (n / name
                                                      :op1 ""Maria""))
                                          :op2 (d / drink
                                                :name (n2 / name
                                                      :op1 ""Tampico""
                                                      :op2 ""Orange""))))
                              :ARG2 (s2 / store
                                    :mod (g2 / grocery))))
                  :duration (t / temporal-quantity
                        :quant 2
                        :unit (h / hour))
                  :mod (j / just))))"
"(n / need-01
      :ARG0 (w / we)
      :ARG1 (e / ensure-01
            :ARG0 w
            :ARG1 (c / clean-04
                  :ARG1 (t / thing
                        :ARG1-of (s / supply-01)
                        :ARG1-of (g / get-01
                              :ARG0 w
                              :ARG2 (a / and
                                    :op1 (s2 / store
                                          :mod (g2 / grocery))
                                    :op2 (p / place
                                          :mod (o / other)))))))
      :mod (a2 / also))"
"(m / multi-sentence
      :snt1 (o / obligate-01
            :ARG2 (b / be-located-at-91
                  :ARG1 (s / store)
                  :ARG2 (r / relative-position
                        :quant (d / distance-quantity
                              :quant 6
                              :unit (f / foot))
                        :direction (a / apart))))
      :snt2 (p / possible-01
            :ARG1 (g / go-02
                  :ARG0 (y / you)
                  :ARG4 s
                  :purpose (a2 / and
                        :op1 (g2 / grocery)
                        :op2 (g3 / gas)
                        :op3 (w / work-01)
                        :op4 (b2 / bank-01))))
      :snt3 (g4 / gather-03
            :polarity -
            :ARG0 (p2 / person)
            :location (o2 / outside
                  :op1 (h / household))
            :mod (j / just))
      :snt4 (w2 / wear-01
            :mode imperative
            :ARG0 y
            :ARG1 (a3 / and
                  :op1 (m2 / mask)
                  :op2 (p3 / protect-01
                        :ARG1 (e / eye)
                        :ARG2 (v / virus
                              :mod (c / coronavirus))))))"
"(m / multi-sentence
      :snt1 (h / hypocrite
            :domain (s / supermarket))
      :snt2 (a / and
            :op1 (p / play-to-08
                  :ARG0 (t / they)
                  :ARG1 (a2 / activist
                        :mod (o / online))
                  :ARG2 (p2 / profit-01
                        :ARG0 t)
                  :manner (b / ban-01
                        :ARG0 t
                        :ARG1 (b2 / bag
                              :ARG1-of (u / use-01
                                    :ARG1-of (s2 / single-02)))))
            :op2 (j / jack-up-02
                  :ARG0 (t2 / they)
                  :ARG1 (m2 / monetary-quantity
                        :ARG2-of (c / cost-01
                              :ARG1 (f / food))
                        :ARG1-of (h2 / hide-01
                              :location (b3 / behind
                                    :op1 (s3 / situation
                                          :mod (b4 / buy-01)
                                          :time (c2 / current)
                                          :mod (p3 / panic-01)))))
                  :time (n / now)))
      :snt3 (p4 / possible-01
            :ARG1 (a3 / afford-01
                  :ARG0 (t3 / they)
                  :ARG1 (g / give-01
                        :ARG0 t3
                        :ARG1 (b5 / bag
                              :ARG1-of (f2 / free-03))
                        :ARG2 (w / we)))))"
"(c / call-03
      :ARG0 (p / person
            :ARG0-of (c2 / campaign-01))
      :ARG1 (s / suspend-01
            :ARG1 (c3 / campaign-01)
            :ARG1-of (c4 / cause-01
                  :ARG0 (c5 / concern-01
                        :ARG0 (a / and
                              :op1 (w / welfare)
                              :op2 (d / disease))
                        :time (c6 / crisis
                              :mod (b / border)
                              :time (c7 / current))))))"
"(m / multi-sentence
      :snt1 (l / let-know-07
            :ARG0 (s / site
                  :quant (s2 / some))
            :ARG1 (y / you)
            :ARG2 (o / or
                  :op1 (s3 / stock-01
                        :polarity -
                        :ARG1 (ii / item))
                  :op2 (a / available-02
                        :polarity -
                        :ARG2 ii))
            :time (ii2 / immediate))
      :snt2 (m2 / make-02
            :ARG0 (s4 / site
                  :mod (o2 / other))
            :ARG1 (d / dig-01
                  :ARG0 (y2 / you)
                  :ARG1-of (h / have-degree-91
                        :ARG2 (d2 / deep-03
                              :ARG1 d)
                        :ARG3 (m3 / more))
                  :ARG1-of (c / cause-01
                        :ARG0 (d3 / disappoint-01
                              :ARG1 y2
                              :mod (o3 / only)))))
      :snt3 (a2 / and
            :op1 (u / use-01
                  :ARG0 (c2 / company
                        :name (n / name
                              :op1 ""Target""))
                  :ARG1 (a3 / approach-02
                        :ARG0 c2
                        :ARG1 (g / get-04
                              :ARG0 c2
                              :ARG1 (h2 / hopeful-03
                                    :ARG0 (y3 / you))
                              :ARG2 (u2 / up))))
            :op2 (w / win-01
                  :ARG0 c2
                  :ARG2 (c3 / click
                        :ARG0-of (c4 / cause-01
                              :ARG1 (d4 / disappoint-01
                                    :ARG1 y3))
                        :ARG1-of (h3 / have-quant-91
                              :ARG3 (m4 / most))))))"
"(q / question-01
      :ARG1 (s / strong-02
            :ARG1 (d / demand-01
                  :ARG1-of (f / follow-01
                        :ARG2 (p / pandemic
                              :name (n / name
                                    :op1 ""CoronaVirus"")))))
      :mod (e / essential)
      :ARG1-of (a / answer-01
            :ARG0 (a2 / and
                  :op1 (p2 / person
                        :ARG0-of (t / trade-01))
                  :op2 (p3 / person
                        :ARG0-of (a3 / analyze-01)))
            :ARG2-of (o / obligate-01)
            :purpose (f2 / forecast-01
                  :ARG1 (t2 / thing
                        :ARG2-of (p4 / price-01
                              :ARG1 (m / market
                                    :mod (v / vegetable
                                          :ARG1-of (o2 / oil-01))
                                    :mod (a4 / all))))
                  :time (a5 / after
                        :op1 (n2 / now)
                        :duration (t3 / temporal-quantity
                              :quant 6
                              :unit (m2 / month))))))"
"(a / and
      :op1 (l / leave-17
            :ARG1 (ii / item
                  :quant 1
                  :mod (o / only)
                  :ARG1-of (u / use-01
                        :ARG2 (w / wipe-01
                              :ARG1 (b / backside
                                    :part-of (y / you))
                              :ARG2 ii)
                        :ARG1-of (p / possible-01)))
            :location (s / store
                  :mod (g / grocery)))
      :op2 (c / choose-01
            :ARG0 (ii2 / i)
            :ARG1 ii
            :ord (o2 / ordinal-entity
                  :value 1)
            :manner (f / frank)))"
"(m / multi-sentence
      :snt1 (s / show-01
            :ARG0 (a / and
                  :op1 (p / person
                        :ARG0-of (f / farm-01))
                  :op2 (p2 / person
                        :ARG1-of (e / employ-01
                              :ARG0 (s2 / store
                                    :mod (g / grocery))))
                  :op3 (p3 / person
                        :ARG0-of (d / drive-01
                              :ARG1 (t / truck)))
                  :op4 (p4 / person
                        :ARG0-of (o / operate-01
                              :ARG1 (w / warehouse)))
                  :poss (w2 / we))
            :ARG1 (d2 / determine-01
                  :ARG0 a
                  :mod (ii / incredible)
                  :time (f2 / fight-01
                        :ARG0 w2
                        :ARG1 (s3 / spread-02
                              :ARG1 (d3 / disease
                                    :name (n / name
                                          :op1 ""COVID""
                                          :op2 19))))))
      :snt2 (t2 / thank-01
            :ARG1 (y / you)
            :ARG2 (a2 / and
                  :op1 (k / keep-01
                        :ARG0 y
                        :ARG1 (s4 / shelf
                              :poss (w3 / we))
                        :ARG3 (s5 / stock-01
                              :ARG0 y
                              :ARG1 s4))
                  :op2 (p5 / put-01
                        :ARG0 y
                        :ARG1 (f3 / food)
                        :ARG2 (t3 / table
                              :poss w3))
                  :time (t4 / time
                        :ARG1-of (c / challenge-01)
                        :mod (t5 / this)))))"
"(d / drop-01
      :ARG0 (c / clamp-01
            :ARG0 (p / product
                  :name (n / name
                        :op1 ""COVID-19""))
            :ARG1 (d2 / demand-01)
            :direction (d3 / down))
      :ARG1 (p2 / price-01
            :ARG1 (f / food
                  :mod (w / world))))"
"(ii / inspect-01
      :ARG0 (w / we)
      :ARG1 (s / store)
      :manner (a / activity-06
            :ARG0 w)
      :ARG1-of (b / base-02
            :ARG2 (c / complain-01
                  :ARG0 (p / person
                        :ARG0-of (c2 / consume-01)))))"
"(t / thing
      :quant (s / some)
      :ARG1-of (k / know-01
            :ARG0 (y / you)
            :ARG1-of (n / need-01
                  :ARG0 y
                  :time (b / before
                        :op1 (b2 / buy-01
                              :ARG0 y
                              :ARG1 (k2 / kit
                                    :name (n2 / name
                                          :op1 ""COVID""
                                          :op2 19)
                                    :purpose (t2 / test-01
                                          :ARG2 (c / coronavirus))
                                    :mod (h / home))
                              :medium (o / online))))))"
"(p / put-up-13
      :ARG0 (s / supermarket
            :ARG4-of (g / go-02
                  :ARG0 (ii / i)))
      :ARG1 (a / arrow)
      :purpose (d / direct-01
            :ARG0 s
            :ARG1 (p2 / person)
            :path (a2 / aisle)))"
"(m / multi-sentence
      :snt1 (u / update-02
            :ARG2 (p / product
                  :name (n / name
                        :op1 ""COVID-19"")))
      :snt2 (c / contrast-01
            :ARG1 (t / tasteless
                  :polarity -
                  :mod (w / wine)
                  :time (m2 / moment))
            :ARG2 (o / open-09
                  :ARG1 (s / store
                        :mod (r / retail-01)
                        :poss (w2 / we))
                  :purpose (p2 / purchase-01
                        :ARG1 (w3 / wine)
                        :mod (o2 / only))))
      :snt3 (a / and
            :op1 (p3 / practice-01
                  :mode imperative
                  :ARG0 (y / you)
                  :ARG1 (d / distance-01
                        :ARG0 y
                        :mod (s2 / social))
                  :ARG1-of (h / have-degree-91
                        :ARG2 (g / good-02
                              :ARG1 (y2 / yet)
                              :ARG3 (m3 / more)))
                  :op2 (o3 / order-02
                        :mode imperative
                        :ARG0 y
                        :medium (o4 / online))
                  :mod y2))
      :snt4 (s3 / ship-01
            :ARG0 (w4 / we)
            :ARG2 (e / everywhere
                  :location (p4 / province
                        :name (n2 / name
                              :op1 ""Ontario"")))))"
"(a / and
      :op1 (f / face-01
            :ARG0 (p / person
                  :ARG0-of (c / consume-01))
            :ARG1 (p2 / problem
                  :topic (l / liquidity))
            :mod (a2 / also))
      :op2 (r / recommend-01
            :ARG1 (s / see-01
                  :polarity -
                  :ARG0 p
                  :ARG1 (r2 / reduce-01
                        :ARG0 (l2 / law
                              :name (n / name
                                    :op1 ""COVID""
                                    :op2 19))
                        :ARG1 (r3 / right-05
                              :ARG1 p
                              :ARG2 (o / organization
                                    :name (n2 / name
                                          :op1 ""EU"")))))))"
"(a / and
      :op1 (s / see-01
            :ARG0 (ii / i)
            :ARG1 (h / he)
            :location (s2 / supermarket)
            :time (b / before
                  :op1 (n / now)
                  :quant (t / temporal-quantity
                        :quant 1
                        :unit (h2 / hour))))
      :op2 (k / kid-01
            :ARG0 ii
            :mod (j / just)))"
"(m / multi-sentence
      :snt1 (g / get-05
            :polarity (a / amr-unknown)
            :ARG1 (y / you)
            :ARG2 (h / home)
            :ARG3 (t / travel-01
                  :ARG0 y))
      :snt2 (ii / isolate-01
            :ARG1 (y2 / you)
            :duration (t2 / temporal-quantity
                  :quant 14
                  :unit (d / day)))
      :snt3 (a2 / and
            :op1 (s / shop-01
                  :mode imperative
                  :ARG0 (y3 / you)
                  :ARG1 (g2 / grocery)
                  :medium (o / online))
            :op2 (a3 / avoid-01
                  :mode imperative
                  :ARG0 y3
                  :ARG1 (c / contact-01
                        :ARG0 y3
                        :ARG1 (o2 / other))))
      :snt4 (g3 / go-02
            :mode imperative
            :ARG0 (y4 / you)
            :ARG4 (u / url-entity
                  :value ""www.www.for-more-information"")))"
"(n / name-01
      :ARG1 (g / game
            :topic (s / staple
                  :ARG1-of (p / package-01)))
      :ARG2 (p2 / plan-01
            :ARG1 (ii / inventory))
      :time (n2 / now
            :mod (r / right))
      :ARG1-of (c / cause-01
            :ARG0 (t / try-01
                  :ARG0 (b / brand)
                  :ARG1 (p3 / predict-01
                        :ARG0 b
                        :ARG1 (t2 / temporal-quantity
                              :duration-of (p4 / pattern-01
                                    :ARG1 (b2 / buy-01)
                                    :time (c2 / current))
                              :ARG1-of (p5 / possible-01))))))"
"(p / publish-01
      :ARG0 (ii / i)
      :ARG1 (a / article
            :ARG1-of (n / new-01)
            :topic (s / struggle-02
                  :ARG0 (e / economy
                        :poss (c / country
                              :ARG0-of (h / have-org-role-91
                                    :ARG1 (o / organization
                                          :name (n2 / name
                                                :op1 ""GCC"")))))
                  :time (a2 / after
                        :op1 (g / go-08
                              :ARG1 (p2 / price-01
                                    :ARG1 (o2 / oil))
                              :ARG2 (p3 / person
                                    :name (n3 / name
                                          :op1 ""Corona""))))))
      :medium (p4 / publication
            :name (n4 / name
                  :op1 ""ispionline"")))"
"(t / take-advantage-02
      :ARG1 (p / pandemic
            :name (n / name
                  :op1 ""Coronavirus"")
            :ARG1-of (m / mean-01
                  :ARG2 (p2 / product
                        :name n
                        :op1 ""COVID-19"")))
      :ARG2 (c / con-03
            :ARG1 (p3 / person)
            :ARG2 (g / give-up-08
                  :ARG0 p3
                  :ARG1 (m2 / money
                        :poss p3))))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG2 (c / company
                  :name (n / name
                        :op1 ""Flipkart"")))
      :snt2 s
      :ARG2 (c2 / company
            :name (n2 / name
                  :op1 ""AmazonIN""))
      :snt3 (h / help-01
            :ARG0 (t / think-01
                  :ARG0 (y / you))
            :ARG1 (e / enrich-01
                  :ARG0 t
                  :ARG1 (l / learn-01
                        :ARG0 (ii / i)))
            :ARG2 ii
            :topic (a / article
                  :location (s2 / section
                        :topic (r / retail-01)
                        :part-of (e2 / edition
                              :mod (o / online)
                              :poss (n3 / newspaper
                                    :name (n4 / name
                                          :op1 ""Economic""
                                          :op2 ""Times""))))
                  :topic (ii2 / impact-01
                        :ARG0 (p / program
                              :name (n5 / name
                                    :op1 ""COVID""
                                    :op2 19))
                        :ARG1 (b / behave-01
                              :ARG1 (s3 / shop-01))))))"
"(d / discuss-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Matt""
                  :op2 ""Tudball"")
            :ARG0-of (h / have-org-role-91
                  :ARG1 (c / company
                        :name (n2 / name
                              :op1 ""Recycling""))
                  :ARG2 (e / editor
                        :mod (s / senior))))
      :ARG1 (c2 / challenge-01
            :ARG1 (m / market
                  :mod (p2 / protein
                        :name (n3 / name
                              :op1 ""R-PET"")))
            :ARG1-of (f / face-01
                  :ARG0 m
                  :location (c3 / continent
                        :name (n4 / name
                              :op1 ""Europe""))
                  :ARG1-of (c4 / cause-01
                        :ARG0 (c5 / coronavirus))))
      :medium (v / video
            :mod (t / this)))"
"(w / write-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Sandeep""
                  :op2 ""Sinha""))
      :ARG1 (l / likely-01
            :ARG1 (c / continue-01
                  :ARG0 (ii / it)
                  :ARG1 (t / trajectory
                        :direction (u / upward)
                        :poss ii)
                  :prep-with (c2 / certain
                        :polarity -
                        :topic (s / situation
                              :mod (e / economy)))
                  :time (a / after
                        :op1 (r / return-02
                              :ARG1 (t2 / thing
                                    :quant 74)
                              :time (d / date-entity
                                    :year 2019))))))"
"(s / scramble-01
      :ARG0 (b / bank
            :mod (f / food)
            :ARG1-of (s2 / strain-01
                  :time (a / already)))
      :ARG1 (m / meet-01
            :ARG0 b
            :ARG1 (n / need-01
                  :ARG1-of (ii / increase-01)))
      :ARG1-of (c / cause-01
            :ARG0 (s3 / sideline-01
                  :ARG0 (t / thing
                        :ARG2-of (r / respond-01
                              :ARG0 (g / government-organization
                                    :name (n2 / name
                                          :op1 ""Congress""))
                              :ARG1 (l / law
                                    :name (n3 / name
                                          :op1 ""COVID""
                                          :op2 19))))
                  :ARG1 (p / program
                        :name (n4 / name
                              :op1 ""SNP""))
                  :mod (m2 / most)
                  :time (n5 / now))))"
"(r / release-01
      :ARG0 (g / government-organization
            :name (n / name
                  :op1 ""Consumer""
                  :op2 ""Financial""
                  :op3 ""Protection""
                  :op4 ""Bureau""))
      :ARG1 (r2 / resource)
      :ARG2 (p / person
            :ARG0-of (c / consume-01))
      :time (p2 / pandemic
            :name (n2 / name
                  :op1 ""COVID-19"")))"
"(a / and
      :op1 (l / look-forward-03
            :ARG0 (p / person
                  :ARG0-of (s / scam-01)
                  :mod (g / government-organization
                        :name (n / name
                              :op1 ""FTC"")))
            :ARG1 (c / check
                  :mod (r / relieve-01)
                  :poss (y / you))
            :mod (t / too))
      :op2 (w / want-01
            :polarity -
            :ARG0 p
            :ARG1 (r2 / read-01
                  :ARG0 y
                  :ARG1 (g2 / guide-01
                        :ARG0 g
                        :mod (t2 / this)))))"
"(m / multi-sentence
      :snt1 (p / post-scriptum
            :domain (o / obligate-01
                  :ARG1 (ii / i)
                  :ARG2 (a / and
                        :op1 (g / go-02
                              :ARG0 ii
                              :ARG4 (s / store)
                              :purpose (m2 / man
                                    :mod (o2 / old))
                              :time (t / today))
                        :op2 (g2 / grab-01
                              :ARG0 ii
                              :ARG1 (t2 / thing
                                    :ARG2-of (l / list-01)
                                    :mod (g3 / grocery)
                                    :ARG1-of (l2 / long-03
                                          :ARG2 (ii2 / item
                                                :quant 10))))))
            :location (h / here))
      :snt2 (a2 / and
            :op2 (c / contrast-01
                  :ARG1 (a3 / and
                        :op1 (g4 / get-along-18
                              :polarity -
                              :ARG1 (ii3 / i)
                              :ARG2 (h2 / he)
                              :ARG1-of (r / real-04)
                              :frequency (s2 / sometimes))
                        :op2 (t3 / think-01
                              :ARG0 ii3
                              :ARG1 (l3 / likely-01
                                    :ARG1 (d / destine-01
                                          :ARG1 (o3 / one
                                                :ARG1-of (ii4 / include-91
                                                      :ARG2 (w / we)))
                                          :ARG2 (k / kill-01
                                                :ARG0 o3
                                                :ARG1 (o4 / other))))))
                  :ARG2 (s3 / say-01
                        :ARG0 ii3
                        :ARG1 h2))))"
"(m / multi-sentence
      :snt1 (h / have-03
            :ARG0 (w / we)
            :ARG1 (p / product
                  :name (n / name
                        :op1 ""Protective""
                        :op2 ""Face""
                        :op3 ""Masks"")
                  :ARG1-of (r / reuse-01
                        :ARG1-of (p2 / possible-01))
                  :ARG1-of (p3 / personal-02)
                  :ARG2-of (p4 / price-01
                        :ARG1-of (f / fair-01))))
      :snt2 (ii / include-01
            :ARG1 (p5 / product
                  :name (n2 / name
                        :op1 ""Protective""
                        :op2 ""Face""
                        :op3 ""Masks"")
                  :ARG2-of (a / available-02))
            :ARG2 (p6 / product
                  :name (n3 / name
                        :op1 ""https://www.turtlecovid19.com/product-category/personal-reusable-protective-face-masks/""))))"
"(r / recommend-01
      :ARG1 (t / take-off-18
            :polarity -
            :ARG0 (s / supermarket)
            :ARG1 (d / day
                  :purpose (a / and
                        :op1 (s2 / safe-01)
                        :op2 (h / healthy)))
            :time (e / ever)
            :time (p / pandemic
                  :name (n / name
                        :op1 ""COVID-19"")
                  :mod (e2 / especially))))"
"(w / wait-01
      :ARG1 (ii / i)
      :ARG2 (k / kick-in-02
            :ARG1 (ii2 / insure-02
                  :ARG3 ii
                  :mod (e / essential))
            :purpose (p / possible-01
                  :ARG1 (b / buy-01
                        :ARG0 ii
                        :ARG1 (a / and
                              :op1 (t / thing
                                    :quant (s / some)
                                    :ARG1-of (w2 / want-01
                                          :ARG0 ii))
                              :op2 (a2 / and
                                    :op1 (f / food
                                          :quant (s2 / some))
                                    :op2 (p2 / paper
                                          :purpose (t2 / toilet)
                                          :quant (s3 / some))
                                    :mod (a3 / also)))))))"
"(b / be-located-at-91
      :ARG1 (p / person
            :name (n / name
                  :op1 ""Miss""
                  :op2 ""Jellybean""))
      :ARG2 (h / here)
      :purpose (r / remind-01
            :ARG0 p
            :ARG1 (a / and
                  :op1 (p2 / panic-01
                        :polarity -
                        :ARG0 (y / you
                              :mod (a2 / all)
                              :part (p3 / paw)))
                  :op2 (w / wash-01
                        :mode imperative
                        :ARG0 y
                        :ARG1 p3
                        :mod (j / just))
                  :op3 (s / stay-01
                        :mode imperative
                        :ARG1 y
                        :location (ii / indoors)))
            :ARG2 y))"
"(l / let-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (s / sanitize-01
            :ARG0 (ii / i)
            :ARG1 y
            :location (w / world
                  :ARG1-of (f / full-09
                        :ARG2 (c / coronavirus)))))"
"(p / publish-01
      :ARG0 (m / magazine
            :name (n / name
                  :op1 ""Retail""
                  :op2 ""Week""))
      :ARG1 (v / view-01
            :ARG0 (p2 / person
                  :name (n2 / name
                        :op1 ""Matt""
                        :op2 ""Truman""))
            :ARG1 (s / shift-01
                  :ARG1 (b / behave-01
                        :ARG0 (p3 / person
                              :ARG0-of (c / consume-01)))
                  :ARG2-of (r / result-01
                        :ARG1 (a / and
                              :op1 (p4 / pandemic
                                    :time (c2 / current))
                              :op2 (o / opportunity
                                    :mod (ii / invest-01)
                                    :ARG1-of (l / lie-07
                                          :ARG2 (a2 / ahead))
                                    :mod (ii2 / inherent))))))
      :time (j / just))"
"(m / multi-sentence
      :snt1 (h / head-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Mustapha"")
                  :mod (l / lawyer))
            :ARG1 (o / organization
                  :name (n2 / name
                        :op1 ""Presidential""
                        :op2 ""Task""
                        :op3 ""Force"")
                  :topic (v / virus
                        :name (n3 / name
                              :op1 ""Coronavirus""))))
      :snt2 (a / and
            :op1 (a2 / appoint-01
                  :ARG0 (y / you)
                  :ARG1 (m2 / misfit)
                  :polarity (a3 / amr-unknown))
            :op2 (o2 / overlook-01
                  :ARG0 y
                  :ARG1 (p2 / person
                        :name (n4 / name
                              :op1 ""John""
                              :op2 ""Nwangwu"")
                        :mod (p3 / prof))
                  :polarity (a4 / amr-unknown))
            :location (c / country
                  :ARG0-of (h2 / have-03
                        :ARG1 (a5 / and
                              :op1 (p4 / person
                                    :ARG1-of (e / expert-01
                                          :ARG2 (h3 / health
                                                :mod (p5 / public))))
                              :op2 (e2 / epidemiologist)
                              :op3 (p6 / person
                                    :ARG0-of (ii / infect-01)))))))"
"(w / work-01
      :ARG0 (a / agency
            :ARG1-of (l / local-02)
            :ARG0-of (e / enforce-01
                  :ARG1 (l2 / law)))
      :ARG1 (a2 / and
            :op1 (p / protect-01
                  :ARG0 a
                  :ARG1 (p2 / person
                        :ARG0-of (r / reside-01)))
            :op2 (r2 / remind-01
                  :ARG0 a
                  :ARG1 (ii / in-place
                        :domain (l3 / law
                              :topic (p3 / person
                                    :ARG0-of (c / consume-01)))
                        :time (s / state
                              :mod (e2 / emergency)))
                  :ARG2 (p4 / public)))
      :mod (t / together))"
"(m / multi-sentence
      :snt1 (r / request-01
            :ARG0 (ii / i)
            :ARG1 (a / and
                  :op1 (t / test-01
                        :ARG1 (a2 / and
                              :op1 (p / person
                                    :ARG2-of (s / staff-01
                                          :ARG1 (s2 / store
                                                :mod (g / grocery)
                                                :mod (a3 / all)
                                                :location (s3 / state
                                                      :name (n / name
                                                            :op1 ""Maryland"")))))
                              :op2 (p2 / person
                                    :ARG0-of (d / drive-01
                                          :ARG1 (t2 / truck)))
                              :op3 (p3 / person
                                    :ARG0-of (m2 / manage-01
                                          :ARG1 s2)))
                        :ARG2 (v / virus
                              :mod (c / coronavirus))
                        :time (a4 / ASAP))
                  :op2 (t3 / test-01
                        :ARG1 a2
                        :ARG2 v
                        :ARG1-of (r2 / regular-02)))
            :manner (r3 / respect-01
                  :ARG0 ii))
      :snt2 (p4 / person
            :name (n2 / name
                  :op1 ""DontBeASpreader"")))"
"(t / take-on-09
      :ARG1 (m / mean-01
            :ARG1 (w / work-of-art
                  :name (n / name
                        :op1 ""Pathos""
                        :op2 ""der""
                        :op3 ""Distanz"")
                  :ARG1-of (a / author-01
                        :ARG0 (p / person
                              :name (n2 / name
                                    :op1 ""Nietzsche""))))
            :ARG1-of (n3 / new-01))
      :time (m2 / maintain-01
            :ARG1 (d / distance-01
                  :ARG1 (s / supermarket)
                  :ARG2 (p2 / person
                        :mod (o / other))
                  :quant (d2 / distance-quantity
                        :quant 2
                        :unit (m3 / meter)))
            :time (u / use-01
                  :ARG1 s)))"
"(o / obligate-01
      :ARG1 (p / person
            :mod (o2 / other))
      :ARG2 (p2 / postpone-01
            :ARG0 p
            :ARG1 (w / wed-01
                  :ARG1 p)
            :ARG1-of (r / result-01
                  :ARG2 (w2 / wed-01
                        :mod (p3 / panic
                              :degree (w3 / well)))))
      :ARG1-of (c / cause-01
            :ARG0 (h / hoard-01
                  :ARG0 (p4 / person
                        :mod (s / some))
                  :ARG1 (a / and
                        :op1 (r2 / roll
                              :purpose (t / toilet))
                        :op2 (n / noodle
                              :mod (ii / instant)))
                  :source (s2 / supermarket))))"
"(m / multi-sentence
      :snt1 (c / change-01
            :ARG1 (p / product
                  :name (n / name
                        :op1 ""COVID-19""))
            :location (a / around
                  :op1 (w / we))
            :quant (l / lot)
            :ARG2-of (ii / include-01
                  :ARG1 (n2 / need-01
                        :ARG0 (p2 / person
                              :ARG0-of (c2 / consume-01)))))
      :snt2 (k / know-01
            :ARG0 (b / brand
                  :poss (y / you))
            :ARG1 (t / thing
                  :manner-of (r / respond-01
                        :ARG0 b))
            :polarity (a2 / amr-unknown)))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (n / need-01
                  :ARG0 (w / we)
                  :ARG1 (l / lead-02
                        :ARG0 (p / person
                              :name (n2 / name
                                    :op1 ""Gavin""
                                    :op2 ""Newsom""))
                        :ARG2 (ii2 / issue-02
                              :mod (t / this))))
            :ARG2 p)
      :snt2 (h / help-01
            :polite +
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (s2 / set-02
                  :ARG0 y
                  :ARG1 (p2 / precedent)
                  :beneficiary (p3 / person
                        :ARG0-of (w2 / work-01
                              :ARG1 (g / grocery))))))"
"(w / want-01
      :ARG0 (ii / i)
      :ARG1 (s / stock-up-02
            :ARG0 ii
            :ARG1 (f / food))
      :ARG1-of (c / cause-01
            :ARG0 (l / lock-down-06
                  :ARG1 (w2 / we)
                  :location (h / here)
                  :ARG1-of (c2 / cause-01
                        :ARG0 (ii2 / incident
                              :name (n / name
                                    :op1 ""Covid-19""))))))"
"(e / expect-01
      :ARG1 (c / cause-01
            :ARG0 (u / upheaval
                  :mod (e2 / economy)
                  :ARG1-of (c2 / cause-01
                        :ARG0 (l / law
                              :name (n / name
                                    :op1 ""COVID""
                                    :op2 19))))
            :ARG1 (s / skyrocket-01
                  :ARG0 u
                  :ARG1 (d / demand-01
                        :ARG1 (p / pantry
                              :mod (f / food))))))"
"(a / and
      :op1 (m / monetary-quantity
            :quant 1.759
            :unit (d / dollar)
            :location (h / here
                  :location (l / local-region
                        :name (n / name
                              :op1 ""South""
                              :op2 ""Florida""))))
      :op2 (v / virus
            :mod (c / coronavirus)
            :location (c2 / country
                  :name (n2 / name
                        :op1 ""Saudi""
                        :op2 ""Arabia"")))
      :op3 (c3 / company
            :name (n3 / name
                  :op1 ""Aramco"")
            :location (c4 / city
                  :name (n4 / name
                        :op1 ""Dubai"")))
      :op4 c3
      :name (n5 / name
            :op1 ""WT"")
      :location c4
      :op5 (u / url-entity
            :value ""https://t.co/csLPx0eIyf"")
      :topic (w / wonder-01
            :ARG0 (y / you)
            :ARG1 (t / truth-value
                  :polarity-of (d2 / down-03
                        :ARG1 (t2 / thing
                              :ARG2-of (p / price-01))))))"
"(d / downgrade-02
      :ARG0 (c / company
            :name (n / name
                  :op1 ""S&P""
                  :op2 ""Global""
                  :op3 ""Ratings""))
      :ARG1 (c2 / company
            :ARG0-of (c3 / consume-01)
            :quant (n2 / nearly
                  :op1 200)
            :ARG2-of (ii / include-91
                  :ARG1 (a / and
                        :op1 (r / restaurant)
                        :op2 (c4 / company
                              :ARG0-of (m / make-01
                                    :ARG1 (p / part
                                          :mod (a2 / auto))))
                        :ARG0-of (a3 / account-01
                              :ARG1 (s / share
                                    :ARG1-of (h / have-degree-91
                                          :ARG2 (l / large)
                                          :ARG3 (m2 / most)))))))
      :time (m3 / month
            :mod (r2 / recent)))"
"(w / work-01
      :ARG0 (a / and
            :op1 (g / government-organization
                  :ARG0-of (g2 / govern-01)
                  :mod (s / state))
            :op2 (g3 / government-organization
                  :ARG0-of (g4 / govern-01)
                  :ARG1-of (l / local-02)))
      :ARG1 (e / ensure-01
            :ARG0 a
            :ARG1 (g5 / go-06
                  :polarity -
                  :ARG0 (m / member
                        :part-of (c / community))
                  :ARG1 (m2 / meal)))
      :time (d / disrupt-01
            :ARG0 (c2 / coronavirus)
            :ARG1 (a2 / and
                  :op1 (p / program
                        :ARG0-of (a3 / assist-01))
                  :op2 (o / operate-01
                        :ARG1 (s2 / store
                              :mod (g6 / grocery))))))"
"(r / remove-01
      :ARG1 (a / and
            :op1 (b / beer)
            :op2 (l / lager))
      :ARG2 (s / shelf
            :part-of (s2 / supermarket)))"
"(m / multi-sentence
      :snt1 (d / dedicate-01
            :ARG2 (p / person
                  :ARG0-of (y / yell-01
                        :ARG2 (ii / i)
                        :ARG1-of (c / cause-01
                              :ARG0 (c2 / close-06
                                    :ARG1 ii
                                    :ARG2 p
                                    :ARG2-of (h / have-degree-91
                                          :ARG1 ii
                                          :ARG3 (m2 / more)
                                          :ARG4 (d2 / distance-quantity
                                                :quant 6
                                                :unit (f / foot))))))
                  :location (s / supermarket)))
      :snt2 (e / exemplify-01
            :ARG0 (m3 / movie
                  :name (n / name
                        :op1 ""Something""
                        :op2 ""About""
                        :op3 ""Mary""))
            :ARG1 (r / recommend-01
                  :ARG1 (d3 / distance-quantity
                        :quant 7
                        :unit (f2 / foot)))))"
"(c / contrast-01
      :ARG1 (t / think-01
            :ARG0 (y / you)
            :ARG1 (h / hear-01
                  :ARG0 (p / person)
                  :ARG1 (a / and
                        :op1 (a2 / advise-01
                              :ARG2 (d / distance-01
                                    :mod (s / social)))
                        :op2 (s2 / stay-01
                              :ARG1 (s3 / save-02
                                    :ARG1 (l / life))))))
      :ARG2 (s4 / see-01
            :ARG0 y
            :ARG1 (s5 / shop
                  :poss y
                  :ARG1-of (l2 / local-02))
            :time (t2 / then)))"
"(m / multi-sentence
      :snt1 (w / watch-01
            :ARG0 (ii / i)
            :ARG1 (b / broadcast-program
                  :name (n / name
                        :op1 ""Extreme""
                        :op2 ""Cheapskates""))
            :medium (c / company
                  :name (n2 / name
                        :op1 ""TLC"")))
      :snt2 (t / turn-out-11
            :ARG1 (p / person
                  :quant (s / some)
                  :mod (c2 / cheap-cheapskates)
                  :ARG0-of (c3 / cut-02
                        :ARG1 (m2 / monetary-quantity
                              :ARG2-of (c4 / cost-01
                                    :ARG1 (t2 / toiletpaper))))))
      :snt3 (u / use-01
            :ARG0 (t3 / they)
            :ARG1 (s2 / something
                  :mod (e / else)
                  :ARG2-of (e2 / except-01
                        :ARG1 (t4 / that)))
            :ARG1-of (w2 / word-01
                  :mod (o / other))))"
"(s / stream-03
      :ARG1 (e / event
            :name (n / name
                  :op1 ""COVID19""))
      :manner (l / live)
      :source (f / facility
            :name (n2 / name
                  :op1 ""Fort""
                  :op2 ""Knox"")
            :location (c / country
                  :name (n3 / name
                        :op1 ""The""
                        :op2 ""Netherlands""))))"
"(c / cause-01
      :ARG0 (f / feel-01
            :ARG0 (ii / i)
            :ARG1 (p / panic-01
                  :ARG0 (c2 / coronavirus)
                  :ARG1 ii))
      :ARG1 (n / need-01
            :ARG0 ii
            :ARG1 (s / stock-up-02
                  :ARG0 ii
                  :ARG1 (f2 / food))))"
"(m / multi-sentence
      :snt1 (o / obligate-01
            :ARG1 (ii / i)
            :ARG2 (p / pay-01
                  :ARG0 ii
                  :ARG3 (m2 / miscarriage
                        :poss ii)
                  :mod (s / still)
                  :location (h / hospital))
            :time (p2 / pandemic
                  :mod (t / this))
            :concession (p3 / possible-01
                  :polarity -
                  :ARG1 (a / afford-01
                        :ARG0 ii
                        :ARG1 (f / food))))
      :snt2 (a2 / appreciate-02
            :ARG0 (ii2 / i)
            :ARG1 (p4 / possible-01
                  :ARG1 (s2 / spare-01
                        :ARG0 (a3 / anyone)
                        :ARG1 (m3 / monetary-quantity
                              :quant 1
                              :unit (d / dollar))))
            :degree (v / very)))"
"(r / receive-01
      :ARG0 (p / person
            :ARG0-of (h / have-rel-role-91
                  :ARG2 (p2 / parent))
            :ARG0-of (p3 / pay-01
                  :ARG1 (m / monetary-quantity
                        :quant 850
                        :unit (d / dollar))
                  :ARG2 (p4 / person
                        :ARG0-of (h2 / have-rel-role-91
                              :ARG1 p
                              :ARG2 (p5 / person
                                    :ARG0-of (s / study-01)))
                        :mod (g / grade
                              :ord (o / ordinal-entity
                                    :value 8)))
                  :ARG3 (t / trip-03
                        :ARG0 p4
                        :ARG1-of (c / cancel-01
                              :time (a / after
                                    :op1 p3))))
            :location (c2 / city
                  :name (n / name
                        :op1 ""South""
                        :op2 ""Lyon"")))
      :ARG1 (r2 / refund-01
            :ARG2 p)
      :time (f / final))"
"(n / name-02
      :polarity -
      :mode imperative
      :polite +
      :ARG0 (y / you)
      :ARG1 (b / baby)
      :ARG2 (o / or
            :op1 (p / person
                  :name (n2 / name
                        :op1 ""Scott""))
            :op2 (p2 / person
                  :name (n3 / name
                        :op1 ""Angel""))
            :op3 (p3 / person
                  :name (n4 / name
                        :op1 ""Charmin""))
            :op4 (p4 / person
                  :name (n5 / name
                        :op1 ""Kirkland""))
            :op5 (e / et-cetera)))"
"(p / possible-01
      :ARG1 (r / remain-01
            :ARG1 (c / cafe
                  :ARG1-of (l / local-02))
            :ARG3 (o / open-09
                  :ARG1 c))
      :condition (s / serve-01
            :ARG0 c
            :ARG1 (s2 / store
                  :mod (g / grocery)
                  :mod (c2 / country
                        :name (n / name
                              :op1 ""Portugal"")))
            :mod (a / also))
      :polarity (a2 / amr-unknown))"
"(ii / increase-01
      :ARG1 (s / shop-01
            :medium (o / online))
      :ARG1-of (c / cause-01
            :ARG0 (s2 / stay-01
                  :ARG1 (p / person
                        :mod (c2 / country
                              :name (n / name
                                    :op1 ""America""))
                        :quant (m / multiple
                              :op1 1000000))
                  :location (h / home)
                  :purpose (a / avoid-01
                        :ARG0 p
                        :ARG1 (e / expose-01
                              :ARG1 p
                              :ARG2 (p2 / product
                                    :name (n2 / name
                                          :op1 ""COVID-19""))
                              :ARG1-of (p3 / possible-01))))))"
"(l / language
      :polarity -
      :name (n / name
            :op1 ""English"")
      :ARG1-of (s / standard-02)
      :domain (t / this))"
"(r / reveal-01
      :ARG0 (s / survey-01
            :ARG0 (o / organization
                  :name (n / name
                        :op1 ""AdColony"")))
      :ARG1 (p / prefer-01
            :ARG0 (p2 / person
                  :ARG0-of (c / consume-01))
            :location (w / world-region
                  :name (n2 / name
                        :op1 ""Middle""
                        :op2 ""East"")))
      :time (b / break-out-30
            :ARG1 o
            :name (n3 / name
                  :op1 ""COVID-19"")))"
(p / possible-01)
"(l / lift-02
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Aldi""))
      :ARG1 (r / restrict-01
            :ARG1-of (ii / include-91
                  :ARG2 (r2 / restrict-01
                        :ARG1-of (p / put-01
                              :ARG0 c
                              :ARG2 (p2 / place))))
            :quant (s / some))
      :ARG1-of (c2 / cause-01
            :ARG0 (b / buy-01
                  :ARG1 (p3 / panic-01
                        :ARG0 (d / disease
                              :name n
                              :op1 ""Coronavirus"")))))"
"(g / go-02
      :ARG0 (b / bandit
            :quant 2)
      :ARG1 (s / spree
            :mod (s2 / steal-01
                  :ARG0 b
                  :ARG1 (p / paper
                        :purpose (t / toilet))))
      :ARG1-of (a / allege-01)
      :location (a2 / across
            :op1 (s3 / southwest
                  :part-of (c / city
                        :name (n / name
                              :op1 ""Sydney""))))
      :purpose (s4 / steal-01
            :ARG0 b
            :ARG1 p))"
"(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (c / change-01
                  :ARG0 (p2 / product
                        :name (n / name
                              :op1 ""COVID-19""))
                  :ARG1 (a / and
                        :op1 (m2 / mindset
                              :mod (p3 / person
                                    :ARG0-of (c2 / consume-01)))
                        :op2 (s / system
                              :mod (v / value)
                              :ARG0-of (u / underlie-01
                                    :ARG1 (d / decide-01
                                          :ARG3 (b / buy-01)))))))
      :snt2 (t / thrive-01
            :ARG1 (f / firm
                  :ARG0-of (w / work-01
                        :ARG1 (a2 / and
                              :op1 (u2 / understand-01
                                    :ARG0 f
                                    :ARG1 (t2 / this))
                              :op2 (a3 / adapt-01
                                    :ARG0 f))))))"
"(n / need-01
      :ARG0 (y / you)
      :ARG1 (w / wear-01
            :ARG0 y
            :ARG1 (m / mask)
            :purpose (e / enter-01
                  :ARG0 y
                  :ARG1 (o / or
                        :op1 (s / supermarket)
                        :op2 (m2 / mall)
                        :location (c / country
                              :name (n2 / name
                                    :op1 ""Singapore"")))))
      :ARG1-of (s2 / start-01
            :time (t / tomorrow)))"
"(f / face-01
      :ARG0 (a / and
            :op1 (a2 / amount
                  :quant-of (w / waste-01
                        :ARG1 (f2 / food))
                  :mod (p / precedent
                        :polarity -)
                  :ARG0-of (h / head-02
                        :ARG1 (p2 / plant
                              :purpose (w2 / waste-01
                                    :ARG2 (e / energy)))
                        :ARG1-of (a3 / appear-02)))
            :op2 (p3 / process-01)
            :op3 (e2 / equipment))
      :ARG1 (t / time
            :ARG1-of (t2 / tough-02
                  :degree (v / very))))"
"(e / experience-01
      :ARG0 (c / country
            :name (n / name
                  :op1 ""India""))
      :ARG1 (f / fever
            :mod (s / spring))
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (p / pandemic
                        :name (n2 / name
                              :op1 ""Covid-19""))
                  :op2 (r / restructure-01
                        :ARG1 (c3 / company
                              :name (n3 / name
                                    :op1 ""Yes""
                                    :op2 ""Bank"")))
                  :op3 (f2 / fall-01
                        :ARG1 (p2 / price-01
                              :ARG1 (o / oil))))))"
"(m / multi-sentence
      :snt1 (s / set-08
            :ARG1 (s2 / stock)
            :ARG2 (o / open-02
                  :ARG1 s2
                  :ARG4 (h / high-02
                        :ARG1 s2
                        :degree (s3 / sharp)))
            :time (t / today))
      :snt2 (a / and
            :op1 (v / vote-01
                  :ARG1 (p / package
                        :ARG2-of (r / rescue-01
                              :ARG1 (v2 / virus
                                    :name (n / name
                                          :op1 ""Coronavirus"")))
                        :mod (m2 / monetary-quantity
                              :quant 2000000000000
                              :unit (d / dollar)))
                  :mod (a2 / another)
                  :ARG1-of (e / expect-01))
            :op2 (s4 / surge-01
                  :ARG1 (p2 / price-01
                        :ARG1 (g / gold))
                  :ARG2 (p3 / percentage-entity
                        :value 6)
                  :ARG4 h))
      :snt3 (s5 / sue-02
            :ARG0 (p4 / person
                  :ARG0-of (h2 / have-org-role-91
                        :ARG1 (p5 / publication
                              :name (n2 / name
                                    :op1 ""Bloomberg""))
                        :ARG2 (s6 / staff-01)
                        :time (f / former)))
            :ARG1 (c / campaign-01
                  :ARG1 (p6 / president)
                  :ARG1-of (f2 / fail-01))
            :time (m3 / meanwhile)))"
"(p / position-02
      :polarity -
      :ARG2 (s / sympathy
            :beneficiary (p2 / person
                  :ARG0-of (b / buy-01
                        :ARG1 (a / and
                              :op1 (m / medicine
                                    :mod (e / essential))
                              :op2 (ii / item
                                    :mod (f / food)))
                        :manner (p3 / panic-01))
                  :ARG0-of (h / hoard-01
                        :ARG1 a)))
      :ARG1-of (p4 / progressive-02))"
"(r / report-01
      :ARG0 (o / organization
            :name (n / name
                  :op1 ""AAA""
                  :op2 ""Texas""))
      :ARG1 (c / cheap-02
            :ARG1 (t / thing
                  :ARG2-of (p / price-01
                        :ARG1 (g / gas)))
            :ARG2-of (h / have-degree-91
                  :ARG1 t
                  :ARG3 (m / more
                        :quant (m2 / monetary-quantity
                              :quant 0.42
                              :unit (d / dollar)))
                  :ARG4 (t2 / time
                        :mod (t3 / this)
                        :part-of (y / year
                              :mod (l / last))
                        :location (s / state)))))"
"(c / confirm-01
      :ARG0 (c2 / company
            :name (n / name
                  :op1 ""Apple""))
      :ARG1 (p / pay-01
            :ARG1 (a / and
                  :op1 (s / salary
                        :poss (p2 / person
                              :ARG1-of (e / employ-01
                                    :ARG0 c2
                                    :ARG2 (r / retail-01))
                              :mod (a2 / all)))
                  :op2 (b / benefit
                        :poss p2)
                  :mod (f / full))
            :ARG2 p2
            :ARG1-of (r2 / regardless-91
                  :ARG2 (p3 / participate-01
                        :ARG0 p2))))"
"(m / multi-sentence
      :snt1 (l / let-01
            :mode imperative
            :polarity -
            :ARG0 (y / you)
            :ARG1 (g / get-05
                  :ARG0 (v / virus
                        :name (n / name
                              :op1 ""CODID""
                              :op2 19))
                  :ARG1 y))
      :snt2 (b / buy-01
            :mode imperative
            :ARG0 (y2 / you)
            :ARG1 (m2 / mask
                  :ARG1-of (h / have-degree-91
                        :ARG2 (g2 / good-02
                              :ARG1 m2)
                        :ARG3 (m3 / most)
                        :ARG5 (f / find-01
                              :ARG0 y2))))
      :snt3 (d / doubt-01
            :polarity -
            :ARG1 (c / company
                  :name (n2 / name
                        :op1 ""HMU""))
            :topic (p / price-01)))"
"(c / contrast-01
      :ARG1 (p / possible-01
            :ARG1 (p2 / paranoid
                  :domain (ii / i
                        :mod (o / only)
                        :location (s / supermarket
                              :name (n / name
                                    :op1 ""Aldi""))
                        :time (d / date-entity
                              :dayperiod (a / afternoon)
                              :mod (t / today)))))
      :ARG2 (w / wear-01
            :ARG0 ii
            :ARG1 (a2 / and
                  :op1 (m / mask)
                  :op2 (g / glove)
                  :ARG3-of (p3 / protect-01)
                  :ARG1-of (f / fit-01
                        :ARG1-of (s2 / secure-02)))))"
"(m / multi-sentence
      :snt1 (m2 / man
            :mode imperative
            :domain (y / you)
            :time (a / and
                  :op1 (s / sit-01
                        :ARG1 y
                        :ARG2 (t / toilet))
                  :op2 (g / go-02
                        :ARG0 (p / paper
                              :purpose (t2 / toilet)))))
      :snt2 (u / use-01
            :mode imperative
            :ARG0 (y2 / you
                  :part (h / hand))
            :ARG1 h))"
"(p / price-01
      :ARG1 (h / home
            :location (c / city
                  :name (n / name
                        :op1 ""Toronto"")))
      :ARG2 (t / thing
            :ARG2-of (p2 / price-01)
            :ARG1-of (s / see-01
                  :polarity -
                  :ARG0 (w / we)
                  :time (b / before
                        :op1 (n2 / now)
                        :quant (l / like
                              :op1 (t2 / temporal-quantity
                                    :quant 10
                                    :unit (y / year))))))
      :time (a / and
            :op1 (c2 / control-01
                  :ARG1 (f / facility
                        :name (n3 / name
                              :op1 ""Covid-19"")))
            :op2 (g / get-back-10
                  :ARG1 (w2 / world)
                  :ARG2 (n4 / normal-02
                        :ARG1 w2))))"
"(c / create-01
      :ARG0 (p / pandemic)
      :ARG1 (o / opportunity
            :beneficiary (p2 / person
                  :ARG0-of (s / scam-01))))"
"(a / and
      :op1 (u / update-01
            :ARG1 (s / store
                  :mod (g / grocery)
                  :location (r / relative-position
                        :op1 (h / house
                              :poss (h2 / he)
                              :location (c / city
                                    :name (n / name
                                          :op1 ""London"")))
                        :direction (d / down
                              :op1 (s2 / street)))))
      :op2 (d2 / differ-02
            :polarity -
            :ARG1 (s3 / store
                  :mod (g2 / grocery)
                  :poss h2
                  :location (c2 / city
                        :name (n2 / name
                              :op1 ""Toronto"")))))"
"(c / cause-01
      :ARG0 (c2 / coronavirus)
      :ARG1 (d / drop-01
            :ARG0 c2
            :ARG1 (a / and
                  :op1 (m / monetary-quantity
                        :ARG2-of (p / price-01
                              :ARG1 (g / gas)))
                  :op2 (t / traffic
                        :mod (r / road)))))"
"(m / multi-sentence
      :snt1 (s / spend-01
            :ARG0 (ii / i)
            :ARG1 (a / and
                  :op1 (m2 / monetary-quantity
                        :quant 50
                        :unit (d / dollar))
                  :op2 (m3 / monetary-quantity
                        :quant 110
                        :unit (d2 / dollar)))
            :ARG3 (s2 / store
                  :mod (g / grocery))
            :mod (j / just))
      :snt2 (d3 / do-02
            :ARG0 (ii2 / i)
            :ARG1 (t / this)
            :ARG2-of (r / right-06
                  :polarity (a2 / amr-unknown))))"
"(r / ride-01
      :polarity -
      :ARG0 (p / person
            :ARG0-of (s / shop-01
                  :ARG2 (c / company
                        :name (n / name
                              :op1 ""Crest""
                              :op2 ""Grocery""
                              :op3 ""Store"")
                        :location (c2 / city
                              :name (n2 / name
                                    :op1 ""Edmond"")
                              :location (s2 / state
                                    :name (n3 / name
                                          :op1 ""Oklahoma""))))))
      :ARG1 (m / motorcycle))"
"(p / panic-01
      :location (s / supermarket
            :ARG1-of (l / local-02
                  :ARG2 (c / city
                        :name (n / name
                              :op1 ""Adelaide"")))
            :poss (ii / i)))"
"(u / use-01
      :ARG0 (s / supermarket
            :location (c / country
                  :name (n / name
                        :op1 ""Denmark"")))
      :ARG1 (t / trick-01
            :ARG2 (p / price-01)
            :ARG1-of (c2 / clever-01))
      :ARG2 (s2 / stop-01
            :ARG0 s
            :ARG1 (h / hoard-01
                  :ARG0 s
                  :ARG1 (s3 / sanitiser))))"
"(m / meet-03
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG1 (c / country
                        :name (n / name
                              :op1 ""United""
                              :op2 ""States""))
                  :ARG2 (p2 / president)))
      :ARG1 (p3 / person
            :ARG0-of (l / lead-02
                  :ARG1 (a / and
                        :op1 (ii / industry
                              :mod (o / oil))
                        :op2 (ii2 / industry
                              :mod (g / gas)))))
      :time (w / week
            :mod (t / this))
      :purpose (d / discuss-01
            :ARG0 p
            :ARG1 (ii3 / impact-01
                  :ARG0 (p4 / plummet-01
                        :ARG1 (p5 / price-01
                              :ARG1 (o2 / oil))
                        :time (p6 / pandemic
                              :mod (v / virus
                                    :mod (c2 / coronavirus)))))
            :ARG2 p3))"
"(h / have-condition-91
      :ARG1 (c / consider-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (p / possible-01
                  :ARG1 (o / or
                        :op1 (ii / infect-01
                              :ARG1 y)
                        :op2 (ii2 / infect-01
                              :ARG1 (p2 / person
                                    :mod (o2 / other)
                                    :ARG1-of (r / risk-01
                                          :ARG1-of (h2 / have-degree-91
                                                :ARG2 (h3 / high-02)
                                                :ARG3 (m / more)
                                                :ARG4 y)
                                          :ARG1-of (p3 / possible-01)))))))
      :ARG2 (w / wish-01
            :ARG0 y
            :ARG1 (a / and
                  :op1 (g / go-02
                        :ARG0 y
                        :ARG3 (h4 / house
                              :poss y)
                        :direction (o3 / out))
                  :op2 (e / enjoy-01
                        :ARG0 y
                        :ARG1 (o4 / or
                              :op1 (p4 / picnic-01
                                    :ARG0 y)
                              :op2 (s / sunbathe-01
                                    :ARG0 y
                                    :location (p5 / park)))))))"
"(e / experience-01
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG1 (s / store
                        :mod (g / grocery))
                  :ARG2 (e2 / executive)))
      :ARG1 (r / reality
            :mod (d / difficult)
            :poss (w / work-01
                  :ARG0 p
                  :ARG1 (l / line
                        :mod (f / front))
                  :time (p2 / pandemic
                        :mod (c / coronavirus)))))"
"(n / need-01
      :ARG0 (w / world)
      :ARG1 (p / person
            :ARG0-of (v / volunteer-01))
      :time (n2 / now
            :ARG1-of (h / have-degree-91
                  :ARG2 (b / be-temporally-at-91
                        :ARG2 (e / ever))
                  :ARG3 (m / more)))
      :ARG1-of (c / cause-01
            :ARG0 (d / distance-01
                  :ARG2 (s / society))))"
"(m / miss-02
      :ARG0 (y / you)
      :ARG1 (r / race-02
            :ARG0 (d / distiller)
            :ARG2 (m2 / make-01
                  :ARG0 d
                  :ARG1 (s / sanitizer
                        :beneficiary (h / hand)))
            :time (e / epidemic
                  :name (n / name
                        :op1 ""Coronavirus""
                        :op2 ""Pandemic"")
                  :mod (e2 / event
                        :name n
                        :op1 ""COVID19"")))
      :mod (c / case))"
"(e / expose-01
      :ARG0 (o / outbreak-29
            :ARG1 (d / disease
                  :name (n / name
                        :op1 ""COVID-19"")))
      :ARG1 (w / weak-02
            :ARG1 (s / system
                  :mod (f / food)
                  :poss (w2 / we))
            :ARG1-of (n2 / notice-01
                  :polarity -
                  :degree (l / large)
                  :ARG1-of (c / cause-01
                        :ARG0 o)))
      :ARG1-of (s2 / say-01
            :ARG0 (c2 / company
                  :name (n3 / name
                        :op1 ""Food""
                        :op2 ""Solutions""
                        :op3 ""New""
                        :op4 ""England""))
            :ARG2 (p / person
                  :name (n4 / name
                        :op1 ""VTFoodSystems""))
            :time (d2 / date-entity
                  :day 25
                  :month 3
                  :year 2020)))"
"(m / multi-sentence
      :snt1 (s / see-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (q / queue-01
                  :mod (b / big
                        :mod (s2 / such))
                  :location (s3 / section
                        :mod (g / grocery)
                        :part-of (f / facility
                              :name (n / name
                                    :op1 ""Bhat""
                                    :op2 ""Bhateni""
                                    :op3 ""Supermarket"")
                              :location (c / city
                                    :name (n2 / name
                                          :op1 ""Thimi"")))))
            :time (s4 / since
                  :op1 (o / open-01
                        :ARG1 f)))
      :snt2 (f2 / festival
            :name (n3 / name
                  :op1 ""Dashain"")
            :mod (e / even
                  :polarity -))
      :snt3 (v / virus
            :mod (c2 / coronavirus)))"
"(m / multi-sentence
      :snt1 (r / ridiculous-02
            :ARG1 (a / and
                  :op1 (t / take-advantage-02
                        :ARG0 (c / company
                              :name (n / name
                                    :op1 ""Tesco""))
                        :ARG1 (p / pandemic
                              :mod (v / virus)))
                  :op2 (r2 / raise-01
                        :ARG0 c
                        :ARG1 (p2 / price-01
                              :ARG1 (f / food)))))
      :snt2 (a2 / and
            :op1 (o / or
                  :op1 (l / lose-02
                        :ARG0 (p3 / person
                              :quant (l2 / lot))
                        :ARG1 (j / job
                              :poss p3))
                  :op2 (p4 / pay-01
                        :ARG2 p3
                        :mod (p5 / percentage-entity
                              :value 80)))
            :op2 (m2 / make-02
                  :ARG0 (y / you)
                  :ARG1 (h / hard-02
                        :ARG1 (t2 / this)
                        :ARG2 (c2 / class
                              :ARG0-of (w / work-01))
                        :ARG2-of (h2 / have-degree-91
                              :ARG1 t2
                              :ARG3 (m3 / more)))))
      :snt3 (s / sort-out-02
            :mode imperative
            :ARG0 y
            :ARG1 y))"
"(c / cause-01
      :ARG0 (p / possible-01
            :ARG1 (o / out-05
                  :ARG1 (ii / ingredient
                        :mod (s / some))
                  :ARG2 (s2 / stock-01
                        :ARG1 ii)))
      :ARG1 (s3 / substitute-01
            :ARG2 (r / recipe)
            :ARG1-of (s4 / smart-06)
            :mod (s5 / some)
            :location (h / here)))"
"(s / struggle-02
      :ARG0 (r / retailer
            :mod (f / food)
            :mod (b / beverage)
            :location (c / country
                  :name (n / name
                        :op1 ""Canada"")))
      :ARG1 (p / pandemic
            :name (n2 / name
                  :op1 ""COVID-19"")))"
"(t / thing
      :name (n / name
            :op1 ""ful""))"
"(m / multi-sentence
      :snt1 (k / key-02
            :ARG1 (s / slow-01
                  :ARG1 (s2 / spread-02
                        :ARG1 (d / disease
                              :name (n / name
                                    :op1 ""COVID19"")))))
      :snt2 (w / watch-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (t / thing
                  :manner-of (p / possible-01
                        :ARG1 (a / and
                              :op1 (t2 / travel-01
                                    :ARG0 (c / cough-01
                                          :ARG1-of (s3 / single-02))
                                    :ARG1 (s4 / supermarket))
                              :op2 (c2 / contaminate-01
                                    :ARG0 c
                                    :ARG1 (s5 / surface)))))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (w / worry-01
                  :quant (l / lot))
            :op2 (t / tell-01
                  :ARG1 (a2 / and
                        :op1 (p / panic-01
                              :polarity -
                              :ARG0 (w2 / we))
                        :op2 (o / overstock-01
                              :ARG0 w2
                              :ARG1 (e / essential
                                    :ARG2-of (ii / include-01
                                          :ARG1 (f / food)))))
                  :ARG2 w2))
      :snt2 (l2 / list-01
            :ARG1 (f2 / food
                  :ARG1-of (o2 / on-hand-15
                        :time (q / quarantine-01
                              :ARG2 (d / disease
                                    :name (n / name
                                          :op1 ""Coronavirus"")))))
            :ARG1-of (p2 / practical-02
                  :degree (v / very))
            :domain (t2 / this)))"
"(s / sue-02
      :ARG0 (c / company
            :name (n / name
                  :op1 ""3M""))
      :ARG1 (c2 / company)
      :ARG2 (ii / infllate-01
            :ARG0 c2
            :ARG1 (t / thing
                  :ARG2-of (p / price-01
                        :ARG1 (m / mask)))))"
"(f / find-02
      :ARG0 (ii / i)
      :ARG1 (p / prism
            :mod (w / weird)
            :instrument-of (v / view-01
                  :ARG0 ii
                  :ARG1 (b / behave-01
                        :ARG0 ii
                        :ARG1 (p2 / person
                              :ARG0-of (c / consume-01)))
                  :mod (o / over-time))
            :domain (s / state-01
                  :ARG0 (b2 / business
                        :ARG1-of (p3 / patronize-01
                              :ARG0 ii)
                        :mod (a / all))
                  :ARG1 (l / law
                        :name (n / name
                              :op1 ""COVID-19"")
                        :ARG2-of (o2 / obligate-01))))
      :time (s2 / since
            :op1 (d / dawn-01
                  :ARG1 (s3 / shop-01
                        :medium (ii2 / internet)))))"
"(h / host-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""MetalMiner""))
      :ARG1 (w / webinar
            :topic (ii / impact-01
                  :ARG0 (v / virus
                        :mod (c2 / coronavirus))
                  :ARG1 (p / price-01
                        :ARG1 (m / metal))))
      :time (d / date-entity
            :dayperiod (m2 / morning)
            :mod (t / today)))"
"(s / say-01
      :ARG0 (m / man
            :ARG1-of (h / have-rel-role-91
                  :ARG0 (p / person
                        :ARG1-of (e / employ-01
                              :ARG0 (s2 / supermarket)))
                  :ARG2 (w / wife)
                  :ARG1-of (d / die-01
                        :time (d2 / date-entity
                              :weekday (s3 / saturday)))))
      :ARG1 (h2 / have-03
            :ARG0 (s4 / she)
            :ARG1 (a / aura
                  :mod (l / love-01))
            :location (a2 / around
                  :op1 s4)))"
"(ii / implement-01
      :ARG0 (c / city
            :name (n / name
                  :op1 ""Naga""))
      :ARG1 (m / measure-02
            :ARG0 c
            :ARG1 (s / security)
            :ARG2 (h / help-01
                  :ARG1 (p / prevent-01
                        :ARG1 (s2 / spread-02
                              :ARG1 (d / disease
                                    :name (n2 / name
                                          :op1 ""COVID-19"")))))
            :ARG0-of h
            :ARG1-of (h2 / have-degree-91
                  :ARG2 (s3 / strict)
                  :ARG3 (m2 / more))))"
"(h / have-03
      :ARG0 (p / person
            :mod (c / country
                  :name (n / name
                        :op1 ""America""))
            :ARG1-of (ii / include-91
                  :ARG3 (l / less-than
                        :op1 (p2 / percentage-entity
                              :value 30)))
            :ARG2-of ii)
      :ARG1 (j / job
            :ARG0-of (a / allow-01
                  :ARG1 (w / work-01
                        :ARG0 p
                        :location (h2 / home)))))"
"(m / multi-sentence
      :snt1 (p / possible-01
            :polarity -
            :ARG1 (b / believe-01
                  :ARG0 (ii / i)
                  :ARG1 (a / and
                        :op1 (g / go-02
                              :ARG0 ii
                              :ARG1 (o / order-02
                                    :ARG0 ii
                                    :ARG1 (s / shop-01
                                          :ARG0 ii
                                          :ARG2 (c / company
                                                :name (n / name
                                                      :op1 ""Tesco""))
                                          :medium (o2 / online)))
                              :time (j / just))
                        :op2 (p2 / pack-01
                              :polarity -
                              :ARG1 (c2 / chicken
                                    :ARG1-of (f / fresh-04))
                              :ARG1-of (s2 / single-02)))))
      :snt2 (a2 / and
            :op1 (p3 / pasta)
            :op2 (r / roll
                  :mod (t / toilet))
            :op3 (s3 / soap
                  :mod (h / hand))
            :op4 (m2 / more)
            :mod (a3 / along))
      :snt3 (p4 / possible-01
            :polarity -
            :ARG1 (b2 / believe-01
                  :ARG0 ii)
            :ARG1 (s4 / show-01
                  :ARG0 (v / virus
                        :name (n2 / name
                              :op1 ""Coronavirus""))
                  :ARG1 (s5 / side
                        :mod (g2 / grotesque
                              :degree (s6 / such))
                        :part-of (s7 / society))))
      :snt4 (s8 / selfish
            :domain (p5 / person
                  :mod (g3 / greed))))"
"(s / say-01
      :ARG0 (b / broadcast-program
            :name (n / name
                  :op1 ""BBC""
                  :op2 ""News""))
      :ARG1 (w / work-01
            :ARG0 (ii / i)
            :ARG2 (s2 / supermarket)
            :time (n2 / now)))"
"(s / solve-01
      :ARG1 (p / problem
            :topic (h / hoard-01
                  :ARG1 (p2 / paper
                        :purpose (t / toilet))
                  :ARG1-of (c / cause-01
                        :ARG0 (c2 / coronavirus))))
      :ARG2 (w / wash-01
            :ARG0 (y / you
                  :part (b / butt))
            :ARG1 b)
      :ARG1-of (h2 / have-degree-91
            :ARG2 (o / optimal)
            :ARG3 (m / most)))"
"(f / feel-01
      :ARG0 (ii / i)
      :ARG1 (r / relieve-01
            :ARG1 ii)
      :time (l / leave-11
            :ARG0 ii
            :ARG1 (l2 / lot
                  :ARG2-of (p / park-01)
                  :mod (s / supermarket))
            :time (d / date-entity
                  :time ""7:30"")
            :accompanier (a / and
                  :op1 (a2 / alcohol
                        :ARG2-of (r2 / rub-01))
                  :op2 (w / wipe
                        :mod (p2 / product
                              :name (n / name
                                    :op1 ""Lysol""))))))"
"(m / multi-sentence
      :snt1 (d / discuss-01
            :ARG0 (p / paramedic
                  :ARG0-of (a / attend-01
                        :ARG1 (p2 / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG1 (ii / i)
                                    :ARG2 (f / father)))
                        :time (y / yesterday)))
            :ARG1 (o / organization
                  :name (n / name
                        :op1 ""Covid-19"")))
      :snt2 (c / concern-01
            :ARG0 (q / quantity
                  :quant-of (f2 / food)
                  :ARG1-of (s / see-01
                        :ARG0 (h2 / he))
                  :ARG1-of (p3 / place-01
                        :ARG2 (b / bin)
                        :time (p4 / pass-04
                              :ARG1 (o2 / or
                                    :op1 (u / use-01
                                          :ARG1 (f3 / food))
                                    :op2 (b2 / before
                                          :op1 (d2 / date
                                                :ARG1-of (h3 / have-degree-91
                                                      :ARG2 (g / good-02
                                                            :ARG1 d2)
                                                      :ARG3 (m2 / most))))))))
            :ARG1 h2
            :ARG1-of (b3 / base-02
                  :ARG2 (c2 / call-02
                        :ARG0 h2
                        :location (h4 / home))))
      :snt3 (h5 / hurt-01
            :ARG0 (b4 / buy-01
                  :mod (p5 / panic-01))
            :ARG1 (e / everyone)
            :ARG1-of (c3 / cause-01
                  :ARG0 (s2 / see-01
                        :ARG0 (w / we)
                        :ARG1 (ii2 / increase-01
                              :ARG1 (f4 / food))))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (w / work-01
                  :ARG0 (ii / i)
                  :ARG1 (s / supermarket))
            :op2 (c / contrast-01
                  :ARG1 (s2 / stock-01
                        :ARG0 s
                        :ARG1 (t / thing
                              :example (a2 / and
                                    :op1 (p / paper
                                          :purpose (t2 / toilet))
                                    :op2 (m2 / milk
                                          :mod (l / life
                                                :ARG1-of (l2 / long-03)))))
                        :mod (o / only)
                        :time (a3 / at-first))
                  :ARG2 (s3 / start-01
                        :ARG0 s
                        :ARG1 (s4 / stock-01
                              :ARG0 s
                              :ARG1 (t3 / thing
                                    :example (a4 / and
                                          :op1 (p2 / pastry
                                                :mod (p3 / puff))
                                          :op2 (b / base
                                                :mod (p4 / pizza))
                                          :op3 (f / flour))))
                        :time (n / now)
                        :ARG1-of (c2 / cause-01
                              :ARG0 (a5 / and
                                    :op1 (t4 / think-01
                                          :ARG0 ii
                                          :ARG1 (b2 / bore-02
                                                :ARG1 (p5 / person)))
                                    :op2 (o2 / open-09
                                          :polarity -
                                          :ARG1 (f2 / food
                                                :ARG1-of (f3 / fast-02)))))))
            :snt2 (t5 / thing
                  :ARG1-of (d / do-02)
                  :ARG1-of (f4 / fun-01))))"
"(r / recommend-01
      :ARG1 (t / take-down-22
            :ARG0 (p / platform
                  :mod (m / media
                        :mod (s / social)))
            :ARG1 (a / account
                  :ARG0-of (p2 / promote-02
                        :ARG1 (h / hysteria
                              :degree (m2 / mass))))))"
"(a / and
      :op1 (p / product
            :name (n / name
                  :op1 ""Covid-19""))
      :op2 (p2 / price-01
            :ARG1 (p3 / product
                  :name (n2 / name
                        :op1 ""Face""
                        :op2 ""Mask""))
            :ARG2 (s / surge-01))
      :op3 (c / contrast-01
            :ARG1 (p4 / product
                  :name (n3 / name
                        :op1 ""GIF""))
            :ARG2 (p5 / product
                  :name (n4 / name
                        :op1 ""JIF"")))
      :op4 (n5 / news
            :mod (m / more)))"
"(c / contrast-01
      :ARG1 (h / hit-01
            :ARG0 (p / price-01
                  :ARG1 (o / oil)
                  :ARG1-of (l / low-04))
            :ARG1 (e / economy)
            :ARG2 (h2 / hard))
      :ARG2 (r / recommend-01
            :ARG1 (h3 / help-01
                  :ARG0 (r2 / reform-01
                        :ARG1-of (u / undertake-01
                              :time (s / since
                                    :op1 (c2 / crisis
                                          :time (d / date-entity
                                                :year 2014)))))
                  :ARG1 (w / weather-01
                        :ARG1 (d2 / difficulty
                              :time (c3 / current))))))"
"(s / survive-01
      :ARG0 (ii / i)
      :ARG1 (a / apocalypse
            :time (d / date-entity
                  :year 2020)))"
"(u / urge-01
      :ARG0 (n / nurse
            :ARG1-of (e / exhaust-01)
            :source (c / city
                  :name (n2 / name
                        :op1 ""York"")))
      :ARG1 (p / person)
      :ARG2 (t / think-01
            :ARG0 p
            :ARG2 (p2 / person
                  :mod (o / other))
            :time (a / after
                  :op1 (f / find-01
                        :ARG0 p
                        :ARG1 (s / shelf
                              :part-of (s2 / supermarket)
                              :ARG1-of (e2 / empty-02))))))"
"(p / provide-01
      :ARG0 (g / government-organization
            :name (n / name
                  :op1 ""California""
                  :op2 ""Public""
                  :op3 ""Utilities""
                  :op4 ""Commission""))
      :ARG1 (p2 / protect-01
            :ARG0 g
            :ARG1 (p3 / person
                  :ARG0-of (c / consume-01)
                  :mod (u / utility)))
      :time (o / outbreak-29
            :name (n2 / name
                  :op1 ""COVID-19"")
            :location (s / state
                  :name (n3 / name
                        :op1 ""California""))))"
(a / airborne)
"(a / arrest-01
      :ARG1 (t / teenager
            :quant 2)
      :ARG2 (p / place-01
            :ARG0 t
            :ARG1 (j / juice
                  :ARG1-of (d / drink-01
                        :ARG0 t))
            :ARG2 (s / shelf
                  :part-of (s2 / supermarket
                        :mod (c / company
                              :name (n / name
                                    :op1 ""FairPrice""))))
            :ARG1-of (a2 / allege-01)
            :manner (j2 / joke-01
                  :ARG2 (v / video
                        :name (n2 / name
                              :op1 ""Covid-19"")))))"
"(f / feature-01
      :ARG1 (a / and
            :op1 (p / person
                  :name (n / name
                        :op1 ""FoodProfessor""))
            :op2 (p2 / person
                  :name (n2 / name
                        :op1 ""TerryGlavin""))
            :op3 (p3 / person
                  :name (n3 / name
                        :op1 ""bmissaghi9"")))
      :ARG2 (p4 / podcast
            :time (t / today)))"
"(a / accept-01
      :ARG0 (s / store
            :mod (g / grocery)
            :quant (m / many))
      :ARG1 (t / totte
            :ARG1-of (r / reuse-01
                  :ARG1-of (p / possible-01)))
      :time (n / no-longer)
      :purpose (r2 / reduce-01
            :ARG0 s
            :ARG1 (r3 / risk-01
                  :ARG2 (t2 / transmit-01))))"
(a / amr-empty)
"(c / compile-01
      :ARG0 (a / association
            :quant 7
            :mod (t / trade-01)
            :mod (ii / industry))
      :ARG1 (p / petition-01
            :ARG1 (g / government-organization
                  :name (n / name
                        :op1 ""FCC""))
            :consist-of (p2 / page
                  :quant 23)
            :ARG0-of (r / request-01
                  :ARG1 (o / or
                        :op1 (r2 / rule-01
                              :ARG3 (p3 / part
                                    :part-of (l / law
                                          :name (n2 / name
                                                :op1 ""Telephone""
                                                :op2 ""Consumer""
                                                :op3 ""Protection""
                                                :op4 ""Act"")))
                              :time (ii2 / immediate))
                        :op2 (c2 / clarify-10
                              :ARG1 p3)
                        :op3 (w / waive-01
                              :ARG1 p3))))
      :time (w2 / week
            :mod (t2 / this)))"
"(p / push-01
      :ARG0 (w / woman)
      :ARG1 (t / trolley
            :poss w)
      :ARG2 (a / along
            :op1 (a2 / aisle
                  :mod (p2 / pasta)
                  :ARG1-of (e / empty-02)
                  :location (ii / inside
                        :op1 (s / supermarket
                              :mod (c / company
                                    :name (n / name
                                          :op1 ""Tesco""))))))
      :time (o / outbreak-29
            :ARG1 (d / disease
                  :name (n2 / name
                        :op1 ""coronavirus""))
            :location (c2 / city
                  :name (n3 / name
                        :op1 ""Manchester"")
                  :location (c3 / country
                        :name (n4 / name
                              :op1 ""Britain"")))))"
"(d / distancing
      :polarity -
      :mod (s / social)
      :domain (s2 / stand-01
            :ARG1 (s3 / store
                  :mod (w / whole))
            :ARG2 (f / front
                  :mod (u / up))
            :purpose (w2 / wait-01
                  :ARG1 s3
                  :ARG2 (c / check-out-09
                        :ARG1 s3
                        :location (s4 / store
                              :ARG1-of (ii / include-91
                                    :ARG2 (s5 / store
                                          :poss (y / you)
                                          :ARG1-of (h / have-degree-91
                                                :ARG2 (b / busy-01
                                                      :ARG1 s5)
                                                :ARG3 (m / most))))
                              :ARG0-of (h2 / have-03
                                    :ARG1 (r / register
                                          :quant 4
                                          :ARG1-of (o / open-01)
                                          :mod (o2 / only))))))))"
"(w / wait-01
      :ARG1 (d / decrease-01
            :ARG1 (p / price-01
                  :ARG1 (d2 / data)))
      :ARG2 (t / temporal-quantity
            :quant 1
            :unit (m / month))
      :ARG1-of (c / cause-01
            :ARG0 (a / amr-unknown))
      :time (n / need-01
            :time (ii / immediate)))"
"(c / continue-01
      :ARG0 (o / organization
            :name (n / name
                  :op1 ""Zakatify""
                  :op2 ""Charities""))
      :ARG1 (r / respond-01
            :ARG0 o
            :ARG1 (p / plan-01
                  :ARG0 (o2 / organization
                        :name (n2 / name
                              :op1 ""ICF""))
                  :ARG1 (s / serve-01
                        :ARG0 o2
                        :ARG1 (a / and
                              :op1 (s2 / sanitize-01
                                    :ARG1 (f / food))
                              :op2 (s3 / supply
                                    :ARG1-of (c2 / critical-02)
                                    :mod (o3 / other)))
                        :ARG2 (c3 / child
                              :mod (c4 / country
                                    :name (n3 / name
                                          :op1 ""Iraq""))
                              :ARG1-of (v / vulnerable-01))
                        :location (h / home
                              :poss c3))))
      :time (u / until
            :op1 (p2 / possible-01
                  :ARG1 (r2 / resume-01
                        :ARG1 (c5 / class)))))"
"(m / multi-sentence
      :snt1 (c / call-on-05
            :ARG0 (ii / i)
            :ARG1 (a / and
                  :op1 (p / person
                        :name (n / name
                              :op1 ""Trump"")
                        :ARG0-of (h / have-org-role-91
                              :ARG2 (p2 / president)))
                  :op2 (p3 / person
                        :name (n2 / name
                              :op1 ""Newsom"")
                        :ARG0-of (h2 / have-org-role-91
                              :ARG2 (g / governor))))
            :ARG2 (l / listen-01
                  :ARG0 a))
      :snt2 (r / recommend-01
            :ARG1 (r2 / reduce-01
                  :ARG1 (t / thing
                        :ARG2-of (p4 / price-01)
                        :location (s / store)
                        :mod (a2 / all))
                  :ARG2 (p5 / percentage-entity
                        :value 50))
            :ARG1-of (c2 / cause-01
                  :ARG0 (c3 / crisis
                        :mod (e / emergency)
                        :mod (n3 / nation)))))"
"(c / cause-01
      :ARG0 (a / amr-unknown)
      :ARG1 (s / shop-01
            :ARG0 (p / person
                  :mod (t / this)
                  :manner (p2 / pair))
            :mod (s2 / still)
            :time (r / recommend-01
                  :ARG1 (s3 / stay-01
                        :ARG1 p
                        :location (h / home)))))"
"(a / arrive-01
      :ARG1 (m / moment
            :time-of (t / true-01
                  :ARG2 (p / person
                        :ARG0-of (p2 / pay-01))))
      :accompanier (l / law
            :name (n / name
                  :op1 ""COVID-19"")))"
"(s / see-01
      :ARG0 (ii / i)
      :ARG1 (g / guy
            :quant (b / bunch)
            :ARG1-of (w / white-02)
            :age (o / over
                  :op1 (t / temporal-quantity
                        :quant 50
                        :unit (y / year)))
            :ARG0-of (w2 / wear-01
                  :polarity -
                  :ARG1 (o2 / or
                        :op1 (m / mask)
                        :op2 (g2 / glove))))
      :location (s2 / store
            :mod (g3 / grocery))
      :time (d / date-entity
            :dayperiod (m2 / morning)
            :mod (t2 / today)))"
"(r / reiterate-01
      :ARG0 (o / organization
            :name (n / name
                  :op1 ""Dubai""
                  :op2 ""Economy""))
      :ARG1 (s / suffice-01
            :ARG0 (s2 / stock-01
                  :ARG1 (a / and
                        :op1 (c / commodity
                              :mod (f / food))
                        :op2 (c2 / commodity
                              :mod (f2 / food
                                    :polarity -)))
                  :location (a2 / across
                        :op1 (o2 / outlet
                              :location (c3 / city
                                    :name (n2 / name
                                          :op1 ""Dubai"")))))
            :ARG1 (m / meet-01
                  :ARG0 s2
                  :ARG1 (r2 / require-01
                        :ARG0 (p / person
                              :ARG0-of (r3 / reside-01))
                        :time (t / term
                              :ARG1-of (n3 / near-02)
                              :ARG1-of (h / have-degree-91
                                    :ARG2 (l / long-03
                                          :ARG1 t)
                                    :ARG3 (m2 / more)))))))"
"(m / multi-sentence
      :snt1 (l / love-01
            :ARG0 (ii / i)
            :ARG1 (t / thing
                  :ARG2-of (p / price-01)
                  :mod (g / gas)
                  :mod (c / company
                        :name (n / name
                              :op1 ""CVID-19""))
                  :mod (t2 / this)))
      :snt2 (t3 / time
            :ARG1-of (l2 / long-03)
            :time (s / since
                  :op1 (s2 / see-01
                        :ARG0 (ii2 / i)
                        :ARG1 (b / below
                              :op1 (r / rate-entity-91
                                    :ARG1 (m2 / monetary-quantity
                                          :quant 3
                                          :unit (d / dollar))
                                    :ARG2 (v / volume-quantity
                                          :quant 1
                                          :unit (g2 / gallon))))))))"
"(p / prepare-02
      :ARG0 (g / guy
            :mod (t / this))
      :ARG1 (w / we)
      :duration (t2 / time
            :mod (w2 / whole))
      :mod (p2 / person
            :name (n / name
                  :op1 ""Jakegyllenhaal"")))"
"(s / say-01
      :ARG0 (p / person
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (p2 / person
                        :name (n / name
                              :op1 ""Junior""))
                  :ARG2 (f / father)))
      :ARG1 (a / and
            :op1 (g / go-02
                  :mode imperative
                  :polite +
                  :ARG0 p2
                  :ARG4 (s2 / supermarket))
            :op2 (g2 / get-01
                  :mode imperative
                  :polite +
                  :ARG0 p2
                  :ARG1 (s3 / something)
                  :ARG4 p2))
      :ARG2 p2)"
"(r / remain-01
      :ARG1 (p / price-01
            :ARG1 (g / gold))
      :ARG3 (s / steady)
      :concession (h / hopeful-03
            :ARG1 (s2 / stimulate-01
                  :ARG0 (d / disease
                        :name (n / name
                              :op1 ""coronavirus"")))
            :ARG1-of (ii / increase-01)))"
"(m / multi-sentence
      :snt1 (h / hi
            :mode expressive)
      :snt2 (a / available-02
            :ARG2 (p / product
                  :ARG0-of (s / sanitize-01
                        :ARG1 (h2 / hand))
                  :mod (o / organic)
                  :poss (p2 / person
                        :ARG0-of (h3 / have-rel-role-91
                              :ARG1 (ii / i)
                              :ARG2 (w / wife))))
            :location (h4 / here)
            :time (n / now)))"
"(ii / increase-01
      :ARG0 (g / government-organization
            :ARG0-of (g2 / govern-01
                  :ARG1 (c / country
                        :name (n / name
                              :op1 ""Israel""))))
      :ARG1 (r / restrict-01)
      :ARG1-of (c2 / cause-01
            :ARG0 (c3 / coronavirus))
      :manner (f / fine-01
            :ARG2 (p / person
                  :ARG0-of (g3 / go-02
                        :ARG4 (o / or
                              :op1 (w / work-01
                                    :ARG0 p)
                              :op2 (s / supermarket))))))"
"(f / fill-01
      :ARG0 (a / and
            :op1 (d / distiller)
            :op2 (b / brewery)
            :mod (t / this)
            :ARG1-of (l / local-02))
      :ARG1 (v / void)
      :manner (o / offer-01
            :ARG0 a
            :ARG1 (a2 / and
                  :op1 (d2 / deliver-01
                        :ARG0 a
                        :ARG1 (a3 / and
                              :op1 (w / wine)
                              :op2 (l2 / liquor)))
                  :op2 (p / pick-up-04
                        :ARG0 a
                        :ARG1 (o2 / order-02)))))"
"(l / look-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Niki"")
            :ARG0-of (h / have-org-role-91
                  :ARG1 (c / company
                        :name (n2 / name
                              :op1 ""Contentworks""))
                  :ARG2 (d / director)))
      :ARG1 (t / thing
            :manner-of (p2 / possible-01
                  :ARG1 (v / victim
                        :mod (n3 / next)
                        :domain (p3 / price-01
                              :ARG1 (o / oil)
                              :mod (g / globe))
                        :poss (a / and
                              :op1 (v2 / virus
                                    :name (n4 / name
                                          :op1 ""Coronavirus""))
                              :op2 (m / megalomaniac))))))"
"(t / thing
      :quant 10
      :ARG1-of (k / know-01
            :ARG0 (y / you)
            :ARG1-of (n / need-01
                  :ARG0 y)
            :topic (r / real-estate
                  :location (c / country
                        :name (n2 / name
                              :op1 ""India"")))
            :time (a / aftermath-01
                  :ARG1 (c2 / coronavirus))))"
"(t / talk-01
      :ARG0 (o / organization
            :name (n / name
                  :op1 ""The""
                  :op2 ""Consumer""
                  :op3 ""Brands""
                  :op4 ""Association"")
            :ARG1-of (h / have-org-role-91
                  :ARG0 (a / and
                        :op1 (c / company
                              :name (n2 / name
                                    :op1 ""Target""))
                        :op2 (c2 / company
                              :name (n3 / name
                                    :op1 ""Clorox"")))
                  :ARG2 (m / member)))
      :ARG1 (s / slash
            :op1 (b / ban-01
                  :ARG1 (e / export-01
                        :ARG1 (ii / item
                              :ARG1-of (c3 / critical-02)
                              :mod (p / product
                                    :name (n4 / name
                                          :op1 ""COVID-19""))
                              :example (a2 / and
                                    :op1 (p2 / painkiller
                                          :mod (g / generic))
                                    :op2 (m2 / mask
                                          :mod g)))))
            :op2 (l / limit-01
                  :ARG1 e)
            :location (c4 / country
                  :mod (o2 / other)))
      :ARG2 (a3 / and
            :op1 (g2 / government-organization
                  :name (n5 / name
                        :op1 ""USTR""))
            :op2 (g3 / government-organization
                  :name (n6 / name
                        :op1 ""State""
                        :op2 ""Department"")))
      :mod (a4 / also))"
"(m / multi-sentence
      :snt1 (a / ask-02
            :ARG1 (w / wear-01
                  :ARG0 (w2 / we)
                  :ARG1 (m2 / mask)
                  :location (a2 / and
                        :op1 (p / place
                              :ARG1-of (p2 / public-02))
                        :op2 (s / store
                              :mod (g / grocery))
                        :op3 (e / et-cetera)))
            :ARG2 w2
            :time (n / now))
      :snt2 (s2 / stream-03
            :polarity -
            :ARG0 (ii / i)
            :medium (p3 / publication
                  :name (n2 / name
                        :op1 ""Twitch""))
            :duration (a3 / awhile)
            :time (s3 / save-02
                  :ARG0 ii
                  :ARG1 (w3 / world)))
      :snt3 (s4 / stay-01
            :ARG1 (y / you)
            :ARG3 (s5 / safe-01
                  :ARG1 y)
            :location (o / out-there))
      :snt4 (p4 / person
            :name (n3 / name
                  :op1 ""COVID19""))
      :snt5 p4
      :name (n4 / name
            :op1 ""Covid_19"")
      :snt6 s4
      :ARG1 y
      :location (h / home)
      :snt7 (o2 / organization
            :name (n5 / name
                  :op1 ""CoronavirusUSA"")))"
"(m / multi-sentence
      :snt1 (ii / include-91
            :ARG1 (t / this)
            :ARG2 (l / list-01
                  :ARG1-of (s / see-01
                        :ARG0 (y / you)
                        :time (d / date-entity
                              :year 2020))
                  :ARG1-of (h / have-degree-91
                        :ARG2 (ii2 / important-01
                              :ARG1 l)
                        :ARG3 (m2 / most))))
      :snt2 (s2 / stand-11
            :ARG0 (g / government-organization
                  :ARG0-of (g2 / govern-01))
            :ARG2 (p / prevent-01
                  :ARG0 g
                  :ARG1 (c / company)
                  :ARG2 (h2 / hike-02
                        :ARG0 c
                        :ARG1 (p2 / price-01
                              :ARG1 (a / and
                                    :op1 (f / formula
                                          :mod (b / baby))
                                    :op2 (p3 / paper
                                          :mod (t2 / toilet))
                                    :op3 (r / rice)
                                    :op4 (o / oil
                                          :purpose (c2 / cook-01))
                                    :op5 (ii3 / item
                                          :mod (h3 / household)
                                          :ARG1-of (h4 / have-degree-91
                                                :ARG2 (b2 / basic)
                                                :ARG3 (m3 / more)))))
                        :ARG5 (u / up)))
            :polarity (a2 / amr-unknown))
      :snt3 (p4 / product
            :name (n / name
                  :op1 ""COVID19SA"")))"
"(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (h / have-03
                  :ARG0 (a / and
                        :op1 (h2 / hotel)
                        :op2 (r / restaurant)
                        :op3 (p2 / place
                              :mod (o / other))
                        :quant (m2 / many)
                        :ARG1-of (o2 / obligate-01
                              :ARG2 (c / close-01
                                    :ARG1 a)))
                  :ARG1 (o3 / or
                        :op1 (f / food)
                        :op2 (s / stock)
                        :ARG0-of (k / keep-01
                              :polarity -))))
      :snt2 (p3 / possible-01
            :ARG1 (p4 / put-03
                  :ARG0 (t / they)
                  :ARG1 (ii / it)
                  :ARG2 (u / use-01
                        :ARG0 t
                        :ARG1 ii
                        :ARG1-of (g / good-02))
                  :ARG1-of (ii2 / instead-of-91
                        :ARG2 (o4 / obligate-01
                              :ARG1 t
                              :ARG2 (d / discard-01
                                    :ARG0 t
                                    :ARG1 ii))))
            :manner (w / way
                  :mod (a2 / any)))
      :snt3 (t2 / thing
            :ARG1-of (t3 / think-01)
            :mod (j / just)))"
"(p / possible-01
      :ARG1 (a / attribute-01
            :ARG1 (m / movement-07
                  :ARG1 (p2 / price-01
                        :location (c / country-region
                              :name (n / name
                                    :op1 ""Western""
                                    :op2 ""Canada"")))
                  :time (r / recent))
            :ARG2 (l / lock-down-06
                  :ARG1 c
                  :ARG1-of (c2 / cause-01
                        :ARG0 (l2 / law
                              :name (n2 / name
                                    :op1 ""COVID""
                                    :op2 19))))))"
"(h / hover-01
      :ARG1 (t / thing
            :ARG2-of (p / price-01
                  :ARG1 (n / natural-gas
                        :mod (c / country
                              :name (n2 / name
                                    :op1 ""U.S."")))))
      :ARG2 (n3 / near-01
            :ARG1 t
            :ARG2 (l / low-04
                  :ARG1 t
                  :mod (r / record))))"
"(m / multi-sentence
      :snt1 (s / see-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (p / product)
            :location (s2 / shelf
                  :poss (c / company
                        :name (n / name
                              :op1 ""Tesco"")))
            :duration (m2 / multiple
                  :op1 (t / temporal-quantity
                        :quant 1
                        :unit (d / day))))
      :snt2 (c2 / compare-01
            :ARG1 (c3 / company
                  :name (n2 / name
                        :op1 ""Tesco"")
                  :ARG1-of (l / local-02)
                  :mod (t2 / this))
            :ARG2 (s3 / supermarket
                  :name (n3 / name
                        :op1 ""Covid_19"")
                  :mod (c4 / country
                        :name (n4 / name
                              :op1 ""Iran"")))))"
"(h / have-degree-91
      :ARG1 (n / now)
      :ARG2 (s / soon)
      :ARG3 (t / too)
      :ARG6 (s2 / say-01
            :ARG1 (t2 / thing
                  :ARG1-of (r / represent-01
                        :ARG0 (n2 / number
                              :mod (t3 / this))))))"
"(c / contrast-01
      :ARG1 (g / go-01
            :ARG1 (c2 / company
                  :name (n / name
                        :op1 ""Amazon""))
            :ARG3 (c3 / convenient)
            :ARG4 (e / essential)
            :time (p / pandemic
                  :mod (c4 / coronavirus)))
      :ARG2 (c5 / cost-01
            :ARG2 (a / amr-unknown)
            :ARG3 c2))"
"(p / pride-01
      :ARG0 (ii / i)
      :ARG1 (a / and
            :op1 (c / country
                  :name (n / name
                        :op1 ""El""
                        :op2 ""Salvador"")
                  :poss ii)
            :op2 (p2 / precaution-02
                  :ARG0 (a2 / and
                        :op1 (g / government-organization
                              :ARG0-of (g2 / govern-01))
                        :op2 (p3 / person
                              :mod (e / everyday)))
                  :ARG2 (p4 / prevent-01
                        :ARG0 a2
                        :ARG1 (d / disease
                              :name (n2 / name
                                    :op1 ""Covid-19"")))))
      :degree (s / so))"
"(m / multi-sentence
      :snt1 (s / sensation
            :mod (s2 / strange)
            :domain (p / person
                  :ARG0-of (s3 / stock-01
                        :ARG1 (s4 / store
                              :mod (g / grocery))
                        :time (c / crisis
                              :mod (c2 / city
                                    :name (n / name
                                          :op1 ""Corona""))))))
      :snt2 (t / thank-01
            :ARG1 (ii / i)
            :ARG1-of (r / resemble-01
                  :ARG2 (p2 / person
                        :ARG0-of (h / have-org-role-91
                              :ARG2 (v / veteran))
                        :ARG1-of (r2 / return-01
                              :ARG3 (w / war))))
            :ARG1-of (c3 / cause-01
                  :ARG0 (p3 / put-01
                        :ARG0 ii
                        :ARG1 (p4 / paper
                              :purpose (t2 / toilet))
                        :ARG2 (s5 / shelf)
                        :mod (j / just)))))"
"(m / make-01
      :ARG0 (w / we)
      :ARG1 (p / pact
            :topic (h / have-06
                  :ARG0 w
                  :ARG1 (m2 / meal
                        :mod (f / final))
                  :mod (t / together)
                  :condition (f2 / find-01
                        :ARG0 w
                        :ARG1 (p2 / pizza
                              :ARG1-of (f3 / freeze-01))
                        :location (m3 / market
                              :name (n / name
                                    :op1 ""Sainsbury's"")))))
      :ARG2 (p3 / person
            :name n
            :op1 ""Space""
            :op2 ""Daddy""))"
"(r / recommend-01
      :ARG1 (w / wash-01
            :ARG0 (y / you)
            :ARG1 (p / produce
                  :poss y)))"
"(r / respond-01
      :ARG0 (p / person
            :ARG0-of (c / consume-01))
      :ARG1 (e / event
            :name (n / name
                  :op1 ""COVID19""))
      :ARG2 (a / and
            :op1 (d / distance-01
                  :ARG0 p
                  :ARG2 (s / social))
            :op2 (w / work-01
                  :ARG0 p
                  :manner (r2 / remote))
            :op3 (s2 / stay-01
                  :ARG1 p
                  :location (h / home)))
      :location (a2 / around
            :op1 (w2 / world)))"
"(ii / include-91
      :ARG1 (a / article
            :topic (c / coronavirus))
      :ARG2 (s / series
            :consist-of (t / this))
      :ARG3 (o / ordinal-entity
            :value 2))"
"(e / enjoy-01
      :ARG0 (ii / i)
      :ARG1 (a / and
            :op1 (d / describe-01
                  :ARG0 ii
                  :ARG1 (t / trip-03
                        :ARG1 (s / supermarket)
                        :mod (a2 / any))
                  :ARG2 (h / have-condition-91
                        :ARG1 (o / out-06
                              :ARG1 ii
                              :ARG2 (b / buy-01
                                    :ARG0 ii
                                    :manner (p / panic-01)))
                        :ARG2 (n / need-01
                              :ARG0 (y / you)
                              :ARG1 ii)))
            :op2 (r / return-01
                  :ARG1 ii
                  :accompanier (ii2 / item
                        :quant 6
                        :mod (u / usual))
                  :time (t2 / then))))"
"(c / contrast-01
      :ARG1 (ii / impact-01
            :ARG0 (p / pandemic
                  :name (n / name
                        :op1 ""COVID-19"")
                  :mod (g / globe))
            :ARG1 (e / economy
                  :location (a / across
                        :op1 (g2 / globe)))
            :manner (d / dramatic))
      :ARG2 (p2 / possible-01
            :ARG1 (a2 / affect-01
                  :ARG0 (f / fall-01
                        :ARG1 (p3 / price-01
                              :ARG1 (o / oil))
                        :mod (s / simultaneous))
                  :ARG1 (w / world-region
                        :name (n2 / name
                              :op1 ""Middle""
                              :op2 ""East""))
                  :mod (p4 / particular))
            :ARG1-of (c2 / cause-01
                  :ARG0 f)))"
"(p / place
      :mod (g / great)
      :location-of (f / find-01
            :ARG1 (d / deal
                  :prep-on (ii / item
                        :mod (v / variety))))
      :domain (w / website
            :name (n / name
                  :op1 ""Global""
                  :op2 ""Village""
                  :op3 ""Online""
                  :op4 ""Shopping"")))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (v / volunteer-01
                  :ARG0 (p / person
                        :mod (c / country
                              :name (n / name
                                    :op1 ""Finnistan""))
                        :quant (n2 / number
                              :mod (l / large)))
                  :ARG1 (g / go-02
                        :ARG0 p
                        :ARG4 (s / store
                              :mod (g2 / grocery))
                        :beneficiary (p2 / person
                              :mod (o / other))))
            :op2 (s2 / start-01
                  :ARG0 p
                  :ARG1 (c2 / campaign-01
                        :ARG0 p
                        :ARG1 (h / help-01
                              :ARG0 p
                              :ARG1 (a2 / and
                                    :op1 (a3 / artist)
                                    :op2 (p3 / person
                                          :mod (o2 / other)
                                          :ARG0-of (h2 / have-03
                                                :ARG1 (l2 / livelihood
                                                      :ARG1-of (t / threaten-01
                                                            :ARG0 (c3 / crisis))))))))))
      :snt2 (a4 / and
            :op1 (s3 / state-01
                  :ARG0 (p4 / person)
                  :ARG1 (w / we
                        :location (t2 / this)
                        :mod (t3 / together)))
            :op2 (f / feel-01
                  :ARG0 p4
                  :ARG1 (b / be-located-at-91
                        :ARG1 w
                        :ARG2 t2))))"
"(c / criticize-01
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG1 (p2 / political-party
                        :name (n / name
                              :op1 ""Republican""))))
      :ARG1 (b / bill
            :name (n2 / name
                  :op1 ""COVID""
                  :op2 19)
            :ARG0-of (r / relieve-01)
            :poss (p3 / person
                  :name (n3 / name
                        :op1 ""Nancy""
                        :op2 ""Pelosi"")))
      :ARG2 (c2 / call-01
            :ARG0 p
            :ARG1 b
            :ARG2 (l / list
                  :mod (w / wish-01))))"
"(r / report-01
      :ARG1 (s / sell-01
            :ARG0 (p / person)
            :ARG1 (a / and
                  :op1 (r2 / roll
                        :purpose (t / toilet))
                  :op2 (p2 / product
                        :ARG0-of (s2 / sanitize-01
                              :ARG1 (h / hand)))
                  :ARG2-of (p3 / price-01
                        :mod (e / exorbitant))
                  :ARG1-of p3)
            :location (c / city
                  :name (n / name
                        :op1 ""Enniskillen"")))
      :time (d / date-entity
            :year 2020
            :month 3
            :day 3))"
"(m / multi-sentence
      :snt1 (b / broadcast-program
            :name (n / name
                  :op1 ""ABCNews""))
      :snt2 (a / and
            :op1 (d / difficult
                  :domain (d2 / day
                        :part-of (l / life
                              :poss (p / person
                                    :ARG0-of (w / work-01
                                          :ARG2 (s / supermarket)))
                              :time (p2 / pandemic
                                    :mod (c / coronavirus)))))
            :op2 (t / tire-01
                  :ARG0 d2)))"
"(t / thank-01
      :ARG1 (p / person
            :name (n / name
                  :op1 ""Brad""
                  :op2 ""Pisley""))
      :ARG2 (m / music
            :poss p))"
"(a / article
      :ARG1-of (e / excellent-02)
      :domain (t / this)
      :topic (a2 / and
            :op1 (ii / impact-01
                  :ARG0 (p / program
                        :name (n / name
                              :op1 ""COVID-19""))
                  :ARG1 (s / system
                        :mod (f / food)))
            :op2 (p2 / person
                  :ARG0-of (f2 / farm-01))
            :op3 s
            :op4 (r / respond-01
                  :ARG1 ii
                  :ARG2 (p3 / policy-01))))"
"(j / join-04
      :ARG0 (p / person
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (ii / i)
                  :ARG2 (s / son)))
      :ARG1 (r / rank
            :consist-of (h2 / hero
                  :ARG1-of (s2 / save-02
                        :polarity -)
                  :location (w / war-01
                        :ARG2 (v / virus
                              :mod (c / coronavirus)))))
      :time (t / today)
      :ARG1-of (c2 / cause-01
            :ARG0 (h3 / hire-01
                  :ARG1 p
                  :ARG2 (p2 / person
                        :ARG0-of (s3 / stock-01))
                  :location (s4 / store
                        :mod (g / grocery)
                        :ARG1-of (l / local-02)
                        :poss (w2 / we)))))"
"(a / and
      :op1 (c / create-01
            :ARG0 (m / media)
            :ARG1 (p / panic-01)
            :purpose (b / benefit-01
                  :ARG1 (c2 / corporation
                        :mod (b2 / big))))
      :op2 (m2 / make-out-23
            :ARG0 m
            :ARG1 (ii / it)
            :ARG2 (s / short-06
                  :ARG2 (f / food)))
      :op3 (a2 / allow-01
            :ARG0 m
            :ARG1 (b3 / buy-01
                  :ARG0 (p2 / person)
                  :manner (b4 / bulk))
            :time (t / then)))"
"(c / cap-02
      :ARG0 (g / government-organization
            :ARG0-of (g2 / govern-01))
      :ARG1 (m / monetary-quantity
            :ARG2-of (p / price-01
                  :ARG1 (p2 / product
                        :ARG0-of (s / sanitize-01
                              :ARG1 (h / hand)))))
      :purpose (p3 / prevent-01
            :ARG0 g
            :ARG1 (o / overcharge-01
                  :ARG0 (p4 / person
                        :ARG0-of (v / vend-01))
                  :time (b / buy-01
                        :ARG0 p4
                        :manner (p5 / panic-01
                              :ARG0 (t / threaten-01
                                    :ARG0 (v2 / virus
                                          :mod (c2 / coronavirus))))))))"
"(w / warn-01
      :ARG0 (s / scientist)
      :ARG1 (l / linger-01
            :ARG1 (c / coronavirus)
            :location (a / air)
            :ARG1-of (h / have-degree-91
                  :ARG2 (l2 / long-03)
                  :ARG3 (m / more)
                  :ARG4 (t / think-01
                        :time (p / previous)))))"
"(s / suppose-02
      :polarity -
      :ARG1 (w / we)
      :ARG2 (g / gather-03
            :ARG0 w
            :manner (g2 / group
                  :consist-of (a / at-least
                        :op1 (p / person
                              :quant 10))))
      :ARG2-of (e / except-01
            :ARG1 (p2 / person
                  :quant (m / multiple
                        :op1 100)
                  :ARG1-of (c / come-01
                        :ARG4 (t / together)
                        :frequency (r / rate-entity-91
                              :ARG4 (d / date-entity
                                    :dayperiod (m2 / morning)))
                        :purpose (b / buy-01
                              :ARG0 p2
                              :ARG2 (s2 / store
                                    :mod (g3 / grocery))
                              :manner (p3 / panic-01
                                    :ARG1 p2))))))"
"(c / contrast-01
      :ARG1 (r / rise-01
            :ARG1 (p / price-01
                  :ARG1 (h / house))
            :ARG2 (p2 / percentage-entity
                  :value 3)
            :mod (y / year-on-year)
            :time (d / date-entity
                  :month 3))
      :ARG2 (p3 / predict-01
            :ARG0 (p4 / person
                  :ARG1-of (e / expert-01))
            :ARG1 (h2 / have-degree-91
                  :ARG1 (g / gauge-01
                        :ARG1 (ii / impact-01
                              :ARG0 (p5 / product
                                    :name (n / name
                                          :op1 ""Covid""
                                          :op2 19))
                              :ARG1 (m / market
                                    :mod (p6 / property))))
                  :ARG2 (e2 / early)
                  :ARG3 (t / too))))"
"(q / question-01
      :ARG0 (ii / i)
      :ARG1 (d / deliver-01
            :ARG1 (g / grocery)
            :ARG2 (p / person
                  :ARG0-of (ii2 / isolate-01)
                  :ARG1-of ii2)
            :mod (o / online)))"
"(h / have-concession-91
      :ARG1 (o / obligate-01
            :ARG1 (d / diva)
            :ARG2 (d2 / do-02
                  :ARG0 d
                  :ARG1 (t / thing
                        :ARG1-of (d3 / do-02
                              :ARG0 d))))
      :ARG2 (f / feel-01
            :polarity -
            :ARG0 (g / go-02
                  :ARG4 (s / store
                        :mod (g2 / grocery)))
            :ARG1 (g3 / glamorous)
            :time (e / ever)))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (o / organization
                  :name (n / name
                        :op1 ""COVID19""))
            :op2 (o2 / organization
                  :name (n2 / name
                        :op1 ""Coronavirus"")))
      :snt2 (l / learn-01
            :ARG0 (ii / i)
            :ARG1 (a2 / and
                  :li 7
                  :op1 (ii2 / increase-01
                        :ARG1 (m2 / monetary-quantity
                              :ARG2-of (p / price-01
                                    :ARG1 (a3 / and
                                          :op1 (v / vegetable)
                                          :op2 (f / fruit)))))
                  :op2 (h / hone-01
                        :ARG0 ii
                        :ARG1 (s / skill
                              :mod (n3 / negotiate-01)
                              :poss ii)))
            :time (d / day
                  :mod (o3 / organization
                        :name (n4 / name
                              :op1 ""Covid_19""))))
      :snt3 (p2 / possible-01
            :li 8
            :ARG1 (l2 / lead-03
                  :ARG0 (c / chore
                        :mod (h2 / household)))))"
"(c / classify-01
      :ARG0 (s / state
            :quant (s2 / some))
      :ARG1 (p / person
            :ARG0-of (w / work-01
                  :ARG2 (s3 / store
                        :mod (g / grocery))))
      :ARG2 (p2 / person
            :ARG1-of (e / employ-01
                  :mod (e2 / emergency)))
      :time (n / now)
      :ARG0-of (m / make-02
            :ARG1 (q / qualify-02
                  :ARG1 p
                  :ARG2 (b / benefit
                        :mod (c2 / certain)))))"
"(r / refuse-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Kroger""))
      :ARG1 (g / give-01
            :ARG0 c
            :ARG1 (l / leave-15
                  :ARG1-of (p / pay-01)
                  :ARG1-of (s / sick-05))
            :ARG2 (p2 / person
                  :ARG1-of (e / employ-01
                        :ARG0 c)
                  :mod (a / all)))
      :concession (b / be-located-at-91
            :ARG1 c
            :ARG2 (l2 / line
                  :mod (f / front)
                  :poss (p3 / pandemic
                        :mod (t / this)))))"
"(m / multi-sentence
      :snt1 (o / open-09
            :ARG1 (s / store
                  :mod (o2 / online)
                  :poss (w / we))
            :frequency (r / rate-entity-91
                  :ARG1 (t / temporal-quantity
                        :quant 24
                        :unit (h / hour))
                  :ARG2 (t2 / temporal-quantity
                        :quant 1
                        :unit (d / day)))
            :frequency (r2 / rate-entity-91
                  :ARG1 (t3 / temporal-quantity
                        :quant 7
                        :unit (d2 / day))
                  :ARG2 (t4 / temporal-quantity
                        :quant 1
                        :unit (w2 / week)))
            :concession (c / close-01
                  :ARG1 (l / location
                        :mod (r3 / retail-01
                              :ARG0 w))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (l2 / law
                              :name (n / name
                                    :op1 ""CODID""
                                    :op2 19)))))
      :snt2 (a / and
            :op1 (s2 / stop-by-02
                  :mode imperative
                  :ARG0 (y / you))
            :op2 (p / purchase-01
                  :mode imperative
                  :ARG0 y
                  :ARG1 (w3 / wig
                        :poss (w4 / we)
                        :ARG1-of (s3 / shit-01
                              :polarity -)))))"
"(g / go-01
      :ARG1 (w / we
            :part (a / ass))
      :ARG3 (c / compare-01
            :ARG0 w
            :ARG1 (p / price))
      :ARG4 (w2 / wonder-01
            :ARG0 w
            :ARG1 (t / truth-value
                  :polarity-of (p2 / possible-01
                        :ARG1 (w3 / wipe-01
                              :ARG0 w
                              :ARG1 a
                              :ARG2 (t2 / thing
                                    :ARG1-of (l / leave-17
                                          :ARG2 (s / shelf
                                                :mod (s2 / supermarket))))))))
      :duration (t3 / time
            :ARG1-of (s3 / short-07
                  :mod (s4 / such))))"
"(a / and
      :op1 (ii / increase-01
            :ARG0 (a2 / and
                  :op1 (p / person
                        :ARG0-of (h / have-org-role-91
                              :ARG2 (p2 / president)))
                  :op2 (p3 / political-party
                        :name (n / name
                              :op1 ""GOP"")))
            :ARG1 (c / check
                  :mod (p4 / package
                        :name (n2 / name
                              :op1 ""COVID-19"")
                        :ARG0-of (s / stimulate-01)))
            :ARG4 (m / monetary-quantity
                  :quant 4000
                  :unit (d / dollar))
            :beneficiary (p5 / person
                  :mod (c2 / country
                        :name (n3 / name
                              :op1 ""America""))
                  :mod (a3 / all)))
      :op2 (ii2 / issue-01
            :ARG0 a2
            :ARG1 c
            :frequency (r / rate-entity-91
                  :ARG3 (t / temporal-quantity
                        :quant 1
                        :unit (m2 / month)))
            :duration (u / until
                  :op1 (c3 / create-01
                        :ARG1 (v / vaccine)))
            :purpose (o / open-01
                  :ARG0 a2
                  :ARG1 (e / economy
                        :poss (w / we)
                        :ARG1-of (b / base-02
                              :ARG2 (p6 / person
                                    :ARG0-of (c4 / consume-01)))))))"
"(f / feel-01
      :ARG1 (a / affect-01
            :ARG0 (t / thing
                  :name (n / name
                        :op1 ""COVID-19""))
            :ARG1 (e / economy))
      :time (c / continue-01
            :ARG0 (a2 / and
                  :op1 (g / government-organization
                        :ARG0-of (g2 / govern-01))
                  :op2 (o / organization))
            :ARG1 (w / work-01
                  :ARG0 a2
                  :ARG1 (a3 / and
                        :op1 (c2 / contain-02
                              :ARG0 a2
                              :ARG1 t)
                        :op2 (s / stem-01
                              :ARG0 a2
                              :ARG1 (t2 / toll
                                    :mod (h / humanitarian)
                                    :ARG1-of (g3 / grow-01)
                                    :ARG1-of (e2 / exact-01
                                          :ARG0 t))))))
      :mod (a4 / also))"
"(t / tell-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Boris""
                  :op2 ""Johnson""))
      :ARG1 (a / and
            :op1 (d / distance-01
                  :ARG0 (p2 / person)
                  :ARG1 p2
                  :mod (s / social))
            :op2 (a2 / avoid-01
                  :ARG0 p2
                  :ARG1 (a3 / and
                        :op1 (p3 / pub)
                        :op2 (r / restaurant)))
            :op3 (e / et-cetera))
      :ARG2 p2)"
"(a / ask-02
      :ARG0 (d / doctor
            :name (n / name
                  :op1 ""Deborah""
                  :op2 ""Birx""))
      :ARG1 (s / stop-01
            :ARG0 (g / generation
                  :ARG1-of (h / have-degree-91
                        :ARG2 (y / young)
                        :ARG3 (m / more)))
            :ARG1 (a2 / and
                  :op1 (g2 / go-02
                        :ARG0 g
                        :ARG4 (a3 / and
                              :op1 (p / place
                                    :ARG1-of (p2 / public-02))
                              :op2 (b / bar)
                              :op3 (r / restaurant)))
                  :op2 (s2 / spread-03
                        :ARG0 g
                        :ARG1 (v / virus
                              :mod (a4 / asymptomatic))
                        :ARG2 (a5 / and
                              :op1 (c / countertop)
                              :op2 (k / knob)
                              :op3 (s3 / store
                                    :mod (g3 / grocery))
                              :op4 (c2 / cart
                                    :mod g3)))))
      :ARG2 g)"
"(m / multi-sentence
      :snt1 (w / wonder-01
            :ARG0 (ii / i)
            :ARG1 (t / truth-value
                  :polarity-of (b / brainwash-01
                        :ARG1 (w2 / we)
                        :ARG2 (b2 / buy-01
                              :ARG0 w2
                              :ARG1 (p / paper
                                    :purpose (t2 / toilet))
                              :manner (p2 / panic-01
                                    :ARG1 w2
                                    :time (b3 / before
                                          :op1 (f / food)
                                          :mod (e / even)))))))
      :snt2 (c / contrast-01
            :ARG1 (p3 / possible-01
                  :ARG1 (t3 / thing
                        :ARG1-of (c2 / comment-01)
                        :mod (s / stupid)))
            :ARG2 (s2 / sense-02
                  :polarity -
                  :ARG1 (r / rush-01
                        :mod (t4 / toilet)
                        :mod (p4 / product
                              :name (n / name
                                    :op1 ""COVID""
                                    :op2 19))))))"
"(d / disturb-01
      :ARG0 (s / spend-01
            :ARG0 (g / government-organization
                  :ARG0-of (g2 / govern-01
                        :ARG1 (c / country
                              :name (n / name
                                    :op1 ""South""
                                    :op2 ""Africa""))))
            :ARG1 (b / buy-01
                  :ARG0 g
                  :ARG1 (a / and
                        :op1 (m / mask)
                        :op2 (t / thermometer))
                  :ARG2 (c2 / country
                        :name (n2 / name
                              :op1 ""China"")))
            :ARG3 (m2 / multiple
                  :op1 (m3 / monetary-quantity
                        :quant 1000000
                        :unit (d2 / dollar)))
            :time (ii / inflate-01
                  :ARG0 (p / person
                        :ARG0-of (h / have-org-role-91
                              :ARG2 (o / official
                                    :topic (p2 / procure-01)))
                        :ARG1-of (c3 / corrupt-01))
                  :ARG1 (t2 / thing
                        :ARG2-of (p3 / price-01))
                  :purpose (b2 / benefit-01
                        :ARG1 p))))"
"(h / hero
      :domain (p / person
            :mod (a / all)))"
"(ii / include-01
      :ARG1 (p / price-01
            :ARG1 (f / fly-01)
            :ARG1-of (ii2 / increase-01
                  :ARG1-of (c / cause-01
                        :ARG0 (d / decrease-01
                              :ARG1 (t / travel-01
                                    :ARG1-of (n / need-01
                                          :polarity -))))))
      :ARG2 (p2 / predict-01
            :ARG1 (w / world
                  :time (a / after
                        :op1 (e / event
                              :name (n2 / name
                                    :op1 ""Covid""
                                    :op2 19))))))"
"(r / recommend-01
      :ARG1 (f / focus-01
            :ARG0 (p / person
                  :ARG0-of (s / sell-01))
            :ARG2 (l / level
                  :mod (ii / interest-01
                        :ARG1 (p2 / person
                              :ARG0-of (c / consume-01))))))"
"(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (s / spread-03
                  :ARG1 (d / disease
                        :name (n / name
                              :op1 ""Coronavirus""))
                  :medium (m2 / mail))
            :polarity (a / amr-unknown))
      :snt2 (n2 / need-01
            :ARG0 (y / you)
            :ARG1 (k / know-01
                  :ARG0 y
                  :ARG1 (t / this)
                  :topic (r / risk-01
                        :ARG2 (d2 / disease
                              :name (n3 / name
                                    :op1 ""COVID-19""))
                        :prep-with (p2 / package
                              :mod (o / online))))
            :polarity (a2 / amr-unknown)))"
"(e / estimate-01
      :ARG0 (r / report
            :ARG1-of (n / new-01))
      :ARG1 (p / possible-01
            :ARG1 (r2 / run-out-05
                  :ARG1 (s / stock)
                  :ARG2 (a / and
                        :op1 (c / company
                              :ARG0-of (c2 / consume-01)
                              :mod (a2 / automotive))
                        :op2 (c3 / company
                              :ARG0-of (r3 / retail-01)))
                  :time (b / by
                        :op1 (e2 / end-01
                              :ARG1 (d / date-entity
                                    :month 4)))
                  :ARG1-of (c4 / cause-01
                        :ARG0 (d2 / disrupt-01
                              :ARG0 (p2 / pandemic
                                    :mod (c5 / coronavirus))
                              :ARG1 (c6 / chain
                                    :mod (s2 / supply-01))
                              :ARG1-of (c7 / cause-01
                                    :ARG0 a))))))"
"(r / respond-01
      :ARG0 (c / city
            :name (n / name
                  :op1 ""Toronto""))
      :ARG1 (l / law
            :name (n2 / name
                  :op1 ""COVID-19""))
      :ARG2 (e / exercise-01
            :ARG0 c
            :ARG1 (e2 / exempt-01
                  :ARG1 c
                  :ARG2 (b / bylaw))
            :purpose (a / allow-01
                  :ARG0 c
                  :ARG1 (d / deliver-01
                        :ARG1 (ii / inventory)
                        :frequency (r2 / rate-entity-91
                              :ARG1 (r3 / rate-entity-91
                                    :ARG1 (t / temporal-quantity
                                          :quant 24
                                          :unit (h / hour))
                                    :ARG2 (t2 / temporal-quantity
                                          :quant 1
                                          :unit (d2 / day)))
                              :ARG2 (r4 / rate-entity-91
                                    :ARG1 (t3 / temporal-quantity
                                          :quant 7
                                          :unit (d3 / day))
                                    :ARG2 (t4 / temporal-quantity
                                          :quant 1
                                          :unit (w / week))))))))"
"(s / since
      :op1 (b / break-out-30
            :ARG1 (d / disease
                  :name (n / name
                        :op1 ""Covid-19"")))
      :quant (m / much))"
"(m / multi-sentence
      :snt1 (o / obligate-01
            :ARG2 (g / go-02
                  :ARG0 (ii / i)
                  :ARG4 (s / store
                        :mod (g2 / grocery))))
      :snt2 (v / vote-01
            :ARG0 (f / family
                  :ARG1-of (h / have-org-role-91
                        :ARG0 (ii2 / i)
                        :ARG2 (m2 / member)))
            :ARG1 (r / recommend-01
                  :ARG1 (g3 / go-02
                        :ARG0 ii2))))"
"(f / fall-01
      :ARG1 (p / price-01
            :ARG1 (o / oil))
      :ARG1-of (c / cause-01
            :ARG0 (g / grow-01
                  :ARG1 (d / doubt-01
                        :ARG1 (d2 / deal-01
                              :ARG2 (c2 / cut-02
                                    :ARG1 (o2 / output)))))))"
"(r / return-01
      :ARG1 (ii / i)
      :ARG3 (t / travel-01
            :ARG0 ii)
      :ARG4 (h / home)
      :time (d / date-entity
            :weekday (f / friday))
      :ARG1-of (c / cause-01
            :ARG0 (o / outbreak-29)))"
"(d / decide-01
      :ARG0 (a / and
            :op1 (p / person
                  :name (n / name
                        :op1 ""John""
                        :op2 ""Cornyn""))
            :op2 (c / company
                  :name (n2 / name
                        :op1 ""MBS"")))
      :ARG1 (a2 / and
            :op1 (d2 / decrease-01
                  :ARG0 a
                  :ARG1 (p2 / produce-01))
            :op2 (ii / increase-01
                  :ARG0 a
                  :ARG1 (m / monetary-quantity
                        :ARG2-of (p3 / price-01))))
      :purpose (p4 / protect-01
            :ARG0 a
            :ARG1 (c2 / company
                  :mod (c3 / country
                        :name (n3 / name
                              :op1 ""America""))
                  :ARG1-of (f / face-01
                        :ARG0 (e / event
                              :name (n4 / name
                                    :op1 ""Covid_19""))))))"
"(m / multi-sentence
      :snt1 (s / sketch-01
            :ARG1 (t / this)
            :mod (b / bunny
                  :name (n / name
                        :op1 ""Psycho""
                        :op2 ""Bunny""))
            :time (w / week
                  :mod (d / date-entity
                        :year 2020))
            :topic (e / event
                  :name (n2 / name
                        :op1 ""The""
                        :op2 ""Year""
                        :op3 ""of""
                        :op4 ""The""
                        :op5 ""TP"")))
      :snt2 (a / and
            :op1 (p / publication
                  :name (n3 / name
                        :op1 ""CoronavirusNewYork""))
            :op2 (p2 / publication
                  :name (n4 / name
                        :op1 ""Coronavirus""))
            :op3 (p3 / publication
                  :name (n5 / name
                        :op1 ""COVID""))
            :op4 (p4 / publication
                  :name (n6 / name
                        :op1 ""Toilepaper""
                        :op2 ""Panic""))
            :op5 (p5 / publication
                  :name (n7 / name
                        :op1 ""psychobunnycomix""))
            :op6 (p6 / publication
                  :name (n8 / name
                        :op1 ""Michelewitchipoo""))))"
"(f / follow-02
      :ARG1 (r / rule
            :mod (d / distance-quantity
                  :quant 2
                  :unit (m / meter)))
      :mod (c / certain)
      :time (t / today)
      :location (o / outside
            :op1 (s / supermarket)))"
"(a / ask-01
      :ARG1 (a2 / amr-unknown
            :manner-of (k / keep-02
                  :ARG0 (y / you)
                  :ARG1 (s / safe-01
                        :ARG1 (p / person
                              :ARG2-of (s2 / staff-01
                                    :ARG1 (s3 / supermarket
                                          :mod (f / front-line)))))
                  :time (p2 / pandemic
                        :mod (d / disease
                              :name (n / name
                                    :op1 ""coronavirus""))
                        :mod (e / event
                              :name (n2 / name
                                    :op1 ""COVID19"")))))
      :ARG2 p
      :name (n3 / name
            :op1 ""BorisJohnson""))"
"(m / multi-sentence
      :snt1 (r / recommend-01
            :ARG1 (b / buy-01
                  :polarity -
                  :ARG0 (p / person
                        :mod (c / country
                              :name (n / name
                                    :op1 ""India"")))
                  :ARG1 (p2 / product
                        :mod (o / online)
                        :purpose (s / sanitizer))
                  :ARG1-of (r2 / regardless-91
                        :ARG2 (o2 / or
                              :op1 (p3 / person
                                    :mod (f / foreign))
                              :op2 (p4 / person
                                    :mod c)))))
      :snt2 (l / loot-01
            :ARG0 (c2 / company
                  :ARG0-of (m2 / market-01
                        :medium (o3 / online))
                  :mod (a / all)
                  :mod (t / this))
            :ARG1 (p5 / person
                  :mod (c3 / common))
            :manner (s2 / skyrocket-01
                  :ARG0 c2
                  :ARG1 (t2 / thing
                        :ARG2-of (p6 / price-01
                              :ARG1 (s3 / sanitizer)))
                  :time (t3 / try-01
                        :ARG0 (n2 / nation
                              :mod (e / entire))
                        :ARG1 (c4 / combat-01
                              :ARG0 n2
                              :ARG1 (c5 / criminal-organization
                                    :name (n3 / name
                                          :op1 ""COVID-19"")))
                        :mod (t4 / this)))))"
"(s / situation
      :time (c / current)
      :domain (t / tire-01
            :ARG1 (ii / i)
            :degree (v / very)))"
"(c / contrast-01
      :ARG1 (m / make-02
            :ARG0 (p / person
                  :ARG0-of (w / work-01)
                  :mod (w2 / wage
                        :ARG1-of (l / low-04)))
            :ARG1 (r / run-01
                  :ARG1 (s / society
                        :poss (w3 / we))))
      :ARG2 (m2 / make-02
            :polarity -
            :ARG0 (o / or
                  :op1 (b / banker)
                  :op2 (p2 / person
                        :ARG0-of (o2 / own-01
                              :ARG1 (l2 / land)))
                  :op3 (p3 / person
                        :ARG0-of (h / have-org-role-91
                              :ARG2 (o3 / officer
                                    :mod (c2 / chief)
                                    :mod (e / executive)))))
            :ARG1 r))"
"(c / call-02
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (p / person
            :ARG0-of (h / have-rel-role-91
                  :ARG1 y
                  :ARG2 (c2 / creditor)))
      :condition (a / and
            :op1 (a2 / affect-01
                  :ARG0 (c3 / coronavirus)
                  :ARG1 y
                  :manner (w / way
                        :mod (a3 / any)
                        :ARG2-of (ii / include-01
                              :ARG1 (o / or
                                    :op1 (l / lose-02
                                          :ARG0 y
                                          :ARG1 (j / job))
                                    :op2 (s / sick-05
                                          :ARG1 y)
                                    :op3 (a4 / affect-01
                                          :ARG0 (p2 / product
                                                :name (n / name
                                                      :op1 ""COVID-19""))
                                          :ARG1 (p3 / person
                                                :ARG0-of (h2 / have-rel-role-91
                                                      :ARG1 y
                                                      :ARG2 (m / member
                                                            :mod (f / family)))))))))
            :op2 (p4 / possible-01
                  :polarity -
                  :ARG1 (m2 / make-01
                        :ARG0 y
                        :ARG1 (o2 / or
                              :op1 (p5 / pay-01
                                    :ARG0 y
                                    :ARG2 (c4 / card
                                          :mod (c5 / credit)))
                              :op2 (p6 / pay-01
                                    :ARG0 y
                                    :ARG3 (m3 / mortgage-01
                                          :ARG0 y)))))
            :op3 (s2 / struggle-02
                  :ARG0 y
                  :ARG1 (m4 / means
                        :mod (f2 / finance)
                        :mod (o3 / other)))))"
"(c / come-01
      :ARG1 (p / product
            :name (n / name
                  :op1 ""Hugh's""
                  :op2 ""Homemade""
                  :op3 ""Soda""))
      :ARG4 (s / supermarket
            :ARG1-of (n2 / near-02
                  :ARG2 (y / you)))
      :time (s2 / soon))"
"(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (p2 / purchase-01
                  :ARG0 (y / you)
                  :ARG1 (t / thing
                        :ARG2-of (p3 / provision-02))
                  :ARG2 (m2 / market
                        :name (n / name
                              :op1 ""Maruthi""
                              :op2 ""Supermarket"")
                        :ARG1-of (n2 / near-02
                              :ARG2 (s / signal
                                    :mod (c / city
                                          :name (n3 / name
                                                :op1 ""Manapakkam"")))))))
      :snt2 (a / and
            :op1 (h / have-03
                  :ARG0 (t2 / they)
                  :ARG1 (e / everything
                        :ARG1-of (n4 / need-01
                              :ARG0 (y2 / you))))
            :op2 (o / open-09
                  :ARG1 (s2 / store)
                  :duration (d / date-interval
                        :op1 (d2 / date-entity
                              :time ""6:30"")
                        :op2 (d3 / date-entity
                              :time ""11:30""))))
      :snt3 (a2 / and
            :op1 (ii / in-place
                  :domain (p4 / policy-01
                        :ARG1 (d4 / distance-01
                              :ARG2 (d5 / distance-quantity
                                    :quant 1
                                    :unit (m3 / meter)))
                        :mod (s3 / strict)))
            :op2 (s4 / spray-01
                  :ARG1 (s5 / sanitizer))))"
"(s / seek-01
      :ARG0 (g / government-organization
            :ARG0-of (g2 / govern-01))
      :ARG1 (d / designate-01
            :ARG0 g
            :ARG1 (a / associate-01
                  :ARG2 (s2 / supermarket))
            :ARG2 (o / or
                  :op1 (p / person
                        :ARG0-of (r / respond-01
                              :ord (o2 / ordinal-entity
                                    :value 1)))
                  :op2 (p2 / person
                        :ARG0-of (h / have-org-role-91
                              :ARG2 (p3 / personnel
                                    :mod (e / emergency))))
                  :ARG1-of (e2 / extend-01))
            :duration (t / temporary)
            :purpose (p4 / prioritize-01
                  :ARG0 g
                  :ARG1 a
                  :ARG2 (r2 / receive-01
                        :ARG0 a
                        :ARG1 (a2 / and
                              :op1 (t2 / test
                                    :name (n / name
                                          :op1 ""COVID-19""))
                              :op2 (v / vaccine))))))"
"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (ii / isolate-01
                  :ARG1 (ii2 / i)
                  :location (c2 / city
                        :name (n / name
                              :op1 ""Bristol"")))
            :ARG2 (n2 / need-01
                  :ARG0 ii2
                  :ARG1 (g / get-01
                        :ARG0 ii2
                        :ARG1 (t / thing
                              :ARG1-of (s / supply-01))
                        :ARG4 (p / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG1 ii2
                                    :ARG2 (m2 / mum))
                              :age (t2 / temporal-quantity
                                    :quant 69
                                    :unit (y / year))
                              :ARG1-of (n3 / near-02
                                    :ARG2 (c3 / city
                                          :name (n4 / name
                                                :op1 ""Stroud"")))))))
      :snt2 (b / by-oneself
            :domain (s2 / she)
            :ARG1-of (c4 / cause-01
                  :ARG0 (d / die-01
                        :ARG1 (p2 / person
                              :ARG0-of (h2 / have-rel-role-91
                                    :ARG1 ii2
                                    :ARG2 (d2 / dad)))
                        :time (d3 / date-entity
                              :month 11)
                        :manner (s3 / sudden))))
      :snt3 (s4 / seem-01
            :ARG1 (f / full-09
                  :ARG1 (s5 / slot
                        :mod (s6 / supermarket)
                        :mod (a / all))))
      :snt4 (p3 / possible-01
            :ARG1 (h3 / help-01
                  :ARG0 (a2 / anyone))
            :polarity (a3 / amr-unknown)))"
"(ii / intensify-01
      :ARG1 (b / behave-01
            :ARG0 (p / person
                  :ARG0-of (c / consume-01)))
      :time (f / force-02
            :ARG0 (o / outbreak-29
                  :location (c2 / city
                        :name (n / name
                              :op1 ""Covid-19"")))
            :ARG1 (p2 / pattern-01
                  :ARG1 (s / shop-01)
                  :ARG1-of (n2 / new-01))))"
"(c / cap-01
      :ARG0 (g / government-organization
            :ARG0-of (g2 / govern-01))
      :ARG1 (t / thing
            :ARG2-of (p / price-01
                  :ARG1 (b / bottle
                        :ARG0-of (s / sanitize-01
                              :ARG1 (h / hand))
                        :quant (v / volume-quantity
                              :quant 200
                              :unit (m / milliliter)))))
      :ARG2 (m2 / monetary-quantity
            :quant 100
            :unit (r / rupee))
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (b2 / buy-01
                        :manner (p2 / panic-01))
                  :op2 (t2 / thing
                        :ARG2-of (p3 / price-01)
                        :ARG1-of (r2 / rise-01)))))"
"(m / multi-sentence
      :snt1 (a / advantage-01
            :ARG1 (ii / increase-01
                  :ARG1 (m2 / monetary-quantity
                        :ARG2-of (p / price-01
                              :ARG1 (s / stock)))
                  :ARG4 (r / rate
                        :mod (e / exorbitant))))
      :snt2 (a2 / and
            :op1 (p2 / possible-01
                  :polarity -
                  :ARG1 (a3 / afford-01
                        :ARG0 (p3 / person
                              :ARG1-of (ii2 / include-91
                                    :ARG2 (p4 / person
                                          :ARG1-of (n / neighbor-01
                                                :ARG2 (y / you))))
                              :quant (s2 / some))
                        :ARG1 (m3 / money
                              :mod (s3 / such))))
            :op2 (d / decide-01
                  :ARG0 p4
                  :ARG1 (k / keep-02
                        :ARG0 p4
                        :ARG1 (g / go-out-17
                              :ARG0 p4
                              :manner (p5 / protect-01
                                    :polarity -
                                    :ARG1 p4)))))
      :snt3 (e2 / endanger-01
            :ARG1 (a4 / and
                  :op1 y
                  :op2 (f / family))
            :time (a5 / and
                  :op1 (g2 / go-out-17
                        :ARG0 (p6 / person
                              :ARG1-of (n2 / neighbor-01
                                    :ARG2 y)))
                  :op2 (c / contact-01
                        :ARG0 p6
                        :ARG1 (c2 / company
                              :name (n3 / name
                                    :op1 ""Covid-19""))))))"
"(t / thank-01
      :ARG0 (ii / i)
      :ARG1 (y / you)
      :ARG2 (c / clip))"
"(m / multi-sentence
      :snt1 (c / continue-01
            :ARG0 (a / and
                  :op1 (p / person
                        :name (n / name
                              :op1 ""Joe""
                              :op2 ""Mason"")
                        :ARG0-of (h / have-org-role-91
                              :ARG2 (p2 / professor)))
                  :op2 (ii / i))
            :ARG1 (s / series
                  :poss a
                  :topic (n2 / navigate-01
                        :ARG1 (l / law
                              :name (n3 / name
                                    :op1 ""COVID-19""))))
            :time (n4 / near-01
                  :ARG1 (g / government-organization
                        :name (n5 / name
                              :op1 ""Congress""))
                  :ARG2 (p3 / pass-01
                        :ARG0 g
                        :ARG1 (p4 / package
                              :ARG0-of (s2 / stimulate-01)
                              :mod (r / record)
                              :mod (m2 / monetary-quantity
                                    :quant 2000000000000
                                    :unit (d / dollar))))))
      :snt2 (s3 / size-up-02
            :ARG0 (t / topic
                  :time (t2 / today))
            :ARG1 (a2 / and
                  :op1 (m3 / monetary-quantity
                        :ARG2-of (c2 / cost-01
                              :ARG1 (h2 / holiday-01
                                    :ARG0 (p5 / person
                                          :ARG0-of (c3 / consume-01))
                                    :mod (n6 / nationwide)
                                    :mod (d2 / debt))))
                  :op2 (b / benefit-01
                        :ARG0 h2))))"
"(o / offer-01
      :ARG0 (c / column
            :mod (l / last)
            :poss (ii / i)
            :location (n / newspaper
                  :name (n2 / name
                        :op1 ""Mustard""
                        :op2 ""Seed""
                        :op3 ""Sentinel"")))
      :ARG1 (t / tip-05
            :ARG2 (s / survive-01
                  :ARG1 (o2 / or
                        :op1 (c2 / cut-02
                              :ARG1 (p / pay-01))
                        :op2 (l2 / lose-02
                              :ARG1 (j / job)))
                  :time (p2 / pandemic
                        :name (n3 / name
                              :op1 ""COVID-19"")))))"
"(m / multi-sentence
      :snt1 (s / shop-01
            :ARG0 (ii / i)
            :ARG1 (g / grocery)
            :mod (s2 / some)
            :time (j / just))
      :snt2 (r / resemble-01
            :ARG1 (ii2 / it)
            :ARG2 (e / end-01
                  :ARG1 (d / day)
                  :location (o / out-there)))
      :snt3 (t / thank-01
            :ARG1 (p / person
                  :ARG0-of (w / work-01
                        :ARG2 (s3 / store
                              :mod (g2 / grocery)))
                  :mod (a / all)
                  :ARG0-of (w2 / work-01
                        :mod (s4 / still)))))"
"(m / multi-sentence
      :snt1 (p / precaution-02
            :ARG0 (w / we)
            :ARG1 (a / against
                  :op1 (p2 / product
                        :name (n / name
                              :op1 ""COVID-19"")))
            :mod (e / extra)
            :location (s / shop
                  :poss w)
            :ARG1-of (ii / include-01
                  :ARG2 (o / or
                        :op1 (p3 / pick-up-04
                              :ARG0 w
                              :ARG1 (p4 / pet))
                        :op2 (d / drop-off-03
                              :ARG0 w
                              :ARG1 p4)
                        :op3 (s2 / shop-01
                              :ARG0 w
                              :medium (o2 / online))
                        :op4 (s3 / shop-01
                              :ARG0 w
                              :location (s4 / store)))))
      :snt2 (f / find-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (d2 / detail
                  :mod (a2 / all))
            :location (p5 / page
                  :mod (p6 / publication
                        :name (n2 / name
                              :op1 ""Facebook""))
                  :poss (w2 / we))))"
"(a / avoid-01
      :mode imperative
      :ARG0 (y / you
            :part (n / nose)
            :part (e / eye)
            :part (m / mouth))
      :ARG1 (o / or
            :op1 (p / pick-01
                  :ARG0 y
                  :ARG2 n)
            :op2 (r / rub-01
                  :ARG0 y
                  :ARG1 e)
            :op3 (p2 / put-01
                  :ARG0 y
                  :ARG1 (h / hand)
                  :ARG2 m))
      :purpose (h2 / help-01
            :ARG0 y
            :ARG1 (s / stop-01
                  :ARG1 (s2 / spread-02
                        :ARG1 (d / disease
                              :name (n2 / name
                                    :op1 ""coronavirus""))))))"
"(m / multi-sentence
      :snt1 (h / have-03
            :ARG0 (w / we)
            :ARG1 (s / stock
                  :ARG1-of (l / limit-01)
                  :consist-of (p / product
                        :name (n / name
                              :op1 ""BAC""
                              :op2 ""Stop""
                              :op3 ""3A""
                              :op4 ""Instant""
                              :op5 ""Hand""
                              :op6 ""Sanitizer""))))
      :snt2 (g / get-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (ii / it)
            :time (n2 / now)
            :purpose (p2 / prevent-01
                  :ARG0 y
                  :ARG1 (s2 / spread-02
                        :ARG1 (d / disease
                              :name (n3 / name
                                    :op1 ""CoronaVirus""))))))"
"(m / multi-sentence
      :snt1 (t / touch-01
            :ARG0 (p / price-01
                  :ARG1 (g / gold)
                  :mod (s / spot))
            :ARG1 (h / high-02
                  :mod (j / just)
                  :time (d / date-entity
                        :year 2013))
            :duration (b / brief)
            :time (b2 / before
                  :op1 (c / close-03
                        :ARG0 p
                        :ARG1 (a / and
                              :op1 (s2 / session)
                              :op2 (w / week))
                        :manner (a2 / above
                              :op1 (m2 / monetary-quantity
                                    :quant 1680
                                    :unit (d2 / dollar)))))
            :time (w2 / week
                  :mod (t2 / this)))
      :snt2 (b3 / benefit-01
            :ARG0 (p2 / price-01
                  :ARG1 (s3 / silver))
            :mod (a3 / as-well)
            :ARG0-of (s4 / solidify-01
                  :ARG1 (p3 / position-02
                        :ARG1 p2
                        :ARG2 (a4 / above
                              :op1 (m3 / monetary-quantity
                                    :quant 15
                                    :unit (d3 / dollar)
                                    :ARG1-of (r / rate-entity-91
                                          :ARG2 g)))))))"
"(a / act-02
      :ARG1 (r / rob-01
            :ARG0 (m / man
                  :ARG1-of (a2 / arm-01
                        :ARG2 (k / knife)))
            :ARG1 (s / supermarket
                  :location (c / city
                        :name (n / name
                              :op1 ""Sydney""))))
      :ARG1-of (s2 / serious-02)
      :domain (t / this))"
"(m / multi-sentence
      :snt1 (b / brave-01
            :ARG0 (ii / i)
            :ARG1 (s / supermarket)
            :time (w / week
                  :mod (t / this)))
      :snt2 (c / contrast-01
            :ARG1 (s2 / space-01
                  :ARG1 (q / queue-01
                        :purpose (g / get-05
                              :ARG2 s))
                  :ARG1-of (s3 / sense-02))
            :ARG2 (o / obligate-01
                  :ARG1 (f / folk
                        :mod (s4 / some))
                  :ARG2 (c2 / check-out-05
                        :ARG0 f
                        :ARG1 (g2 / guideline
                              :topic (d / distance-01
                                    :ARG2 (s5 / society))))
                  :location (ii2 / inside)))
      :snt3 (f2 / feel-01
            :ARG0 (ii3 / i)
            :ARG1 (c3 / compromise-01
                  :ARG1 ii3)))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (b / be-temporally-at-91
                  :ARG1 (ii / i)
                  :ARG2 (d / day
                        :ord (o / ordinal-entity
                              :value 6)
                        :ARG1-of (ii2 / include-91
                              :ARG2 (q / quarantine-01
                                    :ARG1 ii
                                    :ARG1-of (ii3 / impose-01
                                          :ARG0 ii)))))
            :op2 (d2 / despair-01
                  :polarity -
                  :ARG0 ii))
      :snt2 (a2 / and
            :op1 (p / person
                  :mod (c / country
                        :name (n / name
                              :op1 ""Canada""))
                  :domain (ii4 / i))
            :op2 (h / have-03
                  :ARG0 (w / we)
                  :ARG1 (s / supply-01
                        :ARG1 (m2 / mix-01
                              :ARG1 (p2 / pancake)
                              :ARG2 (b2 / butter
                                    :mod (o2 / ofc)))
                        :mod (l / large))
                  :time (a3 / always)))
      :snt3 (t / tip-05
            :ARG0 (p3 / person
                  :name (n2 / name
                        :op1 ""Cor""))
            :ARG2 (a4 / and
                  :op1 (b3 / breakfast-01
                        :ARG1 (p4 / pancake)
                        :mod (j / just
                              :polarity -))
                  :op2 (a5 / and
                        :op1 (l2 / lunch)
                        :op2 (d3 / dinner)
                        :mod (a6 / also))
                  :polarity (a7 / amr-unknown))
            :mod (p5 / pro)))"
"(r / revoke-01
      :ARG0 (o / organization
            :name (n / name
                  :op1 ""EPRA""))
      :ARG1 (l / license-01
            :ARG2 (p / person
                  :ARG0-of (t / trade-01)
                  :ARG0-of (h / hike-02
                        :ARG1 (p2 / price-01
                              :ARG1 (p3 / product
                                    :name (n2 / name
                                          :op1 ""Liquefied""
                                          :op2 ""Petroleum""
                                          :op3 ""Gas""
                                          :op4 ""LPG"")))
                        :time (b / battle-01
                              :ARG0 (c / country
                                    :name (n3 / name
                                          :op1 ""Kenya""))
                              :ARG1 (p4 / pandemic
                                    :name (n4 / name
                                          :op1 ""Covid""
                                          :op2 19)))))))"
"(c / cause-01
      :ARG0 (a / allow-01
            :polarity -
            :ARG0 (ii / individualism
                  :mod (r / rugged)
                  :poss (c2 / country
                        :name (n / name
                              :op1 ""America"")))
            :ARG1 (p / put-01
                  :ARG0 (p2 / person
                        :mod (s / some))
                  :ARG1 (p3 / person
                        :mod (o / other))
                  :ARG2 (a2 / above
                        :op1 p2)))
      :ARG1 (e / end-up-03
            :ARG1 c2
            :ARG2 (o2 / outpace-01
                  :ARG0 c2
                  :ARG1 (a3 / and
                        :op1 (c3 / country
                              :name (n2 / name
                                    :op1 ""Italy""))
                        :op2 (c4 / country
                              :name (n3 / name
                                    :op1 ""China""))))))"
"(a / and
      :op1 (d / demand-01
            :ARG0 (g / group
                  :quant (m / multiple
                        :op1 12)
                  :mod (c / continent
                        :name (n / name
                              :op1 ""Europe"")))
            :ARG1 (e / end-01
                  :ARG1 (s / sanction-02
                        :ARG0 (c2 / country
                              :name (n2 / name
                                    :op1 ""U.S.""))
                        :ARG1 (c3 / country
                              :name (n3 / name
                                    :op1 ""Iran"")))))
      :op2 (s2 / say-01
            :ARG0 g
            :ARG1 (p / prevent-01
                  :ARG0 s
                  :ARG1 (s3 / supply-01
                        :ARG0 (o / organization
                              :mod (ii / international))
                        :ARG1 (a2 / and
                              :op1 (f / food)
                              :op2 (m2 / medicine))
                        :ARG2 (p2 / person
                              :location c3
                              :ARG0-of (f2 / face-01
                                    :ARG1 (c4 / crisis
                                          :mod (h / humanitarian))))))))"
"(a / and
      :op1 (g / go-02
            :ARG0 (ii / i)
            :ARG4 (s / store
                  :mod (g2 / grocery))
            :time (d / date-entity
                  :weekday (s2 / sunday)
                  :dayperiod (a2 / afternoon)))
      :op2 (b / bad-07
            :polarity -
            :ARG1 (ii2 / it)
            :degree (a3 / at-all)))"
"(m / multi-sentence
      :snt1 (m2 / misinform-01
            :ARG2 (a / and
                  :op1 (c / coronavirus)
                  :op2 (w / way
                        :manner-of (p / protect-01
                              :ARG0 (y / you)
                              :ARG1 y)
                        :ARG1-of (h / have-degree-91
                              :ARG2 (g / good-02)
                              :ARG3 (m3 / most))))
            :quant (l / lot))
      :snt2 (r / recommend-01
            :ARG0 (o / organization
                  :name (n / name
                        :op1 ""World""
                        :op2 ""Health""
                        :op3 ""Organization""))
            :ARG1 (u / use-01
                  :ARG0 y
                  :ARG1 (p2 / product
                        :ARG0-of (s / sanitize-01
                              :ARG1 (h2 / hand))
                        :ARG1-of (c2 / contain-01
                              :ARG2 (a2 / alcohol)
                              :quant (a3 / at-least
                                    :op1 (p3 / percentage-entity
                                          :value 60)))))))"
"(m / multi-sentence
      :snt1 (m2 / measure-01
            :ARG1 (c / change-01
                  :ARG1 (a / and
                        :op1 (e / eat-01
                              :ARG0 (p / person
                                    :ARG0-of (c2 / consume-01)))
                        :op2 (t / travel-01
                              :ARG0 p)
                        :op3 (c3 / congregate-01
                              :ARG0 p)
                        :op4 (r / relate-01
                              :ARG0 p
                              :ARG2 (w / world
                                    :location (a2 / around
                                          :op1 p)))))
            :time (p2 / pandemic
                  :name (n / name
                        :op1 ""COVID19"")))
      :snt2 (u / uncover-01
            :ARG0 (w2 / we)
            :ARG1 (o / opportunity)
            :mod (a3 / also)
            :time (s / shift-01
                  :ARG1 (b / business)
                  :ARG2 (a4 / amr-unknown))))"
"(p / pivot-01
      :ARG1 (b / business
            :ARG1-of (r / resemble-01
                  :ARG2 (o / one
                        :mod (t / this))))
      :ARG2 (r2 / respond-01
            :ARG0 b
            :ARG1 (n / need-01
                  :ARG0 (p2 / person
                        :ARG0-of (c / consume-01
                              :ARG1 b)))
            :time (c2 / crisis)))"
"(a / announce-01
      :ARG0 (g / government-organization
            :ARG0-of (g2 / govern-01
                  :ARG1 (c / country
                        :name (n / name
                              :op1 ""Mongolia""))))
      :ARG1 (c2 / countermeasure
            :mod (e / economy)
            :ARG2-of (r / respond-01
                  :ARG1 (p / pandemic
                        :name (n2 / name
                              :op1 ""Covid-19"")))
            :ARG2-of (ii / include-01
                  :ARG1 (a2 / and
                        :op1 (p2 / postpone-01
                              :ARG1 (a3 / and
                                    :op1 (r2 / repay-01
                                          :ARG1 (l / loan-01
                                                :ARG2 (p3 / person
                                                      :ARG0-of (c3 / consume-01))))
                                    :op2 (ii2 / interest))
                              :duration (t / temporal-quantity
                                    :quant 90
                                    :unit (d / day)))
                        :op2 (m / maintain-01
                              :ARG1 (r3 / rate-01
                                    :ARG3 (c4 / credit))
                              :duration t)))))"
"(w / wish-01
      :ARG1 (p / protect-01
            :ARG0 (h / heaven)
            :ARG1 (y / you)))"
"(m / multi-sentence
      :snt1 (c / collapse-01
            :ARG1 (p / price-01
                  :ARG1 (o / oil))
            :time (m2 / month
                  :mod (t / this))
            :time (b / before)
            :manner (a / attempt-01
                  :ARG1 (b2 / boost-01
                        :ARG1 (p2 / price-01)
                        :ARG1-of (c2 / cause-01
                              :ARG0 (d / drop-01
                                    :ARG1 (d2 / demand-01)
                                    :ARG1-of (c3 / cause-01
                                          :ARG0 (c4 / coronavirus)))))))
      :snt2 (r / refuse-01
            :ARG0 (c5 / country
                  :name (n / name
                        :op1 ""Russia""))
            :ARG1 (f / follow-02
                  :ARG0 c5
                  :ARG1 (c6 / cartel
                        :mod (o2 / organization
                              :name (n2 / name
                                    :op1 ""OPEC""))
                        :ARG1-of (d3 / dominate-01
                              :ARG0 (c7 / country
                                    :name (n3 / name
                                          :op1 ""Saudi""
                                          :op2 ""Arabia"")))))
            :ARG0-of (c8 / cause-01
                  :ARG1 (e / end-01
                        :ARG1 (c9 / collaborate-01
                              :ARG0 c5
                              :ARG1 o2
                              :duration (t2 / temporal-quantity
                                    :quant 3
                                    :unit (y / year))
                              :prep-under (a2 / agree-01
                                    :ARG0 (o3 / organization
                                          :name (n4 / name
                                                :op1 ""OPEC-Plus""))))))))"
"(m / multi-sentence
      :snt1 (n / notify-01
            :ARG1 (y / you)
            :ARG2 (r / raise-01
                  :ARG0 (c / company
                        :name (n2 / name
                              :op1 ""Rogers""))
                  :ARG1 (p / price-01
                        :ARG0 c
                        :ARG1 (a / and
                              :op1 (ii / internet
                                    :poss y)
                              :op2 (p2 / phone
                                    :mod (c2 / cell)
                                    :poss y)))
                  :time (p3 / pandemic
                        :name (n3 / name
                              :op1 ""COVID-19"")))
            :condition (h / have-03
                  :ARG0 y
                  :ARG1 (a2 / account
                        :mod c)))
      :snt2 (p4 / possible-01
            :ARG1 (c3 / care-01
                  :ARG0 (t / they)
                  :ARG1 (p5 / person)
                  :ARG1-of (h2 / have-quant-91
                        :ARG3 (l / less))
                  :condition (a3 / as-long-as
                        :op1 (m2 / make-05
                              :ARG0 t
                              :ARG1 (m3 / money)))))
      :snt3 (t2 / take-advantage-02
            :ARG0 t
            :ARG1 (s / situation)))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (r / run-02
                  :ARG0 (ii / i)
                  :ARG1 (g / grocery)
                  :time (d / date-entity
                        :dayperiod (n / night)
                        :mod (t / today)))
            :op2 (h / hope-01
                  :ARG0 ii
                  :ARG1 (r2 / run-02
                        :ARG0 (w / we)
                        :mod (l / last)
                        :duration (w2 / while))))
      :snt2 (h2 / have-concession-91
            :ARG1 (p / possible-01
                  :ARG1 (g2 / get-01
                        :ARG0 ii
                        :ARG1 (t2 / thing
                              :ARG1-of (h3 / have-quant-91
                                    :ARG3 (e / enough)
                                    :ARG6 (k / keep-04
                                          :ARG1 w
                                          :ARG2 (g3 / go-out-17
                                                :polarity -
                                                :ARG0 w
                                                :duration (w3 / while)))))))
            :ARG2 (m2 / miss-01
                  :ARG0 (s / store)
                  :ARG1 (ii2 / item
                        :ARG1-of (k2 / key-02)
                        :quant (l2 / lot))
                  :mod (s2 / still))))"
"(a / and
      :op1 (u / update-01
            :ARG1 (h / hour
                  :mod (s / store
                        :mod (g / grocery))))
      :op2 (a2 / available-02
            :ARG2 (ii / it)
            :location (l / list-01)
            :time (n / now)))"
"(p / possible-01
      :ARG1 (w / win-01
            :ARG0 (y / you)
            :ARG1 (a / and
                  :op1 (l / lunch
                        :source (c / company
                              :name (n / name
                                    :op1 ""CornHall""
                                    :op2 ""Deli""))
                        :mod (f / festival
                              :name n
                              :op1 ""Easter"")))
            :op2 (v / voucher
                  :source (s / supermarket)
                  :purpose (d / distance-01
                        :ARG2 (s2 / society)))))"
"(p / publication
      :name (n / name
            :op1 ""The""
            :op2 ""Atlantic"")
      :time (d / date-entity
            :day 15
            :month 5
            :year 2020))"
"(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (r / run-out-05
                  :ARG1 (s / space
                        :purpose (s2 / store-01
                              :ARG0 (w / world)
                              :ARG1 (o / oil)))
                  :ARG2 w
                  :ARG0-of (c / cause-01
                        :ARG1 (p2 / plunge-01
                              :ARG0 r
                              :ARG1 (p3 / price-01)
                              :ARG4 (b / below
                                    :op1 (z / zero))
                              :ARG1-of (p4 / possible-01))))
            :time (s3 / soon))
      :snt2 (g / good-02
            :polarity -
            :ARG1 (t / this)))"
"(q / question-01
      :ARG1 (c / cause-01
            :ARG0 (h / have-03
                  :ARG0 (y / you)
                  :ARG1 (p / power
                        :mod (v / voice)
                        :mod (a / act-02)
                        :ARG1-of (h2 / have-degree-91
                              :ARG2 (b / big)
                              :ARG3 (m / most)))
                  :concession-of (b2 / blow-up-06
                        :ARG0 y
                        :ARG1 (t / this))))
      :ARG2 (a2 / and
            :op1 (g / government-organization
                  :ARG0-of (g2 / govern-01)
                  :ARG0-of (h3 / handle-01
                        :ARG1 (l / law
                              :name (n / name
                                    :op1 ""COVID-19""))
                        :manner (r / resemble-01
                              :ARG2 (j / joke-01))))
            :op2 (b3 / buzzard
                  :ARG0-of (d / defend-01
                        :ARG1 l))
            :op3 (m2 / marketplace
                  :ARG0-of (h4 / have-03
                        :ARG1 (p2 / policy-01
                              :ARG1 (b4 / ban-01
                                    :ARG2 (p3 / person
                                          :ARG0-of (s / sell-01)
                                          :ARG1-of (p4 / price-01
                                                :mod (e / expensive))))
                              :mod (l2 / little)
                              :mod (n2 / no)))))
      :mod (a3 / another)
      :location (h5 / here))"
"(b / beware-01
      :ARG1 (a / and
            :op1 (p / person
                  :ARG0-of (d / defraud-01))
            :op2 (g / gouge-02
                  :ARG2 (t / thing
                        :ARG2-of (p2 / price-01))
                  :ARG1-of (r / relate-01
                        :ARG2 (c / coronavirus)))))"
(a / amr-empty)
"(a / and
      :op1 (w / work-09
            :ARG1 (m / market
                  :mod (v / venture))
            :manner (a2 / amr-unknown))
      :op2 (r / recommend-01
            :ARG1 (e / expect-01
                  :ARG0 (w2 / we)
                  :ARG1 (a3 / amr-unknown)
                  :ARG1-of (c / cause-01
                        :ARG0 (a4 / and
                              :op1 (f / fall-01
                                    :ARG1 (p / price-01
                                          :ARG1 (o / oil)))
                              :op2 (c2 / crash-01
                                    :ARG1 (m2 / market
                                          :mod (s / stock)))))))
      :medium (c3 / company
            :name (n / name
                  :op1 ""Skype"")))"
"(r / recommend-01
      :ARG1 (a / and
            :op1 (n / name-01
                  :ARG1 (p / person
                        :ARG0-of (h / hoard-01)))
            :op2 (s / shame-01
                  :ARG1 p))
      :purpose (d / discourage-01
            :ARG1 (b / behave-01
                  :ARG0 p
                  :ARG1 (t / this))))"
"(m / multi-sentence
      :snt1 (p / price-01
            :ARG1 (g / gas
                  :ARG1-of (u / unleaded-02))
            :ARG2 (r / rate-entity-91
                  :ARG1 (m2 / monetary-quantity
                        :quant 33.50
                        :unit (d / dollar))
                  :ARG2 (v / volume-quantity
                        :quant 1
                        :unit (l / liter))))
      :snt2 (h / hope-01
            :ARG0 (ii / i)
            :ARG1 (r2 / rate-entity-91
                  :ARG1 (m3 / monetary-quantity
                        :quant 25
                        :unit (d2 / dollar))
                  :ARG2 (v2 / volume-quantity
                        :quant 1
                        :unit (l2 / liter))
                  :time (a / after
                        :op1 (l3 / lock-down-06))
                  :purpose (p2 / possible-01
                        :ARG1 (f / fill-01
                              :ARG0 ii
                              :ARG1 (t / tank
                                    :poss ii)
                              :ARG2 (b / between
                                    :op1 (m4 / monetary-quantity
                                          :quant 50
                                          :unit (d3 / dollar))
                                    :op2 (m5 / monetary-quantity
                                          :quant 80
                                          :unit (d4 / dollar))
                                    :mod (o / only)))))))"
(a / amr-empty)
"(p / possible-01
      :ARG1 (t / trigger-01
            :ARG0 (d / disease
                  :name (n / name
                        :op1 ""Coronavirus""))
            :ARG1 (c / come-01
                  :ARG1 (a / apocalypse
                        :mod (r / retail-01))
                  :ord (o / ordinal-entity
                        :value 2)))
      :ARG1-of (c2 / cause-01
            :ARG0 (w / wave-04
                  :ARG1 (a2 / and
                        :op1 (b / bankrupt-01)
                        :op2 (c3 / close-01
                              :ARG1 (s / store)))
                  :ARG1-of (n2 / new-01)
                  :ARG0-of (s2 / sweep-02
                        :ARG1 (n3 / nation)
                        :ARG1-of (e / expect-01))))
      :ARG1-of (s3 / say-01
            :ARG0 (p2 / publication
                  :name (n4 / name
                        :op1 ""CNBC""))
            :time (d2 / date-entity
                  :day 18
                  :month 3
                  :year 2020)))"
"(m / multi-sentence
      :snt1 (r / ready-02
            :polarity (a / amr-unknown)
            :ARG1 (s / store
                  :poss (y / you))
            :ARG2 (d / distance-01
                  :ARG2 (s2 / social)))
      :snt2 (e / essential
            :quant (s3 / some)
            :purpose (p / prepare-02
                  :ARG1 (y2 / you))))"
"(m / multi-sentence
      :snt1 (b / boom-01
            :ARG0 (s / shop-01
                  :mod (o / online))
            :time (b2 / break-out-30
                  :ARG1 (d / disease
                        :name (n / name
                              :op1 ""Coronavirus""))))
      :snt2 (c / contrast-01
            :ARG2 (p / possible-01
                  :ARG1 (e / enjoy-01
                        :ARG0 (p2 / person
                              :ARG0-of (c2 / consume-01)
                              :mod (o2 / only)
                              :ARG0-of (l / live-01
                                    :location (s2 / state
                                          :quant 12)))
                        :ARG1 (d2 / deliver-01
                              :ARG1 (a / alcohol)
                              :ARG2 p2
                              :location (h / home))
                        :degree (f / full))
                  :location (c3 / country
                        :name (n2 / name
                              :op1 ""US"")))))"
"(c / clean-up-02
      :location (a / aisle
            :mod 3
            :time ""16:16""))"
"(c / contrast-01
      :ARG1 (h / have-03
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (p / problem
                  :topic (q / queue-01
                        :location (s / supermarket)
                        :purpose (m / make-02
                              :ARG1 (s2 / safe-01
                                    :ARG0 (t / trip-03)
                                    :ARG2-of (h2 / have-degree-91
                                          :ARG1 t
                                          :ARG3 (m2 / more
                                                :quant (l / little))))))))
      :ARG2 (h3 / have-condition-91
            :ARG1 (o / obligate-01
                  :ARG1 s
                  :ARG2 (s3 / start-01
                        :ARG0 s
                        :ARG1 (g / give-out-06
                              :ARG0 s
                              :ARG1 (a / and
                                    :op1 (c2 / cream
                                          :purpose (s4 / sun))
                                    :op2 (w / water)))))
            :ARG2 (c3 / continue-01
                  :ARG1 (w2 / weather
                        :mod (t2 / this)))))"
"(m / multi-sentence
      :snt1 (e / enable-01
            :ARG0 (a / and
                  :op1 (p / person
                        :ARG0-of (d / drive-01
                              :ARG1 (d2 / deliver-01)))
                  :op2 (p2 / person
                        :ARG0-of (w / work-01
                              :ARG2 (s / store
                                    :mod (g / grocery)))))
            :ARG1 (s2 / stay-01
                  :ARG1 (w2 / we)
                  :ARG3 (ii / inside)
                  :manner (c / convenient))
            :ARG1-of (r / real-04))
      :snt2 (o / offer-01
            :polite +
            :mode imperative
            :ARG0 (y / you
                  :part (h / hand))
            :ARG1 (a2 / and
                  :op1 (s3 / sanitiser)
                  :op2 (w3 / water))
            :ARG3 (t / they)
            :time (a3 / and
                  :op1 (p3 / precaution-02
                        :ARG0 y)
                  :op2 (w4 / wash-01
                        :ARG0 y
                        :ARG1 h
                        :time (a4 / and
                              :op1 (b / before)
                              :op2 (a5 / after)))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (ii2 / important-01
                              :ARG1 (s4 / stay-01
                                    :ARG1 y
                                    :ARG3 (h2 / hydrate-01
                                          :ARG1 y))
                              :degree (s5 / so)
                              :purpose (f / fight-off-02
                                    :ARG0 y
                                    :ARG1 (v / virus
                                          :mod (t2 / type
                                                :mod (a6 / any)))))))))"
"(a / answer-01
      :ARG1 (q / question-01
            :ARG0 (y / you)
            :ARG1 (p / person
                  :ARG0-of (c / consume-01)))
      :location (f / facility
            :name (n / name
                  :op1 ""Covid-19"")
            :ARG1-of (l / lock-down-03)))"
"(h / hard-02
      :ARG1 (p / process-01
            :ARG1 (d / dichotomy
                  :domain (a / and
                        :op1 (w / work-01
                              :ARG0 (ii / i)
                              :location (h2 / home))
                        :op2 (d2 / deliver-01
                              :ARG0 ii
                              :ARG1 (w2 / webinar
                                    :topic (t / train-01
                                          :ARG1 (r / resource
                                                :mod (h3 / human))))
                              :mod (a2 / as-usual)))))
      :time (o / obligate-01
            :ARG1 ii
            :ARG2 (w3 / wear-01
                  :ARG0 ii
                  :ARG1 (a3 / and
                        :op1 (m / mask)
                        :op2 (g / glove))
                  :purpose (g2 / go-05
                        :ARG0 ii
                        :ARG1 (w4 / wait-01
                              :ARG1 ii
                              :ARG2 (l / line-up-02
                                    :ARG2 (f / food
                                          :ARG1-of (r2 / ration-01))
                                    :location (s / store
                                          :mod (g3 / grocery)
                                          :ARG1-of (s2 / stock-01
                                                :mod (u / under))
                                          :ARG1-of (l2 / local-02))))))
            :condition (n / need-01
                  :ARG0 ii
                  :ARG1 (o2 / or
                        :op1 (f2 / food)
                        :op2 (m2 / medicine)))))"
"(m / multi-sentence
      :snt1 (j / joke-01
            :ARG2 (p / person
                  :domain (ii / i)
                  :ARG0-of (d / drive-01
                        :ARG1 (s / supermarket))))
      :snt2 (f / fill-01
            :ARG0 (w / we)
            :ARG1 (s2 / shelf))
      :snt3 (a / and
            :op1 (w2 / work-01
                  :ARG0 (p2 / person
                        :quant (s3 / some)
                        :ARG1-of (ii2 / include-91
                              :ARG2 (w3 / we)))
                  :duration (t / temporal-quantity
                        :quant 15
                        :unit (h / hour)
                        :ARG1-of (r / rate-entity-91
                              :ARG2 (t2 / temporal-quantity
                                    :quant 1
                                    :unit (d2 / day)))))
            :op2 (h2 / have-03
                  :ARG0 w3
                  :ARG1 (t3 / time
                        :polarity -
                        :purpose (s4 / search-01
                              :ARG0 w3
                              :ARG1 (s5 / supermarket)))))
      :snt4 (s6 / stop-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (f2 / fill-01
                  :ARG0 y
                  :ARG1 (t4 / trolley
                        :poss y))
            :ARG1-of (c / cause-01
                  :ARG0 (n / need-01
                        :polarity -
                        :ARG1 f2)))
      :snt5 (c2 / contrast-01
            :ARG1 (c3 / carry-on-02
                  :ARG0 (w4 / we)
                  :ARG1 (w5 / work-01
                        :ARG0 w4
                        :duration (s7 / shift
                              :duration (t5 / temporal-quantity
                                    :quant 15
                                    :unit (h3 / hour)))))
            :ARG2 (n2 / nothing)))"
"(m / multi-sentence
      :snt1 (p / problem
            :domain (s / short-06
                  :ARG2 (f / food))
            :ARG1-of (d / demand-01)
            :ARG1-of (m2 / mean-01
                  :ARG2 (h / hoard-01))
            :time (s2 / so-far))
      :snt2 (c / contrast-01
            :ARG2 (e / event
                  :condition (b / buckle-01
                        :ARG1 (c2 / chain
                              :mod (s3 / supply-01)))
                  :mod (a / amr-unknown)))
      :snt3 (h2 / halt-01
            :ARG0 (o / outbreak-29
                  :name (n / name
                        :op1 ""COVID""
                        :op2 19))
            :ARG1 (p2 / produce-01)
            :location (p3 / plant
                  :ARG0-of (p4 / process-01
                        :ARG1 (p5 / pork))
                  :location (e2 / east
                        :part-of (s4 / state
                              :name (n2 / name
                                    :op1 ""Iowa""))))))"
"(c / cause-01
      :ARG0 (a / amr-unknown)
      :ARG1 (p / possible-01
            :polarity -
            :ARG1 (d / do-02
                  :ARG0 (c2 / company
                        :name (n / name
                              :op1 ""Cyclacel""))
                  :ARG1 (t / thing
                        :ARG1-of (s / same-01)))))"
"(p / possible-01
      :polarity -
      :ARG1 (s / shop-01
            :ARG0 (p2 / person
                  :name (n / name
                        :op1 ""Dawn""
                        :op2 ""Bilbrough"")
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (n2 / nurse
                              :mod (c / care-03
                                    :ARG1-of (c2 / critical-03))))))
      :ARG1-of (c3 / cause-01
            :ARG0 (b / buy-01
                  :ARG0 p2
                  :ARG1-of (c4 / cause-01
                        :ARG0 (p3 / product
                              :name (n3 / name
                                    :op1 ""Covid19UK"")))
                  :manner (p4 / panic-01))))"
"(c / contrast-01
      :ARG1 (l / like-02
            :ARG0 (ii / i)
            :ARG1 (u / use-01
                  :ARG0 ii
                  :ARG1 (t / time
                        :mod (t2 / this))
                  :ARG2 (p / productive-03
                        :ARG0 ii
                        :degree (s / super)
                        :time (p2 / pandemic
                              :mod (t3 / this)))))
      :ARG2 (h / have-03
            :ARG0 ii
            :ARG1 (a / and
                  :op1 (d / debt
                        :mod (s2 / shop-01
                              :medium (o / online)))
                  :op2 (p3 / problem
                        :topic (a2 / alcohol)
                        :ARG1-of (f / fledge-01
                              :mod (f2 / full)))
                  :mod (a3 / all))
            :time (s3 / so-far)))"
"(m / multi-sentence
      :snt1 (m2 / monetary-quantity
            :li 2
            :unit (r / rupee)
            :ARG3-of (r2 / rent-01
                  :polarity -))
      :snt2 (f / food
            :li 4
            :mod (a / all))
      :snt3 (c / contrast-01
            :ARG1 (r3 / respect-01
                  :ARG0 (ii / i)
                  :ARG1 (c2 / concern-01
                        :ARG0 (c3 / class
                              :mod (p / poor))
                        :ARG1 (y / you)))
            :ARG2 (p2 / possible-01
                  :polarity -
                  :ARG1 (c4 / control-01
                        :ARG1 (o / outbreak-29
                              :ARG1 (d / disease
                                    :name (n / name
                                          :op1 ""Corona""
                                          :op2 ""Virus""))
                              :location (c5 / country
                                    :name (n2 / name
                                          :op1 ""Italy""))))
                  :time o))
      :snt4 (t / think-01
            :ARG0 ii
            :ARG1 (r4 / recommend-01
                  :ARG0 ii
                  :ARG1 (g / go-03
                        :ARG0 y
                        :ARG1 (f2 / for)))))"
"(p / possible-01
      :ARG1 (s / sign-up-03
            :ARG1 (ii / i)
            :ARG3 (a / alert-01
                  :ARG2 (g / get-01
                        :ARG0 (s2 / store
                              :mod (g2 / grocery)
                              :mod (n / next)
                              :location (c / city
                                    :name (n2 / name
                                          :op1 ""Las""
                                          :op2 ""Vegas"")))
                        :ARG1 (c2 / chicken))
                  :ARG1-of (t / text-01)))
      :polarity (a2 / amr-unknown))"
"(m / multi-sentence
      :snt1 (m2 / message-01
            :ARG1 (t / this)
            :ARG2 (e / everyone
                  :ARG0-of (u / understand-01
                        :polarity -
                        :ARG1 (g / gravity
                              :poss (c / crisis
                                    :mod (v / virus
                                          :name (n / name
                                                :op1 ""Coronavirus""))))
                        :time (y / yet)))
            :mod (u2 / urgent))
      :snt2 (t2 / take-01
            :mode imperative
            :polite +
            :ARG0 (y2 / you)
            :ARG1 (t3 / temporal-quantity
                  :quant 12
                  :unit (m3 / minute))
            :purpose (l / listen-01
                  :ARG0 y2
                  :ARG1 (c2 / call-02
                        :ARG0 (p / person
                              :name (n2 / name
                                    :op1 ""Dr.""
                                    :op2 ""Jack""))
                        :ARG1 (t4 / this)
                        :mod (h / harrowing)
                        :location (f / frontline
                              :poss (g2 / government-organization
                                    :name (n3 / name
                                          :op1 ""NHS""))))))
      :snt3 (d / do-02
            :mode imperative
            :ARG0 (y3 / you)
            :ARG1 (t5 / thing
                  :ARG1-of (r / right-02))
            :time (t6 / then))
      :medium (u3 / url-entity
            :value ""https://t.co""))"
"(g / go-02
      :ARG0 (ii / i)
      :ARG4 (s / store
            :mod (g2 / grocery)))"
"(m / multi-sentence
      :snt1 (p / put-up-11
            :ARG0 (ii / i)
            :ARG1 (l / light
                  :mod (f / festival
                        :name (n / name
                              :op1 ""Christmas"")))
            :location (o / outside
                  :op1 (h / house))
            :purpose (a / and
                  :op1 (s / spread-01
                        :ARG0 ii
                        :ARG1 (c / cheer-02
                              :quant (l2 / little)))
                  :op2 (s2 / support-01
                        :ARG0 ii
                        :ARG1 (p2 / person
                              :ARG0-of (h2 / have-03
                                    :ARG1 (p3 / product
                                          :name (n2 / name
                                                :op1 ""Covid-19"")))
                              :ARG1-of (v / vulnerable-01)
                              :mod (e / elderly)
                              :ARG0-of (w / work-01
                                    :ARG1 (o2 / or
                                          :op1 (s3 / serve-01
                                                :ARG1 (e2 / emergency))
                                          :op2 (s4 / store
                                                :mod (g / grocery))
                                          :op3 (d / drive-01)))))))
      :snt2 (p4 / possible-01
            :ARG1 (g2 / get-through-13
                  :ARG0 (w2 / we)
                  :ARG1 (t / this))))"
"(ii / increase-01
      :ARG1 (m / monetary-quantity
            :ARG2-of (p / price-01
                  :ARG3 (c / customer
                        :mod (c2 / company
                              :name (n / name
                                    :op1 ""Vodafone"")))))
      :ARG2 (p2 / percentage-entity
            :value 2.5)
      :frequency (r / rate-entity-91
            :ARG2 (t / temporal-quantity
                  :quant 1
                  :unit (y / year))))"
"(c / cause-01
      :ARG0 (s / say-01
            :ARG0 (t / they)
            :ARG1 (h / have-quant-91
                  :ARG1 (a / and
                        :op1 (m / mask)
                        :op2 (g / glove))
                  :ARG3 (e / enough)
                  :ARG6 (g2 / go-02
                        :ARG4 (s2 / store
                              :mod (g3 / grocery)))))
      :ARG1 (c2 / cause-01
            :ARG0 (a2 / amr-unknown)
            :ARG1 (c3 / clothe-01
                  :ARG1 (e2 / everyone
                        :mod (e3 / else)))))"
"(t / think-01
      :ARG0 (ii / i)
      :ARG1 (g / game
            :ARG1-of (n / new-01)
            :topic (d / die-01
                  :ARG1 (a / amr-unknown)
                  :ord (o / ordinal-entity
                        :value 1)))
      :time (w / wait-01
            :ARG1 ii
            :ARG2 (q / queue-01
                  :ARG2 (s / supermarket))))"
"(a / and
      :op1 (p / publication
            :name (n / name
                  :op1 ""Pharmacogenomics""))
      :op2 (p2 / publication
            :name (n2 / name
                  :op1 ""Pharmacogenetics""))
      :op3 (p3 / pharmacy)
      :op4 (p4 / pharmacy)
      :op5 (p5 / pharmaceuticals)
      :op6 (p6 / pharmacy)
      :op7 (p7 / person
            :name (n3 / name
                  :op1 ""PharmacyTechnician""))
      :time (d / date-entity
            :day 11
            :month 5
            :year 2020))"
"(l / list-01
      :ARG0 (y / you)
      :ARG2 (m / more)
      :purpose (r / recommend-01
            :ARG1 (h / have-03
                  :ARG0 y
                  :ARG1 (a / and
                        :op1 (f / food)
                        :op2 (w / water)
                        :duration (t / temporal-quantity
                              :quant 2
                              :unit (w2 / week)))
                  :op2 (r2 / refill-01
                        :ARG0 y
                        :ARG1 (m2 / medication
                              :ARG1-of (p / prescribe-02
                                    :ARG2 y)))
                  :op3 (g / get-01
                        :ARG0 y
                        :ARG1 (m3 / medication
                              :mod (o / over-the-counter)))
                  :op4 (s / sign-up-03
                        :ARG0 y
                        :ARG3 (a2 / alert-01
                              :ARG0 (g2 / government-organization
                                    :ARG0-of (g3 / govern-01)
                                    :ARG1-of (l2 / local-02))
                              :ARG1 y))
                  :op5 h
                  :ARG0 y
                  :ARG1 (a3 / and
                        :op1 (t2 / toiletry)
                        :op2 (k / kit
                              :mod (a4 / aid-01
                                    :mod (f2 / first)))))
            :op6 (f3 / food
                  :beneficiary (p2 / pet))))"
"(d / deliver-01
      :ARG0 (s / store
            :poss (p / person
                  :name (n / name
                        :op1 ""Brad""
                        :op2 ""Prisley""))
            :ARG1-of (f / free-03)
            :mod (g / grocery)
            :location (c / city
                  :name (n2 / name
                        :op1 ""Nashville"")))
      :ARG1 g
      :ARG2 (p2 / person
            :mod (e / elderly))
      :time (p3 / pandemic
            :name (n3 / name
                  :op1 ""COVID-19"")))"
"(a / agree-01
      :ARG0 (ii / i)
      :ARG1 (s / state-01
            :ARG1 (r / recommend-01
                  :ARG1 (a2 / and
                        :op1 (a3 / avoid-01
                              :ARG0 (e / everyone)
                              :ARG1 (s2 / shop-01
                                    :ARG1-of (p / personal-02)))
                        :op2 (b / buy-01
                              :ARG0 e
                              :medium (o / online))
                        :purpose (s3 / stay-01
                              :ARG1 e
                              :ARG3 (s4 / safe-01
                                    :ARG2 (p2 / product
                                          :name (n / name
                                                :op1 ""COVID-19""))))))))"
"(o / or
      :op1 (p / person
            :ARG2-of (s / scam-01))
      :op2 (p2 / person
            :ARG2-of (s2 / scam-01)
            :ARG2-of (ii / include-91
                  :ARG1 (c / citizen
                        :mod (s3 / senior)
                        :poss (w / we)
                        :mod (e / especially)))))"
"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (d / dislike-01
                  :ARG0 (ii / i)
                  :ARG1 (a / and
                        :op1 (c2 / coronavirus)
                        :op2 (g / gouge-02
                              :ARG1 (p / price-01))))
            :ARG2 (f / fair-01
                  :ARG1 (h / hold-14
                        :ARG1 (p2 / person
                              :ARG0-of (r / retail-01))
                        :ARG2 (l / law
                              :topic (g2 / gouge-02))
                        :time (s / squeeze-01
                              :ARG0 (p3 / person
                                    :ARG0-of (w / wholesale-01))
                              :ARG1 p2
                              :direction (u / upstream)))
                  :polarity (a2 / amr-unknown)))
      :snt2 (s2 / stop-01
            :ARG0 (t / they)
            :ARG1 (s3 / sell-01
                  :ARG0 t)
            :mod (j / just)
            :condition (u2 / under
                  :op1 (m2 / margin
                        :mod (c3 / certain)))))"
"(p / possible-01
      :ARG1 (h / help-01
            :ARG0 (a / app
                  :mod (s / smartphone))
            :ARG1 (a2 / and
                  :op1 (t / track-01
                        :ARG1 (s2 / spread-02
                              :ARG1 (p2 / product
                                    :name (n / name
                                          :op1 ""COVID-19""))))
                  :op2 (s3 / slow-01
                        :ARG1 s2))))"
"(c / clear-06
      :ARG1 (m / message-01
            :ARG0 (a / and
                  :op1 (o / organization
                        :ARG0-of (r / regulate-01))
                  :op2 (a2 / agency
                        :ARG0-of (e / enforce-01
                              :ARG1 (l / law)))
                  :op3 (o2 / organization
                        :ARG0-of (c2 / consume-01))
                  :location (a3 / around
                        :op1 (g / globe)))
            :ARG1 (a4 / arrive-01
                  :ARG1 (s / scheme-01
                        :mod (f / fraudulent)
                        :ARG1-of (r2 / relate-01
                              :ARG2 (p / pandemic))))))"
"(n / need-01
      :ARG0 (w / we)
      :ARG1 (t / thing
            :ARG0-of (t2 / track-01
                  :ARG1 (p / paper
                        :purpose (t3 / toilet)))
            :ARG1-of (ii / instead-of-91
                  :ARG2 (t4 / thing
                        :ARG0-of (t5 / track-01
                              :ARG1 (p2 / person
                                    :name (n2 / name
                                          :op1 ""NoradSanta"")))))))"
"(p / point-04
      :ARG1 (p2 / possible-01
            :ARG1 (f / fall-01
                  :ARG1 (e / earn-01
                        :ARG1-of (p3 / project-02))
                  :ARG1-of (f2 / fast-02
                        :ARG2-of (h / have-degree-91
                              :ARG1 f
                              :ARG3 (e2 / equal)
                              :ARG4 (p4 / price-01
                                    :ARG1 (s / share))))))
      :ARG1-of (g / good-02))"
"(m / multi-sentence
      :snt1 (r / retweet-01
            :mode imperative
            :polite +
            :ARG0 (y / you)
            :ARG1 (t / thing
                  :ARG1-of (m2 / message-01)
                  :mod (t2 / this)))
      :snt2 (a / and
            :op1 (h / have-org-role-91
                  :ARG0 (w / we)
                  :ARG1 (g / government-organization
                        :name (n / name
                              :op1 ""NHS""))
                  :ARG2 (c / consultant))
            :op2 (n2 / need-01
                  :ARG0 w
                  :ARG1 (e / equipment
                        :mod (t3 / this))
                  :ARG1-of (d / desperate-02)))
      :snt3 (t4 / thank-01
            :ARG0 (ii / i)
            :ARG1 (y2 / you)))"
"(d / doom-01
      :ARG1 (p / person))"
"(r / release-01
      :ARG0 (g / government-organization
            :name (n / name
                  :op1 ""Federal""
                  :op2 ""Trade""
                  :op3 ""Commission""))
      :ARG1 (a / alert-01
            :ARG1 (p / person
                  :ARG0-of (c / consume-01))
            :ARG2 (s / scam-01
                  :ARG1-of (n2 / new-01)
                  :ARG1-of (r2 / relate-01
                        :ARG2 (l / law
                              :name (n3 / name
                                    :op1 ""COVID-19""))))))"
"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (o / opine-01
                  :ARG1 (t / this)
                  :ARG1-of (p / popular-02
                        :polarity -))
            :ARG2 (ii / illustrate-01
                  :ARG0 (p2 / person
                        :name (n / name
                              :op1 ""Trump""))
                  :ARG1 (p3 / problem
                        :topic (c2 / carry-out-03
                              :ARG1 (b / brief-01
                                    :ARG1 (p4 / press)
                                    :mod (t2 / this))
                              :manner (l / live)))
                  :ARG1-of (p5 / perfect-02)
                  :mod (j / just)))
      :snt2 (c3 / contrast-01
            :ARG1 (a / ask-01
                  :ARG0 (y / you)
                  :ARG1 (t3 / thing
                        :ARG2-of (p6 / price-01
                              :ARG1 (o2 / oil))))
            :ARG2 (k / know-01
                  :polarity -
                  :ARG0 y
                  :ARG1 (t4 / thing
                        :ARG2-of (p7 / price-01
                              :ARG1 o2))))
      :snt3 (n2 / need-01
            :ARG0 y
            :ARG1 (d / doctor
                  :mod (m2 / medicine)
                  :ARG1-of (p8 / present-02))
            :ARG1-of (c4 / cause-01
                  :ARG0 (t5 / tee-up-02
                        :ARG0 d
                        :ARG1 (l2 / lie-08
                              :ARG1-of (c5 / check-08
                                    :polarity -))
                        :mod j)
                  :condition (h / have-polarity-91
                        :ARG1 n2
                        :ARG2 -)))
      :snt4 (v / virus
            :mod (c6 / coronavirus)))"
"(c / contrast-01
      :ARG1 (k / know-01
            :ARG0 (ii / i)
            :ARG1 (w / want-01
                  :ARG0 (y / you)
                  :ARG1 (s / see-01
                        :ARG0 y
                        :ARG1 (p / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG1 y
                                    :ARG2 (p2 / partner))
                              :ARG0-of (l / live-01
                                    :polarity -
                                    :accompanier y)))))
      :ARG2 (s2 / sure-02
            :ARG0 ii
            :ARG1 (p3 / prefer-01
                  :ARG0 y
                  :ARG1 (s3 / see-01
                        :polarity -
                        :ARG0 y
                        :ARG1 (d / die-01
                              :ARG1 p)))))"
"(o / over-01
      :ARG1 (s / sell-01
            :ARG2 (o2 / organization
                  :name (n / name
                        :op1 ""DFS"")))
      :time (f / final))"
(a / amr-empty)
"(a / and
      :op1 (u / use-01
            :mode imperative
            :ARG0 (y / you
                  :part (m / mouth))
            :ARG1 (s / sense-02
                  :mod (c / common)))
      :op2 (c2 / cover-01
            :mode imperative
            :ARG0 y
            :ARG1 m
            :time (c3 / cough-01
                  :ARG0 y)))"
"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (m2 / make-01
                  :ARG0 (ii / i)
                  :ARG1 (f / film
                        :mod (d / documentary)))
            :ARG2 (l / lose-02
                  :ARG0 (f2 / film
                        :mod (d2 / documentary)
                        :ARG1-of (h / have-degree-91
                              :ARG2 (r / recent)
                              :ARG3 (m3 / most))
                        :poss ii)
                  :ARG1 (d3 / debut-01
                        :ARG1 f2
                        :ARG2 (f3 / festival))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (w / work-of-art
                              :name (n / name
                                    :op1 ""COVID-19"")))))
      :snt2 (c3 / contrast-01
            :ARG1 (h2 / have-03
                  :polarity -
                  :ARG0 (ii2 / i)
                  :ARG1 (o / or
                        :op1 (w2 / work-01)
                        :op2 (ii3 / income)))
            :ARG2 (w3 / want-01
                  :ARG0 ii2
                  :ARG1 (d4 / do-02
                        :ARG0 ii2
                        :ARG1 (s / something))
                  :ARG0-of (c4 / cause-01
                        :ARG1 (b / begin-01
                              :ARG0 ii2
                              :ARG1 (v / volunteer-01
                                    :ARG0 ii2
                                    :ARG2 (s2 / supermarket
                                          :mod (s3 / small)))))))
      :snt3 (s4 / suppose-02
            :ARG1 (f4 / film
                  :mod (l2 / last)
                  :poss ii2)
            :ARG2 (r2 / release-01
                  :ARG1 f4
                  :location (c5 / country
                        :name (n2 / name
                              :op1 ""Australia"")))
            :ARG1-of (c6 / contrast-01
                  :ARG2 (p / push-02
                        :ARG1 f4))))"
(a / amr-empty)
"(h / happy-01
      :ARG0 (s / supply-01
            :ARG0 (w / we
                  :part-of (c / company
                        :name (n / name
                              :op1 ""EcoWater"")
                        :poss (p / person
                              :name (n2 / name
                                    :op1 ""McLeod""))))
            :ARG1 (p2 / peroxide
                  :mod (g / grade
                        :name (n3 / name
                              :op1 ""NSF""))
                  :ARG1-of (h2 / have-quant-91
                        :ARG3 (e / equal)
                        :ARG4 (n4 / need-01)))
            :ARG2 (s2 / sanitizer))
      :ARG1 w)"
"(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Gulzar""
                  :op2 ""Ahmed"")
            :ARG0-of (h / have-org-role-91
                  :ARG2 (j / justice
                        :mod (c / chief))))
      :ARG1 (s2 / satisfactory-03
            :polarity -
            :ARG1 (p2 / perform-02
                  :ARG0 (p3 / person
                        :name (n2 / name
                              :op1 ""Dr""
                              :op2 ""Zafar""
                              :op3 ""Mirza""))
                  :ARG1 (t / tackle-01
                        :ARG0 p3
                        :ARG1 (o / outbreak-29
                              :ARG1 (d / disease
                                    :name (n3 / name
                                          :op1 ""Coronavirus"")))))))"
"(e / edition
      :consist-of (p / paper
            :purpose (t / toilet))
      :domain (t2 / this))"
"(p / picture-01
      :ARG1 (s / supermarket
            :location (c / city
                  :name (n / name
                        :op1 ""Miami"")))
      :mod (t / this)
      :time (a / after
            :op1 (o / open-01
                  :ARG1 s)
            :quant (t2 / temporal-quantity
                  :quant 1
                  :unit (h / hour))))"
"(a / and
      :op1 (w / work-01
            :ARG0 (ii / i)
            :ARG1 (r / repair-01)
            :location (a2 / around
                  :op1 (r2 / room
                        :poss ii))
            :ARG2-of (ii2 / include-01
                  :ARG1 (f / fix-02
                        :ARG0 ii
                        :ARG1 (f2 / frame
                              :part-of (b / bed
                                    :poss ii)))))
      :op2 (f3 / finish-01
            :ARG0 ii
            :ARG1 (s / season
                  :ord (o / ordinal-entity
                        :value 1)
                  :part-of (b2 / broadcast-program
                        :name (n / name
                              :op1 ""Cloak""
                              :op2 ""and""
                              :op3 ""Dagger""))))
      :op3 (s2 / shop-01
            :ARG0 ii
            :ARG1 (c / computer
                  :mod (d / desktop))
            :ARG2 (w2 / window)
            :medium (o2 / online)
            :mod (s3 / some))
      :time (d2 / day
            :mod 25))"
"(ii / impact-01
      :ARG0 (g / globalize-01)
      :ARG1 (s / sector
            :mod (g2 / good
                  :mod (p / person
                        :ARG0-of (c / consume-01)))))"
"(s / stay-01
      :ARG1 (s2 / shift-01
            :ARG1 (b / behave-01
                  :ARG0 (p / person
                        :ARG0-of (c / consume-01)))
            :ARG1-of (r / relate-01
                  :ARG2 (l / law
                        :name (n / name
                              :op1 ""COVID-19"")))
            :mod (a / amr-unknown))
      :location (h / here))"
"(s / surface-01
      :ARG1 (c / call-03
            :ARG1 (b / boycott-01
                  :ARG1 (g / giant
                        :mod (g2 / good
                              :mod (p / person
                                    :ARG0-of (c2 / consume-01))))))
      :time (a / after
            :op1 (r / raise-01
                  :ARG0 g
                  :ARG1 (p2 / price-01
                        :ARG1 (a2 / and
                              :op1 (s2 / soap)
                              :op2 (p3 / product
                                    :ARG0-of (s3 / sanitize-01
                                          :ARG1 (h / hand))))))))"
"(h / have-03
      :ARG0 (c / company
            :ARG0-of (m / manufacture-01
                  :ARG1 (s / seafood))
            :ARG1-of (b / base-01
                  :location (c2 / country-region
                        :name (n / name
                              :op1 ""New""
                              :op2 ""England""))))
      :ARG1 (a / and
            :op1 (ii / inventory)
            :op2 (r / reach-01
                  :ARG0 c
                  :location (w / worldwide))
            :ARG0-of (m2 / meet-01
                  :ARG1 (s2 / spike-01
                        :ARG1 (p / prepare-01
                              :ARG1 (m3 / meal
                                    :mod (h2 / home)))
                        :ARG1-of (e / expect-01)))))"
"(s / suggest-01
      :ARG0 (y / you)
      :ARG1 (r / recommend-01
            :ARG0 y
            :ARG1 (s2 / start-01
                  :ARG0 (p / person
                        :mod (t / that)
                        :prep-in (m / mode
                              :polarity -
                              :mod (p2 / panic-01)
                              :time (y2 / yet)))
                  :ARG1 (p3 / panic-01
                        :ARG0 p)))
      :time (a / amr-unknown))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (s / see-01
                  :ARG0 (p / person
                        :ARG0-of (m2 / manage-01
                              :ARG1 (s2 / supermarket)))
                  :ARG1 (w / wait-01
                        :ARG1 (w2 / we)
                        :ARG1-of (l / long-03
                              :ARG2-of (h / have-degree-91
                                    :ARG1 w
                                    :ARG3 (t / too
                                          :mod (w3 / way))))))
            :op2 (f / find-01
                  :ARG0 p
                  :ARG1 (r / register
                        :ARG1-of (o / open-09)))
            :op3 (l2 / let-01
                  :ARG0 p
                  :ARG1 (g / go-02
                        :ARG0 w2
                        :ord (o2 / ordinal-entity
                              :value 1))))
      :snt2 (t2 / thank-01
            :ARG0 (ii / i)
            :ARG1 (p2 / person
                  :name (n / name
                        :op1 ""Allah""))
            :ARG2 (t3 / that)
            :time (ii2 / immediate)))"
"(l / likely-01
      :ARG1 (p / pick-up-04
            :ARG0 (y / you)
            :ARG1 (d / disease
                  :name (n / name
                        :op1 ""Corona""
                        :op2 ""Virus""))
            :location (s / supermarket
                  :ARG1-of (l2 / local-02)))
      :ARG2-of (h / have-degree-91
            :ARG1 p
            :ARG3 (m / more)
            :ARG4 (p2 / pick-up-04
                  :ARG0 y
                  :ARG1 d
                  :location (p3 / pub)))
      :ARG1-of (c / cause-01
            :ARG0 (a / and
                  :op1 (s2 / shop-01)
                  :op2 (t / thing)
                  :time (m2 / moment))))"
"(s / sanitize-01
      :quant 2
      :ARG0 (p / product
            :name (n / name
                  :op1 ""Clorox""))
      :ARG2 (f / fabric)
      :quant (l / lot)
      :domain (t / this)
      :quant (m / mass-quantity
            :quant 24
            :unit (f2 / fluid-ounce)
            :mod (e / each)))"
"(m / multi-sentence
      :snt1 (c / call-on-05
            :ARG0 (w / we)
            :ARG1 (u / university)
            :ARG2 (c2 / continue-01
                  :ARG0 u
                  :ARG1 (p / pay-01
                        :ARG0 u
                        :ARG2 (c3 / company
                              :ARG0-of (p2 / provide-01
                                    :ARG1 (s / serve-01
                                          :ARG1 (f / food))
                                    :ARG2 u)))
                  :purpose (p3 / possible-01
                        :ARG1 (p4 / pay-01
                              :ARG0 u
                              :ARG2 (p5 / person
                                    :ARG0-of (w2 / work-01
                                          :ARG1 (s2 / serve-01
                                                :ARG1 f))
                                    :location (c4 / campus))
                              :time (c5 / crisis)))))
      :snt2 (j / join-04
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (w3 / we)
            :manner (s3 / send-01
                  :ARG0 y
                  :ARG1 (e / email)
                  :time (n / now))))"
"(m / multi-sentence
      :snt1 (h / have-03
            :polarity -
            :ARG0 (s / store
                  :mod (g / grocery))
            :ARG1 (c / cream
                  :mod (s2 / sour)
                  :location (b / bottle
                        :ARG1-of (s3 / squeeze-01)))
            :time (t / today))
      :snt2 (h2 / have-03
            :ARG0 (t2 / they)
            :ARG1 (a / and
                  :op1 (c2 / cream
                        :ARG1-of (r / regular-03))
                  :op2 (c3 / cream
                        :ARG1-of (l / light-06))
                  :op3 (c4 / cream
                        :mod (c5 / chive)))
            :ARG1-of (c6 / contrast-01
                  :ARG2 (b2 / bottle
                        :polarity -
                        :ARG1-of (s4 / squeeze-01)
                        :mod (f / frickin)))))"
"(m / multi-sentence
      :snt1 (s / scheme-01
            :ARG1 (d / defraud-01
                  :ARG1 (p / person
                        :ARG0-of (c / consume-01)))
            :quant (m2 / many)
            :location (a / across
                  :op1 (c2 / country))
            :time (a2 / already)
            :mod (e / event
                  :name (n / name
                        :op1 ""COVID19"")))
      :snt2 (h / have-condition-91
            :ARG1 (r / retweet-01
                  :mode imperative
                  :polite +
                  :ARG0 (y / you)
                  :ARG1 (t / this)
                  :purpose (s2 / share-01
                        :ARG0 y
                        :ARG1 t
                        :ARG2 (a3 / and
                              :op1 (p2 / person
                                    :ARG0-of (h2 / have-rel-role-91
                                          :ARG1 y
                                          :ARG2 (f / friend)))
                              :op2 (p3 / person
                                    :ARG0-of (h3 / have-rel-role-91
                                          :ARG1 y
                                          :ARG2 (f2 / family))))
                        :purpose (ii / inform-01
                              :ARG0 y
                              :ARG1 a3
                              :ARG2 (s3 / scam-01
                                    :ARG1-of (g / go-on-15)
                                    :ARG1-of (ii2 / identify-01
                                          :ARG0 (p4 / person
                                                :ARG0-of (e2 / enforce-01
                                                      :ARG1 (l / law))))
                                    :quant (s4 / some)))))
            :ARG2 (p5 / possible-01))
      :snt3 (u / url-entity
            :value ""https://t.co/IMFeN5IcIm""))"
"(d / decide-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Sheffield""
                  :op2 ""United""
                  :op3 ""F""
                  :op4 ""C""))
      :ARG1 (c2 / close-01
            :ARG0 c
            :ARG1 (s / store
                  :mod (r / retail-01)
                  :poss c
                  :mod (a / all)
                  :ARG2-of (ii / include-01
                        :ARG1 (s2 / store
                              :location (r2 / road
                                    :name (n2 / name
                                          :op1 ""Meadowhall""))
                              :poss c)))
            :duration (t / temporary))
      :ARG1-of (c3 / cause-01
            :ARG0 (s3 / situation
                  :time (c4 / current)
                  :ARG1-of (e / evolve-01)
                  :mod (p / product
                        :name (n3 / name
                              :op1 ""COVID""
                              :op2 19)
                        :mod (d2 / disease
                              :name (n4 / name
                                    :op1 ""Coronavirus""))))))"
"(a / age-01
      :ARG1 (t / this)
      :ARG1-of (w / well-09
            :polarity -))"
"(s / step-01
      :ARG1 (a / and
            :op1 (g / government-organization
                  :name (n / name
                        :op1 ""Ministry""
                        :op2 ""of""
                        :op3 ""Agriculture""
                        :op4 ""and""
                        :op5 ""Fishings""))
            :op2 (c / city
                  :name (n2 / name
                        :op1 ""Municipality""
                        :op2 ""of""
                        :op3 ""Greater""
                        :op4 ""Amman"")))
      :ARG2 (s2 / stabilize-01
            :ARG0 a
            :ARG1 (t / thing
                  :ARG2-of (p / price-01
                        :ARG1 (v / vegetable)))))"
"(w / way
      :ARG1-of (b / brilliant-01)
      :manner-of (s / stop-01
            :ARG1 (h / hoard-01
                  :time (p / pandemic
                        :mod (c / coronavirus))))
      :domain (t / this))"
"(l / language
      :polarity -
      :name (n / name
            :op1 ""English"")
      :ARG1-of (s / standard-02)
      :domain (t / this))"
"(a / affect-01
      :ARG0 (c / coronavirus)
      :ARG1 (s / shop-01
            :ARG0 (y / you)
            :ARG2 (c2 / company
                  :name (n / name
                        :op1 ""Amazon""))
            :mod (o / online))
      :mod (a2 / also))"
"(o / opine-01
      :ARG0 (p / person
            :ARG1-of (e / expert-01))
      :ARG1 (w / way
            :quant 3
            :manner-of (c / change-01
                  :ARG1 (s / shop-01
                        :ARG1 (g / grocery)
                        :medium (o2 / online))
                  :ARG1-of (p2 / possible-01)
                  :duration (t / term
                        :ARG1-of (l / long-03)))
            :domain (a / and
                  :op1 (o3 / order-01
                        :quant (m / more)
                        :location (o4 / online))
                  :op2 (b / buy-01
                        :quant (m2 / more)
                        :manner (b2 / bulk))
                  :op3 (e2 / experience-01
                        :ARG1 (s2 / store)
                        :mod (v / virtual)
                        :quant (m3 / more)))))"
"(m / multi-sentence
      :snt1 (r / reflex
            :domain (ii / it))
      :snt2 (p / paranoid
            :domain (e / everyone))
      :snt3 (p2 / possible-01
            :ARG1 (u / understand-01
                  :ARG0 (ii2 / i)
                  :manner (p3 / perspective
                        :mod (b / both))))
      :snt4 (g / give-01
            :ARG0 (v / virus
                  :name (n / name
                        :op1 ""Corvid19""))
            :ARG1 (n2 / name
                  :ARG1-of (b2 / bad-07))
            :ARG2 (d / disease
                  :name (n3 / name
                        :op1 ""Common""
                        :op2 ""Cold""))))"
"(s / see-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""DS""
                  :op2 ""Smith"")
            :domain (c2 / company
                  :ARG1-of (h / have-degree-91
                        :ARG2 (g / good-03
                              :ARG1 c2)
                        :ARG3 (m / most))
                  :ARG0-of (r / recycle-01
                        :ARG1 (p / paper))
                  :ARG0-of (p2 / package-01)))
      :ARG1 (r2 / rise-01
            :ARG1 (n2 / need-01
                  :ARG1 (p3 / package-01))
            :mod (s2 / sheer)
            :ARG1-of (c3 / cause-01
                  :ARG0 (r3 / rise-01
                        :ARG1 (d / demand-01
                              :ARG0 (p4 / person
                                    :ARG0-of (c4 / consume-01)))
                        :time (c5 / crisis
                              :mod (c6 / coronavirus))))))"
"(s / show-01
      :ARG0 (v / video
            :mod (t / this))
      :ARG1 (p / possible-01
            :ARG1 (s2 / spread-02
                  :ARG1 (c / coronavirus)
                  :manner (c2 / cough-01
                        :quant 1
                        :mod (j / just)
                        :location (s3 / supermarket))
                  :ARG1-of (e / easy-05
                        :degree (s4 / so)))))"
"(d / deadline
      :domain (r / round-05
            :ARG1 (f / fund-01
                  :ARG1 (r2 / respond-01
                        :ARG0 (g / group
                              :mod (c / community)
                              :location (c2 / city
                                    :name (n / name
                                          :op1 ""Barnet"")))
                        :ARG1 (d2 / disease
                              :name (n2 / name
                                    :op1 ""Coronavirus""))))
            :ord (o / ordinal-entity
                  :value 1))
      :time (d3 / date-entity
            :weekday (f2 / friday)
            :mod (t / this)))"
"(o / obligate-01
      :ARG1 (ii / i)
      :ARG2 (a / and
            :op1 (a2 / adapt-01
                  :ARG0 ii)
            :op2 (ii2 / improvise-01
                  :ARG0 ii)
            :op3 (o2 / overcome-01
                  :ARG0 ii))
      :time (t / turn-away-04
            :ARG1 ii
            :ARG2 (s / store
                  :mod (g / grocery)
                  :ARG1-of (l / local-02))
            :time (d / date-entity
                  :dayperiod (m / morning)
                  :mod (t2 / today))
            :ARG1-of (c / cause-01
                  :ARG0 (h / have-03
                        :polarity -
                        :ARG0 ii
                        :ARG1 (m2 / mask
                              :purpose (s2 / safe-01)
                              :ARG1-of (n / new-01)
                              :ARG1-of (r / recommend-01)))))
      :ARG1-of (q / quick-02))"
"(ii / important-01
      :ARG1 (c / continue-01
            :ARG0 (w / we)
            :ARG1 (b / build-01
                  :ARG0 w
                  :ARG1 (r / relation-03
                        :ARG0 w
                        :ARG2 (p / person
                              :ARG0-of (c2 / consume-01)))
                  :time (p2 / period
                        :mod (t / this)
                        :time-of (ii2 / isolate-01
                              :ARG1 w))))
      :degree (r2 / really))"
"(s / say-01
      :ARG0 (p / person
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (ii / i)
                  :ARG2 (g / grandmother)))
      :ARG1 (p2 / possible-01
            :ARG1 (g2 / go-02
                  :ARG0 (y / you)
                  :ARG4 (s2 / store
                        :mod (g3 / grocery))
                  :beneficiary ii)
            :polarity (a / amr-unknown)))"
"(p / possible-01
      :ARG1 (w / way
            :direction (f / forward)
            :purpose (s / suggest-01
                  :ARG0 (y / you)
                  :ARG1 (r / reopen-01
                        :ARG0 y
                        :ARG1 (c / country
                              :name (n / name
                                    :op1 ""America""))))
            :domain (a / and
                  :op1 (g / go-02
                        :mode imperative
                        :ARG0 y)
                  :op2 (d / do-02
                        :mode imperative
                        :ARG0 y
                        :ARG1 (w2 / work-01
                              :ARG0 y
                              :ARG1-of (r2 / real-04)
                              :quant (s2 / some))
                        :mod (f2 / for-a-change)))
            :domain (a2 / and
                  :op1 (l / lead-02
                        :ARG0 y
                        :source (f3 / front))
                  :op2 (g2 / go-02
                        :mode imperative
                        :ARG0 y
                        :ARG1 (v / volunteer-01
                              :ARG0 y
                              :ARG1 (o / or
                                    :op1 (c2 / clean-01
                                          :ARG0 y
                                          :ARG1 (a3 / and
                                                :op1 (b / bed)
                                                :op2 (r3 / room)
                                                :ARG1-of (r4 / ride-01
                                                      :ARG0 (o2 / organization
                                                            :name (n2 / name
                                                                  :op1 ""COVID-19"")))))
                                    :op2 (w3 / work-01
                                          :ARG0 y
                                          :location (s3 / supermarket)
                                          :manner (t / till))
                                    :op3 (b2 / bag-up-02
                                          :ARG0 y)))))))"
"(c / cause-01
      :ARG0 (l / law
            :name (n / name
                  :op1 ""COVID-19""))
      :ARG1 (d / decrease-01
            :ARG0 l
            :ARG1 (p / price-01
                  :ARG1 (a / and
                        :op1 (h / hotel)
                        :op2 (c2 / car
                              :ARG1-of (r / rent-01))
                        :op3 (d2 / dress
                              :mod (w / woman))))))"
"(r / recommend-01
      :ARG1 (r2 / restore-01
            :ARG0 (g / government-organization
                  :ARG0-of (g2 / govern-01))
            :ARG1 (m / mass-quantity
                  :quant 4
                  :unit (g3 / gram))
            :purpose (p / possible-01
                  :ARG1 (g4 / get-01
                        :ARG0 (p2 / person)
                        :ARG1 (a / and
                              :op1 (ii / information
                                    :topic (c / coronavirus))
                              :op2 (r3 / realize-01
                                    :ARG1 c))
                        :location (h / home
                              :poss p2)))))"
"(m / multi-sentence
      :snt1 (p / possible-01
            :polarity -
            :ARG1 (m2 / mean-01
                  :ARG0 (y / you)
                  :ARG2 (t / that))
            :ARG1-of (s / sure-02
                  :ARG0 (p2 / person
                        :ARG0-of (h / have-org-role-91
                              :ARG1 (o / organization
                                    :name (n / name
                                          :op1 ""Curry""
                                          :op2 ""Health""
                                          :op3 ""Network""))
                              :ARG2 (o2 / officer
                                    :mod (c / chief)
                                    :mod (e / executive))))))
      :snt2 (t2 / tell-01
            :ARG0 (h2 / hospital
                  :ARG1-of (l / local-02)
                  :poss (w / we))
            :ARG1 (s2 / strategy
                  :ARG1-of (c2 / crazy-03)
                  :purpose (q / quarantine-01)
                  :quant (s3 / some))
            :ARG2 (ii / i
                  :ARG1-of (l2 / local-02)
                  :ARG1-of (w2 / wait-01
                        :ARG2 (r / result-01
                              :ARG1 (t3 / test-01
                                    :ARG2 (p3 / product
                                          :name (n2 / name
                                                :op1 ""Covid-19""))))
                        :duration (d / day
                              :ord (o3 / ordinal-entity
                                    :value 2))))))"
"(r / remind-01
      :ARG0 (s / style
            :poss (p / presentation
                  :name (n / name
                        :op1 ""Covid-19""
                        :op2 ""Mortality"")))
      :ARG1 (p2 / program
            :topic (r2 / result
                  :mod (f / football))
            :mod (a / awful)
            :time (d / date-entity
                  :decade 1970
                  :weekday (s2 / saturday)
                  :dayperiod (a2 / afternoon)))
      :ARG2 (w / we))"
"(c / catch-02
      :ARG1 (h / he)
      :ARG2 (r / rob-01
            :ARG0 h
            :ARG1 (c2 / citizen))
      :manner (r2 / red-handed)
      :time (p / pandemic
            :mod 19)
      :time (p2 / pandemic))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (r / recommend-01
                  :ARG1 (s / set-up-03
                        :ARG0 (y / you)
                        :ARG1 (r2 / roadblock)
                        :location (p / place))
                  :ARG2 y)
            :op2 (q / question-01
                  :ARG0 y
                  :ARG1 (p2 / person)
                  :manner (o / on-the-spot)))
      :snt2 (t / think-01
            :ARG0 (p3 / person
                  :quant (m2 / many))
            :ARG1 (n / need-01
                  :ARG0 p3
                  :ARG1 (g / go-02
                        :ARG0 p3
                        :ARG4 (s2 / supermarket
                              :mod (e / every)
                              :location (a2 / area
                                    :poss p3))))
            :mod (s3 / still))
      :snt3 (m3 / make-do-02
            :mode imperative
            :ARG0 (y2 / you)
            :ARG1 (t2 / thing
                  :ARG1-of (h / have-03
                        :ARG0 y2)))
      :snt4 (s4 / stay-01
            :ARG1 (p4 / person
                  :name (n2 / name
                        :op1 ""Stay""
                        :op2 ""Home""
                        :op3 ""Save""
                        :op4 ""Lives"")))
      :snt5 (s5 / stay-01
            :ARG1 (p5 / person)
            :location (h2 / home)))"
"(b / be-temporally-at-91
      :ARG1 (ii / it)
      :ARG2 (d / date-entity
            :time ""17:16""
            :ARG0-of (c / cause-01
                  :ARG1 (c2 / complain-01
                        :ARG0 (a / arsehole
                              :quant (h / horde)
                              :mod (b2 / bourgeois)
                              :ARG1-of (ii2 / inconvenience-01
                                    :ARG0 (v / virus
                                          :mod (c3 / coronavirus))
                                    :degree (m / mild)))
                        :ARG1 (s / stick-01
                              :ARG1 a
                              :ARG2 (ii3 / inside)
                              :accompanier (a2 / and
                                    :op1 (f / furniture
                                          :mod (m2 / midcentury)
                                          :poss a)
                                    :op2 (s2 / slash
                                          :op1 (d2 / dog)
                                          :op2 (c4 / child))
                                    :op3 (ii4 / internet
                                          :mod (s3 / speed
                                                :ARG1-of (h2 / high-02)))
                                    :op4 (s4 / service
                                          :mod (s5 / stream-03)
                                          :quant (m3 / multiple))
                                    :op5 (s6 / shop-01
                                          :ARG0 a
                                          :medium (o / online)))
                              :duration (d3 / day
                                    :mod (a3 / all)))))))"
"(m / multi-sentence
      :snt1 (f / fantastic-02
            :mode expressive
            :ARG1 (p / person
                  :ARG0-of (w / work-01
                        :ARG1 (c / care-03
                              :ARG1 (h / health)))))
      :snt2 (l / like-02
            :ARG0 (ii / i)
            :ARG1 (g / give-01
                  :ARG0 ii
                  :ARG1 (s / shout-out-03
                        :ARG0 ii
                        :ARG1 (p2 / person
                              :ARG0-of (d / drive-01
                                    :ARG1 (l2 / lorry))
                              :ARG0-of (w2 / work-01
                                    :ARG1 (g2 / get-05
                                          :ARG0 p2
                                          :ARG1 (f2 / food)
                                          :ARG2 (s2 / supermarket))
                                    :duration (r / round-the-clock)
                                    :duration (w3 / week
                                          :quant (t / temporal-quantity
                                                :quant 7
                                                :unit (d2 / day)))))))
            :mod (a / also))
      :snt3 (s3 / stop-01
            :mode imperative
            :polite +
            :ARG0 (y / you)
            :ARG1 (b / buy-01
                  :ARG0 y
                  :manner (p3 / panic-01
                        :ARG1 y))
            :ARG1-of (c2 / cause-01
                  :ARG0 (c3 / come-01
                        :ARG1 (f3 / food
                              :quant (m2 / more))))))"
"(r / reduce-01
      :ARG0 (w / we)
      :ARG1 (c / cost-01
            :ARG1 (o / overage
                  :mod (d / data))
            :location (c2 / country
                  :name (n / name
                        :op1 ""Australia"")))
      :ARG3 (r2 / rate-entity-91
            :ARG1 (m / monetary-quantity
                  :quant 10
                  :unit (d2 / dollar))
            :ARG2 (v / volume-quantity
                  :quant 1
                  :unit (g / gigabyte)))
      :ARG4 (r3 / rate-entity-91
            :ARG1 (m2 / monetary-quantity
                  :quant 1
                  :unit (d3 / dollar))
            :ARG2 (o2 / or
                  :op1 (p / plan
                        :mod (p2 / phone
                              :mod (p3 / person
                                    :ARG0-of (c3 / consume-01))))
                  :op2 (c4 / customer
                        :mod (t / tablet))
                  :op3 (c5 / customer
                        :mod (b / broadband
                              :mod (m3 / mobile)))
                  :ARG0-of (h / have-03
                        :polarity -
                        :ARG1 (p4 / plan
                              :mod (d4 / data)
                              :ARG1-of (e / end-01
                                    :polarity -)))
                  :ARG0-of h
                  :ARG1 (p5 / plan
                        :ARG0-of (t2 / trigger-01
                              :ARG1 o
                              :mod (r4 / rate-entity-91
                                    :ARG1 (m4 / monetary-quantity
                                          :quant 10
                                          :unit (d5 / dollar))
                                    :ARG2 (v2 / volume-quantity
                                          :quant 1
                                          :unit (g2 / gigabyte))))))
            :time (c6 / current)))"
"(d / date
      :mod (l / last)
      :time-of (p / pay-01
            :ARG1 (b / bill-01
                  :ARG3 (e / electricity)
                  :ARG1-of (c / cause-01
                        :ARG0 (t / tension
                              :ARG1-of (h / high-02)))
                  :time (m / month
                        :mod l)))
      :ARG1-of (c2 / cause-01
            :ARG0 (d2 / delay-01
                  :ARG1 (l2 / law
                        :name (n / name
                              :op1 ""COVID-19""))))
      :domain (a / amr-unknown))"
"(k / know-01
      :polarity -
      :ARG0 (ii / i)
      :ARG1 (r / recommend-01
            :ARG1 (o / or
                  :op1 (h / hold-01
                        :ARG0 ii)
                  :op2 (ii2 / invest-01
                        :ARG0 ii))))"
"(m / multi-sentence
      :snt1 (t / take-03
            :ARG0 (g / guy
                  :mod (t2 / this))
            :ARG1 (c / coronavirus)
            :ARG2 (s / stride))
      :snt2 (a / and
            :op1 (s2 / sense-02
                  :ARG1 (h / he))
            :op2 (p / panic-01
                  :polarity -
                  :ARG1 h)
            :op3 (e / enjoy-01
                  :ARG0 h
                  :ARG1 (ii / isolate-01
                        :ARG1 h
                        :ARG2 h)
                  :ARG1-of (g2 / general-02))))"
"(m / multi-sentence
      :snt1 (e / expect-01
            :ARG1 (s / slow-down-03
                  :ARG0 (l / law
                        :name (n / name
                              :op1 ""COVID-19""))
                  :ARG1 (m2 / market-01
                        :ARG1 (h / house-01)
                        :time (d / date-entity
                              :season (s2 / spring))))
            :condition (m3 / miss-02
                  :ARG0 (y / you)
                  :ARG1 (ii / it)))
      :snt2 (k / keep-01
            :ARG0 (w / we)
            :ARG1 (p / post-01
                  :ARG0 w
                  :ARG1 (a / and
                        :op1 (ii2 / insight)
                        :op2 (p2 / perspective)
                        :mod (a2 / any)
                        :ARG1-of (l2 / learn-01
                              :ARG0 w
                              :time (a3 / and
                                    :op1 (d2 / day)
                                    :op2 (w2 / week)
                                    :op3 (m4 / month)
                                    :ARG1-of (c / come-01)
                                    :mod (a4 / ahead))))
                  :ARG2 (y2 / you))))"
"(f / find-out-03
      :ARG0 (b / broadcast-program
            :name (n / name
                  :op1 ""FOX43""))
      :ARG1 (h / have-manner-91
            :ARG1 (c / cancel-01
                  :ARG1 (h2 / have-org-role-91
                        :ARG1 (g / gym)
                        :ARG2 (m / member))
                  :time (l / law
                        :name (n2 / name
                              :op1 ""COVID-19""))
                  :ARG2-of (p / penalize-01
                        :polarity -
                        :mod (a / any)))))"
"(m / multi-sentence
      :snt1 (j / join-01
            :ARG0 (c / company
                  :name (n / name
                        :op1 ""Syngenta""))
            :ARG1 (c2 / company
                  :name (n2 / name
                        :op1 ""Huntsman_Corp""))
            :ARG2 (m2 / make-01
                  :ARG0 c
                  :ARG1 (p / product
                        :name (n3 / name
                              :op1 ""HandSanitizer""))
                  :location (s / site
                        :location (c3 / city
                              :name (n4 / name
                                    :op1 ""Monthey""))
                        :poss c)
                  :purpose (u / use-01
                        :ARG1 p
                        :location (a / and
                              :op1 (h / hospital
                                    :ARG1-of (l / local-02
                                          :ARG1 (p2 / pharmacy)))
                              :op2 p2)))
            :ARG2-of (r / respond-01
                  :ARG0 c
                  :ARG1 (a2 / appeal-02
                        :ARG0 (a3 / authority
                              :mod (c4 / country
                                    :name (n5 / name
                                          :op1 ""Switzerland"")))
                        :mod (u2 / urgent))))
      :snt2 (v / virus
            :mod (c5 / coronavirus)
            :medium (u3 / url-entity
                  :value ""https://t.co/3"")))"
"(s / suspend-01
      :ARG0 (c / company
            :mod (d / durable))
      :ARG1 (m / manufacture-01
            :ARG0 c)
      :ARG1-of (c2 / cause-01
            :ARG0 (l / lock-down-06
                  :mod (p / product
                        :name (n / name
                              :op1 ""COVID-19"")))))"
"(f / fumble-01
      :ARG0 (a / authority
            :mod (c / country
                  :name (n / name
                        :op1 ""Italy"")))
      :ARG1 (s / step-01
            :ARG1 a
            :ARG2 (a2 / and
                  :op1 (ii / isolate-01
                        :ARG0 a
                        :ARG1 (c2 / coronavirus))
                  :op2 (l / limit-01
                        :ARG0 a
                        :ARG1 (m / move-01
                              :ARG1 (p / person)))
                  :time (e / early
                        :op1 (o / outbreak-29)
                        :ARG1-of (h / have-degree-91
                              :ARG2 (m2 / matter-01
                                    :ARG1 a2)
                              :ARG3 (m3 / most)))))
      :time (s2 / seek-01
            :ARG0 a
            :ARG1 (p2 / preserve-01
                  :ARG0 a
                  :ARG1 (a3 / and
                        :op1 (l2 / liberty
                              :mod (c3 / civil)
                              :mod (b / basic))
                        :op2 (e2 / economy))))
      :concession (h2 / have-03
            :ARG0 a
            :ARG1 (m4 / measure-02
                  :ARG1-of (ii2 / include-91
                        :ARG2 (m5 / measure-02
                              :ARG1-of (h3 / have-degree-91
                                    :ARG2 (t / tough-02
                                          :ARG1 m5)
                                    :ARG3 (m6 / most)
                                    :ARG5 (w / world))))
                  :quant (s3 / some))))"
"(c / contrast-01
      :ARG1 (d / drop-01
            :ARG1 (t / traffic
                  :mod (s / store)
                  :time (d2 / date-entity
                        :month 3))
            :ARG2 (p / percentage-entity
                  :value 53))
      :ARG2 (s2 / stay-01
            :ARG1 (r / retailer
                  :quant (s3 / some))
            :ARG3 (o / optimistic
                  :topic (r2 / rebound-01))))"
"(s / stock-up-02
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Vanessa""
                  :op2 ""Hudgens""))
      :ARG1 (d / drug)
      :ARG1-of (a / appear-02)
      :ARG1-of (ii / instead-of-91
            :ARG2 (a2 / and
                  :op1 (f / food)
                  :op2 (p2 / paper
                        :purpose (t / toilet))
                  :purpose (q / quarantine-01))))"
"(p / put-01
      :ARG0 (w / work-01
            :ARG0 (w2 / we)
            :ARG1 (s / store
                  :mod (g / grocery)))
      :ARG1 w2
      :ARG2 (r / risk-01
            :ARG0 w2
            :ARG2 (e / expose-01
                  :ARG1 w2
                  :ARG2 (v / virus))
            :ARG1-of (h / high-02
                  :degree (v2 / very)))
      :condition (d / do-02
            :ARG0 w2
            :ARG1 (t / this)))"
"(r / recommend-01
      :ARG1 (s / stop-01
            :ARG0 (y / you)
            :ARG1 (d / do-02
                  :ARG0 y
                  :ARG1 (t / thing
                        :quant 19)
                  :ARG2 (p / person
                        :ARG0-of (w / work-01
                              :ARG2 (s2 / store
                                    :mod (g / grocery))))
                  :time (p2 / pandemic
                        :mod (d2 / disease
                              :name (n / name
                                    :op1 ""Coronavirus""))))))"
"(p / point-01
      :ARG0 (b / broadcast-program
            :name (n / name
                  :op1 ""Coronavirus""
                  :op2 ""Outbreak""))
      :ARG1 (b2 / business
            :ARG1-of (l / local-02))
      :ARG2 (b3 / beat-03
            :ARG0 (w / website
                  :mod (m / massive)
                  :ARG1-of (l2 / local-02)
                  :ARG1-of (p2 / price-01
                        :ARG1-of (f / fix-03))
                  :ARG0-of (d / deliver-01
                        :duration (u / up-to
                              :op1 (t / temporal-quantity
                                    :quant 1
                                    :unit (m2 / minute)))))
            :ARG1 (c / company
                  :name (n2 / name
                        :op1 ""Amazon""))))"
"(g / get-03
      :ARG1 (f / find-01
            :ARG1 (s / slot
                  :purpose (d / deliver-01)
                  :purpose (s2 / shop-01
                        :ARG1 (g2 / grocery)
                        :medium (o / online))))
      :ARG2 (h / hard-02
            :ARG1 f
            :ARG2-of (h2 / have-degree-91
                  :ARG1 f
                  :ARG3 (m / more))))"
"(m / multi-sentence
      :snt1 (c / close-10
            :ARG1 (e / equity)
            :ARG2 (b / bottom-out-01
                  :ARG0 e
                  :time (w / week
                        :mod (t / this))
                  :ARG0-of (m2 / mean-01
                        :ARG1 (e2 / extreme
                              :mod (m3 / massive)
                              :time (t2 / today)
                              :domain (a / and
                                    :op1 (v / volatility
                                          :mod (v2 / variable))
                                    :op2 (o / oil)
                                    :op3 (t3 / treasury))))))
      :snt2 (c2 / contrast-01
            :ARG1 (p / possible-01
                  :ARG1 (w2 / worsen-01
                        :ARG1 (h / headline)))
            :ARG2 (n / near-02
                  :ARG1 (p2 / price-01)
                  :ARG2 (e3 / extreme
                        :poss p2)
                  :time (a2 / already))))"
"(p / possible-01
      :ARG1 (q / qualify-02
            :ARG1 (y / you)
            :ARG2 (g / grant-01
                  :ARG0 (g2 / government-organization
                        :ARG0-of (g3 / govern-01))
                  :ARG2 y))
      :condition (p2 / possible-01
            :polarity -
            :ARG1 (a / afford-01
                  :ARG0 y
                  :ARG1 (t / top-up-04
                        :ARG0 y
                        :ARG1 (m / meter
                              :mod (p3 / prepay-01)
                              :poss y)
                        :time (c / crisis
                              :mod (p4 / product
                                    :name (n / name
                                          :op1 ""Covid-19""))
                              :mod (c2 / current))))))"
"(u / use-01
      :ARG0 (a / anyone)
      :ARG1 (r / refer-01
            :ARG1 (o / organization
                  :name (n / name
                        :op1 ""PKU"")))
      :ARG2 (o2 / or
            :op1 (g / get-01
                  :ARG0 a
                  :ARG1 (f / food
                        :mod (e / extra))
                  :ARG2 (s / supermarket))
            :op2 (r2 / request-01
                  :ARG0 a
                  :ARG1 f
                  :ARG2 s))
      :polarity (a2 / amr-unknown)
      :time (y / yet)
      :mod (v / virus
            :name n
            :op1 ""coronavirus""))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (ii2 / infect-01
                  :ARG1 ii
                  :ARG2 (r / respire-01
                        :ARG0 ii)
                  :time (a / after
                        :op1 (c / contact-01
                              :ARG0 ii
                              :ARG1-of (r2 / risky-02)
                              :location (s2 / supermarket))
                        :quant (t / temporal-quantity
                              :quant 5
                              :unit (d / day)
                              :mod (e / exact))))
            :ARG2 (p / person
                  :name (n / name
                        :op1 ""Barrettvet"")))
      :snt2 (s3 / suspect-01
            :ARG0 (ii3 / i)
            :ARG1 (f / form
                  :mod (d2 / disease
                        :name (n2 / name
                              :op1 ""CoVID-19"")))
            :ARG0-of (c2 / cause-01
                  :ARG1 (d3 / download-01
                        :ARG0 ii3
                        :ARG1 (a2 / app))))
      :snt3 (t2 / thank-01
            :ARG0 (ii4 / i)
            :ARG1 (y / you)))"
"(r / read-01
      :mode imperative
      :polite +
      :ARG0 (y / you)
      :location (o / on)
      :condition (b / business
            :mod (s / small)
            :ARG0-of (f / feel-01
                  :ARG1 (c / cripple-01
                        :ARG0 (l / lock-down-06
                              :mod (t / this))
                        :ARG1 b))
            :domain y))"
"(a / and
      :op1 (s / shop-01
            :ARG0 (y / you)
            :ARG1 (s2 / supermarket
                  :ARG1-of (l / local-02
                        :ARG2 y)))
      :op2 (s3 / start-01
            :ARG0 y
            :ARG1 (f / fit-04
                  :ARG1 y
                  :ARG2 (c / cough-01
                        :ARG0 y)
                  :ARG1-of (m / minor-01))))"
"(m / multi-sentence
      :snt1 (r / rise-01
            :ARG1 (t / thing
                  :name (n / name
                        :op1 ""SPP"")
                  :mod (s / specification
                        :mod (o / organization
                              :name (n2 / name
                                    :op1 ""EU""))))
            :ARG2 (m2 / monetary-quantity
                  :quant 0.24
                  :unit (p / pound))
            :ARG4 (a / average-01
                  :ARG1 t
                  :ARG2 (r2 / rate-entity-91
                        :ARG1 (m3 / monetary-quantity
                              :quant 163.39
                              :unit (p2 / pound))
                        :ARG2 (m4 / mass-quantity
                              :quant 1
                              :unit (k / kilogram))))
            :time (w / week
                  :ARG1-of (e / end-01
                        :ARG2 (d / date-entity
                              :day 28
                              :month 3))))
      :snt2 (a2 / appear-02
            :ARG1 (c / cope-01
                  :ARG0 (c2 / chain
                        :ARG0-of (s2 / supply-01))
                  :ARG1 (a3 / and
                        :op1 (v / virus
                              :mod (c3 / coronavirus))
                        :op2 (s3 / shift-01
                              :ARG1 (d2 / demand-01)
                              :ARG2 (s4 / supermarket)
                              :ARG3 (s5 / serve-01
                                    :ARG1 (f / food))
                              :mod (d3 / dramatic)))
                  :ARG1-of (w2 / well-09))))"
"(c / cover-02
      :ARG0 (w / we)
      :ARG1 (y / you)
      :condition (w2 / want-01
            :ARG0 y
            :ARG1 (c2 / check-01
                  :ARG0 y
                  :ARG1 (t / thing
                        :manner-of (a / affect-01
                              :ARG0 (s / spend-01
                                    :ARG0 (p / person
                                          :ARG0-of (c3 / consume-01)))
                              :ARG1 (a2 / and
                                    :op1 (ii / industry
                                          :mod (a3 / any))
                                    :op2 (g / geography
                                          :mod (a4 / any))))))))"
"(l / look-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (ii / inside
            :op1 (s / store
                  :mod (g / grocery)
                  :mod (s2 / small)
                  :location (c / city
                        :name (n / name
                              :op1 ""Livonia""))))
      :time (d / deal-01
            :ARG0 s
            :ARG2 (d2 / demand-01
                  :ARG1-of (ii2 / increase-01)
                  :time (w / week
                        :mod (p / past)))
            :ARG1-of (c2 / cause-01
                  :ARG0 (v / virus
                        :mod (c3 / coronavirus))))
      :medium (u / url-entity
            :value ""https://t.co/GuttBvrweZ""))"
"(f / fail-01
      :ARG1 (b / business
            :mod (p / physical))
      :ARG1-of (c / cause-01
            :ARG0 (c2 / coronavirus)))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (r / resemble-01
                  :polarity -
                  :mode imperative
                  :ARG1 (y / you)
                  :ARG2 (ii / i))
            :op2 (g / go-02
                  :mode imperative
                  :ARG0 y
                  :ARG4 (s / supermarket)))
      :snt2 (h / have-quant-91
            :ARG1 (p / person
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (ii2 / i))
                  :location (o / outside))
            :ARG2 (m2 / many)
            :ARG3 (t / too)
            :time (t2 / today))
      :snt3 (s2 / stay-01
            :location (h2 / home)
            :ARG0-of (s3 / save-02
                  :ARG1 (l / life))))"
"(g / grapple-01
      :ARG0 (p / person
            :ARG0-of (c / consume-01)
            :mod (c2 / country
                  :name (n / name
                        :op1 ""U.S."")))
      :ARG1 (c3 / certain
            :polarity -
            :domain (ii / impact-01
                  :ARG0 (c4 / coronavirus
                        :mod (n2 / novel)
                        :ARG0-of (f / fracture-01
                              :ARG1 (h / habit
                                    :mod (s / shop-01)
                                    :mod (t / tradition)
                                    :location (n3 / nationwide)))
                        :ARG1-of (n4 / name-01
                              :ARG2 (n5 / name
                                    :op1 ""COVID-19""))))))"
"(r / recommend-01
      :ARG1 (l / look-04
            :ARG0 (ii / i)
            :ARG1 (b / buy-01
                  :ARG0 ii
                  :ARG1 (s / share
                        :mod (c / company
                              :name (n / name
                                    :op1 ""Logitech"")))
                  :ARG1-of (ii2 / instead-of-91
                        :ARG2 (p / paper
                              :purpose (t / toilet)))))
      :ARG2 ii)"
"(t / tell-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Rob""
                  :op2 ""Handfield"")
            :ARG0-of (h / have-org-role-91
                  :ARG1 (u / university
                        :name (n2 / name
                              :op1 ""NC""
                              :op2 ""State""))
                  :ARG2 (p2 / professor
                        :topic (m / manage-01
                              :ARG1 (s / supply-01)))))
      :ARG1 (a / and
            :op1 (s2 / solid-02
                  :ARG1 (c / chain
                        :mod (s3 / supply-01
                              :ARG2 (s4 / store
                                    :mod (g / grocery)))))
            :op2 (n3 / need-01
                  :polarity -
                  :ARG1 (s5 / shop-01
                        :mod (m2 / mass))
                  :time (o / outbreak-29
                        :name (n4 / name
                              :op1 ""COVID-19""))))
      :ARG2 (p3 / publication
            :name (n5 / name
                  :op1 ""WRAL"")))"
"(h / have-03
      :ARG0 (ii / i)
      :ARG1 (p / pack
            :consist-of (p2 / paper
                  :purpose (t / toilet))
            :mod (l / last)
            :location (s / supermarket
                  :location (c / city
                        :name (n / name
                              :op1 ""Raccoon""
                              :op2 ""City"")))))"
"(s / spare-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (t / think-01
            :ARG0 y
            :ARG2 (p / person
                  :ARG0-of (w / work-01
                        :ARG2 (s2 / supermarket))
                  :ARG0-of (s3 / serve-01
                        :ARG2 (s4 / society)
                        :time (c / crisis
                              :mod (v / virus
                                    :mod (c2 / coronavirus)))
                        :manner (p2 / protect-01
                              :polarity -
                              :ARG1 p
                              :frequency (o / often))
                        :manner (p3 / pay-01
                              :ARG0 p
                              :ARG3 (a / and
                                    :op1 (h / hour
                                          :mod (e / extra))
                                    :op2 (r / respect-01
                                          :ARG0 (c3 / customer)
                                          :ARG1 p))))))
      :time (g / go-01
            :ARG1 y
            :ARG4 (s5 / store)
            :purpose (b / buy-01
                  :ARG0 y
                  :ARG1 (a2 / and
                        :op1 (p4 / pasta
                              :quant (m / mass-quantity
                                    :quant 10
                                    :unit (k / kilogram)))
                        :op2 (b2 / box
                              :quant 7
                              :consist-of (p5 / paper
                                    :mod (t2 / toilet)))))))"
"(m / multi-sentence
      :snt1 (a / announce-01
            :ARG0 (s / supermarket
                  :example (a2 / and
                        :op1 (c / company
                              :name (n / name
                                    :op1 ""Lidl""))
                        :op2 (c2 / company
                              :name (n2 / name
                                    :op1 ""ICeland""))
                        :op3 (c3 / company
                              :name (n3 / name
                                    :op1 ""Nationwide""))))
            :ARG1 (t / time
                  :time-of (o / open-01
                        :beneficiary (p / person
                              :ARG1-of (v / vulnerable-01)))
                  :ARG1-of (s2 / special-02)))
      :snt2 (n4 / need-01
            :ARG0 (ii / i)
            :ARG1 (f / follow-01
                  :ARG1 (a3 / and
                        :op1 (c4 / company
                              :name (n5 / name
                                    :op1 ""Morrisons""))
                        :op2 (c5 / company
                              :name (n6 / name
                                    :op1 ""Sainsburys""))
                        :op3 (c6 / company
                              :name (n7 / name
                                    :op1 ""Asda""))
                        :op4 (c7 / company
                              :name (n8 / name
                                    :op1 ""Tesco""))
                        :op5 (s3 / supermarket
                              :mod (o2 / other)
                              :mod (a4 / all))))
            :mod (j / just))
      :snt3 (e / event
            :name (n9 / name
                  :op1 ""COVID2019"")))"
"(f / fit-06
      :ARG1 (r / realize-01
            :ARG0 (d / douchebag
                  :mod (a / all)
                  :mod (t / that)
                  :ARG0-of (l / look-down-06
                        :ARG1 (a2 / and
                              :op1 (f2 / folk
                                    :ARG0-of (d2 / deliver-01))
                              :op2 (j / janitor)
                              :op3 (p / person
                                    :ARG0-of (h / have-org-role-91
                                          :ARG1 (s / store
                                                :mod (g / grocery))
                                          :ARG3 (c / cash-01))))))
            :ARG1 (d3 / degree
                  :degree-of (v / vital
                        :domain (j2 / job
                              :mod t)
                        :time (c2 / crisis)))
            :time (n / now))
      :ARG2 (k / karma))"
"(m / multi-sentence
      :snt1 (f / feel-01
            :ARG0 (s / store
                  :mod (g / grocery)
                  :location (c / city
                        :name (n / name
                              :op1 ""Pound""
                              :op2 ""Ridge"")
                        :location (s2 / state
                              :name (n2 / name
                                    :op1 ""NY""))))
            :ARG1 (r / rush-01
                  :ARG1 (p / person
                        :ARG0-of (s3 / shop-01))))
      :snt2 (t / take-01
            :ARG1 (t2 / this)
            :time (y / yesterday)))"
"(m / multi-sentence
      :snt1 (f / find-01
            :ARG0 (ii / i)
            :ARG1 (a / anxiety
                  :ARG1-of (n / new-01)
                  :consist-of (u / use-01
                        :ARG0 (p / person)
                        :ARG1 (a2 / and
                              :op1 (m2 / mask)
                              :op2 (g / glove))
                        :ARG1-of (c / correct-02
                              :polarity -)
                        :location (s / store
                              :mod (g2 / grocery))))
            :time (t / today))
      :snt2 (p2 / panics-01
            :ARG0 (ii2 / it)
            :ARG1 (ii3 / i)))"
"(a / and
      :op1 (ii / income
            :ARG1-of (g / guarantee-01
                  :mod (a2 / all)))
      :op2 (c / cancel-01
            :ARG1 (r / rent-01))
      :op3 (c2 / cancel-01
            :ARG1 (m / mortgage-01)))"
"(m / multi-sentence
      :snt1 (a / allow-01
            :polarity -
            :ARG1 (b / buy-01
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""Bristol"")
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 (p2 / person)
                              :ARG2 (f / friend)))
                  :ARG1 (c / cream
                        :mod (f2 / face))
                  :location (s / supermarket)
                  :subevent-of (s2 / shop-01
                        :ARG0 p2
                        :ARG1 (f3 / food)))
            :time (h2 / have-degree-91
                  :ARG2 (d / die-01)
                  :ARG3 (m2 / most)))
      :snt2 (g / go-02
            :ARG0 (p3 / person
                  :quant 4000)
            :ARG1 (s3 / sunbathe-00
                  :ARG0 p3
                  :location (g2 / garden
                        :location (c2 / city
                              :name (n2 / name
                                    :op1 ""London""))
                        :mod (a2 / affluent)
                        :poss (y / you)))
            :time (w / walk-01
                  :ARG0 p3
                  :ARG2 (r / road
                        :ARG1-of (q / quiet-04)))))"
"(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Christian""
                  :op2 ""Navarro"")
            :ARG0-of (h / have-org-role-91
                  :ARG1 (c / company
                        :name (n2 / name
                              :op1 ""Wally's""))
                  :ARG2 (p2 / president))
            :ARG0-of (h2 / have-org-role-91
                  :ARG1 c
                  :ARG2 (p3 / principal)))
      :ARG1 (f / focus-01
            :ARG0 c
            :ARG1 (e / effort-01
                  :ARG0 c
                  :quant (p4 / percentage-entity
                        :value 100))
            :ARG2 (a / and
                  :op1 (s2 / shop-01
                        :ARG1 (a2 / and
                              :op1 (w / wine)
                              :op2 (s3 / spirit)
                              :op3 (f2 / food
                                    :mod (g / gourmet)))
                        :manner (r / retail-01)
                        :location (a3 / and
                              :op1 (s4 / store)
                              :op2 (o / online)))
                  :op2 (t / take-out-11
                        :ARG2 (r2 / restaurant
                              :poss c)))
            :time (n3 / now)))"
"(s / see-01
      :polarity -
      :ARG0 (ii / i)
      :ARG1 (m / man
            :ARG1-of (h / have-quant-91
                  :ARG2 (m2 / many)
                  :ARG3 (s2 / so)))
      :location (s3 / supermarket)
      :time (t / time
            :ARG1-of (s4 / same-01))
      :time (e / ever)
      :location (c / country
            :name (n / name
                  :op1 ""Australia"")))"
"(a / advise-01
      :ARG0 (a2 / and
            :op1 (c / company
                  :name (n / name
                        :op1 ""Coles""))
            :op2 (c2 / company
                  :name (n2 / name
                        :op1 ""Woolworths"")))
      :ARG2 (p / possible-01
            :ARG1 (s / survive-01
                  :ARG0 (p2 / product
                        :name (n3 / name
                              :op1 ""COVID""))
                  :ARG1 (s2 / surface)
                  :duration (u / up-to
                        :op1 (t / temporal-quantity
                              :quant 3
                              :unit (d / day)))))
      :mod (l / last))"
(a / amr-empty)
"(c / contrast-01
      :ARG1 (e / easy-05
            :ARG1 (c2 / catch-up-07
                  :ARG1 (y / you)
                  :ARG2 (n / negativity
                        :mod (a / all)
                        :poss (v / virus
                              :name (n2 / name
                                    :op1 ""coronavirus"")))))
      :ARG2 (t / take-01
            :mode imperative
            :ARG0 y
            :ARG1 (m / moment)
            :purpose (s / share-01
                  :ARG0 y
                  :ARG1 (t2 / thing
                        :manner-of (h / help-01
                              :ARG0 y
                              :ARG1 (p / person
                                    :mod (o / other)
                                    :location (c3 / community
                                          :poss y))
                              :time (o2 / outbreak-29))))))"
"(s / soar-01
      :ARG1 (t / thing
            :ARG2-of (p / price-01))
      :ARG1-of (c / cause-01
            :ARG0 (d / demand-01
                  :ARG1 (p2 / product
                        :mod (a / agriculture))
                  :ARG1-of (r / rise-01)
                  :location (c2 / country
                        :name (n / name
                              :op1 ""Spain""))
                  :ARG1-of (c3 / cause-01
                        :ARG0 (f / fear-01
                              :ARG1 (o / outbreak-29
                                    :mod (n2 / novel)))))))"
"(ii / interest-01
      :ARG2 (s / see-01
            :ARG1 (t / thing
                  :manner-of (c / change-01
                        :ARG1 (b / behave-01
                              :ARG0 (p / person
                                    :ARG0-of (c2 / consume-01))
                              :ARG1 (b2 / buy-01
                                    :ARG0 p))
                        :ARG1-of (c3 / cause-01
                              :ARG0 (c4 / coronavirus))
                        :time (o / overnight)))))"
"(c / contrast-01
      :ARG1 (p / pose-02
            :ARG0 (p2 / pandemic
                  :name (n / name
                        :op1 ""COVID-19""))
            :ARG1 (t / threaten-01
                  :ARG0 p2
                  :ARG2 (s / security
                        :mod (f / food))
                  :ARG1-of (s2 / serious-02)
                  :location (l / level
                        :ARG1-of (l2 / local-02))))
      :ARG2 (p3 / possible-01
            :ARG1 (s3 / spare-01
                  :ARG0 p2
                  :ARG1 (m / market
                        :mod f
                        :mod (g / globe)))))"
"(t / transform-01
      :ARG0 (a / and
            :op1 (g / government-organization
                  :name (n / name
                        :op1 ""USACEHQ""))
            :op2 (g2 / government-organization
                  :name (n2 / name
                        :op1 ""FEMA""))
            :op3 (m / military
                  :name (n3 / name
                        :op1 ""US""
                        :op2 ""National""
                        :op3 ""Guard""))
            :op4 (g3 / government-organization
                  :name (n4 / name
                        :op1 ""CDCgov"")))
      :ARG1 (b / building
            :name (n5 / name
                  :op1 ""Jacob""
                  :op2 ""K.""
                  :op3 ""Javits""
                  :op4 ""Convention""
                  :op5 ""Center""))
      :ARG2 (h / hospital
            :mod (e / emergency))
      :part-of (e2 / effort-01
            :ARG0 (g4 / government-organization
                  :name (n6 / name
                        :op1 ""Department""
                        :op2 ""of""
                        :op3 ""Defense""))
            :ARG1 (r / respond-01
                  :ARG0 g4
                  :ARG1 (ii / incident
                        :name (n7 / name
                              :op1 ""COVID19"")))))"
"(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (r / run-01
                  :ARG0 (l / load
                        :consist-of (c / coward
                              :ARG0-of (w / work-01
                                    :polarity -
                                    :duration (t / temporal-quantity
                                          :quant 1
                                          :unit (d / day)))
                              :ARG0-of (ii / isolate-01
                                    :mod (c2 / constant))
                              :ARG1-of ii))
                  :ARG1 (w2 / world)
                  :time (s / soon)))
      :snt2 (s2 / shop-01
            :ARG0 (y / you)
            :location (c3 / city
                  :mod (g / game
                        :name (n / name
                              :op1 ""Minecraft"")))
            :medium (o / online)
            :time (d2 / deliver-01
                  :ARG0 (d3 / drone)
                  :ARG1 (f / food))))"
"(p / pressure-01
      :ARG0 (b / bank)
      :ARG1 (f / firm
            :mod (h / healthcare))
      :ARG2 (r / raise-01
            :ARG0 f
            :ARG1 (p2 / price-01))
      :time (c / crisis
            :mod (c2 / coronavirus)))"
(a / amr-empty)
"(m / multi-sentence
      :snt1 (a / alert-01
            :mode expressive)
      :snt2 (r / reduce-01
            :ARG1 (m2 / monetary-quantity
                  :ARG2-of (p / price-01))
            :ARG1-of (c / cause-01
                  :ARG0 (a2 / and
                        :op1 (c2 / coronavirus)
                        :op2 (c3 / class
                              :mod (o / online))
                        :op3 (c4 / cat
                              :ARG2-of (q / quarantine-01))
                        :op4 (l / lock-down-06
                              :degree (t / total))))))"
"(a / and
      :op1 (s / stay-01
            :mode imperative
            :ARG1 (y / you
                  :part (h / hand))
            :location (h2 / home))
      :op2 (s2 / stay-01
            :mode imperative
            :ARG1 y
            :ARG3 (s3 / safe-01
                  :ARG1 y))
      :op3 (w / wash-01
            :mode imperative
            :ARG0 y
            :ARG1 h)
      :op4 (a2 / avoid-01
            :mode imperative
            :ARG0 y
            :ARG1 (c / crowd))
      :op5 (e / eat-01
            :mode imperative
            :ARG0 y
            :ARG1 (f / food
                  :mod (h3 / healthy)))
      :op6 (a3 / and
            :op1 (p / panic-01
                  :polarity -
                  :mode imperative
                  :ARG0 y)
            :op2 (s4 / spread-03
                  :polarity -
                  :mode imperative
                  :ARG0 y
                  :ARG1 (n / news
                        :ARG1-of (f2 / fake-02))))
      :op7 (f3 / follow-02
            :mode imperative
            :ARG0 y
            :ARG1 (d / directive
                  :poss (g / government-organization
                        :ARG0-of (g2 / govern-01)))
            :ARG1-of (c2 / cost-01
                  :ARG2 (a4 / any))
            :purpose (p2 / prevent-01
                  :ARG0 y
                  :ARG1 (e2 / event
                        :name (n2 / name
                              :op1 ""Covid19"")))))"
"(c / cause-01
      :ARG0 (a / amr-unknown)
      :ARG1 (b / buy-01
            :polarity -
            :ARG0 (t / they)
            :ARG1 (n / nuts)))"
"(a / and
      :op1 (s / stock-01
            :ARG1 (p / product
                  :ARG0-of (s2 / sanitize-01
                        :ARG1 (h / hand))
                  :mod (t / this)))
      :op2 (a2 / available-02
            :ARG2 (p2 / purchase-01
                  :ARG1 p
                  :time (n / now))))"
"(m / multi-sentence
      :snt1 (b / be-located-at-91
            :ARG1 (ii / i)
            :ARG2 (c / check-out-05
                  :ARG0 (p / person
                        :ARG0-of (c2 / cash-01))
                  :location (s / store
                        :mod (g / grocery)))
            :time (a / ask-01
                  :ARG0 p
                  :ARG1 (t / truth-value
                        :polarity-of (f / find-01
                              :ARG0 (c3 / couple
                                    :mod (e / elderly)
                                    :location (ii2 / in-front-of
                                          :op1 ii))
                              :ARG1 (t2 / thing
                                    :ARG1-of (n / need-01
                                          :ARG0 c3))))
                  :ARG2 c3))
      :snt2 (s2 / say-01
            :ARG0 (m2 / man
                  :mod (o / old))
            :ARG1 (b2 / bread
                  :polarity -)
            :manner (p2 / polite-01))
      :snt3 (a2 / and
            :op1 (h / hand-01
                  :ARG0 (ii3 / i)
                  :ARG1 (l / loaf
                        :consist-of (b3 / bread)
                        :poss ii3)
                  :ARG2 (t3 / they))
            :op2 (c4 / clap-01
                  :ARG0 (e2 / everyone)))
      :snt4 (p3 / person
            :name (n2 / name
                  :op1 ""Albert""
                  :op2 ""Einstein"")
            :domain (m3 / man
                  :mod (t4 / that))))"
"(m / multi-sentence
      :snt1 (h / have-condition-91
            :ARG1 (e / endanger-01
                  :ARG0 (y / you)
                  :ARG1 (l / live-01
                        :ARG0 (p / person
                              :ARG1-of (o / obligate-01
                                    :ARG2 (a / and
                                          :op1 (p2 / package-01
                                                :ARG0 p
                                                :ARG1 (t / thing
                                                      :ARG1-of (s / shop-01
                                                            :ARG0 y
                                                            :purpose (g / gratification))))
                                          :op2 (s2 / ship-01
                                                :ARG0 p
                                                :ARG1 t)
                                          :op3 (d / deliver-01
                                                :ARG0 p
                                                :ARG1 t))))))
            :ARG2 (o2 / order-01
                  :ARG0 y
                  :ARG1 (t2 / thing
                        :ARG1-of (n / need-01
                              :polarity -
                              :ARG0 y))
                  :medium (o3 / online)
                  :time (n2 / now
                        :mod (r / right))))
      :snt2 (d2 / do-02
            :polarity -
            :mode imperative
            :ARG0 (y2 / you)))"
"(p / possible-01
      :ARG1 (p2 / protect-01
            :ARG0 (y / you)
            :ARG1 y
            :ARG2 (p3 / product
                  :name (n / name
                        :op1 ""COVID-19""))
            :time (s / shop-01
                  :ARG0 y
                  :ARG1 (g / grocery)
                  :manner (o / or
                        :op1 (ii / in-store)
                        :op2 (o2 / online))))
      :manner (a / amr-unknown))"
"(l / look-02
      :ARG1 (c / change-01
            :ARG0 (c2 / company
                  :name (n / name
                        :op1 ""Walmart""))
            :ARG1 (p / price-01
                  :ARG1 (a / and
                        :op1 (j / jugs
                              :mod (c3 / country
                                    :name (n2 / name
                                          :op1 ""Great""
                                          :op2 ""Britain""))
                              :poss c2)
                        :op2 (f / filter
                              :mod c3
                              :poss c2)))
            :manner (l2 / leave-12
                  :ARG0 c2
                  :ARG1 (t / tag
                        :mod (o / old))
                  :ARG2 (b / behind
                        :op1 (t2 / tag
                              :ARG1-of (n3 / new-01))))))"
"(p / possible-01
      :ARG1 (p2 / provide-01
            :ARG0 (t / they)
            :ARG1 (a / accommodate-01
                  :ARG0 t
                  :ARG1 (p3 / person
                        :mod (c / country
                              :name (n / name
                                    :op1 ""Malaysia"")))
                  :ARG3 (p4 / price
                        :mod (n2 / nominal)
                        :ARG1-of (b / bear-01
                              :ARG0 (p5 / person
                                    :ARG0-of (e / employ-01)
                                    :location (c2 / country
                                          :name (n3 / name
                                                :op1 ""Singapore"")))
                              :ARG1-of (p6 / possible-01))))
            :ARG2 p3)
      :polarity (a2 / amr-unknown)
      :condition (l / low-04
            :ARG1 (o / occupy-01
                  :ARG1 (h / hotel))))"
"(ii / increase-01
      :ARG1 (s / sell-01
            :ARG0 (s2 / store
                  :mod (g / grocery)))
      :manner (d / dramatic)
      :time (s3 / spread-02
            :ARG1 (l / law
                  :name (n / name
                        :op1 ""COVID-19""))))"
"(h / have-degree-91
      :ARG1 (c / coal
            :ARG0-of (g / guzzle-01
                  :ARG1 (w / water
                        :quant (v / volume-quantity
                              :quant 10000
                              :unit (l / liter)))
                  :frequency (r / rate-entity-91
                        :ARG2 (s / second))))
      :ARG2 (b / big)
      :ARG3 (m / most)
      :ARG5 (c2 / consume-01
            :ARG0 c
            :ARG1 w
            :location (c3 / country
                  :name (n / name
                        :op1 ""South""
                        :op2 ""Africa""))))"
"(m / multi-sentence
      :snt1 (s / send-out-04
            :ARG0 (t / they)
            :ARG1 (t2 / thing
                  :ARG0-of (a / advise-01
                        :ARG1 (c / citizen
                              :poss (t3 / they))
                        :ARG2 (c2 / city
                              :name (n / name
                                    :op1 ""Covid-19""))))
            :ARG2 c
            :manner (t4 / tell-01
                  :ARG0 t3
                  :ARG1 (c3 / confirm-01
                        :ARG1 (c4 / case-04)
                        :location (a2 / area
                              :poss t3))
                  :ARG2 c))
      :snt2 (s2 / show-01
            :ARG0 (m2 / map
                  :mod (v / virus
                        :name (n2 / name
                              :op1 ""corona"")))
            :ARG1 (t5 / thing
                  :frequency-of (b / be-located-at-91
                        :ARG1 (c5 / case-04
                              :ARG1-of (c6 / confirm-01))
                        :ARG2 (p / place
                              :mod (c7 / certain)
                              :example (o / or
                                    :op1 (s3 / station
                                          :mod (b2 / bus))
                                    :op2 (p2 / pharmacy)
                                    :op3 (s4 / supermarket)))
                        :time (r / recent)))
            :mod (e / even)))"
"(m / multi-sentence
      :snt1 (n / need-01
            :ARG0 (g / government-organization
                  :ARG0-of (g2 / govern-01))
            :ARG1 (f / force-01
                  :ARG0 g
                  :ARG1 (c / company
                        :name (n2 / name
                              :op1 ""Argos""))
                  :ARG2 (c2 / close-01
                        :ARG0 c)))
      :snt2 (s / sell-01
            :ARG0 (t / they)
            :ARG1 (a / and
                  :op1 (f2 / food)
                  :op2 (m2 / medicine))
            :ARG0-of (c3 / cause-01
                  :ARG1 (q / queue-01
                        :ARG1-of (h / have-quant-91
                              :ARG3 (t2 / times
                                    :quant 10)
                              :ARG4 (q2 / queue-01
                                    :ARG1 (s2 / supermarket))
                              :ARG1-of (c4 / cause-01
                                    :ARG0 (a2 / amr-unknown)))))))"
"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (b / bad-07
                  :ARG1 (p / product
                        :name (n / name
                              :op1 ""COVID-19"")))
            :ARG2 (s / see-01
                  :ARG0 (y / you)
                  :ARG1 (p2 / price-01
                        :ARG1 (g / gas))
                  :polarity (a / amr-unknown)))
      :snt2 (l / low-04
            :ARG1 (t / they)
            :ARG2-of (h / have-degree-91
                  :ARG1 t
                  :ARG3 (m2 / more)
                  :ARG4 (s2 / standard
                        :mod (d / date-02)
                        :poss (ii / i)))))"
"(m / multi-sentence
      :snt1 (p / prefer-01
            :ARG0 (ii / i)
            :ARG1 (b / be-located-at-91
                  :ARG1 ii
                  :ARG2 (m2 / movie
                        :name (n / name
                              :op1 ""28""
                              :op2 ""Days""
                              :op3 ""Later"")))
            :ARG2 (b2 / be-located-at-91
                  :ARG1 ii
                  :ARG2 (s / situation
                        :time (c / current))))
      :snt2 (s2 / stack-01
            :ARG1 (s3 / shelf)
            :manner (n2 / nice-01)
            :location (m3 / movie
                  :mod (a / at-least))))"
"(r / recommend-01
      :ARG1 (p / panic-01
            :polarity -
            :ARG0 (p2 / person
                  :mod (c / country
                        :name (n / name
                              :op1 ""Canada"")))
            :ARG1 (s / secure-02
                  :ARG1 (s2 / system
                        :mod (f / food)
                        :poss p2)))
      :ARG1-of (c2 / cause-01
            :ARG0 (c3 / case-04
                  :quant 19
                  :ARG1 (d / disease
                        :name (n2 / name
                              :op1 ""COVID-19""))
                  :ARG1-of (c4 / confirm-01))))"
"(c / contrast-01
      :ARG1 (l / look-04
            :ARG0 (b / brand
                  :name (n / name
                        :op1 ""DTC""))
            :ARG1 (s / store
                  :mod (b2 / brick)
                  :mod (m / mortar))
            :ARG2 (f / facilitate-01
                  :ARG0 b
                  :ARG1 (g / grow-01)))
      :ARG2 (c2 / change-01
            :ARG0 (c3 / coronavirus)
            :ARG1 l))"
(a / amr-empty)
"(n / need-01
      :ARG0 (w / we
            :mod (e / especially)
            :age (o / over
                  :op1 (t / temporal-quantity
                        :quant 70
                        :unit (y / year)))
            :ARG1-of (c / capable-01
                  :polarity -
                  :ARG2 (s / shop-01
                        :ARG0 w
                        :manner (ii / in-person))
                  :time (n2 / now)))
      :ARG1 (k / know-01
            :ARG0 w
            :ARG1 (r / rule-01
                  :ARG1 (s2 / shop-01
                        :ARG2 (e2 / essential
                              :example (g / grocery
                                    :source (s3 / supermarket)))
                        :medium (o2 / online))
                  :ARG1-of (n3 / new-01))))"
"(m / multi-sentence
      :snt1 (r / recommend-01
            :ARG1 (h / have-03
                  :ARG0 (p / person
                        :ARG0-of (h2 / have-org-role-91
                              :ARG2 (m2 / minister
                                    :mod (p2 / prime)))
                        :poss (w / we))
                  :ARG1 (c / courage
                        :purpose (t / take-01
                              :polarity -
                              :ARG0 p
                              :ARG1 (b / bill-01
                                    :ARG3 (a / and
                                          :op1 (e / electricity)
                                          :op2 (g / gas)))
                              :ARG2 (p3 / province
                                    :ARG1-of (l / lock-down-03))))
                  :mod (a2 / at-least)))
      :snt2 (d / down-03
            :ARG1 (p4 / price-01
                  :ARG1 (p5 / petrol))
            :extent (w2 / way)
            :mod (t2 / too))
      :snt3 (d2 / die-01
            :ARG1 (b2 / business)
            :mod (a3 / also)
            :time (r2 / regime
                  :poss (y / you))))"
"(l / list-01
      :ARG0 (c / company
            :ARG0-of (d / distribute-01
                  :ARG1 (p / product
                        :name (n / name
                              :op1 ""Tata""
                              :op2 ""Consumer""
                              :op3 ""Productions""))))
      :ARG1 c
      :ARG2 (c2 / company
            :ARG0-of (s / sell-01
                  :mod (m / marketplace))
            :location (p2 / platform
                  :mod (c3 / company
                        :name (n2 / name
                              :op1 ""Flipkart"")))))"
"(m / multi-sentence
      :snt1 (g / go-02
            :ARG0 (ii / i)
            :ARG4 (s / supermarket
                  :ARG1-of (n / near-02
                        :ARG2-of (h / have-degree-91
                              :ARG1 s
                              :ARG3 (m2 / most)))
                  :ARG4-of (g2 / go-02
                        :ARG0 ii
                        :ARG1-of (u / use-02
                              :ARG0 ii))))
      :snt2 (s2 / see-01
            :ARG0 (ii2 / i)
            :ARG1 (a / and
                  :op1 (p / person
                        :ARG0-of (h2 / have-org-role-91
                              :ARG2 (c / cashier)))
                  :op2 (p2 / person
                        :ARG1-of (e / employ-01)
                        :mod (a2 / all)
                        :ARG0-of (u2 / use-01
                              :ARG1 (a3 / and
                                    :op1 (m3 / mask)
                                    :op2 (g3 / glove)))))
            :time (t / then))
      :snt3 (a4 / and
            :op1 (h3 / have-03
                  :polarity -
                  :ARG0 (ii3 / i)
                  :ARG1 (ii4 / idea
                        :topic (r / resemble-01
                              :ARG1 (ii5 / it)
                              :ARG2 (t2 / that))))
            :op2 (h4 / have-03
                  :ARG0 (e2 / everyone)))
      :snt4 (b / blockade-01
            :ARG0 (t3 / they)
            :ARG1 (d / desk
                  :mod c))
      :ARG2 (b2 / box
            :mod (w / water)
            :quant (b3 / bunch))
      :mod (a5 / also))"
"(m / multi-sentence
      :snt1 (g / go-02
            :ARG0 (y / you)
            :ARG4 (p / pharmacy
                  :mod (a / any)
                  :mod (t / this))
            :purpose (f / find-out-03
                  :ARG0 y
                  :ARG1 (m2 / monetary-quantity
                        :ARG1-of (p2 / pay-01
                              :ARG0 p
                              :ARG3 (s / stock))))
            :polarity (a2 / amr-unknown))
      :snt2 (f2 / fuel-01
            :polarity -
            :mode imperative
            :polite +
            :ARG0 y
            :ARG1 (r / rumor-01)
            :time (b / before
                  :op1 (k / know-01
                        :ARG1 (f3 / fact)))
            :ARG1-of (c / cause-01
                  :ARG0 (h / hike-02
                        :ARG0 (c2 / company
                              :ARG0-of (w / wholesale-01)
                              :mod (a3 / all))
                        :ARG1 (p3 / price-01)
                        :ARG0-of c
                        :ARG1 (f4 / feasible
                              :polarity -
                              :domain (m3 / maintain-01
                                    :ARG1 (p4 / price-01
                                          :time b
                                          :op1 (l / law
                                                :name (n / name
                                                      :op1 ""CODID-19"")))))))))"
"(p / possible-01
      :ARG1 (s / see-01
            :ARG0 (t / thing
                  :ARG2-of (p2 / price-01
                        :ARG1 (c / currency
                              :name (n / name
                                    :op1 ""Bitcoin""))))
            :ARG1 (p3 / pickup-05
                  :ARG1 (v / volatility)
                  :time (a / ahead
                        :op1 (h / halve-01
                              :time (d / date-entity
                                    :year 2020)))))
      :ARG1-of (c2 / cause-01
            :ARG0 (t2 / threaten-01
                  :ARG0 (p4 / pandemic
                        :mod (c3 / coronavirus))
                  :ARG1 (d2 / disrupt-01
                        :ARG0 p4
                        :ARG1 (o / operation
                              :mod (m / mine-01
                                    :ARG1 c
                                    :ARG0-of (c4 / cross-02
                                          :ARG1 (c5 / continent))))))))"
"(m / multi-sentence
      :snt1 (t / tell-01
            :ARG0 (p / person
                  :ARG0-of (m2 / manage-01))
            :ARG1 (d / discuss-01
                  :ARG0 p
                  :ARG2 (c / customer
                        :ARG0-of (w / want-01
                              :ARG1 (t2 / take-01
                                    :ARG0 c
                                    :ARG1 (s / shelf
                                          :mod (c2 / cat)
                                          :quant ""2/3"")
                                    :purpose (ii / isolate-01
                                          :ARG0 c
                                          :ARG1 c
                                          :ARG2 (c3 / cat
                                                :poss c)
                                          :duration (t3 / temporal-quantity
                                                :quant 3
                                                :unit (m3 / month)))))))
            :ARG2 (ii2 / i))
      :snt2 (s2 / say-01
            :ARG0 (p2 / person
                  :ARG0-of (m4 / manage-01))
            :ARG1 (n / no)
            :ARG1-of (c4 / cause-01
                  :ARG0 (n2 / need-01
                        :ARG0 (o / other)
                        :ARG1 (s3 / shop-01
                              :ARG0 o)))))"
"(h / help-01
      :ARG0 (d / data
            :source (p / person
                  :ARG0-of (c / consume-01)))
      :ARG1 (t / track-01
            :ARG0 d
            :ARG1 (s / spread-02
                  :ARG1 (p2 / product
                        :name (n / name
                              :op1 ""COVID-19""))))
      :polarity (a / amr-unknown))"
"(m / multi-sentence
      :snt1 (s / stop-01
            :ARG0 (a / and
                  :op1 (p / person
                        :ARG0-of (h / have-org-role-91
                              :ARG1 (c / company
                                    :ARG1-of (h2 / hear-01
                                          :polarity -
                                          :ARG0 (ii / i)))
                              :ARG2 (o / officer
                                    :mod (e / executive)
                                    :mod (c2 / chief))))
                  :op2 (p2 / person
                        :ARG0-of (h3 / have-org-role-91
                              :ARG1 (c3 / company
                                    :ARG1-of (m2 / meet-02
                                          :polarity -
                                          :ARG0 ii))
                              :ARG2 (o2 / officer
                                    :mod (e2 / executive)
                                    :mod (c4 / chief))))
                  :mod (a2 / all))
            :ARG1 (e3 / email-01
                  :ARG0 a
                  :ARG2 ii
                  :mod (b / bloody))
            :polarity (a3 / amr-unknown))
      :snt2 (r / reduce-01
            :ARG0 (y / you)
            :ARG1 (m3 / monetary-quantity
                  :ARG2-of (p3 / price-01
                        :ARG0 y))
            :ARG1-of (ii2 / interest-01
                  :ARG0 (w / we)
                  :mod (a4 / all)))
      :snt3 (c5 / company
            :name (n / name
                  :op1 ""Coronavirus""))
      :snt4 (c6 / company
            :name (n2 / name
                  :op1 ""Covid19UK"")))"
"(s / say-01
      :ARG0 (p / publication
            :name (n / name
                  :op1 ""Consumer""
                  :op2 ""Reports""))
      :ARG1 (a / and
            :op1 (c / care-03
                  :ARG1 (c2 / car))
            :op2 (m / maintain-01
                  :ARG1 c2)
            :time (p2 / pandemic
                  :mod (c3 / coronavirus))))"
"(s / stop-01
      :mode imperative
      :polite +
      :ARG0 (y / you)
      :ARG1 (p / panic-01
            :ARG0 (b / buy-01
                  :ARG0 y
                  :ARG2 (f / food)
                  :ARG1-of (f2 / free-03)))
      :ARG1-of (c / cause-01
            :ARG0 (n / need-01
                  :ARG0 (p2 / person
                        :ARG0-of (h / have-03
                              :ARG1 (ii / issue-02
                                    :ARG0 (m / medicine))))
                  :ARG1 b)))"
"(l / look-02
      :ARG0 (p / person
            :ARG1-of (s / stand-01
                  :ARG2 (o / outside
                        :op1 (s2 / store
                              :mod (g / grocery)
                              :location (a / across
                                    :op1 (p2 / place
                                          :poss (ii / i)))))))
      :ARG1 (c / cordon
            :ARG1-of (s3 / slip-01)
            :location (c2 / cricket)))"
"(l / look-02
      :polarity -
      :ARG0 (h / hike-02
            :ARG1 (p / price)
            :time (t / time
                  :ARG1-of (h2 / have-mod-91
                        :polarity -
                        :ARG2 (c / certain))
                  :mod (t2 / this)))
      :ARG1-of (g / good-02))"
"(m / mean-01
      :ARG1 (c / chip
            :ARG1-of (l / leave-17
                  :location (s / store
                        :mod (g / grocery)))
            :mod (o / only))
      :ARG2 (s2 / size
            :mod (p / party))
      :mod (ii / ironic))"
"(t / time
      :time-of (s / stock-up-02
            :ARG0 (w / we)
            :ARG2 (p / phase
                  :mod (ii / isolate-01)
                  :mod (t2 / this))
            :purpose (p2 / possible-01
                  :ARG1 (f / flatten-01
                        :ARG0 w
                        :ARG1 (c / curve-01
                              :ARG1 (v / virus))))))"
"(w / wonderful-03
      :ARG1 (s / see-01
            :ARG1 (s2 / set-02
                  :ARG0 (a / and
                        :op1 (p / person
                              :name (n / name
                                    :op1 ""May"")
                              :ARG0-of (h / have-org-role-91
                                    :ARG1 (c / country
                                          :name (n2 / name
                                                :op1 ""Britain""))
                                    :ARG2 (m / minister
                                          :mod (p2 / prime))
                                    :time (f / former)))
                        :op2 (p3 / person
                              :ARG0-of (h2 / have-org-role-91
                                    :ARG1 (p4 / parliament)
                                    :ARG2 (m2 / member)
                                    :time (c2 / current))
                              :mod (l / local-region
                                    :name (n3 / name
                                          :op1 ""Maidenhead""))))
                  :ARG1 (e / example)
                  :manner (a2 / and
                        :op1 (q / queue-01
                              :ARG1 a
                              :location (o / outside
                                    :op1 (s3 / supermarket
                                          :poss a
                                          :ARG1-of (l2 / local-02))))
                        :op2 (r / refrain-01
                              :ARG0 a
                              :ARG1 (s4 / stockpile-01
                                    :ARG0 a))
                        :op3 (l3 / leave-11
                              :ARG0 a
                              :ARG1 s3
                              :manner (s5 / shop-01
                                    :quant (b / bag
                                          :quant 1
                                          :mod (j / just))))))))"
"(d / do-02
      :ARG0 (y / you)
      :ARG1 (a / amr-unknown)
      :ARG2 (h / help-01
            :ARG0 y
            :ARG1 (p / person
                  :mod (t / this)
                  :ARG1-of (v / vulnerable-01)
                  :mod (e / elderly)
                  :ARG0-of (r / rely-01
                        :ARG1 (s / shop-01
                              :ARG0 p
                              :medium (o / online))
                        :ARG1-of (c / contrast-01
                              :ARG2 (g / get-01
                                    :ARG0 p
                                    :ARG1 (s2 / slot
                                          :quant (a2 / any))
                                    :ARG1-of (p2 / possible-01
                                          :polarity -)))))))"
"(m / move-02
      :ARG0 (p / person
            :ARG0-of (r / retail-01)
            :location (a / across
                  :op1 (c / country
                        :name (n / name
                              :op1 ""United""
                              :op2 ""States""))))
      :ARG1 (a2 / and
            :op1 (d / distance-01
                  :ARG0 p
                  :ARG1 (p2 / person
                        :ARG0-of (s / shop-01))
                  :manner (s2 / social))
            :op2 (l / limit-01
                  :ARG0 p
                  :ARG1 (c2 / capacity
                        :mod (s3 / store))))
      :ARG1-of (q / quick-02)
      :time (b / break-out-30
            :name (n2 / name
                  :op1 ""COVID""
                  :op2 19)))"
"(p / possible-01
      :ARG1 (s / see-01
            :ARG0 (w / we)
            :ARG1 (d / decline-01
                  :ARG1 (m / mail
                        :mod (j / junk)))
            :mod (a / as-well)))"
"(a / advise-01
      :ARG0 (f / force
            :ARG2-of (t / task-01
                  :topic (c / coronavirus))
            :mod (g / government-organization
                  :name (n / name
                        :op1 ""White""
                        :op2 ""House"")))
      :ARG1 (p / person)
      :ARG2 (a2 / avoid-01
            :ARG0 p
            :ARG1 (g2 / go-02
                  :ARG0 p
                  :ARG4 (o / or
                        :op1 (s / store
                              :mod (g3 / grocery))
                        :op2 (p2 / pharmacy)))
            :time (a3 / after
                  :op1 (n2 / now)
                  :duration (t2 / temporal-quantity
                        :quant 2
                        :unit (w / week)))))"
"(g / gather-03
      :ARG0 (p / person)
      :ARG1 (g2 / group
            :mod (l / large))
      :purpose (r / raid-01
            :ARG0 p
            :ARG1 (s / store
                  :mod (g3 / grocery))
            :ARG2 (a / and
                  :op1 (f / food)
                  :op2 (t / thing
                        :ARG1-of (s2 / supply-01))))
      :location (c / country
            :name (n / name
                  :op1 ""Mexico"")))"
"(h / have-concession-91
      :ARG1 (n / naive
            :domain (ii / i)
            :ARG2-of (h2 / have-degree-91
                  :ARG1 ii
                  :ARG3 (e / enough)
                  :ARG6 (t / think-01
                        :ARG0 ii
                        :ARG1 (l / look-down-06
                              :polarity -
                              :ARG0 (p / person)
                              :ARG1 (p2 / person
                                    :ARG0-of (w / work-01
                                          :ARG2 (s / supermarket)))))))
      :ARG2 (a / appear-02
            :ARG1 l))"
"(c / continue-01
      :ARG0 (c2 / company
            :name (n / name
                  :op1 ""Readerlink""))
      :ARG1 (s / send-01
            :ARG0 c2
            :ARG1 (a / army
                  :consist-of (p / person
                        :ARG0-of (m / merchandise-01)))
            :ARG2 (c3 / chain
                  :mod (r / retail-01))
            :purpose (s2 / stock-01
                  :ARG0 a
                  :ARG1 (b / book)
                  :ARG0-of (s3 / spread-02
                        :ARG1 (p2 / product
                              :name (n2 / name
                                    :op1 ""Covid-19""))
                        :ARG2 (a2 / area
                              :ARG1-of (d / differ-02))
                        :ARG1-of (p3 / possible-01)
                        :mod (p4 / potential)))))"
"(f / fall-01
      :ARG1 (p / price-01
            :ARG1 (d / diamond))
      :time (d2 / date-entity
            :month 3)
      :ARG1-of (c / cause-01
            :ARG0 (s / spread-02
                  :ARG1 (p2 / pandemic
                        :name (n / name
                              :op1 ""COVID-19"")))))"
"(s / study-01
      :ARG1 (ii / impact-01
            :ARG0 (p / program
                  :name (n / name
                        :op1 ""COVID""
                        :op2 19))
            :ARG1 (a / and
                  :op1 (s2 / sentiment
                        :mod (p2 / person
                              :ARG0-of (c / consume-01)))
                  :op2 (a2 / activity-06
                        :ARG0 p2)))
      :ARG0-of (s3 / shed-light-10
            :degree (v / very))
      :domain (t / this))"
"(r / rise-01
      :ARG1 (s / share
            :mod (c / continent
                  :name (n / name
                        :op1 ""Asia"")))
      :ARG1-of (c2 / cause-01
            :ARG0 (h / hope-01
                  :ARG1 (a / and
                        :op1 (n2 / near-01
                              :ARG1 (p / pandemic
                                    :name (n3 / name
                                          :op1 ""COVID""
                                          :op2 19))
                              :ARG2 (p2 / peak-01
                                    :ARG1 p))
                        :op2 (r2 / roll-out-02
                              :ARG0 (g / government-organization
                                    :ARG0-of (g2 / govern-01))
                              :ARG1 (s2 / stimulus
                                    :mod (m / more)))
                        :op3 (b / bolster-01
                              :ARG0 (e / expect-01
                                    :ARG1 (c3 / cut-02
                                          :ARG1 (p3 / produce-01
                                                :ARG1 (o / oil))))
                              :ARG1 (t / thing
                                    :ARG2-of (p4 / price-01
                                          :ARG1 o))))))
      :ARG1-of (h2 / have-degree-91
            :ARG2 (h3 / high-02
                  :ARG1 s)
            :ARG3 m))"
"(c / check-out-05
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (a / article
            :mod (l / last)
            :poss (ii / i)
            :topic (a2 / and
                  :op1 (s / supply-01
                        :ARG1 (p / product
                              :name (n / name
                                    :op1 ""COVID-19"")
                              :mod (m / medicine)))
                  :op2 (t / thing
                        :ARG2-of (p2 / price-01
                              :ARG1 p))))
      :medium (c2 / company
            :name (n2 / name
                  :op1 ""LinkedIn"")))"
(a / amr-empty)
"(s / stand-01
      :ARG1 (p / person)
      :ARG2 (l / line)
      :purpose (e / enter-01
            :ARG0 p
            :ARG1 (s2 / supermarket))
      :time (b / break-out-30
            :ARG1 (e2 / event
                  :name (n / name
                        :op1 ""COVID""
                        :op2 19))
            :location (c / city-district
                  :name (n2 / name
                        :op1 ""El""
                        :op2 ""Masnou"")
                  :location (n3 / north
                        :part-of (c2 / city
                              :name (n4 / name
                                    :op1 ""Barcelona"")
                              :location (c3 / country
                                    :name (n5 / name
                                          :op1 ""Spain"")))))))"
(a / amr-empty)
"(r / recommend-01
      :ARG1 (f / follow-02
            :ARG0 (a / all)
            :ARG1 (t / thing
                  :ARG2-of (a2 / advise-01
                        :ARG0 (g / government-organization
                              :ARG0-of (g2 / govern-01)))
                  :topic (l / law
                        :name (n / name
                              :op1 ""COVID-19"")))))"
"(g / guide-01
      :ARG0 (g2 / giant
            :name (n / name
                  :op1 ""Unilever"")
            :mod (p / product
                  :ARG0-of (c / consume-01))
            :mod (g3 / globe))
      :ARG1 (p2 / person
            :ARG1-of (e / employ-01)
            :mod (a / all))
      :ARG2 (a2 / and
            :op1 (t / thing
                  :ARG1-of (d / do-02
                        :ARG0 p2
                        :ARG2-of (o / obligate-01
                              :ARG1 p2)))
            :op2 (t2 / thing
                  :ARG1-of (d2 / do-02
                        :polarity -
                        :ARG0 p2
                        :ARG2-of (o2 / obligate-01
                              :ARG1 p2)))
            :time (e2 / event
                  :name (n2 / name
                        :op1 ""Covid19""
                        :op2 ""Coronaviruspandemic"")))
      :ARG1-of (c2 / clear-06)
      :mod (c3 / concise))"
"(d / disappoint-01
      :ARG0 (s / sell-01
            :ARG1 (p / product
                  :name (n / name
                        :op1 ""COVID-19""))
            :mod (m / massive)
            :medium (o / online))
      :ARG1 (ii / i)
      :degree (h / high-02))"
"(r / release-01
      :ARG0 (a / and
            :op1 (g / government-organization
                  :name (n / name
                        :op1 ""Florida""
                        :op2 ""Department""
                        :op3 ""of""
                        :op4 ""Agriculture""
                        :op5 ""and""
                        :op6 ""Consumer""
                        :op7 ""Services""))
            :op2 (g2 / government-organization
                  :name (n2 / name
                        :op1 ""Florida""
                        :op2 ""State""
                        :op3 ""Agricultural""
                        :op4 ""Response""
                        :op5 ""Team"")))
      :ARG1 (ii / information
            :ARG1-of (ii2 / important-01)
            :topic (a2 / and
                  :op1 (s / shelter-01
                        :ARG1 (a3 / animal))
                  :op2 (l / law
                        :name (n3 / name
                              :op1 ""COVID-19"")))))"
"(c / cost-01
      :ARG1 (s / slice-01
            :ARG1 (p / potato))
      :ARG2 (m / monetary-quantity
            :quant 20
            :unit (c2 / cent)))"
"(f / flex-01
      :ARG1 (g / go-02
            :ARG0 (y / you)
            :ARG4 (h / house
                  :poss (p / person
                        :ARG1-of (n / neighbor-01
                              :ARG2 y))
                  :location-of (p2 / paper-01
                        :ARG1 (t / toilet))))
      :time (n2 / now
            :mod (r / right))
      :ARG1-of (h2 / have-degree-91
            :ARG2 (b / big)
            :ARG3 (m / most)))"
"(m / multi-sentence
      :snt1 (l / live-01
            :ARG0 (p / person
                  :quant (m2 / many)
                  :ARG2-of (ii / include-91
                        :ARG1 (a / and
                              :op1 (p2 / person
                                    :ARG0-of (h / have-rel-role-91
                                          :ARG1 (ii2 / i)
                                          :ARG2 (c / cousin)))
                              :op2 (p3 / person
                                    :ARG0-of (h2 / have-rel-role-91
                                          :ARG1 ii2
                                          :ARG2 (a2 / aunt))))
                        :ARG0-of (h3 / have-org-role-91
                              :ARG1 (f / family
                                    :ARG1-of (e / extend-01)
                                    :poss ii2)
                              :ARG2 (m3 / member))))
            :location (c2 / city
                  :name (n / name
                        :op1 ""Sheffield"")))
      :snt2 (a3 / and
            :op1 (w / work-01
                  :ARG0 (p4 / person
                        :ARG0-of (h4 / have-rel-role-91
                              :ARG1 (ii3 / i)
                              :ARG2 a2))
                  :ARG2 (c3 / company
                        :name (n2 / name
                              :op1 ""Asda"")))
            :op2 (w2 / work-01
                  :ARG0 p4
                  :ARG2 (s / supermarket
                        :mod (a4 / another))))
      :snt3 (ii4 / isolate-01
            :ARG1 (s2 / she)
            :ARG1-of (c4 / cause-01
                  :ARG0 (h5 / have-03
                        :ARG0 (p5 / person
                              :ARG0-of (h6 / have-rel-role-91
                                    :ARG1 (p6 / person
                                          :ARG0-of (h7 / have-rel-role-91
                                                :ARG1 s2
                                                :ARG2 (f2 / friend)))
                                    :ARG2 (h8 / husband)))
                        :ARG1 (v / virus
                              :name (n3 / name
                                    :op1 ""CoronaVirus""))))
            :time (c5 / current)))"
"(t / think-01
      :ARG0 (ii / i)
      :ARG1 (a / and
            :op1 (m / make-01
                  :ARG0 (t2 / they)
                  :ARG1 (m2 / movie
                        :topic (c / coronavirus))
                  :time (d / day
                        :mod (o / one)))
            :op2 (b / bore-02
                  :ARG0 m2
                  :degree (r / really))))"
"(l / lead-03
      :ARG0 (c / coronavirus)
      :ARG2 (b / behave-01
            :ARG0 (p / person
                  :ARG0-of (c2 / consume-01))
            :ARG1 (a / and
                  :op1 (s / spend-02
                        :ARG0 p
                        :ARG1 (t / time
                              :quant (m / more))
                        :ARG2 (o / online)
                        :ARG3 (a2 / and
                              :op1 (r / read-01
                                    :ARG0 p
                                    :ARG1 (n / news))
                              :op2 (p2 / participate-01
                                    :ARG0 p
                                    :ARG1 (c3 / community
                                          :mod (o2 / online)))
                              :op3 (ii / interact-01
                                    :ARG0 p
                                    :ARG2 (v / video
                                          :mod (s2 / social)))
                              :op4 (s3 / stream-03
                                    :ARG1 (e / event))
                              :op5 (g / game))))
            :ARG1-of (n2 / new-01))
      :ARG4 (a3 / and
            :op1 (g2 / game)
            :op2 (g3 / game)))"
"(m / multi-sentence
      :snt1 (k / know-01
            :ARG0 (a / anyone)
            :ARG1 (o / or
                  :op1 (r / resource)
                  :op2 (b / benefit)
                  :beneficiary (p / person
                        :ARG0-of (w / work-01
                              :ARG2 (s / supermarket)))
                  :mod (e / extra))
            :polarity (a2 / amr-unknown))
      :snt2 (a3 / and
            :op1 (t / take-01
                  :ARG0 (p2 / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 (ii / i)
                              :ARG2 (c / colleague)))
                  :ARG1 (h2 / hit-01
                        :ARG1 (h3 / health
                              :mod (m2 / mental))
                        :ARG1-of (s2 / serious-02)))
            :op2 (a4 / and
                  :op1 (a5 / asthmatic
                        :domain ii)
                  :op2 (ii2 / isolate-01
                        :ARG0 ii
                        :ARG1 ii))))"
"(a / and
      :op1 (c / calm-03
            :ARG1 (s / supermarket))
      :op2 (r / restock-01
            :ARG1 (s2 / shelf))
      :time (a2 / after
            :op1 (m / madness
                  :mod (b / buy-01
                        :mod (p / panic-01)))
            :quant (t / temporal-quantity
                  :quant 1
                  :unit (w / week))))"
"(d / do-02
      :ARG0 (s / supermarket
            :location (c / country
                  :name (n / name
                        :op1 ""Scotland"")))
      :ARG1 (a / amr-unknown)
      :ARG2 (v / virus
            :mod (c2 / coronavirus)))"
"(t / thank-01
      :ARG1 (a / and
            :op1 (p / person
                  :ARG0-of (w / work-01
                        :ARG1 (h / healthcare)))
            :op2 (p2 / person
                  :ARG0-of (s / staff-01
                        :ARG1 (s2 / supermarket)))
            :op3 (p3 / person
                  :ARG0-of (r / respond-01
                        :ord (o / ordinal-entity
                              :value 1)))
            :op4 (s3 / slash
                  :op1 (p4 / person
                        :ARG0-of (h2 / have-org-role-91
                              :ARG2 (p5 / porter)))
                  :op2 (p6 / person
                        :ARG0-of (h3 / have-org-role-91
                              :ARG2 (m / maintain-01))))
            :op5 (p7 / person
                  :ARG0-of (s4 / staff-01
                        :ARG1 (s5 / shelter)))
            :mod (a2 / all)
            :ARG0-of (w2 / work-01
                  :ARG1 (k / keep-02
                        :ARG0 a
                        :ARG1 (s6 / safe-01
                              :ARG1 (w3 / we)))
                  :ARG1-of (h4 / hard-02))))"
"(p / possible-01
      :ARG1 (g / go-out-17
            :ARG1 (c / control-01
                  :ARG1 (s / situation)))
      :condition (m / maintain-01
            :polarity -
            :ARG0 (w / we)
            :ARG1 (d / distance-01
                  :ARG1 w
                  :ARG2 (s2 / society))
            :ARG1-of (a / announce-01
                  :ARG0 (p2 / person
                        :ARG0-of (h / have-org-role-91
                              :ARG1 (p3 / political-party
                                    :name (n / name
                                          :op1 ""CM"")))
                        :mod p3
                        :name (n2 / name
                              :op1 ""BSYBJP"")))
            :time (t / tomorrow)
            :purpose (a2 / and
                  :op1 (o / open-01
                        :ARG1 (s3 / supermarket
                              :mod (a3 / all)))
                  :op2 (m2 / move-01
                        :ARG1 (b / bus
                              :mod (c2 / company
                                    :name (n3 / name
                                          :op1 ""BMTC"")))))))"
"(m / multi-sentence
      :snt1 (s / set-up-03
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""McCormick""))
            :ARG1 (a / area
                  :mod (ii / interactive)
                  :purpose (a2 / and
                        :op1 (w / write-01
                              :ARG0 (p2 / person
                                    :ARG0-of (c / consume-01)))
                        :op2 (g / get-01
                              :ARG0 p2
                              :ARG1 (a3 / answer-01
                                    :ARG1 (q / question-01)
                                    :mod (r / real-time)))))
            :time (a4 / after
                  :op1 (r2 / recognize-02
                        :ARG0 p
                        :ARG1 (f / force-01
                              :ARG0 (l / law
                                    :name (n2 / name
                                          :op1 ""COVID-19""))
                              :ARG1 (p3 / person
                                    :ARG0-of (c2 / cook-01)
                                    :quant (m2 / many))
                              :ARG2 (k / kitchen)))))
      :snt2 (s2 / show-01
            :ARG0 (d / data
                  :topic (s3 / sell-01))
            :ARG1 (ii2 / influence-01
                  :ARG0 (a5 / answer-01)
                  :ARG1 (b / buy-01
                        :ARG0 p2)
                  :manner (h / heavy))
            :time (n3 / now)))"
"(m / multi-sentence
      :snt1 (h / have-03
            :mode imperative
            :polite +
            :ARG0 (y / you)
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""vijaysardana""))
            :location (b / board
                  :purpose (p2 / plan-01)
                  :poss y)
            :purpose (d / deal-01
                  :ARG0 p
                  :ARG2 (c / crisis
                        :mod (a / agriculture)
                        :location (c2 / country
                              :name (n2 / name
                                    :op1 ""India"")))
                  :time (e / event
                        :name (n3 / name
                              :op1 ""Covid""
                              :op2 19))))
      :snt2 (k / know-01
            :ARG0 (h2 / he)
            :ARG1-of (d2 / deep-02)
            :ARG1-of (e2 / extensive-03)
            :purpose (a2 / and
                  :op1 (h3 / help-01
                        :ARG0 h2
                        :ARG1 (s / sector
                              :mod (a3 / agriculture)
                              :poss (w / we)))
                  :op2 (m2 / meet-01
                        :ARG0 h2
                        :ARG1 (d3 / demand-01
                              :ARG0 (p3 / person
                                    :ARG0-of (c3 / consume-01)))))))"
"(c / cause-01
      :ARG0 (b / buy-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (v / vegetable
                  :ARG1-of (h / have-quant-91
                        :ARG3 (e / enough)))
            :time (g / go-02
                  :ARG0 ii
                  :ARG4 (s / supermarket)
                  :time (w / weekend
                        :mod (l / last))))
      :ARG1 (e2 / eat-01
            :ARG0 ii
            :ARG1 (p / protein)
            :mod (j / just)
            :purpose (h2 / help-01
                  :ARG0 p
                  :ARG1 (p2 / pack-on-04
                        :ARG1 (p3 / product
                              :name (n / name
                                    :op1 ""CODID-19""))))))"
"(a / allow-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Amazon""))
      :ARG1 (s / sell-01
            :ARG1 (t / toy
                  :ARG0-of (s2 / safe-01
                        :polarity -)))
      :polarity (a2 / amr-unknown))"
"(a / and
      :op1 (n / news
            :ARG0-of (b / break-13))
      :op2 (a2 / and
            :op1 (v / virus
                  :location (c / city
                        :name (n2 / name
                              :op1 ""Wuhan"")))
            :op2 (c2 / coronavirus)
            :op3 (c3 / crash-01
                  :ARG1 (m / market))
            :op4 (v2 / virus
                  :location (c4 / country
                        :name (n3 / name
                              :op1 ""China"")))
            :op5 (c5 / coronavirus
                  :location c4)
            :op6 (o / organization
                  :name (n4 / name
                        :op1 ""MAGA""))
            :op7 (g / government-organization
                  :name (n5 / name
                        :op1 ""CDC""))
            :op8 (a3 / and
                  :op1 (w / wash-01
                        :mode imperative
                        :ARG0 (y / you
                              :part (h / hand))
                        :ARG1 h)
                  :op2 (p / paper
                        :mod (t / toilet))
                  :op3 (w2 / water)
                  :op4 (o2 / organization
                        :name (n6 / name
                              :op1 ""Covid_19""))
                  :op5 (p2 / person
                        :name (n7 / name
                              :op1 ""Chuck""
                              :op2 ""Norris""))
                  :op6 (m2 / meme
                        :topic (c6 / coronavirus)))))"
(a / amr-empty)
"(m / multi-sentence
      :snt1 (s / sing-01
            :ARG0 (ii / i)
            :ARG1 (r / remix
                  :mod (t / this))
            :time (g / go-02
                  :ARG0 ii
                  :ARG1 (s2 / store
                        :mod (g2 / grocery))
                  :time (b / before))
            :beneficiary (f / fan
                  :mod (a / all)
                  :mod (c / company
                        :name (n / name
                              :op1 ""Hustle""
                              :op2 ""&""
                              :op3 ""Flow""))
                  :location (o / out-there)
                  :poss ii))
      :snt2 (b2 / buy-up-02
            :ARG0 (a2 / amr-unknown)
            :ARG1 (s3 / steak
                  :mod (a3 / all))
            :ARG2-of (s4 / serious-01))
      :snt3 (g3 / get-03
            :ARG2 (r2 / real-04
                  :ARG1 (s5 / shop-01
                        :ARG3 (p / product
                              :name (n2 / name
                                    :op1 ""Coronavirus""))
                        :mod (t2 / this)))))"
"(m / multi-sentence
      :snt1 (c / call-02
            :ARG0 (b / bar
                  :name (n / name
                        :op1 ""Mortons""
                        :op2 ""Bethesda"")
                  :ARG1-of (l / local-02
                        :ARG2 (ii / i)))
            :purpose (s / say-01
                  :ARG0 b
                  :ARG1 (a / and
                        :op1 (t / take-out-11
                              :ARG0 b)
                        :op2 (d / deliver-01
                              :ARG0 b
                              :ARG2 (l2 / location
                                    :ARG1-of (s2 / select-01)))))
            :snt2 (c2 / cut-02
                  :ARG1 (t2 / thing
                        :ARG2-of (p / price-01)))
            :snt3 (t3 / try-01
                  :ARG0 (t4 / they)
                  :ARG1 (k / keep-01
                        :ARG0 t4
                        :ARG1 (a2 / and
                              :op1 (p2 / person
                                    :quant (s3 / some)
                                    :ARG2-of (s4 / staff-01))
                              :op2 (b2 / business
                                    :quant (s5 / some)))))
            :snt4 (v / virus
                  :mod (c3 / coronavirus)
                  :ARG1-of (p3 / public-02))))"
"(l / like-02
      :ARG0 (ii / i)
      :ARG1 (s / sing-01
            :ARG0 ii
            :ARG1 (v / version
                  :ARG1-of (n / new-01)
                  :mod (m / music
                        :name (n2 / name
                              :op1 ""I""
                              :op2 ""Hear""
                              :op3 ""America""
                              :op4 ""Singing""))
                  :topic (a / and
                        :op1 (p / person
                              :ARG0-of (d / drive-01
                                    :ARG1 (t / truck)))
                        :op2 (p2 / person
                              :ARG2-of (s2 / staff-01
                                    :ARG1 (m2 / medicine)))
                        :op3 (j / janitor
                              :mod (h / hospital))
                        :op4 (p3 / person
                              :ARG0-of (c / clerk-01
                                    :ARG1 (s3 / store
                                          :mod (g / grocery))))
                        :op5 (p4 / person
                              :ARG0-of (f / farm-01))
                        :op6 (p5 / person
                              :ARG0-of (c2 / collect-01
                                    :ARG1 (g2 / garbage)))
                        :op7 (p6 / person
                              :ARG0-of (w / work-01
                                    :ARG1 (p7 / post)))
                        :op8 (p8 / person
                              :mod (c3 / country
                                    :name (n3 / name
                                          :op1 ""America""))
                              :mod (o / other)
                              :ARG0-of (h2 / hold-01
                                    :ARG1 (w2 / we)
                                    :ARG3 (t2 / together)
                                    :time a
                                    :op1 (p9 / past)
                                    :op2 (c4 / continue-01)
                                    :ARG1-of c4))))))"
"(m / multi-sentence
      :snt1 (t / take-01
            :polarity -
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (ii / item
                  :mod (l / last)
                  :part-of (s / something)
                  :location (s2 / supermarket))
            :condition (a / and
                  :op1 (s3 / see-01
                        :ARG0 y
                        :ARG1 ii)
                  :op2 (h / healthy
                        :domain y
                        :ARG1-of (g / general-02))))
      :snt2 (l2 / leave-15
            :mode imperative
            :ARG0 (y2 / you)
            :ARG1 (ii2 / it)
            :ARG2 (s4 / someone
                  :ARG0-of (n / need-01
                        :ARG1 ii2
                        :ARG1-of (p / possible-01)
                        :manner (g2 / genuine)
                        :ARG2-of (h2 / have-degree-91
                              :ARG1 s4
                              :ARG3 (m2 / more)
                              :ARG4 y2)))))"
"(k / know-01
      :polarity -
      :ARG0 (ii / i)
      :ARG1 (t / thing
            :ARG0-of (f / frustrate-01
                  :ARG2-of (h / have-degree-91
                        :ARG1 t
                        :ARG3 (m / more)
                        :ARG4 (o / or
                              :op1 (w / work-01
                                    :ARG0 ii
                                    :ARG2 (s / store
                                          :mod (g / grocery))
                                    :time (e / event
                                          :name (n / name
                                                :op1 ""Covid_19"")))
                              :op2 (l / listen-01
                                    :ARG0 ii
                                    :ARG1 (t2 / talk-01
                                          :ARG0 (p / person
                                                :ARG0-of w
                                                :ARG2 ii))
                                    :ARG1 e))))))"
"(m / multi-sentence
      :snt1 (g / get-off-23
            :ARG0 (ii / i)
            :ARG1 (p / phone-01
                  :ARG0 ii
                  :ARG1 (p2 / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 ii
                              :ARG2 (f / friend))
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 (ii2 / industry
                                    :mod (o / oil)))))
            :time (j / just))
      :snt2 (d / drop-01
            :ARG0 (d2 / dump-01
                  :ARG0 (p3 / person
                        :mod (c / country
                              :name (n / name
                                    :op1 ""Saudi""
                                    :op2 ""Arabia"")))
                  :ARG1 (o2 / oil)
                  :location (m2 / market
                        :mod (c2 / country
                              :name (n2 / name
                                    :op1 ""US""))))
            :ARG1 (p4 / price-01
                  :ARG1 (p5 / petroleum)))
      :snt3 (h3 / have-to-do-with-04
            :ARG0 (ii3 / it)
            :ARG1 (v / virus
                  :mod (c3 / coronavirus))
            :ARG2 (n3 / nothing)))"
"(c / create-01
      :ARG0 (c2 / company
            :name (n / name
                  :op1 ""Aldi""))
      :ARG1 (j / job
            :ARG1-of (n2 / new-01)
            :quant (m / multiple
                  :op1 1000))
      :location (f / footprint
            :poss c2
            :location (c3 / country
                  :name (n3 / name
                        :op1 ""UK"")))
      :purpose (ii / increase-01
            :ARG0 c2
            :ARG1 (e / effort-01
                  :ARG0 c2
                  :ARG1 (a / and
                        :op1 (l / logistics)
                        :op2 (d / distribute-01)))
            :time (s / surge-01
                  :ARG1 (d2 / demand-01)
                  :prep-amid (c4 / crisis
                        :mod (c5 / coronavirus)))))"
"(m / multi-sentence
      :snt1 (w / wear-01
            :ARG0 (ii / i)
            :ARG1 (m2 / mask
                  :ARG1-of (m3 / make-01
                        :ARG0 ii))
            :location (s / store
                  :mod (g / grocery))
            :time (t / today))
      :snt2 (t2 / think-01
            :ARG0 (ii2 / i)
            :ARG1 (w2 / wear-01
                  :ARG0 (p / person
                        :quant 2
                        :mod (o / other))
                  :ARG1 (m4 / mask)
                  :mod (t3 / too)))
      :snt3 (f / feel-01
            :ARG0 (ii3 / i)
            :ARG1 (c / contrast-01
                  :ARG1 (f2 / foolish
                        :degree (b / bit)
                        :domain ii3)
                  :ARG2 (s2 / safe-01
                        :ARG0 ii3
                        :mod (a / also)
                        :ARG2-of (h / have-degree-91
                              :ARG1 ii3
                              :ARG3 (m5 / more))))
            :ARG1-of (c2 / cause-01
                  :ARG0 (p2 / practice-01
                        :polarity -
                        :ARG0 (p3 / person)
                        :ARG1 (d / distance-01
                              :ARG1 p3
                              :ARG2 (s3 / society))
                        :mod (a2 / as-usual)))))"
"(c / clear-01
      :ARG0 (b / buy-01
            :manner (p / panic-01)
            :location (c2 / country
                  :name (n / name
                        :op1 ""Mexico"")))
      :ARG1 (s / shelf
            :mod (s2 / supermarket)
            :consist-of (b2 / beer
                  :name (n2 / name
                        :op1 ""Corona"")))
      :ARG1-of (c3 / cause-01
            :ARG0 (h / halt-01
                  :ARG1 (p2 / produce-01
                        :ARG1 b2)
                  :time (a / after
                        :op1 (d / declare-01
                              :ARG0 (g / government-organization
                                    :ARG0-of (g2 / govern-01
                                          :ARG1 c2))
                              :ARG2 (p3 / product
                                    :ARG1-of (n3 / need-01
                                          :polarity -)
                                    :domain b2))))))"
"(d / discuss-01
      :ARG0 (p / post
            :ARG1-of (n / new-01)
            :location (c / company
                  :name (n2 / name
                        :op1 ""BigCommerce"")))
      :ARG1 (t / thing
            :manner-of (a / affect-01
                  :ARG0 (p2 / pandemic
                        :name (n3 / name
                              :op1 ""COVID-19""))
                  :ARG1 (b / behave-01
                        :ARG1 (s / shop-01
                              :medium (o / online))))))"
"(p / possible-01
      :ARG1 (a / and
            :op1 (h / help-01
                  :ARG0 (s / study-01
                        :quant 4
                        :mod (t / this))
                  :ARG1 (s2 / shape-01
                        :ARG0 s
                        :ARG1 (c / cover-03
                              :ARG1 (c2 / chain
                                    :mod (s3 / supply-01
                                          :ARG1 (f / food)))
                              :mod (n / news))))
            :op2 (ii / inspire-01
                  :ARG0 s
                  :ARG1 (p2 / person
                        :ARG0-of (r / report-01))
                  :ARG2 (q / question-01
                        :ARG0 p2
                        :ARG1 (a2 / and
                              :op1 (b / buy-01
                                    :manner (p3 / panic-01))
                              :op2 (t2 / thing
                                    :manner-of (a3 / affect-01
                                          :ARG0 (t3 / thing
                                                :ARG0-of (c3 / cause-01
                                                      :ARG1 (c4 / crisis))
                                                :mod (r2 / root))
                                          :ARG1 (a4 / adapt-01
                                                :ARG0 (p4 / person)
                                                :ARG2 (n2 / normal-02
                                                      :ARG1 p4
                                                      :ARG1-of (n3 / new-01))))))))))"
(a / amr-empty)
"(m / multi-sentence
      :snt1 (n / need-01
            :ARG0 (p / person)
            :ARG1 (s / stop-01
                  :ARG0 p
                  :ARG1 (a / abuse-01
                        :ARG0 p
                        :ARG1 (p2 / person
                              :ARG0-of (h / have-org-role-91
                                    :ARG1 (s2 / supermarket)
                                    :ARG2 (s3 / staff)))))
            :ARG1-of (c / cause-01
                  :ARG0 (o / or
                        :op1 (p3 / possible-01
                              :polarity -
                              :ARG1 (g / get-01
                                    :ARG0 p
                                    :ARG1 (t / thing
                                          :ARG1-of (w / want-01
                                                :ARG0 p))))
                        :op2 (p4 / possible-01
                              :polarity -
                              :ARG1 (b / buy-01
                                    :ARG0 p
                                    :ARG1 (q / quantity
                                          :mod (b2 / big)))))))
      :snt2 (a2 / and
            :op1 (f / fault-01
                  :polarity -
                  :ARG1 (t2 / they))
            :op2 (p5 / put-01
                  :ARG0 t2
                  :ARG1 t2
                  :ARG2 (r / risk-01
                        :ARG0 t2)))
      :snt3 (b3 / back-up-04
            :mode imperative
            :ARG0 (p6 / person
                  :ARG0-of (m2 / manage-01))
            :ARG1 (p7 / person
                  :ARG2-of (s4 / staff-01)
                  :poss p6)))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (t / think-01
                  :ARG0 (ii / i)
                  :ARG1 (t2 / thing
                        :manner-of (g / get-01
                              :ARG0 ii
                              :ARG1 (f / food))))
            :op2 (g2 / give-01
                  :ARG0 t
                  :ARG1 (a2 / attack-01
                        :ARG1 ii
                        :mod (p / panic-01))
                  :ARG2 ii))
      :snt2 (a3 / and
            :op1 (s / start-01
                  :ARG0 (ii2 / i)
                  :ARG1 (t3 / think-01
                        :ARG0 ii2
                        :ARG2 (a4 / and
                              :op1 (r / rent)
                              :op2 (e / electric)))
                  :time (t4 / then))
            :op2 (c / contrast-01
                  :ARG1 (l / lose-02
                        :ARG0 ii2
                        :ARG1 (j / job
                              :poss ii2)
                        :ARG1-of (c2 / cause-01
                              :ARG0 (l2 / law
                                    :name (n / name
                                          :op1 ""COVID-19""))))
                  :ARG2 (l3 / look-01
                        :ARG0 ii2
                        :ARG1 (w / work-01
                              :ARG0 ii2
                              :location (e2 / elsewhere)))))
      :snt3 (o / offer-01
            :ARG1 (p2 / position)
            :ARG3 ii2
            :ARG2-of (t5 / thankful-02
                  :ARG0 ii2)))"
"(a / and
      :op1 (e / event
            :name (n / name
                  :op1 ""Doordash""))
      :op2 (c / company
            :name (n2 / name
                  :op1 ""UberEats""))
      :op3 (m / mean-01
            :ARG1 (p / person
                  :mod (ii / idiot))
            :ARG2 (s / someone
                  :ARG0-of (h / hoard-01
                        :ARG1 (a2 / and
                              :op1 (p2 / paper
                                    :purpose (t / toilet))
                              :op2 (s2 / sanitizer)
                              :op3 (p3 / person
                                    :ARG0-of (t2 / tip-02
                                          :mod (a3 / ass
                                                :ARG1-of (c2 / cheap-02)))))))))"
"(m / multi-sentence
      :snt1 (o / or
            :op1 (a / accelerate-01
                  :ARG1 (s / shift-01
                        :ARG2 (a2 / away
                              :op1 (a3 / and
                                    :op1 (s2 / shop
                                          :mod (b / brick))
                                    :op2 (s3 / shop
                                          :mod (m2 / mortar))))))
            :op2 (c / cause-01
                  :ARG0 (d / demand-01
                        :ARG1-of (p / pen-up-03))
                  :ARG1 s
                  :polarity (a4 / amr-unknown)))
      :snt2 (p2 / person
            :ARG0-of (c2 / consume-01)
            :time (a5 / after
                  :op1 (l / law
                        :name (n / name
                              :op1 ""COVID-19"")))
            :medium (u / url-entity
                  :value ""https://t.co/vPeE1L5g5J"")
            :medium (p3 / publication
                  :name n
                  :op1 ""marketingdive"")))"
"(u / use-01
      :ARG0 (p / person
            :ARG0-of (h / have-rel-role-91
                  :ARG2 (m / mother))
            :location (c / city-district
                  :name (n / name
                        :op1 ""Anderson""
                        :op2 ""Township"")))
      :ARG1 (p2 / publication
            :name (n2 / name
                  :op1 ""Facebook""))
      :ARG2 (h2 / help-01
            :ARG0 p
            :ARG1 (c2 / create-01
                  :ARG0 (p3 / person)
                  :ARG1 (a / and
                        :op1 (s / sanitizer)
                        :op2 (w / wipe)))
            :ARG2 p3))"
"(p / possible-01
      :ARG1 (s / stock-up-02
            :ARG0 (y / you)
            :ARG1 (t / thing)
            :time (b / break-out-30
                  :location (c / city
                        :name (n / name
                              :op1 ""Covid""
                              :op2 19)))))"
"(g / group
      :ARG1-of (t / target-01
            :ARG1-of (p / possible-01)
            :condition (p2 / pair-01
                  :ARG1 (d / determine-01
                        :ARG0 (s / society)
                        :ARG1 (h / health))
                  :ARG2 (a / and
                        :op1 (a2 / allegiance
                              :mod (p3 / politics))
                        :op2 (b / behave-01
                              :ARG0 (p4 / person
                                    :ARG0-of (c / consume-01)))
                        :op3 (d2 / data
                              :topic (s2 / system
                                    :mod (b2 / believe-01)))))))"
"(o / opt-01
      :ARG0 (p / person
            :location (c / country
                  :name (n / name
                        :op1 ""Rwanda""))
            :quant (m / more))
      :ARG1 (s / shop-01
            :ARG0 p
            :medium (o2 / online))
      :time (w / wake
            :op1 (p2 / pandemic
                  :name (n2 / name
                        :op1 ""COVID-19""))))"
"(s / shift-01
      :ARG0 (p / product
            :name (n / name
                  :op1 ""Tito's""
                  :op2 ""Vodka""))
      :ARG1 (p2 / produce-01
            :ARG0 p
            :ARG1 (v / vodka))
      :ARG2 (s2 / sanitizer
            :beneficiary (h / hand))
      :purpose (a / and
            :op1 (a2 / adapt-01
                  :ARG1 p
                  :ARG2 (s3 / situation
                        :time (c / current)))
            :op2 (h2 / help-01
                  :ARG0 p
                  :ARG1 (p3 / protect-01
                        :ARG1 (p4 / person)))))"
"(n / need-01
      :ARG0 (y / you)
      :ARG1 (k / keep-01
            :ARG0 y
            :ARG1 (p / phone
                  :mod (c / cell)
                  :poss y)
            :location (w / with
                  :op1 y))
      :purpose (r / remain-01
            :ARG1 y
            :ARG3 (p2 / profitable-02
                  :ARG0 y)
            :time (p3 / pandemic)))"
"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (a / agree-01
                  :ARG0 (ii / i)
                  :ARG1 (r / recommend-01
                        :ARG1 (a2 / avoid-01
                              :ARG0 (w / we)
                              :ARG1 (h / hoard-01
                                    :ARG0 w
                                    :ARG1 (a3 / and
                                          :op1 (f / food)
                                          :op2 (t / thing
                                                :ARG1-of (n / need-01)))))))
            :ARG2 (t2 / trigger-01
                  :ARG0 (s / see-01
                        :ARG0 (y / you
                              :part (m2 / mind))
                        :ARG1 (s2 / shelf
                              :ARG1-of (e / empty-02)
                              :location (s3 / store
                                    :mod (g / grocery))))
                  :ARG1 (s4 / something)
                  :location m2))
      :snt2 (l / limit-01
            :ARG1 (ii2 / i
                  :mod (p / person
                        :ARG0-of (h2 / have-03
                              :ARG1 (a4 / and
                                    :op1 (d / disability)
                                    :op2 (c2 / car
                                          :polarity -)))))
            :ARG2 (b / buy-01
                  :ARG0 ii2
                  :ARG1 (t3 / thing
                        :ARG1-of (c3 / carry-01
                              :ARG0 ii2
                              :ARG1-of (p2 / possible-01))))
            :ARG1-of (c4 / cause-01
                  :ARG0 (p3 / possible-01))
            :snt3 p3
            :ARG1 (c5 / carry-01
                  :ARG0 (ii3 / i)
                  :ARG1 (f2 / food
                        :ARG1-of (w2 / worth-01
                              :ARG2 (t4 / temporal-quantity
                                    :quant 4
                                    :unit (d2 / day))))
                  :mod (o / only))))"
"(m / multi-sentence
      :snt1 (p / product
            :name (n / name
                  :op1 ""Disposable""
                  :op2 ""Medical""
                  :op3 ""Face""
                  :op4 ""Mask"")
            :source (c / company
                  :mod (g / group)
                  :ARG0-of (p2 / produce-01
                        :ARG1 (m2 / mask
                              :quant 1000000)
                        :frequency (r / rate-entity-91
                              :ARG3 (t / temporal-quantity
                                    :quant 1
                                    :unit (d / day))))))
      :snt2 (a / and
            :op1 (c2 / certify-01
                  :ARG0 (o / organization
                        :name (n2 / name
                              :op1 ""CE"")
                        :mod (c3 / continent
                              :name (n3 / name
                                    :op1 ""Europe"")))
                  :ARG1 (t2 / they))
            :op2 (c4 / certify-01
                  :ARG0 (o2 / organization
                        :name (n4 / name
                              :op1 ""FDA"")
                        :mod (c5 / country
                              :name (n5 / name
                                    :op1 ""America"")))
                  :ARG1 t2)))"
"(a / advise-01
      :ARG1 (p / person
            :location (c / country
                  :name (n / name
                        :op1 ""Nigeria""))
            :poss (ii / i))
      :ARG2 (a2 / and
            :op1 (s / stock-01
                  :ARG0 p
                  :ARG1 (h / house
                        :poss p)
                  :ARG2 (t / thing
                        :ARG1-of (s2 / supply-01)
                        :example (a3 / and
                              :op1 (f / food)
                              :op2 (w / water)
                              :op3 (p2 / petrol))))
            :op2 (p3 / prepare-02
                  :ARG0 p
                  :ARG1 p
                  :ARG2 (d / day
                        :ARG1-of (d2 / dark-03)
                        :poss (e / event
                              :name (n2 / name
                                    :op1 ""Covid-19"")))))
      :ARG1-of (g / good-02
            :ARG2-of (h2 / have-degree-91
                  :ARG1 a
                  :ARG3 (m / most))))"
"(f / find-01
      :ARG0 (r / report
            :name (n / name
                  :op1 ""Semiconductor""
                  :op2 ""Analytics"")
            :poss (c / company
                  :name (n2 / name
                        :op1 ""VLSIresearch"")))
      :ARG1 (r2 / recover-01
            :ARG1 (s / sell-01
                  :ARG1 (s2 / semiconductor))
            :time (w / week
                  :ord (o / ordinal-entity
                        :value 2)
                  :part-of (d / date-entity
                        :month 3))
            :ARG1-of (m / mean-01
                  :ARG2 (a / and
                        :op1 (r3 / rise-01
                              :ARG1 (p / price-01))
                        :op2 (f2 / fall-01
                              :ARG1 (u / unit)))))
      :ARG2 (s3 / saturate-01
            :ARG1 (d2 / demand-01
                  :ARG1 (s4 / supply-01))
            :time (w2 / week
                  :mod (l / last))
            :ARG1-of (c2 / cause-01
                  :ARG0 (p2 / pause-01
                        :ARG1 (b / buy-01
                              :ARG0 (o2 / organization
                                    :name (n3 / name
                                          :op1 ""Coronavirus""))
                              :mod (d3 / defensive))))))"
"(a / and
      :op1 (o / obligate-01
            :ARG1 (ii / i)
            :ARG2 (g / go-02
                  :ARG0 ii
                  :ARG4 (s / supermarket)
                  :purpose (g2 / grocery
                        :poss ii
                        :ARG1-of (n / normal-02))
                  :time (d / date-entity
                        :time ""6:00"")))
      :op2 (p / probable
            :domain (b / be-located-at-91
                  :ARG1 ii
                  :ARG2 (v / video
                        :topic (b2 / buy-01)
                        :poss (c / customer
                              :poss (s2 / someone))
                        :ARG0-of (p2 / panic-01))))
      :mod (p3 / publication
            :name (n2 / name
                  :op1 ""COVID2019"")))"
"(s / same-01
      :polarity -
      :ARG1 (t / transport-01
            :ARG1-of (p / public-02)
            :location (c / country
                  :name (n / name
                        :op1 ""India"")))
      :time (e / ever)
      :mod (a / again))"
"(w / wreak-01
      :ARG0 (c / coronavirus)
      :ARG1 (h / havoc)
      :ARG2 (c2 / couple
            :ARG0-of (d / divorce-01))
      :manner (a / amr-unknown))"
"(ii / impact-01
      :ARG0 (p / portion
            :quant (s / several)
            :part-of (l / law
                  :name (n / name
                        :op1 ""CARESAct"")))
      :ARG1 (ii2 / institution
            :mod (f / financial)
            :ARG0-of (f2 / furnish-01
                  :ARG1 (a / agency
                        :ARG0-of (r / report-01
                              :ARG1 (c / credit)))
                  :ARG2 (ii3 / information
                        :source (p2 / person
                              :ARG0-of (c2 / consume-01)))
                  :prep-under (l2 / law
                        :name (n2 / name
                              :op1 ""FCRA"")))
            :ARG0-of (s2 / serve-02
                  :ARG1 (m / mortgage-01
                        :ARG1-of (b / back-01
                              :ARG0 (g / government-organization
                                    :name (n3 / name
                                          :op1 ""Federal""
                                          :op2 ""Reserve""
                                          :op3 ""System""))))))
      :ARG1-of (e / explain-01
            :ARG0 (a2 / and
                  :op1 (p3 / person
                        :name (n4 / name
                              :op1 ""ALHKeeney""))
                  :op2 (p4 / person
                        :name (n5 / name
                              :op1 ""Troy""
                              :op2 ""Mainzer""))))
      :ARG1-of (d / direct-02))"
"(a / and
      :op1 (v / vote-01
            :ARG0 (o / organization
                  :name (n / name
                        :op1 ""European""
                        :op2 ""Parliament""))
            :ARG1 (p / propose-01
                  :ARG1 (c / coronavirus)))
      :op2 (d / delay-01
            :ARG1 (c2 / consult-01
                  :ARG0 (o2 / organization
                        :name (n2 / name
                              :op1 ""European""
                              :op2 ""Commission""))
                  :ARG2 (l / law
                        :name (n3 / name
                              :op1 ""Digital""
                              :op2 ""Services""
                              :op3 ""Act""))))
      :op3 (d2 / delay-01
            :ARG1 (ii / initiative
                  :mod (o3 / organization
                        :name (n4 / name
                              :op1 ""EU"")))
            :degree (f / further)))"
"(m / multi-sentence
      :snt1 (c / coronavirus)
      :snt2 (f / fall-01
            :ARG1 (t / thing
                  :ARG2-of (p / price-01
                        :ARG1 (g / gas
                              :ARG1-of (r / regular-03)))
                  :ARG1-of (a / average-01))
            :ARG2 (m2 / monetary-quantity
                  :quant 14
                  :unit (c2 / cent))
            :ARG4 (r2 / rate-entity-91
                  :ARG1 (m3 / monetary-quantity
                        :quant 2.01
                        :unit (c3 / cent))
                  :ARG2 (v / volume-quantity
                        :quant 1
                        :unit (g2 / gallon)))
            :time (b / before
                  :op1 (n / now)
                  :duration (t2 / temporal-quantity
                        :quant 2
                        :unit (w / week))))
      :snt3 (s / say-01
            :ARG0 (p2 / person
                  :name (n2 / name
                        :op1 ""Trilby""
                        :op2 ""Lundberg"")
                  :ARG0-of (a2 / analyze-01
                        :ARG1 (ii / industry)))
            :ARG1 (d / drop-01
                  :ARG1 (t3 / thing
                        :ARG2-of (p3 / price-01))
                  :ARG2 (m4 / monetary-quantity
                        :quant 52
                        :unit (c4 / cent))
                  :time b
                  :op1 (n3 / now)
                  :duration (t4 / temporal-quantity
                        :quant 7
                        :unit (w2 / week)))
            :ARG1-of (c5 / cause-01
                  :ARG0 (d2 / decline-01
                        :ARG1 (d3 / demand-01
                              :ARG1 (s2 / stay-01
                                    :location (h / home))
                              :ARG1-of (c6 / cause-01
                                    :ARG0 c))))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (a2 / ask-01
                  :ARG0 (ii / i)
                  :ARG1 (t / thing
                        :manner-of (d / do-02
                              :ARG0 (g / guy
                                    :ARG0-of (c / check-out-02)
                                    :ARG2-of a2)))
                  :location (s / store
                        :mod (g2 / grocery)))
            :op2 (s2 / say-01
                  :ARG0 g
                  :ARG1 (t2 / terrible)))
      :snt2 (s3 / stupid
            :domain (ii2 / i)
            :topic (t3 / think-01
                  :ARG0 ii2
                  :ARG2 (s4 / support-01
                        :ARG0 (p / person
                              :mod (a3 / all)
                              :mod (t4 / that))
                        :ARG1 (w / we)
                        :time (a4 / and
                              :op1 (h / healthcare
                                    :mod (s5 / shelter-01))
                              :op2 (r / restaurant)
                              :op3 (f / fire)
                              :op4 (p2 / police)
                              :op5 (e / et-cetera)))))
      :snt3 (r2 / recommend-01
            :polarity -
            :ARG1 (a5 / ask-01
                  :ARG0 ii2
                  :mod (e2 / even))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (b / be-located-at-91
                  :ARG1 (ii / i)
                  :ARG2 (l / local-region
                        :name (n / name
                              :op1 ""Northern""
                              :op2 ""Ontario"")
                        :part-of (c / country
                              :name (n2 / name
                                    :op1 ""Canada""))))
            :op2 (c2 / case-04
                  :polarity -
                  :ARG1 (p / product
                        :name (n3 / name
                              :op1 ""Covid""
                              :op2 19))
                  :location (a2 / area
                        :mod (t / this))))
      :snt2 (c3 / contrast-01
            :ARG1 (a3 / and
                  :op1 (s / stay-01
                        :ARG1 (p2 / person
                              :quant (m2 / most))
                        :ARG3 (h / home))
                  :op2 (g / get-03
                        :ARG1 (s2 / shelf
                              :location (s3 / store
                                    :mod (g2 / grocery)))
                        :ARG2 (l2 / low-04
                              :ARG1 s2)
                        :location (a4 / area
                              :mod (s4 / some))))
            :ARG2 (a5 / available-02
                  :ARG2 (f / food
                        :ARG1-of (h2 / have-quant-91
                              :ARG3 (e / enough)))))
      :snt3 (c4 / close-01
            :ARG1 (s5 / school))
      :snt4 (l3 / limit-01
            :ARG1 (s6 / seat-01
                  :location (r / restaurant))))"
"(m / multi-sentence
      :snt1 (s / sell-01
            :ARG0 (w / we)
            :ARG1 (p / produce
                  :poss w)
            :ARG1-of (c / cost-01)
            :purpose (k / keep-02
                  :ARG0 w
                  :ARG1 (p2 / possible-01
                        :ARG1 (a / afford-01
                              :ARG1 (t / thing
                                    :ARG2-of (p3 / price-01))))
                  :part-of (m2 / mission-01
                        :ARG0 w
                        :ARG1 (p4 / provide-01
                              :ARG0 w
                              :ARG1 (a2 / and
                                    :op1 (f / food
                                          :ARG1-of (f2 / fresh-04))
                                    :op2 (s2 / space
                                          :ARG1-of (g / green-02)))
                              :ARG2 (a3 / all)))))
      :snt2 (a4 / and
            :op1 (b / budget-01
                  :ARG1 (a5 / and
                        :op1 (f3 / family)
                        :op2 (s3 / senior)
                        :ARG1-of (s4 / serve-01
                              :ARG0 (w2 / we)))
                  :ARG1-of (r / restrict-01)
                  :time (b2 / before
                        :op1 (l / law
                              :name (n / name
                                    :op1 ""COVID-19""))))
            :op2 (f4 / face-01
                  :ARG0 a5
                  :ARG1 (c2 / constrain-01
                        :ARG1 (r2 / resource)
                        :quant (m3 / more
                              :mod (e / even)))
                  :time (n2 / now))))"
"(c / contrast-01
      :ARG1 (p / possible-01
            :ARG1 (c2 / challenge-01
                  :ARG0 (w / work-01
                        :ARG2 (s / store
                              :mod (g / grocery))
                        :time (p2 / pandemic
                              :mod (c3 / coronavirus)))))
      :ARG2 (p3 / possible-01
            :ARG1 (d / do-02
                  :ARG0 (p4 / person
                        :ARG0-of (s2 / shop-01))
                  :ARG1 (t / thing
                        :quant (f / few))
                  :ARG2 (h / help-01
                        :ARG0 p4))))"
"(j / join-04
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (w / we)
      :ARG2 (p / panel
            :ord (o / ordinal-entity
                  :value 2)
            :poss w)
      :purpose (l / learn-01
            :ARG0 y
            :ARG1 (a / and
                  :op1 (t / thing
                        :ARG1-of (f / feel-01
                              :ARG0 (p2 / person
                                    :mod (c / country
                                          :name (n / name
                                                :op1 ""America"")))))
                  :op2 (b / behave-01
                        :ARG0 p2
                        :ARG1-of (e / evolve-01))
                  :op3 (t2 / thing
                        :ARG1-of (d / discover-01
                              :ARG0 p2)
                        :ARG1-of (n2 / new-01))
                  :op4 (m / more))))"
"(s / support-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (b / business
            :ARG1-of (l / local-02
                  :ARG2 y))
      :ARG1-of (c / cause-01
            :ARG0 (n / need-01
                  :ARG0 b
                  :ARG1 y
                  :time (n2 / now)
                  :ARG2-of (h / have-degree-91
                        :ARG1 b
                        :ARG3 (m / more)
                        :ARG4 (n3 / need-01
                              :ARG0 b
                              :ARG1 y
                              :time (e / ever))))))"
"(a / and
      :op1 (r / run-out-05
            :ARG1 (f / food)
            :ARG2 (s / seagull
                  :location (c / country
                        :name (n / name
                              :op1 ""Spain"")))
            :ARG1-of (c2 / cause-01
                  :ARG0 (q / quarantine-01
                        :ARG0 (d / disease
                              :name (n2 / name
                                    :op1 ""coronavirus"")))))
      :op2 (f2 / follow-01
            :ARG0 s
            :ARG1 (p / person)
            :time (l / leave-11
                  :ARG0 p
                  :ARG1 (s2 / supermarket))))"
"(s / say-01
      :ARG0 (o / organization
            :name (n / name
                  :op1 ""World""
                  :op2 ""Gold""
                  :op3 ""Council""))
      :ARG1 (a / affect-01
            :ARG0 (s2 / spread-03
                  :ARG1 (p / product
                        :name (n2 / name
                              :op1 ""Covid""
                              :op2 19)))
            :ARG1 (a2 / and
                  :op1 (e / economy)
                  :op2 (m / market
                        :mod (f / finance)))
            :degree (s3 / scale
                  :mod (g / globe))))"
"(a / and
      :op1 (l / link-01
            :ARG1 (d / demand-01
                  :ARG1 (f / food))
            :ARG2 (ii / income)
            :location (c / country
                  :ARG1-of (h / have-degree-91
                        :ARG2 (p / poor)
                        :ARG3 (m / more))))
      :op2 (e / expect-01
            :ARG0 (w / we)
            :ARG1 (l2 / lose-02
                  :ARG1 (o / opportunity
                        :mod (e2 / earn-01
                              :ARG1 (ii2 / income)))
                  :ARG0-of (ii3 / impact-01
                        :ARG1 (c2 / consume-01
                              :ARG1 f)
                        :ARG1-of (p2 / possible-01)))
            :ARG1-of (c3 / cause-01
                  :ARG0 (l3 / law
                        :name (n / name
                              :op1 ""COVID-19"")))))"
(a / amr-empty)
"(a / arrest-01
      :ARG1 (w / woman)
      :time (a2 / after
            :op1 (a3 / and
                  :op1 (t / test-01
                        :ARG1 w
                        :ARG2 (p / positive)
                        :ARG3 (d / disease
                              :name (n / name
                                    :op1 ""COVID-19"")))
                  :op2 (e / expose-01
                        :ARG0 w
                        :ARG1 (p2 / person
                              :quant (s / several))
                        :ARG2 (v / virus
                              :ARG0-of (s2 / spread-03
                                    :ARG1-of (h / high-02)))
                        :manner (k / know-01
                              :ARG0 w)
                        :location (s3 / store
                              :mod (g / grocery))))))"
"(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Gantz""))
      :ARG1 (l / let-01
            :ARG0 (p2 / product
                  :name (n2 / name
                        :op1 ""Epidemic""
                        :op2 ""Safety""
                        :op3 ""Filter"")
                  :poss (c / company
                        :name (n3 / name
                              :op1 ""Comscore"")))
            :ARG1 (o / opt-01
                  :ARG0 (b / brand)
                  :ARG1 (o2 / out-06
                        :ARG1 b
                        :ARG2 (n4 / news
                              :mod (v / virus))))))"
"(r / release-01
      :ARG0 (g / government-organization
            :name (n / name
                  :op1 ""Federal""
                  :op2 ""Trade""
                  :op3 ""Commission""))
      :ARG1 (ii / information
            :topic (t / thing
                  :ARG1-of (e / expect-01
                        :ARG2 (c / check
                              :mod (s / stimulus)
                              :mod (g2 / government-organization
                                    :ARG0-of (g3 / govern-01)))))))"
"(m / multi-sentence
      :snt1 (b / bring-01
            :ARG0 (ii / i)
            :ARG1 (f / flower)
            :ARG2 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 ii
                        :ARG2 (w / wife)))
            :time (a / anniversary
                  :poss (w2 / we))
            :time (b2 / before
                  :op1 (l / law
                        :name (n / name
                              :op1 ""COVID19""))))
      :snt2 (b3 / bring-01
            :ARG0 ii
            :ARG1 (p2 / paper
                  :purpose (t / toilet)
                  :poss (s / she))
            :ARG2 s
            :time (a2 / after
                  :op1 l)))"
"(m / multi-sentence
      :snt1 (d / difficult
            :domain (d2 / distance-01
                  :ARG2 (s / society)
                  :time (w / work-01
                        :ARG1 (s2 / supermarket)))
            :degree (e / extreme))
      :snt2 (a / and
            :op1 (c / come-01
                  :ARG1 (f / family
                        :ARG0-of (h / have-03
                              :ARG1 (a2 / and
                                    :op1 (a3 / adult)
                                    :op2 (k / kid))))
                  :ARG4 (ii / inside))
            :op2 (w2 / walk-01
                  :ARG0 (p / person)
                  :ARG2 (y / you)
                  :direction (r / right)
                  :time h
                  :ARG0 p
                  :ARG1 (q / question-01
                        :ARG0 p)))
      :concession-of (g / glove
            :ARG1-of (h2 / have-quant-91
                  :polarity -
                  :ARG3 (e2 / enough)
                  :ARG6 (g2 / go-02
                        :ARG1 g
                        :direction (a4 / around))))
      :snt3 (m2 / meet-03
            :ARG0 p
            :ARG0-of (h3 / have-org-role-91
                  :ARG2 (s3 / staff)))
      :mod (s4 / still))"
"(u / unskilled
      :polarity -
      :domain (p / person
            :ARG0-of (w / work-01)
            :mod (a / all)
            :mod (t / this)))"
"(m / multi-sentence
      :snt1 (d / design-01
            :ARG1 (t / this)
            :ARG3 (l / logo)
            :purpose (s / sanitize-01
                  :ARG1 (h / hand)))
      :snt2 (c / contact-01
            :polite +
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (ii / i)
            :condition (a / and
                  :op1 (l2 / like-01
                        :ARG0 y
                        :ARG1 (ii2 / it))
                  :op2 (l3 / like-01
                        :ARG0 y
                        :ARG1 ii2
                        :beneficiary y))))"
"(k / know-01
      :polarity -
      :ARG0 (w / we)
      :ARG1 (r / relate-01
            :ARG1 (d / donate-01
                  :ARG2 (c / collection
                        :mod (m / museum)
                        :poss w)
                  :time (b / before
                        :op1 (n / now)
                        :quant (m2 / multiple
                              :op1 (t / temporal-quantity
                                    :quant 1
                                    :unit (y / year)))))
            :ARG2 (ii / item
                  :ARG1-of (d2 / demand-01
                        :ARG1-of (h / high-02)
                        :time (p / pandemic
                              :mod (c2 / coronavirus)
                              :time (c3 / current))))))"
"(p / possible-01
      :ARG1 (d / do-02
            :ARG0 (w / we)
            :ARG1 (s / something)
            :ARG2 (p2 / person
                  :ARG0-of (w2 / work-01
                        :ARG1 (g / grocery))
                  :ARG0-of (a / amaze-01)
                  :poss w)
            :location (h / here
                  :location (h2 / home)))
      :polarity (a2 / amr-unknown))"
"(m / multi-sentence
      :snt1 (l / list
            :consist-of (a / and
                  :op1 (s / shop
                        :location (c / city
                              :name (n / name
                                    :op1 ""Tottenham"")))
                  :op2 (p / place
                        :mod (f / food)
                        :location c)
                  :ARG0-of (o / offer-01
                        :ARG1 (o2 / or
                              :op1 (c2 / collect-01)
                              :op2 (d / deliver-01)))))
      :snt2 (c3 / contact-01
            :polite +
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (b / business)
            :ARG1-of (ii / in-advance-04)
            :purpose (e / ensure-01
                  :ARG0 y
                  :ARG1 (o3 / open-09
                        :ARG1 b))))"
"(m / multi-sentence
      :snt1 (f / fuck-01
            :ARG1 (c / company
                  :name (n / name
                        :op1 ""Mighty""
                        :op2 ""Pound"")
                  :location (l / location
                        :name (n2 / name
                              :op1 ""Peckham"")))
            :ARG2 (j / jack-up-02
                  :ARG0 c
                  :ARG1 (p / price
                        :ARG1-of (ii / include-91
                              :ARG2 (p2 / price
                                    :poss c))
                        :quant (s / some))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (v / virus
                              :mod (c3 / coronavirus)))))
      :snt2 (a / and
            :op1 (c4 / cost-01
                  :ARG1 (t / towel
                        :mod (k / kitchen))
                  :ARG2 (u / up-to
                        :op1 (m2 / monetary-quantity
                              :quant 1.50
                              :unit (p3 / pound)))
                  :time (n3 / now))
            :op2 (c5 / cost-01
                  :ARG1 (g / glove
                        :consist-of (p4 / plastic)
                        :location (b / behind
                              :op1 (c6 / counter)))
                  :ARG2 (u2 / up-to
                        :op1 (m3 / monetary-quantity
                              :quant 2
                              :unit (p5 / pound))))))"
"(r / recommend-01
      :ARG1 (a / and
            :op1 (c / change-01
                  :ARG0 (y / you)
                  :ARG1 (c2 / clothes
                        :poss y))
            :op2 (w / wash-01
                  :ARG0 y
                  :ARG1 c2)
            :time (a2 / after
                  :op1 (v / visit-01
                        :ARG0 y
                        :ARG1 (s / store
                              :mod (g / grocery))))))"
"(m / multi-sentence
      :snt1 (l / lock-down-06
            :ARG1 (s / state
                  :name (n / name
                        :op1 ""Ohio""))
            :time (n2 / now)
            :time (u / until
                  :op1 (d / date-entity
                        :month 4
                        :day 6
                        :mod (a / at-least))))
      :snt2 (p / possible-01
            :ARG1 (a2 / and
                  :op1 (t / travel-01
                        :ARG0 (t2 / they)
                        :ARG4 (s2 / store
                              :mod (g / grocery))
                        :mod (o / only))
                  :op2 (b / be-it-08
                        :ARG1 t)))
      :snt3 (p2 / possible-01
            :ARG1 (w / work-01
                  :ARG0 (p3 / person
                        :mod (c / certain)
                        :mod (o2 / only))
                  :example (a3 / and
                        :op1 (e / enforce-01
                              :ARG1 (l2 / law))
                        :op2 (h / healthcare)
                        :op3 (e2 / et-cetera)))
            :mod (s3 / still)))"
"(c / cause-01
      :ARG0 (ii / impact-01
            :ARG0 (t / thing
                  :name (n / name
                        :op1 ""COVID-19""))
            :ARG1 (ii2 / industry
                  :mod (a / auto)
                  :ARG0-of (c2 / consume-01
                        :ARG1 (s / steel
                              :ARG1-of (f / flat-06))
                        :ARG1-of (k / key-02)))
            :manner (h / heavy))
      :ARG1 (h2 / hit-01
            :ARG1 (s2 / steel
                  :ARG1-of f)
            :time (d / date-entity
                  :year 2020)
            :ARG1-of (h3 / have-degree-91
                  :ARG2 (h4 / hard-04
                        :ARG1 h2)
                  :ARG3 (m / more)
                  :ARG4 (s3 / steel
                        :ARG1-of (l / long-03)))))"
"(e / effective-04
      :polarity -
      :ARG0 (a / and
            :op1 (d / distance-01
                  :ARG2 (s / society))
            :op2 (q / quarantine-01))
      :condition (g / go-02
            :ARG0 (y / you)
            :ARG4 (s2 / supermarket
                  :ARG1-of (b / busy-02
                        :degree (v / very)))
            :ord (o / ordinal-entity
                  :value 1)
            :purpose (g2 / get-01
                  :ARG0 y
                  :ARG1 (s3 / supply-01
                        :ARG1 (b2 / barbecue))))
      :ARG1-of (u / understand-01
            :ARG0 (ii / i)
            :ARG1-of (c / correct-02)))"
"(m / multi-sentence
      :snt1 (f / file-01
            :ARG0 (y / you)
            :ARG1 (c / complain-01)
            :ARG2 (o / organization
                  :name (n / name
                        :op1 ""TravelersOrg"")))
      :snt2 (ii / issue-01
            :polarity -
            :ARG0 (c2 / company
                  :name (n2 / name
                        :op1 ""FlyFrontier""))
            :ARG1 (r / refund-01
                  :ARG0 c2
                  :ARG2 (p / person
                        :ARG1-of (e / employ-01
                              :ARG0 (g / government-organization
                                    :ARG0-of (g2 / govern-01)))
                        :ARG1-of (r2 / require-01
                              :ARG0 (l / law
                                    :name (n3 / name
                                          :op1 ""CODID""
                                          :op2 19))
                              :purpose (c3 / cancel-01
                                    :ARG0 p
                                    :ARG1 (t / travel-01)))))
            :ARG2 p)
      :snt3 (a / and
            :op1 (c4 / corrupt-01
                  :ARG1 (ii2 / it))
            :op2 (r3 / recommend-01
                  :ARG1 (ii3 / investigate-01
                        :ARG1 ii2))))"
"(m / multi-sentence
      :snt1 (g / go-01
            :ARG1 (ii / it)
            :ARG3 (s / season
                  :mod (c / cuff-01))
            :ARG4 (s2 / season
                  :mod (c2 / cough-01))
            :ARG1-of (q / quick-02
                  :degree (v / very)))
      :snt2 (t / try-01
            :polarity -
            :ARG0 (n / nobody)
            :ARG1 (c3 / cuddle-01
                  :ARG0 n)
            :time (n2 / now))
      :snt3 (a / and
            :op1 (d / delete-01
                  :ARG0 (g2 / girl)
                  :ARG1 (p / pic
                        :poss g2
                        :location (c4 / city
                              :name (n3 / name
                                    :op1 ""Miami""))))
            :op2 (p2 / post-01
                  :ARG0 g2
                  :ARG1 (p3 / photo
                        :topic (s3 / store
                              :mod (g3 / grocery))))
            :ARG1-of (r / resemble-01
                  :op1 (s4 / string-entity
                        :value ""TakeMeBack"")
                  :op2 (s5 / string-entity
                        :value ""coronavirusCuffing""))
            :ARG2-of r)
      :ARG1-of (t2 / turn-02
            :ARG2 (s6 / season
                  :mod (c5 / cough-01))))"
"(d / destroy-01
      :ARG1 (m / market)
      :manner (g / go-05
            :ARG2 (a / and
                  :op1 (f / free-04
                        :ARG2 (m2 / meat))
                  :op2 (f2 / free-04
                        :ARG2 (d2 / dairy)))
            :duration (f3 / forever)))"
"(a / agree-01
      :ARG0 (a2 / and
            :op1 (o / organization
                  :name (n / name
                        :op1 ""OPEC""))
            :op2 (a3 / ally-01
                  :ARG2 o))
      :ARG1 (c / cut-02
            :ARG1 (o2 / output
                  :mod (o3 / oil))
            :ARG2 (r / rate-entity-91
                  :ARG1 (a4 / almost
                        :op1 (v / volume-quantity
                              :quant 10000000
                              :unit (b / barrel)))
                  :ARG2 (t / temporal-quantity
                        :quant 1
                        :unit (d / day)))
            :mod (r2 / record))
      :purpose (s / stabilize-01
            :ARG0 a2
            :ARG1 (p / price-01
                  :ARG1 o3)
            :time (a5 / and
                  :op1 (p2 / pandemic)
                  :op2 (w / war-01
                        :ARG2 (p3 / price-01)))))"
"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (h / have-06
                  :ARG0 (ii / i)
                  :ARG1 (a / appointment-02
                        :ARG0 ii
                        :ARG1 (d / doctor)
                        :ARG2 (ii2 / issue-02
                              :ARG0 (f / foot)
                              :ARG1 ii))
                  :time (d2 / date-entity
                        :dayperiod (m2 / morning)
                        :mod (t / today)))
            :ARG2 (c2 / call-02
                  :ARG0 (n / nurse)
                  :time (b / before
                        :op1 a
                        :quant (t2 / temporal-quantity
                              :quant 2
                              :unit (h2 / hour)))
                  :purpose (s / say-01
                        :ARG0 n
                        :ARG1 (c3 / cause-01
                              :ARG0 (l / law
                                    :name (n2 / name
                                          :op1 ""COVID-19""))
                              :ARG1 (t3 / telemedicine
                                    :mod (o / only)
                                    :time (n3 / now))))))
      :snt2 (w / want-01
            :polarity -
            :ARG0 (s2 / service
                  :ARG1-of (h3 / have-degree-91
                        :ARG2 (e / essential)
                        :ARG3 (m3 / most))
                  :mod (e2 / even))
            :ARG1 (s3 / see-01
                  :ARG0 s2
                  :ARG1 (w2 / we)))
      :snt3 (a2 / amr-unknown
            :time-of (d3 / day
                  :mod (p / person
                        :ARG0-of (w3 / work-01
                              :ARG1 (s4 / supermarket))
                        :mod (n4 / nation)))))"
"(s / scene
      :location (b / before
            :op1 (c / company
                  :name (n / name
                        :op1 ""Costco"")
                  :domain (s2 / store
                        :ARG1-of (d / discount-01)
                        :mod (b2 / bulk)
                        :mod (s3 / supermarket)
                        :location (c2 / country
                              :name (n2 / name
                                    :op1 ""USA""))))
            :location-of (q / queue-01
                  :ARG2 (p / product
                        :name (n3 / name
                              :op1 ""COVID-19"")
                        :mod (c3 / coronavirus)))))"
"(m / multi-sentence
      :snt1 (k / know-01
            :polarity -
            :ARG0 (p / person
                  :quant (l / lot))
            :ARG1 (t / thing
                  :ARG1-of (d / do-02
                        :ARG0 p)))
      :snt2 (r / ridiculous-02
            :ARG1 (g / go-02
                  :ARG0 (p2 / person)
                  :ARG4 (s / store
                        :mod (g2 / grocery)))
            :ARG1-of (c / cause-01
                  :ARG0 (k2 / know-01
                        :polarity -
                        :ARG0 p2
                        :ARG1 t
                        :manner-of (k3 / keep-02
                              :ARG0 p2
                              :ARG1 (d2 / distance-01
                                    :ARG1 p2
                                    :ARG2 s)))))
      :snt3 (o / open-up-03
            :ARG0 (y / you)
            :ARG1 (e / economy)
            :manner (a / amr-unknown)
            :condition (p3 / possible-01
                  :polarity -
                  :ARG1 (t2 / trust-01
                        :ARG1 (g3 / go-02
                              :ARG0 y
                              :ARG4 s
                              :manner (p4 / proper))
                        :ARG2 y))))"
"(r / receive-01
      :ARG0 (ii / i)
      :ARG1 (e / email-01
            :ARG0 (b / business)
            :ARG1 (c / contrast-01
                  :ARG1 (c2 / concern-02
                        :ARG0 e
                        :ARG1 (v / virus
                              :name (n / name
                                    :op1 ""CoronaVirus"")))
                  :ARG2 (c3 / concern-02
                        :polarity -
                        :ARG0 e
                        :ARG1 (c4 / carrier
                              :mod (c5 / cellphone)
                              :poss ii)))
            :quant (m / many))
      :ARG2 b)"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (e / expose-01
                  :ARG1 (c / company
                        :ARG1-of (ii / include-91
                              :ARG2 (c2 / company
                                    :location (c3 / continent
                                          :name (n / name
                                                :op1 ""Asia"")))
                              :ARG3 (p / percentage-entity
                                    :value 1
                                    :ARG1-of (r / rate-01))))
                  :ARG2 (d / disrupt-01)
                  :ARG1-of (h / high-02))
            :op2 (s / sensitive-03
                  :ARG0 c
                  :ARG1 (a2 / and
                        :op1 (d2 / demand-01
                              :ARG0 (p2 / person
                                    :ARG0-of (c4 / consume-01)))
                        :op2 (r2 / restrict-01
                              :ARG1 (t / travel-01))
                        :ARG1-of (s2 / shift-01))))
      :snt2 (p3 / potential
            :ARG1-of (m2 / moderate-03)
            :domain (c5 / company
                  :quant 36
                  :mod (a3 / another))
            :topic (ii2 / implicate-01
                  :ARG1 (o / or
                        :op1 (q / quality
                              :mod (c6 / credit)
                              :poss c5)
                        :op2 (r3 / rate-01
                              :ARG1 c5)))))"
"(r / rise-01
      :ARG1 (p / price-01
            :ARG1 (e / egg))
      :ARG1-of (c / cause-01
            :ARG0 (b / buy-01
                  :ARG0 (p2 / person)
                  :ARG1 e
                  :quant (q / quantity
                        :mod (l / large))
                  :ARG1-of c
                  :ARG0 (f / fear-01
                        :ARG0 p2))))"
"(c / cause-01
      :ARG0 (a / amr-unknown)
      :ARG1 (a2 / and
            :polarity -
            :op1 (l / lower-05
                  :ARG1 (p / price-01
                        :ARG1 (p2 / prepay-01
                              :ARG1 (v / value))))
            :op2 (d / donate-01
                  :ARG1 (p3 / proceeds
                        :quant (s / some)
                        :source p)
                  :ARG2 (e / effort-01
                        :ARG1 (r / relieve-01)
                        :mod (p4 / program
                              :name (n / name
                                    :op1 ""COVID""
                                    :op2 19))))))"
"(r / read-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (a / advise-01
            :ARG0 (w / we)
            :ARG1 y
            :ARG2 (t / thing
                  :manner-of (c / claim-01
                        :ARG0 y
                        :ARG1 (r2 / refund-01
                              :ARG1 (o / or
                                    :op1 (c2 / concert
                                          :ARG1-of (c3 / cancel-01))
                                    :op2 (e / event
                                          :mod (s / sport))
                                    :op3 (f / festival)
                                    :ARG1-of (c4 / cancel-01))
                              :ARG2 y))))
      :condition (c5 / cancel-01
            :ARG1 (p / plan-01
                  :ARG0 y
                  :ARG1 (f2 / festival
                        :time (d / date-entity
                              :season (s2 / summer))))))"
"(d / do-02
      :ARG0 (ii / i)
      :ARG1 (a / amr-unknown)
      :ARG2 (a2 / and
            :op1 (b / bean
                  :mod (p / pinto))
            :op2 (l / lettuce))
      :ARG1-of (p2 / possible-01))"
"(m / make-01
      :ARG0 (f / factory
            :ARG0-of (m2 / make-01
                  :ARG1 (a / and
                        :op1 (p / perfume)
                        :op2 (t / t-shirt)
                        :op3 (c / car))
                  :time (u / use-03)))
      :ARG1 (t2 / thing
            :ARG1-of (s / supply-01
                  :purpose (f2 / fight-01
                        :ARG1 (c2 / coronavirus))))
      :time (n / now))"
"(j / jump-01
      :ARG1 (d / demand-01
            :ARG0 (p / person
                  :ARG0-of (a / analyze-01
                        :ARG1 (h / home)))
            :ARG1 (g / gear
                  :ARG1-of (m / make-01
                        :location h)))
      :ARG2 (s / significant-02)
      :time (s2 / since
            :op1 (b / begin-01
                  :ARG1 (o / outbreak-29))))"
