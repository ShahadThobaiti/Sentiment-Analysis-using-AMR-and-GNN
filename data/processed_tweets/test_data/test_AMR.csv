AMR
"(m / multi-sentence
      :snt1 (a / and
            :op1 (s / see-01
                  :ARG0 (ii / i)
                  :ARG1 (s2 / supermarket
                        :location (c / country
                              :name (n / name
                                    :op1 ""Italy"")))
                  :time (j / just)
                  :medium (n2 / news))
            :op2 (s3 / shame-02
                  :ARG0 s2
                  :ARG1 (b / buy-01
                        :mod (p / panic-01)
                        :location (c2 / country
                              :name (n3 / name
                                    :op1 ""UK"")))))
      :snt2 (c3 / calm-down-02
            :polite +
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (p2 / person)
            :ARG1-of (c4 / cause-01
                  :ARG0 (m2 / make-02
                        :ARG0 y
                        :ARG1 (d / difficult
                              :domain (ii2 / it))
                        :ARG1-of (r / real-04))))
      :snt3 (d2 / down-03
            :ARG1 (ii3 / i)
            :ARG2 (a2 / and
                  :op1 (m3 / milk
                        :quant (v / volume-quantity
                              :quant 2
                              :unit (p3 / pint)))
                  :op2 (b2 / bread
                        :polarity -)
                  :op3 (b3 / bit
                        :quant (f / few)
                        :location (f2 / freezer)))))"
"(c / create-01
      :ARG0 (c2 / company
            :name (n / name
                  :op1 ""Aldi""))
      :ARG1 (j / job
            :ARG1-of (n2 / new-01)
            :quant (m / multiple
                  :op1 1000))
      :location (f / footprint
            :poss c2
            :location (c3 / country
                  :name (n3 / name
                        :op1 ""UK"")))
      :purpose (ii / increase-01
            :ARG0 c2
            :ARG1 (e / effort-01
                  :ARG0 c2
                  :ARG1 (a / and
                        :op1 (l / logistics)
                        :op2 (d / distribute-01)))
            :time (s / surge-01
                  :ARG1 (d2 / demand-01)
                  :prep-amid (c4 / crisis
                        :mod (c5 / coronavirus)))))"
(a / amr-empty)
"(c / contrast-01
      :ARG1 (r / recommend-01
            :ARG1 (s / stay-01
                  :ARG1 (ii / i)
                  :ARG3 (ii2 / inside)))
      :ARG2 (o / obligate-01
            :ARG1 ii
            :ARG2 (w / wait-01
                  :ARG2 (g / get-05
                        :ARG1 ii
                        :ARG2 ii2
                        :purpose (b / buy-01
                              :ARG0 ii
                              :ARG1 (f / food
                                    :ARG1-of (l / leave-17)
                                    :example (a / and
                                          :op1 (c2 / cookie
                                                :name (n / name
                                                      :op1 ""Maria""))
                                          :op2 (d / drink
                                                :name (n2 / name
                                                      :op1 ""Tampico""
                                                      :op2 ""Orange""))))
                              :ARG2 (s2 / store
                                    :mod (g2 / grocery))))
                  :duration (t / temporal-quantity
                        :quant 2
                        :unit (h / hour))
                  :mod (j / just))))"
"(m / multi-sentence
      :snt1 (r / remain-01
            :ARG1 (f / food)
            :ARG3 (n / need-01
                  :ARG0 (w / we
                        :mod (a / all))
                  :ARG1 f
                  :ARG1-of (k / key-02)
                  :location (l / location
                        :location-of w))
            :time (c / continue-01
                  :ARG0 (w2 / world)
                  :ARG1 (f2 / fight-01
                        :ARG0 w2
                        :ARG1 (v / virus
                              :mod (c2 / coronavirus)))))
      :snt2 (h / have-degree-91
            :ARG1 (n2 / nothing)
            :ARG2 (ii / important-01
                  :ARG1 n2)
            :ARG3 (m2 / more)
            :ARG4 (a2 / and
                  :op1 (h2 / health
                        :poss w)
                  :op2 (f3 / food)))
      :snt3 (t / think-01
            :mode imperative
            :ARG0 w)
      :ARG2 (p / person
            :ARG0-of (f4 / farm-01)
            :poss w)
      :time (t2 / today))"
"(b / be-temporally-at-91
      :ARG2 (b2 / bore-02
            :ARG1 (p / pet
                  :poss (y / you))
            :location (b3 / bathroom)))"
"(s / say-01
      :ARG0 (ii / i)
      :ARG1 (c / cause-01
            :ARG0 (l / law
                  :name (n / name
                        :op1 ""CODID-19""))
            :ARG1 (t / this
                  :location (t2 / throughout
                        :op1 (c2 / country))))
      :ARG2 (p / person
            :name (n2 / name
                  :op1 ""vjchaudhary"")
            :ARG0-of (h / have-rel-role-91
                  :ARG2 (u / uncle))))"
"(m / multi-sentence
      :snt1 (h / have-condition-91
            :ARG1 (a / amr-unknown)
            :ARG2 (u / use-01
                  :ARG0 (y / you)
                  :ARG1 (m2 / multiple
                        :op1 1000000000
                        :instrument-of (b / bail-out-02
                              :ARG0 y
                              :ARG1 (c / corporation)))
                  :ARG2 (b2 / bail-out-02
                        :ARG0 y
                        :ARG1 (d / debt
                              :poss (e / everyone
                                    :ARG0-of (m3 / make-05
                                          :ARG1 (u2 / under
                                                :op1 (m4 / monetary-quantity
                                                      :quant 200000
                                                      :unit (d2 / dollar)))))))))
      :snt2 (a2 / and
            :op1 (b3 / bet-01
                  :ARG0 (ii / i)
                  :ARG2 (l / less-than
                        :op1 (m5 / multiple
                              :op1 1000000000
                              :ARG1-of (u3 / use-01
                                    :ARG0 (y2 / you)))))
            :op2 (m6 / make-02
                  :ARG0 (ii2 / it)
                  :ARG1 (r / rebuy-00
                        :ARG0 (p / person
                              :ARG0-of (c2 / consume-01))
                        :ARG1-of (h2 / have-quant-91
                              :ARG3 (m7 / more
                                    :quant (l2 / lot)))))
            :op3 (m8 / money
                  :ARG1-of (t / tax-01
                        :ARG2 (w / we))
                  :domain ii2
                  :mod (p2 / plus))))"
"(c / cause-01
      :ARG0 (ii / incident
            :mod (p / process-02
                  :ARG1-of (s / serious-02))
            :location (c2 / company
                  :name (n / name
                        :op1 ""Albert""
                        :op2 ""Heijn"")
                  :ARG1-of (h / have-degree-91
                        :ARG2 (l / large)
                        :ARG3 (m / most)
                        :ARG5 (s2 / supermarket
                              :location (c3 / country
                                    :name (n2 / name
                                          :op1 ""Netherlands""))))))
      :ARG1 (d / disrupt-01
            :ARG0 ii
            :ARG1 (a / and
                  :op1 (c4 / chain
                        :mod (l2 / logistics)
                        :poss c2)
                  :op2 (c5 / chain
                        :mod (s3 / supply-01)
                        :poss c2))
            :ARG1-of (m2 / major-02)))"
"(s / survive-01
      :ARG0 (ii / i)
      :ARG1 (s2 / store
            :mod (g / grocery))
      :manner (o / or
            :polarity -
            :op1 (p / paper-tow
                  :mod (p2 / paper))
            :op2 p2
            :purpose (t / toilet)))"
"(w / want-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Bob""
                  :op2 ""Ferguson""))
      :ARG1 (r / report-01
            :ARG0 (y / you)
            :ARG1 (g / gouge-02
                  :ARG1 (p2 / price)
                  :ARG1-of (r2 / relate-01
                        :ARG2 (l / law
                              :name (n2 / name
                                    :op1 ""COVID-19""))))))"
"(a / and
      :op1 (f / fight-01
            :ARG0 (w / we
                  :mod (a2 / all))
            :ARG1 (d / disease
                  :name (n / name
                        :op1 ""Covid-19""
                        :op2 ""Deadly""
                        :op3 ""Virus""))
            :location (g / globe))
      :op2 (u / use-01
            :ARG0 (p / person
                  :ARG0-of (b / blackmarket-01))
            :ARG1 (p2 / platform
                  :poss (y / you))
            :ARG2 (s / sell-01
                  :ARG0 p
                  :ARG1 (a3 / and
                        :op1 (m / mask)
                        :op2 (s2 / sanitizer))
                  :ARG3 (m2 / monetary-quantity
                        :ARG1-of (h / high-02
                              :degree (v / very))
                        :ARG2-of (p3 / price-01)))
            :ARG0-of (ii / ignore-01
                  :ARG1 (n2 / notification
                        :source (g2 / government-organization
                              :ARG0-of (g3 / govern-01
                                    :ARG1 (c / country
                                          :name (n3 / name
                                                :op1 ""India""))))
                        :time (d2 / date-entity
                              :month 3
                              :day 19
                              :year 2002)))))"
"(t / think-01
      :ARG0 (y / you)
      :ARG1 (h / have-06
            :ARG0 (ii / industry
                  :mod (a / amr-unknown))
            :ARG1 (s / spike-01
                  :ARG1 (d / demand-01))
            :time (b / be-done-08
                  :ARG1 (p / product
                        :name (n / name
                              :op1 ""COVID-19"")))))"
"(m / multi-sentence
      :snt1 (s / spend-01
            :ARG0 (ii / i)
            :ARG1 (a / and
                  :op1 (m2 / monetary-quantity
                        :quant 50
                        :unit (d / dollar))
                  :op2 (m3 / monetary-quantity
                        :quant 110
                        :unit (d2 / dollar)))
            :ARG3 (s2 / store
                  :mod (g / grocery))
            :mod (j / just))
      :snt2 (d3 / do-02
            :ARG0 (ii2 / i)
            :ARG1 (t / this)
            :ARG2-of (r / right-06
                  :polarity (a2 / amr-unknown))))"
"(c / continue-01
      :ARG0 (w / we)
      :ARG1 (f / fight-01
            :ARG0 w
            :ARG1 (t / they)
            :location (a / and
                  :op1 (b / beach)
                  :op2 (a2 / aisle
                        :ord (o / ordinal-entity
                              :value 3)
                        :part-of (s / supermarket)))))"
(a / amr-empty)
"(c / contrast-01
      :ARG1 (a / allow-01
            :ARG1 (s / shop-01
                  :ARG0 (w / we)
                  :frequency (r / rate-entity-91
                        :ARG1 1
                        :ARG2 (t / temporal-quantity
                              :quant 1
                              :unit (d / day))))
            :ARG2 w)
      :ARG2 (a2 / and
            :op1 (p / possible-01
                  :ARG1 (f / fine-01
                        :ARG2 (g / group
                              :consist-of (p2 / person))
                        :ARG3 (s2 / shop-01
                              :ARG0 g
                              :medium (o / online)))
                  :time (s3 / slot
                        :polarity -
                        :ARG2-of (a3 / available-02)))
            :op2 (b / be-located-at-91
                  :ARG1 (f2 / fuck
                        :mod (a4 / all))
                  :ARG2 (s4 / shelf)
                  :concession (e / even-when
                        :op1 (g2 / go-out-17
                              :ARG0 w)))))"
"(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Gulzar""
                  :op2 ""Ahmed"")
            :ARG0-of (h / have-org-role-91
                  :ARG2 (j / justice
                        :mod (c / chief))))
      :ARG1 (s2 / satisfactory-03
            :polarity -
            :ARG1 (p2 / perform-02
                  :ARG0 (p3 / person
                        :name (n2 / name
                              :op1 ""Dr""
                              :op2 ""Zafar""
                              :op3 ""Mirza""))
                  :ARG1 (t / tackle-01
                        :ARG0 p3
                        :ARG1 (o / outbreak-29
                              :ARG1 (d / disease
                                    :name (n3 / name
                                          :op1 ""Coronavirus"")))))))"
"(m / multi-sentence
      :snt1 (p / person
            :name (n / name
                  :op1 ""Sudhanshu_M""))
      :snt2 (e / event
            :mod (a / amr-unknown)
            :time (n2 / now)))"
"(m / multi-sentence
      :snt1 (r / run-out-05
            :ARG1 (s / stock-01
                  :ARG0 (s2 / store
                        :mod (c / confectionary)
                        :quant (m2 / many)
                        :ARG2-of r))
            :time (t / today)
            :time (a / after
                  :op1 (l / lock-down-06
                        :duration (t2 / temporal-quantity
                              :quant 1
                              :unit (w / week)
                              :mod (o / only)))))
      :snt2 (h / have-condition-91
            :ARG1 (n / need-01
                  :ARG1 (p / plan-01
                        :ARG1 (c2 / chain-01
                              :ARG1 (s3 / supply-01
                                    :mod (e / emergency)))))
            :ARG2 (ii / increase-01
                  :ARG1 l)
            :ARG1-of (c3 / cause-01
                  :ARG0 (s4 / spread-02
                        :ARG0 (o2 / organization
                              :name (n2 / name
                                    :op1 ""COVID-19""))
                        :ARG1 (c4 / community)
                        :location (c5 / city
                              :part-of (c6 / class
                                    :mod c6
                                    :mod (s5 / slash
                                          :op1 ""B""
                                          :op2 ""C"")))
                        :mod (e2 / especially)))))"
"(r / receive-01
      :ARG0 (p / person
            :ARG0-of (h / have-rel-role-91
                  :ARG2 (p2 / parent))
            :ARG0-of (p3 / pay-01
                  :ARG1 (m / monetary-quantity
                        :quant 850
                        :unit (d / dollar))
                  :ARG2 (p4 / person
                        :ARG0-of (h2 / have-rel-role-91
                              :ARG1 p
                              :ARG2 (p5 / person
                                    :ARG0-of (s / study-01)))
                        :mod (g / grade
                              :ord (o / ordinal-entity
                                    :value 8)))
                  :ARG3 (t / trip-03
                        :ARG0 p4
                        :ARG1-of (c / cancel-01
                              :time (a / after
                                    :op1 p3))))
            :location (c2 / city
                  :name (n / name
                        :op1 ""South""
                        :op2 ""Lyon"")))
      :ARG1 (r2 / refund-01
            :ARG2 p)
      :time (f / final))"
"(d / deliver-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Brad""
                  :op2 ""Paisley""))
      :ARG1 (g / grocery
            :ARG1-of (f / free-03))
      :ARG2 (p2 / person
            :mod (e / elderly))
      :time (p3 / pandemic
            :mod (c / coronavirus)))"
"(s / soar-01
      :ARG1 (s2 / sell-01
            :ARG1 (a / and
                  :op1 (p / product
                        :ARG0-of (s3 / sanitize-01
                              :ARG1 (h / hand)))
                  :op2 (p2 / product
                        :ARG0-of (s4 / sanitize-01
                              :ARG1 (s5 / soap)))))
      :location (a2 / across
            :op1 (w / world))
      :mod (u / url-entity
            :value ""https://www.al-monitor.com/pulse/originals/2020/03/turkey-kolonya-coronavirus-sanitizer-soap-shortage.html""))"
"(o / offer-01
      :ARG1 (a / and
            :op1 (e / employ-01
                  :ARG1 (p / person
                        :quant 8000
                        :ARG0-of (w / work-01)
                        :ARG0-of (l / lose-02
                              :ARG1 (j / job
                                    :poss p)
                              :ARG1-of (c / cause-01
                                    :ARG0 (l2 / law
                                          :name (n / name
                                                :op1 ""COVID-19"")))))
                  :ARG1-of (n2 / new-01))
            :op2 (t / train-01
                  :ARG2 p))
      :ARG3 (ii / initiative
            :ARG1-of (l3 / launch-01
                  :ARG0 (a2 / and
                        :op1 (w2 / we)
                        :op2 (g / government-organization
                              :ARG0-of (g2 / govern-01))))
            :purpose (k / keep-01
                  :ARG0 a2
                  :ARG1 (s / shelf
                        :part-of (s2 / supermarket))
                  :ARG2 (s3 / stock-01)
                  :time (p2 / pandemic))))"
"(s / show-01
      :ARG0 (s2 / study-01
            :mod (j / joint)
            :ARG1-of (c / carry-out-03
                  :ARG0 (o / organization
                        :quant 4
                        :mod (r / research-01)
                        :mod (c2 / country
                              :name (n / name
                                    :op1 ""Finland"")))
                  :instrument (s3 / supercomputer)))
      :ARG1 (a / and
            :op1 (r2 / remain-01
                  :ARG1 (a2 / airborne)
                  :ARG3 (a3 / air)
                  :ARG1-of (h / have-degree-91
                        :ARG2 (l / long-03
                              :ARG1 r2)
                        :ARG3 (m / more)
                        :ARG4 (t / think-01)))
            :op2 (p / possible-01
                  :ARG1 (ii / infect-01
                        :ARG0 (c3 / cough-01
                              :quant 1)
                        :ARG1 (p2 / person)
                        :location (r3 / relative-position
                              :op1 (s4 / supermarket)
                              :direction (a4 / away)
                              :quant (u / up-to
                                    :op1 (d / distance-quantity
                                          :quant 30
                                          :unit (f / foot)))
                              :location (a5 / aisle
                                    :quant 2))))))"
"(ii / increase-01
      :ARG1 (p / price-01
            :ARG1 (h / home)
            :location (c / country
                  :name (n / name
                        :op1 ""United""
                        :op2 ""States"")))
      :ARG2 (p2 / percentage-entity
            :value 4.1)
      :time (d / date-entity
            :month 2)
      :ARG1-of (c2 / compare-01
            :ARG2 (y / year
                  :mod (p3 / previous)
                  :time (b / before
                        :op1 (b2 / break-out-30
                              :ARG1 (c3 / coronavirus))))))"
"(p / possible-01
      :ARG1 (c / complain-01
            :ARG0 (y / you)
            :ARG2 (g / government-organization
                  :name (n / name
                        :op1 ""Consumer""
                        :op2 ""Financial""
                        :op3 ""Protection""
                        :op4 ""Bureau"")))
      :condition (w / worry-02
            :ARG0 y
            :ARG1 (p2 / pay-01
                  :ARG0 y
                  :ARG1 (b / bill-01
                        :ARG2 y))))"
"(c / cause-01
      :ARG0 (c2 / company
            :name (n / name
                  :op1 ""Covid-19""))
      :ARG1 (t / think-01
            :ARG0 (s / store
                  :mod (g / grocery))
            :ARG1 (o / okay-04
                  :ARG1 (h / hike-02
                        :ARG0 s
                        :ARG1 (p / price-01
                              :ARG0 s)
                        :ARG2 (p2 / percentage-entity
                              :value 20)
                        :ARG5 (u / up)
                        :ARG1-of c
                        :ARG0 (ii / issue-02
                              :mod (g2 / globe)
                              :mod (t2 / this)))))
      :mod (a / also))"
"(c / continue-01
      :ARG1 (a / and
            :op1 (o / open-09
                  :ARG1 (s / store
                        :ARG0-of (r / retail-01)))
            :op2 (s2 / spread-03
                  :ARG0 s
                  :ARG1 (v / virus)))
      :time (u / until
            :op1 (m / mandate-01
                  :ARG0 (g / government-organization
                        :ARG0-of (g2 / govern-01))
                  :ARG1 (h / have-polarity-91
                        :ARG1 a
                        :ARG2 -))))"
"(m / make-01
      :ARG0 (w / we)
      :ARG1 (p / pact
            :topic (h / have-06
                  :ARG0 w
                  :ARG1 (m2 / meal
                        :mod (f / final))
                  :mod (t / together)
                  :condition (f2 / find-01
                        :ARG0 w
                        :ARG1 (p2 / pizza
                              :ARG1-of (f3 / freeze-01))
                        :location (m3 / market
                              :name (n / name
                                    :op1 ""Sainsbury's"")))))
      :ARG2 (p3 / person
            :name n
            :op1 ""Space""
            :op2 ""Daddy""))"
"(a / and
      :op1 (s / stay-01
            :mode imperative
            :ARG1 (y / you
                  :part (h / hand))
            :location (h2 / home))
      :op2 (s2 / stay-01
            :mode imperative
            :ARG1 y
            :ARG3 (s3 / safe-01
                  :ARG1 y))
      :op3 (w / wash-01
            :mode imperative
            :ARG0 y
            :ARG1 h)
      :op4 (a2 / avoid-01
            :mode imperative
            :ARG0 y
            :ARG1 (c / crowd))
      :op5 (e / eat-01
            :mode imperative
            :ARG0 y
            :ARG1 (f / food
                  :mod (h3 / healthy)))
      :op6 (a3 / and
            :op1 (p / panic-01
                  :polarity -
                  :mode imperative
                  :ARG0 y)
            :op2 (s4 / spread-03
                  :polarity -
                  :mode imperative
                  :ARG0 y
                  :ARG1 (n / news
                        :ARG1-of (f2 / fake-02))))
      :op7 (f3 / follow-02
            :mode imperative
            :ARG0 y
            :ARG1 (d / directive
                  :poss (g / government-organization
                        :ARG0-of (g2 / govern-01)))
            :ARG1-of (c2 / cost-01
                  :ARG2 (a4 / any))
            :purpose (p2 / prevent-01
                  :ARG0 y
                  :ARG1 (e2 / event
                        :name (n2 / name
                              :op1 ""Covid19"")))))"
"(m / multi-sentence
      :snt1 (j / join-04
            :mode imperative
            :polite +
            :ARG0 (y / you)
            :ARG1 (w / we)
            :ARG2 (s / session
                  :ord (o / ordinal-entity
                        :value 2)
                  :subevent-of (b / broadcast-program
                        :name (n / name
                              :op1 ""TVCWebinarSeries"")
                        :poss w)
                  :time (d / date-entity
                        :month 4
                        :day 16
                        :time ""12:00""
                        :timezone ""EDT""
                        :weekday (t / thursday))))
      :snt2 (e / examine-01
            :ARG0 (w2 / we)
            :ARG1 (a / and
                  :op1 (b2 / behave-01
                        :ARG0 (p / person
                              :ARG0-of (c / consume-01)))
                  :op2 (ii / insight
                        :mod (r / research-01
                              :ARG1 (m2 / market))))
            :time (c2 / crisis
                  :name (n2 / name
                        :op1 ""COVID-19""))))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (ii2 / infect-01
                  :ARG1 ii
                  :ARG2 (r / respire-01
                        :ARG0 ii)
                  :time (a / after
                        :op1 (c / contact-01
                              :ARG0 ii
                              :ARG1-of (r2 / risky-02)
                              :location (s2 / supermarket))
                        :quant (t / temporal-quantity
                              :quant 5
                              :unit (d / day)
                              :mod (e / exact))))
            :ARG2 (p / person
                  :name (n / name
                        :op1 ""Barrettvet"")))
      :snt2 (s3 / suspect-01
            :ARG0 (ii3 / i)
            :ARG1 (f / form
                  :mod (d2 / disease
                        :name (n2 / name
                              :op1 ""CoVID-19"")))
            :ARG0-of (c2 / cause-01
                  :ARG1 (d3 / download-01
                        :ARG0 ii3
                        :ARG1 (a2 / app))))
      :snt3 (t2 / thank-01
            :ARG0 (ii4 / i)
            :ARG1 (y / you)))"
"(m / multi-sentence
      :snt1 (n / need-01
            :ARG0 (p / person)
            :ARG1 (s / stop-01
                  :ARG0 p
                  :ARG1 (a / abuse-01
                        :ARG0 p
                        :ARG1 (p2 / person
                              :ARG0-of (h / have-org-role-91
                                    :ARG1 (s2 / supermarket)
                                    :ARG2 (s3 / staff)))))
            :ARG1-of (c / cause-01
                  :ARG0 (o / or
                        :op1 (p3 / possible-01
                              :polarity -
                              :ARG1 (g / get-01
                                    :ARG0 p
                                    :ARG1 (t / thing
                                          :ARG1-of (w / want-01
                                                :ARG0 p))))
                        :op2 (p4 / possible-01
                              :polarity -
                              :ARG1 (b / buy-01
                                    :ARG0 p
                                    :ARG1 (q / quantity
                                          :mod (b2 / big)))))))
      :snt2 (a2 / and
            :op1 (f / fault-01
                  :polarity -
                  :ARG1 (t2 / they))
            :op2 (p5 / put-01
                  :ARG0 t2
                  :ARG1 t2
                  :ARG2 (r / risk-01
                        :ARG0 t2)))
      :snt3 (b3 / back-up-04
            :mode imperative
            :ARG0 (p6 / person
                  :ARG0-of (m2 / manage-01))
            :ARG1 (p7 / person
                  :ARG2-of (s4 / staff-01)
                  :poss p6)))"
"(j / jerk
      :mod (g / grade
            :mod ""A"")
      :domain (y / you)
      :condition (a / and
            :op1 (g2 / go-02
                  :ARG0 y
                  :ARG4 (s / store
                        :mod (g3 / grocery))
                  :time (t / today))
            :op2 (t2 / try-01
                  :ARG0 y
                  :ARG1 (h / hoard-01
                        :ARG0 y
                        :ARG1 (ii / item)))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (g / go-02
                  :ARG0 (ii / i)
                  :ARG4 (s / store
                        :mod (g2 / grocery))
                  :mod (j / just))
            :op2 (s2 / steal-01
                  :ARG0 (p / person
                        :ARG1-of (l / liberal-02)
                        :ARG0-of (d / delving-02
                              :medium (p2 / publication
                                    :name (n / name
                                          :op1 ""Tumblr"")))
                        :mod (s3 / some))
                  :ARG1 (c / cart
                        :poss ii)))
      :snt2 (p3 / possible-01
            :polarity -
            :ARG1 (b / believe-01
                  :ARG1 (a2 / act-01
                        :ARG0 (p4 / person)
                        :ARG1-of (r / resemble-01
                              :ARG2 (t / this)))))
      :snt3 (b2 / blow-out-06
            :mode expressive
            :ARG1 (e / everything)
            :manner (p5 / proportion
                  :polarity -))
      :snt4 p2
      :name (n2 / name
            :op1 ""COVID2019"")
      :snt5 p2
      :name (n3 / name
            :op1 ""Trump2020"")
      :snt6 (b3 / break-out-30
            :ARG1 (v / virus
                  :name (n4 / name
                        :op1 ""Coronavirus""))))"
"(c / challenge-01
      :ARG2 (t / try-01
            :ARG1 (d / distant-02
                  :ARG1 (s / society)
                  :location (s2 / supermarket
                        :ARG1-of (f / full-09
                              :ARG2 (f2 / fucktard
                                    :ARG1-of (r / retard-01)
                                    :mod (s3 / selfish))))))
      :source (u / url-entity
            :value ""uk""))"
"(t / think-01
      :polarity -
      :ARG0 (ii / i)
      :ARG1 (r / relieve-01
            :ARG0 (f / find-01
                  :ARG0 ii
                  :ARG1 (a / and
                        :op1 (p / paper
                              :purpose (t2 / toilet))
                        :op2 (p2 / product
                              :name (n / name
                                    :op1 ""Purell"")))
                  :location (s / store))
            :ARG1 ii
            :degree (s2 / so))
      :time (e / ever))"
"(m / multi-sentence
      :snt1 (ii / impression-03
            :ARG0 (a / and
                  :op1 (p / person
                        :mod (s / some))
                  :op2 (o / outlet
                        :mod (m2 / media)))
            :ARG1 (e / empty-01
                  :ARG1 (s2 / shelf
                        :mod (s3 / supermarket)
                        :mod (a2 / all))
                  :time (a3 / after
                        :op1 (o2 / open-01
                              :ARG1 s2)
                        :mod (s4 / soon))))
      :snt2 (m3 / mislead-01
            :ARG0 (t / this)
            :ARG2 (c / contrast-01
                  :ARG1 (e2 / empty-01
                        :ARG1 (s5 / shelf
                              :mod (s6 / some)))
                  :ARG2 (s7 / stock-01
                        :ARG1 (s8 / shelf
                              :mod (o3 / other
                                    :quant (m4 / many)))
                        :manner (w / well-09))))
      :snt3 (h / have-condition-91
            :ARG1 (r / recommend-01
                  :ARG1 (f / fine-04
                        :ARG1 (y / you)))
            :ARG2 (k / know-03
                  :ARG0 y
                  :ARG1 (c2 / cook-01
                        :ARG0 y
                        :ARG1 (a4 / anything
                              :ARG2-of (e3 / except-01
                                    :ARG1 (p2 / pasta
                                          :ARG1-of (m5 / make-01
                                                :ARG1-of (p3 / pre-01)))))))))"
"(p / possible-01
      :ARG1 (u / use-01
            :ARG0 (y / you)
            :ARG1 (c / code
                  :mod (t / this))
            :ARG2 (g / get-01
                  :ARG0 y
                  :ARG1 (f / food)
                  :ARG1-of (c2 / cause-01
                        :ARG0 (s / stockpile-01)))
            :ARG3 (m / monetary-quantity
                  :quant 20
                  :unit (p2 / pound)
                  :ARG1-of (ii / include-91
                        :ARG2 (b / box
                              :name (n / name
                                    :op1 ""Hello""
                                    :op2 ""Fresh"")
                              :ord (o / ordinal-entity
                                    :value 1)
                              :poss y
                              :mod (p3 / product
                                    :name (n2 / name
                                          :op1 ""S-L1JHX4WML""))
                              :mod (c3 / company
                                    :name (n3 / name
                                          :op1 ""Covid19uk""))
                              :mod p3
                              :name (n4 / name
                                    :op1 ""COVID19""))
                        :mod (v / virus)
                        :mod (v2 / virus)
                        :mod (o2 / out))))
      :condition (w / worry-02
            :ARG0 y
            :ARG1 g))"
"(s / shop-01
      :ARG0 (ii / i)
      :mod (o / online)
      :purpose (g / get-through-13
            :ARG0 ii
            :ARG1 (s2 / stuff
                  :mod (p / product
                        :name (n / name
                              :op1 ""COVID-19""))
                  :mod (t / this)))
      :mod (j / just))"
"(l / loot-01
      :ARG1 (s / supermarket
            :poss (ii / i))
      :mod (t / too))"
"(c / contrast-01
      :ARG1 (s / stockpile-01
            :polarity -
            :ARG0 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (ii / i)
                        :ARG2 (n / nana))
                  :age (t / temporal-quantity
                        :quant 79
                        :unit (y / year)))
            :ARG1 (o / or
                  :op1 (f / food)
                  :op2 (r / roll
                        :purpose (t2 / toilet))))
      :ARG2 (s2 / stock-up-02
            :ARG0 p
            :ARG1 (c2 / cupboard
                  :poss p)
            :ARG2 (h2 / horlicks
                  :quant (v / volume-quantity
                        :quant 2
                        :unit (t3 / tub
                              :ARG1-of (f2 / full-09))))))"
"(m / multi-sentence
      :snt1 (l / live-01
            :ARG0 (p / person
                  :quant (m2 / many)
                  :ARG2-of (ii / include-91
                        :ARG1 (a / and
                              :op1 (p2 / person
                                    :ARG0-of (h / have-rel-role-91
                                          :ARG1 (ii2 / i)
                                          :ARG2 (c / cousin)))
                              :op2 (p3 / person
                                    :ARG0-of (h2 / have-rel-role-91
                                          :ARG1 ii2
                                          :ARG2 (a2 / aunt))))
                        :ARG0-of (h3 / have-org-role-91
                              :ARG1 (f / family
                                    :ARG1-of (e / extend-01)
                                    :poss ii2)
                              :ARG2 (m3 / member))))
            :location (c2 / city
                  :name (n / name
                        :op1 ""Sheffield"")))
      :snt2 (a3 / and
            :op1 (w / work-01
                  :ARG0 (p4 / person
                        :ARG0-of (h4 / have-rel-role-91
                              :ARG1 (ii3 / i)
                              :ARG2 a2))
                  :ARG2 (c3 / company
                        :name (n2 / name
                              :op1 ""Asda"")))
            :op2 (w2 / work-01
                  :ARG0 p4
                  :ARG2 (s / supermarket
                        :mod (a4 / another))))
      :snt3 (ii4 / isolate-01
            :ARG1 (s2 / she)
            :ARG1-of (c4 / cause-01
                  :ARG0 (h5 / have-03
                        :ARG0 (p5 / person
                              :ARG0-of (h6 / have-rel-role-91
                                    :ARG1 (p6 / person
                                          :ARG0-of (h7 / have-rel-role-91
                                                :ARG1 s2
                                                :ARG2 (f2 / friend)))
                                    :ARG2 (h8 / husband)))
                        :ARG1 (v / virus
                              :name (n3 / name
                                    :op1 ""CoronaVirus""))))
            :time (c5 / current)))"
"(m / multi-sentence
      :snt1 (s / send-01
            :ARG1 (ii / i)
            :ARG2 (h / home)
            :source (w / work-01)
            :time (y / yesterday)
            :ARG1-of (c / cause-01
                  :ARG0 (a / and
                        :op1 (t / test-01
                              :ARG1 (p / person
                                    :ARG0-of (h2 / have-org-role-91
                                          :ARG1 (f / family)
                                          :ARG2 (m2 / member)))
                              :ARG2 (p2 / positive)
                              :ARG3 (p3 / product
                                    :name (n / name
                                          :op1 ""Covid-19"")))
                        :op2 (t2 / timeline
                              :ARG1-of (p4 / possible-01)
                              :ARG0-of (e / expose-01
                                    :ARG1 (a2 / and
                                          :op1 ii
                                          :op2 (f2 / family
                                                :poss ii))
                                    :ARG1-of (p5 / possible-01))))))
      :snt2 (f3 / frighten-01
            :ARG0 (t3 / this)))"
"(h / help-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Down""
                  :op2 ""Home""
                  :op3 ""Supermarket"")
            :mod (c2 / city
                  :name (n2 / name
                        :op1 ""Danforth"")))
      :ARG2 (c3 / customer
            :ARG1-of (r / risk-01
                  :mod (a / at-risk))
            :ARG1-of (h2 / have-degree-91
                  :ARG2 (o / old)
                  :ARG3 (m / more)))
      :time (b / break-out-30
            :name (n3 / name
                  :op1 ""COVID-19"")))"
"(a / and
      :op1 (w / write-01
            :ARG0 (ii / i)
            :ARG2 (p / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (c / country
                              :name (n / name
                                    :op1 ""Wales""))
                        :ARG2 (m / minister
                              :ord (o / ordinal-entity
                                    :value 1))))
            :time (t / today))
      :op2 (c2 / call-03
            :ARG0 ii
            :ARG1 (a2 / act-02
                  :ARG1 (f / facilitate-01
                        :ARG1 (a3 / access-01
                              :ARG0 (p2 / person
                                    :mod (t2 / that)
                                    :location (c3 / community
                                          :poss (w2 / we))
                                    :ARG1-of (h2 / have-degree-91
                                          :ARG2 (e / endanger-01
                                                :ARG0 (c4 / coronavirus)
                                                :ARG1 p2)
                                          :ARG3 (m2 / most)))
                              :ARG1 (d / deliver-01
                                    :ARG1 (s / supermarket)
                                    :medium (o2 / online))))
                  :mod (u / urgent))
            :ARG2 p))"
"(r / release-01
      :ARG0 (a / and
            :op1 (g / government-organization
                  :name (n / name
                        :op1 ""Florida""
                        :op2 ""Department""
                        :op3 ""of""
                        :op4 ""Agriculture""
                        :op5 ""and""
                        :op6 ""Consumer""
                        :op7 ""Services""))
            :op2 (g2 / government-organization
                  :name (n2 / name
                        :op1 ""Florida""
                        :op2 ""State""
                        :op3 ""Agricultural""
                        :op4 ""Response""
                        :op5 ""Team"")))
      :ARG1 (ii / information
            :ARG1-of (ii2 / important-01)
            :topic (a2 / and
                  :op1 (s / shelter-01
                        :ARG1 (a3 / animal))
                  :op2 (l / law
                        :name (n3 / name
                              :op1 ""COVID-19"")))))"
"(m / multi-sentence
      :snt1 (s / see-01
            :ARG0 (b / bank
                  :mod (f / food))
            :ARG1 (d / drop-01
                  :ARG1 (d2 / donate-01
                        :ARG0 (s2 / store
                              :ARG1-of (l / local-02)
                              :mod (g / grocery))))
            :ARG1-of (c / cause-01
                  :ARG0 (l2 / leave-13
                        :ARG0 (p / person
                              :ARG0-of (s3 / shop-01)
                              :ARG1-of (p2 / panic-01))
                        :ARG1 (s4 / shelf
                              :quant (m2 / more)
                              :ARG1-of (b2 / bare-02)))))
      :snt2 (a / affect-01
            :ARG0 (t / this)
            :ARG1 (e / everyone
                  :ARG2-of (ii / instead-of-91
                        :ARG1 (r / region
                              :mod (c2 / certain)
                              :mod (j / just))))))"
"(p / price-01
      :ARG1 (g / gasoline
            :ARG1-of (r / regular-03)
            :ARG1-of (u / unleaded-02))
      :ARG2 (r2 / rate-entity-91
            :ARG1 (m / monetary-quantity
                  :quant 1.49
                  :unit (d / dollar))
            :ARG2 (v / volume-quantity
                  :quant 1
                  :unit (g2 / gallon)))
      :location (f / facility
            :name (n / name
                  :op1 ""Sam's""
                  :op2 ""Club"")
            :location (o / off
                  :op1 (r3 / road
                        :name (n2 / name
                              :op1 ""Rice""
                              :op2 ""Avenue"")))
            :location (c / city
                  :name (n3 / name
                        :op1 ""Houston""))))"
"(k / keep-01
      :ARG0 (c / cake
            :ARG1-of (r / roll-01
                  :ARG2 (p / paper
                        :purpose (t / toilet))))
      :ARG1 (p2 / person
            :ARG0-of (b / bake-01)
            :mod (c2 / country
                  :name (n / name
                        :op1 ""Finland"")))
      :duration (t2 / temporal-quantity
            :quant 19
            :unit (y / year)))"
"(m / multi-sentence
      :snt1 (s / see-01
            :ARG0 (ii / i)
            :ARG1 (w / walk-01
                  :ARG0 (s2 / slash
                        :op1 (p / pair)
                        :op2 (c / couple)
                        :ARG1-of (h / have-quant-91
                              :ARG2 (m2 / many)
                              :ARG3 (s3 / so)))
                  :ARG2 (s4 / supermarket)))
      :snt2 (n / need-01
            :ARG0 (p2 / person)
            :ARG1 (r / rethink-01
                  :ARG0 p2
                  :ARG1 (ii2 / impact-01
                        :ARG0 (h2 / habit
                              :poss p2
                              :frequency (r2 / rate-entity-91
                                    :ARG3 (t / temporal-quantity
                                          :quant 1
                                          :unit (d / day))))
                        :ARG1 (a / and
                              :op1 (e / expose-01
                                    :ARG1 p2
                                    :ARG1-of (p3 / personal-02
                                          :ARG2 p2))
                              :op2 (s5 / spread-02
                                    :ARG1 p2
                                    :mod (p4 / potential)))))))"
"(m / multi-sentence
      :snt1 (d / decide-01
            :ARG0 (w / we)
            :ARG1 (a / and
                  :op1 (ii / invest-01
                        :ARG0 w
                        :ARG2 (s / series
                              :consist-of (s2 / study-01
                                    :ARG1 (s3 / sentiment
                                          :mod (p / person
                                                :ARG0-of (c / consume-01))
                                          :topic (p2 / product
                                                :name (n / name
                                                      :op1 ""COVID-19"")))))
                        :op2 (r / release-01
                              :ARG0 w
                              :ARG1 (a2 / and
                                    :op1 s2
                                    :op2 (d2 / data
                                          :ARG0-of (u / underlie-01
                                                :ARG1 s3)))
                              :ARG1-of (f / free-03))))
            :snt2 (c2 / complete-01
                  :ARG1 (s4 / study-01
                        :quant 2
                        :ARG1 (a3 / and
                              :op1 (c3 / country
                                    :name (n2 / name
                                          :op1 ""UK""))
                              :op2 (c4 / country
                                    :name (n3 / name
                                          :op1 ""U.S.""))))
                  :snt3 (c5 / cover-01
                        :ARG0 (s5 / study-01
                              :mod (n4 / next))
                        :ARG1 (c6 / country
                              :quant 13)))))"
"(h / help-01
      :ARG1 (u / understand-01
            :ARG0 (s / stakeholder
                  :mod (h2 / healthcare)
                  :mod (c / country
                        :name (n / name
                              :op1 ""US"")))
            :ARG1 (s2 / side
                  :mod (h3 / human)
                  :part-of (c2 / crisis
                        :name (n2 / name
                              :op1 ""COVID19""))))
      :ARG1-of (p / publication-91
            :ARG0 (c3 / company
                  :name (n3 / name
                        :op1 ""McKinsey""))
            :ARG4 (p2 / publication
                  :name (n4 / name
                        :op1 ""McKinsey""
                        :op2 ""Consumer""
                        :op3 ""Healthcare""
                        :op4 ""Insights""))
            :ARG1-of (c4 / cite-01
                  :ARG2 (u2 / url-entity
                        :value ""https://t.co/EM9szeKGhr""))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (c / cause-01
                  :ARG0 (a2 / amr-unknown)
                  :ARG1 (p / possible-01
                        :polarity -
                        :ARG1 (a3 / and
                              :op1 (g / get-01
                                    :ARG0 (p2 / person
                                          :ARG0-of (r / receive-01
                                                :ARG1 (t / thing
                                                      :name (n / name
                                                            :op1 ""Supplemental""
                                                            :op2 ""Security""
                                                            :op3 ""Income""))))
                                    :ARG1 (t2 / thing
                                          :ARG0-of (s / stimulate-01)))
                              :op2 (g2 / get-01
                                    :ARG0 p2
                                    :ARG1 (r2 / rate-entity-91
                                          :ARG1 (m2 / monetary-quantity
                                                :quant 200
                                                :unit (d / dollar)
                                                :ARG1-of (h / have-quant-91
                                                      :ARG3 (m3 / more)))
                                          :ARG2 (t3 / temporal-quantity
                                                :quant 1
                                                :unit (m4 / month)))))))
            :op2 (c2 / contrast-01
                  :ARG1 (s2 / survive-01
                        :ARG0 (w / we)
                        :ARG1 (r3 / rate-entity-91
                              :ARG1 (m5 / monetary-quantity
                                    :quant783 (d2 / dollar))
                              :ARG2 (t4 / temporal-quantity
                                    :quant 1
                                    :unit (m6 / month)))
                        :degree (b / barely))
                  :ARG2 (o / outrageous-02
                        :ARG1 (t5 / thing
                              :ARG2-of (p3 / price-01))
                        :time (n2 / now))))
      :snt2 (a4 / and
            :op1 (a5 / assist-01
                  :polarity -
                  :ARG1 (p4 / person
                        :ARG1-of (d3 / disable-01))
                  :time (a6 / anymore)
                  :ARG1-of (c3 / cause-01
                        :ARG0 (p5 / product
                              :name (n3 / name
                                    :op1 ""Covid-19""))))
            :op2 (b2 / bedridden
                  :domain p4)))"
"(s / surprise-01
      :ARG0 (h / hike-02
            :polarity -
            :ARG1 (p / price)
            :direction (u / up)
            :condition (c / consider-02
                  :ARG1 (s2 / situation)))
      :ARG1 (ii / i))"
"(m / multi-sentence
      :snt1 (s / scum
            :poss (p / planet
                  :name (n / name
                        :op1 ""Earth""))
            :domain (p2 / person
                  :ARG0-of (h / hoard-01
                        :ARG1 (a / and
                              :op1 (m2 / mask)
                              :op2 (s2 / sanitizer)
                              :op3 (e / essential
                                    :mod (o / other)))))
            :time (d / date-entity
                  :year 2020))
      :snt2 a
      :op1 (r / remember-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (t / they))
      :op2 (b / bring-down-03
            :mode imperative
            :ARG0 y
            :ARG1 t
            :time (o2 / over-01
                  :ARG1 (t2 / this)
                  :mod (a2 / all))))"
"(w / wonder-01
      :ARG0 (ii / i)
      :ARG1 (t / truth-value
            :polarity-of (e / eat-01
                  :ARG0 (w2 / we)
                  :location (o / out)
                  :time (b / before
                        :op1 (d / disease
                              :name (n / name
                                    :op1 ""coronavirus"")))
                  :ARG1-of (h / have-quant-91
                        :ARG2 (m / much)
                        :ARG3 (t2 / too))))
      :ARG1-of (c / cause-01
            :ARG0 (a / and
                  :op1 (l / late
                        :op1 (d2 / day)
                        :degree (s / somewhat))
                  :op2 (c2 / clean-out-03
                        :ARG1 (s2 / shelf
                              :part-of (s3 / store
                                    :mod (g / grocery))))
                  :op3 (c3 / close-01
                        :ARG1 (r / restaurant
                              :quant (m2 / many))))))"
"(l / list-01
      :ARG0 (c / company
            :ARG0-of (d / distribute-01
                  :ARG1 (p / product
                        :name (n / name
                              :op1 ""Tata""
                              :op2 ""Consumer""
                              :op3 ""Productions""))))
      :ARG1 c
      :ARG2 (c2 / company
            :ARG0-of (s / sell-01
                  :mod (m / marketplace))
            :location (p2 / platform
                  :mod (c3 / company
                        :name (n2 / name
                              :op1 ""Flipkart"")))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (o / organization
                  :name (n / name
                        :op1 ""COVID19""))
            :op2 (o2 / organization
                  :name (n2 / name
                        :op1 ""Coronavirus"")))
      :snt2 (l / learn-01
            :ARG0 (ii / i)
            :ARG1 (a2 / and
                  :li 7
                  :op1 (ii2 / increase-01
                        :ARG1 (m2 / monetary-quantity
                              :ARG2-of (p / price-01
                                    :ARG1 (a3 / and
                                          :op1 (v / vegetable)
                                          :op2 (f / fruit)))))
                  :op2 (h / hone-01
                        :ARG0 ii
                        :ARG1 (s / skill
                              :mod (n3 / negotiate-01)
                              :poss ii)))
            :time (d / day
                  :mod (o3 / organization
                        :name (n4 / name
                              :op1 ""Covid_19""))))
      :snt3 (p2 / possible-01
            :li 8
            :ARG1 (l2 / lead-03
                  :ARG0 (c / chore
                        :mod (h2 / household)))))"
"(o / open-09
      :ARG1 (s / supermarket)
      :time (n / now)
      :purpose (d / deliver-01
            :ARG1 s
            :time (a / after
                  :op1 (d2 / date-entity
                        :dayperiod (n2 / night))))
      :purpose (h / help-01
            :ARG0 s
            :ARG1 (m / meet-01
                  :ARG0 s
                  :ARG1 (d3 / demand-01
                        :time (c / current)))))"
"(ii / implement-01
      :ARG0 (s / supermarket
            :mod (c / country
                  :name (n / name
                        :op1 ""Denmark"")))
      :ARG1 (t / thing
            :ARG2-of (s2 / solve-01)
            :ARG0-of (d / distance-01))
      :purpose (h / help-01
            :ARG0 s
            :ARG1 (p / prevent-01
                  :ARG1 (s3 / spread-02
                        :ARG1 (d2 / disease
                              :name (n2 / name
                                    :op1 ""coronavirus""))))))"
"(n / need-01
      :ARG0 (p / person
            :ARG0-of (s / shop-01
                  :ARG1 (c / clothes
                        :mod (s2 / summer))
                  :medium (o / online)))
      :ARG1 (r / remember-01
            :ARG0 p
            :ARG1 (p2 / possible-01
                  :ARG1 (w / wear-01
                        :polarity -
                        :ARG0 p
                        :ARG1 c
                        :duration (w2 / while)))))"
"(s / start-01
      :ARG1 (h / hour
            :mod (s2 / store
                  :poss (w / we))
            :time (d / date-interval
                  :op1 (d2 / date-entity
                        :time ""10:00"")
                  :op2 (d3 / date-entity
                        :time ""18:00""))
            :beneficiary (l / location
                  :quant 18
                  :mod (r / retail-01)
                  :mod (a / all)))
      :time (d4 / date-entity
            :month 3
            :day 18
            :weekday (w2 / wednesday)))"
"(m / multi-sentence
      :snt1 (c / collect-01
            :ARG0 (w / we)
            :ARG1 (a / article
                  :poss w
                  :topic (o / organization
                        :name (n / name
                              :op1 ""COVID19"")))
            :location (p / place
                  :quant 1))
      :snt2 (a2 / add-02
            :ARG0 (w2 / we)
            :ARG2 (p2 / page)
            :time (c2 / come-to-hand-14
                  :ARG1 (ii / information
                        :ARG1-of (n2 / new-01)
                        :beneficiary (p3 / person
                              :ARG0-of (c3 / consume-01))))))"
"(c / call-03
      :ARG0 (p / person
            :ARG0-of (a / advocate-01))
      :ARG1 (q / qualify-02
            :ARG1 (a2 / and
                  :op1 (p2 / person
                        :ARG0-of (w / work-01
                              :ARG1 (s / store
                                    :mod (g / grocery))))
                  :op2 (p3 / person
                        :ARG0-of (w2 / work-01
                              :ARG1 (p4 / process-01
                                    :ARG1 (f / food)))))
            :ARG2 (c2 / care-03
                  :ARG1 (c3 / child)
                  :mod (e / emergency)
                  :ARG1-of (s2 / same-01)
                  :ARG2-of (a3 / available-02
                        :ARG1 (p5 / person
                              :ARG0-of (w3 / work-01
                                    :ARG1 (m / medicine))
                              :mod (f2 / front-line)))))
      :time (c4 / close-01
            :ARG1 (a4 / and
                  :op1 (s3 / school)
                  :op2 (c5 / center
                        :mod (c6 / care-03
                              :ARG1 (c7 / child))))
            :ARG2-of (r / respond-01
                  :ARG1 (p6 / pandemic
                        :mod (v / virus)))))"
"(e / enable-01
      :ARG0 (r / rely-01
            :ARG0 (c / country
                  :name (n / name
                        :op1 ""South""
                        :op2 ""Korea""))
            :ARG1 (p / person
                  :ARG0-of (m / merchandise-01)
                  :mod (t / third-party)
                  :ARG0-of (s / sell-01
                        :manner (p2 / platform
                              :mod (m2 / marketplace)
                              :mod (o / online))))
            :mod (h / heavy))
      :ARG1 (a / avoid-01
            :ARG0 (p3 / person
                  :ARG0-of (c2 / consume-01))
            :ARG1 (s2 / short-06))
      :ARG2 p3)"
"(a / agree-01
      :ARG0 (a2 / and
            :op1 (c / country
                  :name (n / name
                        :op1 ""Russia""))
            :op2 (n2 / nation
                  :ARG0-of (p / produce-01
                        :ARG1 (o / oil))
                  :mod (o2 / other)))
      :ARG1 (c2 / cut-01
            :ARG0 a2
            :ARG1 (o3 / output)
            :ARG2 (a3 / amount
                  :mod (r / record)
                  :ARG0-of (r2 / represent-01
                        :ARG1 (s / supply-01
                              :ARG2 (g / globe)
                              :quant (a4 / around
                                    :op1 (p2 / percentage-entity
                                          :value 10)))))
            :purpose (s2 / support-01
                  :ARG0 a2
                  :ARG1 (p3 / price-01
                        :ARG1 (o4 / oil))
                  :time (p4 / pandemic)))
      :time (d / date-entity
            :weekday (s3 / sunday)))"
(a / amr-empty)
"(p / possible-01
      :ARG1 (e / enforce-01
            :ARG0 (c / country
                  :name (n / name
                        :op1 ""UK""))
            :ARG1 (ii / isolate-01
                  :ARG1 (p2 / person
                        :age (b / between
                              :op1 (t / temporal-quantity
                                    :quant 70
                                    :unit (y / year))
                              :op2 (t2 / temporal-quantity
                                    :quant 89
                                    :unit (y2 / year))
                              :ARG2-of (h / have-degree-91
                                    :ARG1 p2
                                    :ARG3 (m / more)))))))"
"(m / multi-sentence
      :snt1 (g / go-02
            :ARG0 (y / you)
            :ARG4 (s / store
                  :mod (g2 / grocery))
            :time (l / lately)
            :polarity (a / amr-unknown))
      :snt2 (r / read-01
            :mode imperative
            :ARG0 y
            :ARG1 (b / blog-01
                  :ARG0 (ii / i))
            :purpose (f / find-out-03
                  :ARG0 y
                  :ARG1 (t / thing
                        :manner-of (g3 / go-06
                              :ARG0 (t2 / trip-03
                                    :ARG0 (w / we)))))))"
"(m / multi-sentence
      :snt1 (h / have-03
            :ARG0 (c / city
                  :name (n / name
                        :op1 ""New""
                        :op2 ""York""))
            :ARG1 (c2 / case-04
                  :ARG1 (d / disease
                        :name (n2 / name
                              :op1 ""Coronavirus""))
                  :ARG1-of (ii / increase-01
                        :frequency (t / temporal-quantity
                              :quant 1
                              :unit (d2 / day))))
            :time (d3 / date-entity
                  :year 2003
                  :month 7
                  :day 24))
      :snt2 (n3 / next
            :domain (s / state
                  :name (n4 / name
                        :op1 ""New""
                        :op2 ""Jersey"")))
      :snt3 (w / want-01
            :ARG0 (ii2 / i)
            :ARG1 (s2 / say-01
                  :ARG0 ii2
                  :ARG1 (k / keep-02
                        :polarity -
                        :mode imperative
                        :ARG0 (y / you)
                        :ARG1 (h2 / hoard-01
                              :ARG0 y
                              :ARG1 (ii3 / item
                                    :quant (m2 / many))
                              :purpose (p / possible-01
                                    :ARG1 (g / get-01
                                          :ARG0 (o / other)
                                          :ARG1 ii3
                                          :mod (s3 / still))))
                        :condition (s4 / stock-up-02
                              :ARG0 y
                              :ARG1 ii3
                              :time (a / already)))
                  :ARG2 (p2 / person
                        :mod (t2 / that)))
            :mod (a2 / also)))"
"(m / multi-sentence
      :snt1 (p / put-up-11
            :ARG0 (ii / i)
            :ARG1 (l / light
                  :mod (f / festival
                        :name (n / name
                              :op1 ""Christmas"")))
            :location (o / outside
                  :op1 (h / house))
            :purpose (a / and
                  :op1 (s / spread-01
                        :ARG0 ii
                        :ARG1 (c / cheer-02
                              :quant (l2 / little)))
                  :op2 (s2 / support-01
                        :ARG0 ii
                        :ARG1 (p2 / person
                              :ARG0-of (h2 / have-03
                                    :ARG1 (p3 / product
                                          :name (n2 / name
                                                :op1 ""Covid-19"")))
                              :ARG1-of (v / vulnerable-01)
                              :mod (e / elderly)
                              :ARG0-of (w / work-01
                                    :ARG1 (o2 / or
                                          :op1 (s3 / serve-01
                                                :ARG1 (e2 / emergency))
                                          :op2 (s4 / store
                                                :mod (g / grocery))
                                          :op3 (d / drive-01)))))))
      :snt2 (p4 / possible-01
            :ARG1 (g2 / get-through-13
                  :ARG0 (w2 / we)
                  :ARG1 (t / this))))"
"(s / signal-07
      :ARG1 (ii / it)
      :ARG3 (t / time)
      :ARG1-of (s2 / sad-02)
      :ARG1-of (c / cause-01
            :ARG0 (d / dream-01
                  :ARG0 (ii2 / i)
                  :ARG1 (a / and
                        :op1 (b / be-located-at-91
                              :ARG1 ii2
                              :ARG2 (s3 / store
                                    :mod (g / grocery)))
                        :op2 (h / have-03
                              :ARG0 s3
                              :ARG1 (a2 / and
                                    :op1 (b2 / bleach)
                                    :op2 (p / product
                                          :name (n / name
                                                :op1 ""Tylenol""))
                                    :op3 (t2 / thing
                                          :mod (o / other)
                                          :ARG1-of (n2 / need-01
                                                :ARG0 (e / everyone)))
                                    :quant (p2 / plenty)))
                        :time (b3 / before
                              :op1 (g2 / go-off-16
                                    :ARG1 (a3 / alarm))
                              :mod (j / just)))
                  :ARG1-of (w / wonderful-03)
                  :time (d2 / date-entity
                        :dayperiod (m / morning)
                        :mod (t3 / today)))))"
"(m / multi-sentence
      :snt1 (w / want-01
            :ARG0 (y / you)
            :ARG1 (s / shut-down-05
                  :ARG1-of (c / complete-02)
                  :location (c2 / country
                        :name (n / name
                              :op1 ""Ghana"")
                        :location-of (d / depend-01
                              :ARG0 (p / person
                                    :quant (m2 / majority))
                              :ARG1 (v / visit-01
                                    :ARG0 p
                                    :ARG1 (s2 / supermarket)
                                    :manner (h / hand-to-mouth))))))
      :snt2 (d2 / die-01
            :ARG1-of (r / relate-01
                  :ARG2 (h2 / hunger-01))
            :location c2
            :ARG1-of (h3 / have-quant-91
                  :ARG3 (m3 / more)
                  :ARG4 (d3 / die-01
                        :location (c3 / city
                              :name (n2 / name
                                    :op1 ""Covid-19""))))
            :condition (s3 / shut-down-05
                  :ARG0 (w2 / we)
                  :ARG1-of (c4 / complete-02))))"
"(r / release-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Kroll""
                  :op2 ""Bond""
                  :op3 ""Rating""
                  :op4 ""Agency""))
      :ARG1 (r2 / report
            :mod (r3 / research)
            :ARG0-of (d / discuss-01
                  :ARG1 (r4 / ramification-02
                        :ARG0 (p / pandemic
                              :name (n2 / name
                                    :op1 ""Coronavirus""
                                    :op2 ""COVID-19""))
                        :ARG1 (s / securitization
                              :mod (p2 / product
                                    :name (n3 / name
                                          :op1 ""ABS""))
                              :mod (p3 / person
                                    :ARG0-of (c2 / consume-01)))
                        :mod (p4 / potential)))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (w / work-01
                  :ARG0 (ii / i)
                  :ARG1 (r / retail-01)
                  :ARG2 (s / store
                        :mod (s2 / sporting-good)
                        :ARG1-of (m2 / major-02))
                  :time (o / overnight))
            :op2 (f / find-02
                  :ARG0 ii
                  :ARG1 (b / boggle-01
                        :ARG0 (m3 / mind)
                        :ARG1 (o2 / obligate-01
                              :ARG1 (w2 / we)
                              :ARG2 (b2 / be-located-at-91
                                    :ARG1 w2
                                    :ARG2 (h / here))
                              :mod (s3 / still)))))
      :snt2 (w3 / woman
            :location (h2 / here)
            :age (b3 / between
                  :op1 (t / temporal-quantity
                        :quant 70
                        :unit (y / year))
                  :op2 (t2 / temporal-quantity
                        :quant 89
                        :unit (y2 / year)))
            :ARG0-of (l / live-01
                  :accompanier (p / person
                        :ARG0-of (h3 / have-rel-role-91
                              :ARG1 w3
                              :ARG2 (m4 / mother)))
                  :mod (a2 / also)))
      :snt3 (c / come-01
            :mode imperative
            :ARG1 (p2 / person
                  :name (n / name
                        :op1 ""Come"")))
      :snt4 (g / guy
            :mod (a3 / another)
            :ARG0-of (h4 / have-rel-role-91
                  :ARG1 (p3 / person
                        :ARG0-of (w4 / work-01
                              :ARG2 (d / department
                                    :mod (e / emergency))))
                  :ARG2 (g2 / girlfriend))))"
"(g / guide-01
      :ARG0 (g2 / giant
            :name (n / name
                  :op1 ""Unilever"")
            :mod (p / product
                  :ARG0-of (c / consume-01))
            :mod (g3 / globe))
      :ARG1 (p2 / person
            :ARG1-of (e / employ-01)
            :mod (a / all))
      :ARG2 (a2 / and
            :op1 (t / thing
                  :ARG1-of (d / do-02
                        :ARG0 p2
                        :ARG2-of (o / obligate-01
                              :ARG1 p2)))
            :op2 (t2 / thing
                  :ARG1-of (d2 / do-02
                        :polarity -
                        :ARG0 p2
                        :ARG2-of (o2 / obligate-01
                              :ARG1 p2)))
            :time (e2 / event
                  :name (n2 / name
                        :op1 ""Covid19""
                        :op2 ""Coronaviruspandemic"")))
      :ARG1-of (c2 / clear-06)
      :mod (c3 / concise))"
"(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (b / believe-01
                  :ARG1 (d / destroy-01
                        :ARG0 (a / and
                              :op1 (s / sanitizer)
                              :op2 (s2 / shop))
                        :ARG1 (d2 / disease
                              :name (n / name
                                    :op1 ""Coronavirus""))))
            :ARG1 (p / possible-01
                  :ARG1 (u / use-01
                        :ARG1 (a2 / alcohol
                              :mod (b2 / base))
                        :ARG2 (d3 / develop-02
                              :ARG1 (a3 / and
                                    :op1 (m2 / medication)
                                    :op2 (v / vaccine)
                                    :beneficiary (h / human))))))
      :snt2 (l / look-up-05
            :ARG0 (c2 / country
                  :name (n2 / name
                        :op1 ""India""))
            :ARG1 (g / guy
                  :mod (y / you))
            :ARG2 (c3 / company
                  :name (n3 / name
                        :op1 ""Solutions""))
            :ARG1-of c
            :ARG0 (s3 / send-01
                  :ARG0 (w / we)
                  :ARG1 (m3 / medicine)))
      :snt3 (ii / idea
            :mod (w2 / wild)
            :ARG1-of (o / out-06
                  :ARG2 (b3 / box))
            :mod (j / just)))"
"(s / stand-01
      :ARG1 (p / person)
      :ARG2 (l / line)
      :purpose (e / enter-01
            :ARG0 p
            :ARG1 (s2 / supermarket))
      :time (b / break-out-30
            :ARG1 (e2 / event
                  :name (n / name
                        :op1 ""COVID""
                        :op2 19))
            :location (c / city-district
                  :name (n2 / name
                        :op1 ""El""
                        :op2 ""Masnou"")
                  :location (n3 / north
                        :part-of (c2 / city
                              :name (n4 / name
                                    :op1 ""Barcelona"")
                              :location (c3 / country
                                    :name (n5 / name
                                          :op1 ""Spain"")))))))"
"(b / beware-01
      :ARG1 (a / and
            :op1 (s / scam-01
                  :ARG0 (c / charity
                        :ARG1-of (f / fake-02)))
            :op2 (d / defraud-01
                  :ARG0 c)
            :ARG1-of (ii / increase-01)
            :topic (d2 / deliver-01)))"
"(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Dr.""
                  :op2 ""Sifiso""
                  :op3 ""Ntombela"")
            :ARG0-of (h / have-org-role-91
                  :ARG1 (o / organization
                        :name (n2 / name
                              :op1 ""NAMC""))
                  :ARG2 (c / chief
                        :mod (e / economist))))
      :ARG1 (e2 / evidence-01
            :polarity -
            :ARG1 (c2 / cause-01
                  :ARG0 (e3 / event
                        :name (n3 / name
                              :op1 ""Covid19""))
                  :ARG1 (e4 / emergency
                        :mod (s2 / security
                              :mod (f / food))
                        :location (c3 / country
                              :name (n4 / name
                                    :op1 ""South""
                                    :op2 ""Africa""))))))"
"(r / release-01
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG2 (o / officer
                        :mod (c / chief)
                        :mod (e / executive))))
      :ARG1 (u / update-02
            :ARG2-of (ii / include-01
                  :ARG1 (a / and
                        :op1 (d / directive
                              :topic (p2 / policy-01
                                    :ARG2 (l / liquor))
                              :ARG1-of (n / new-01))
                        :op2 (o2 / overview
                              :topic (s / support-01
                                    :ARG0 (a2 / and
                                          :op1 (g / government-organization
                                                :ARG0-of (g2 / govern-01)
                                                :mod (f / federal))
                                          :op2 (g3 / government-organization
                                                :ARG0-of (g4 / govern-01)
                                                :mod (p3 / province)))))
                        :op3 (ii2 / information
                              :source (w / webinar
                                    :mod (o3 / organization
                                          :name (n2 / name
                                                :op1 ""BCWI""))))))))"
"(m / multi-sentence
      :snt1 (a / advantage-01
            :ARG1 (ii / increase-01
                  :ARG1 (m2 / monetary-quantity
                        :ARG2-of (p / price-01
                              :ARG1 (s / stock)))
                  :ARG4 (r / rate
                        :mod (e / exorbitant))))
      :snt2 (a2 / and
            :op1 (p2 / possible-01
                  :polarity -
                  :ARG1 (a3 / afford-01
                        :ARG0 (p3 / person
                              :ARG1-of (ii2 / include-91
                                    :ARG2 (p4 / person
                                          :ARG1-of (n / neighbor-01
                                                :ARG2 (y / you))))
                              :quant (s2 / some))
                        :ARG1 (m3 / money
                              :mod (s3 / such))))
            :op2 (d / decide-01
                  :ARG0 p4
                  :ARG1 (k / keep-02
                        :ARG0 p4
                        :ARG1 (g / go-out-17
                              :ARG0 p4
                              :manner (p5 / protect-01
                                    :polarity -
                                    :ARG1 p4)))))
      :snt3 (e2 / endanger-01
            :ARG1 (a4 / and
                  :op1 y
                  :op2 (f / family))
            :time (a5 / and
                  :op1 (g2 / go-out-17
                        :ARG0 (p6 / person
                              :ARG1-of (n2 / neighbor-01
                                    :ARG2 y)))
                  :op2 (c / contact-01
                        :ARG0 p6
                        :ARG1 (c2 / company
                              :name (n3 / name
                                    :op1 ""Covid-19""))))))"
"(s / sell-out-03
      :ARG1 (p / product
            :ARG0-of (s2 / sanitize-01
                  :ARG1 (h / hand)))
      :ARG1-of (c / cause-01
            :ARG0 (v / virus
                  :name (n / name
                        :op1 ""Coronavirus"")))
      :ARG0-of c
      :ARG1 (g / get-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 p
            :time (s3 / still
                  :op1 (s4 / stock-01
                        :ARG1 p))))"
"(u / use-01
      :ARG0 (p / person
            :ARG0-of (h / have-rel-role-91
                  :ARG2 (m / mother))
            :location (c / city-district
                  :name (n / name
                        :op1 ""Anderson""
                        :op2 ""Township"")))
      :ARG1 (p2 / publication
            :name (n2 / name
                  :op1 ""Facebook""))
      :ARG2 (h2 / help-01
            :ARG0 p
            :ARG1 (c2 / create-01
                  :ARG0 (p3 / person)
                  :ARG1 (a / and
                        :op1 (s / sanitizer)
                        :op2 (w / wipe)))
            :ARG2 p3))"
"(c / contrast-01
      :ARG1 (t / try-01
            :ARG0 (ii / i
                  :part (h / hair))
            :ARG1 (d / do-02
                  :ARG0 ii
                  :ARG1 (s / something)
                  :ARG2 h))
      :ARG2 (s2 / shop-01
            :ARG0 ii
            :ARG1 (c2 / cap
                  :mod (b / baseball)
                  :mod (c3 / cute))
            :medium (o / online)
            :time (n / now)))"
"(e / establish-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Atag""
                  :op2 ""Heating""))
      :ARG1 (h / holiday-01
            :mod (s / service))
      :time (p / pandemic
            :mod (c2 / coronavirus)))"
"(p / protect-01
      :ARG0 (y / you)
      :ARG1 (a / and
            :op1 y
            :op2 (o / other))
      :ARG2 (l / law
            :name (n / name
                  :op1 ""COVID-19"")))"
"(m / multi-sentence
      :snt1 (s / shake-01
            :ARG0 (e / earthquake
                  :quant (s2 / seismic-quantity
                        :quant 4.9))
            :ARG1 (a / area
                  :ARG1-of (n / near-02
                        :ARG2 (c / county
                              :name (n2 / name
                                    :op1 ""Riverside""
                                    :op2 ""County""))))
            :time (l / late
                  :op1 (d / date-entity
                        :weekday (f / friday))))
      :snt2 (d2 / damage-01
            :polarity -
            :ARG0 (a2 / and
                  :op1 (b / bare-02
                        :ARG1 (s3 / shelf
                              :part-of (s4 / supermarket)))
                  :op2 (e2 / empty-02
                        :ARG1 (a3 / and
                              :op1 (b2 / bar)
                              :op2 (r / restaurant)
                              :op3 (c2 / church)
                              :op4 (t / theater)))))
      :snt3 (c3 / credit-01
            :ARG0 (p / person
                  :name (n3 / name
                        :op1 ""Trump""))
            :ARG1 (c4 / coronavirus
                  :poss (w / we)
                  :mod (m2 / marvelous))
            :ARG2 (s5 / save-02
                  :ARG0 c4
                  :ARG1 (l2 / life
                        :quant (m3 / multiple
                              :op1 1000)))
            :time (ii / immediate)))"
"(t / true-01
      :ARG1 (t2 / that))"
"(s / see-01
      :ARG0 (g / game
            :poss (c / company
                  :name (n / name
                        :op1 ""Paradox""
                        :op2 ""Interactive""))
            :mod (t / top))
      :ARG1 (p / peak-01
            :ARG1 (p2 / person
                  :ARG0-of (p3 / play-01)))
      :ARG1-of (c2 / cause-01
            :ARG0 (ii / increase-01
                  :ARG0 (p4 / product
                        :name (n2 / name
                              :op1 ""COVID-19""))
                  :ARG1 (t2 / time
                        :mod (l / leisure)
                        :poss (p5 / person
                              :ARG0-of (c3 / consume-01))))))"
"(u / up-02
      :ARG1 (d / demand-01
            :ARG1 (p / pay-01
                  :mod (d2 / digital)))
      :degree (w / way)
      :time (p2 / pandemic
            :mod (c / coronavirus)))"
"(ii / include-01
      :li 19
      :ARG1 (a / and
            :op1 (s / stay-01
                  :ARG1 (y / you
                        :part (h / hand))
                  :location (h2 / home)
                  :condition (s2 / sick-05
                        :ARG1 y))
            :op2 (w / wash-01
                  :ARG0 y
                  :ARG1 h
                  :frequency (o / often))
            :op3 (a2 / avoid-01
                  :ARG0 y
                  :ARG1 (c / contact-01
                        :ARG0 y
                        :ARG1 (p / person
                              :ARG1-of (s3 / sick-05))
                        :ARG1-of (c2 / close-10))))
      :ARG2 (a3 / and
            :op1 (w2 / warn-01
                  :ARG1 (e / endanger-01
                        :ARG1 p
                        :ARG0-of (c3 / consume-01))))
      :op2 (t / tip-05
            :ARG2 (s4 / safe-01))
      :beneficiary (l / law
            :name (n / name
                  :op1 ""COVID-19"")))"
"(m / multi-sentence
      :snt1 (p / person
            :name (n / name
                  :op1 ""Flattenthecurve""))
      :snt2 (t / throw-away-07
            :ARG0 (s / store
                  :mod (g / grocery))
            :ARG1 (f / food
                  :ARG1-of (w / worth-01
                        :ARG2 (m2 / monetary-quantity
                              :quant 35000
                              :unit (d / dollar))))
            :time (a / after
                  :op1 (c / cough-01
                        :ARG0 (w2 / woman)
                        :ARG1 f
                        :manner (p2 / purpose)))))"
"(c / confirm-01
      :ARG0 (p / person
            :ARG0-of (p2 / produce-01
                  :ARG1 (o / oil))
            :ARG1-of (m / major-02))
      :ARG1 (d / deal-01
            :ARG2 (c2 / cut-02
                  :ARG1 (o2 / output
                        :mod (o3 / oil)
                        :mod (g / globe))
                  :ARG2 (r / rate-entity-91
                        :ARG1 (v / volume-quantity
                              :quant 9700000
                              :unit (b / barrel))
                        :ARG2 (t / temporal-quantity
                              :quant 1
                              :unit (d2 / day)))
                  :purpose (s / stabilize-01
                        :ARG1 (m2 / market)
                        :time (a / and
                              :op1 (o4 / outbreak-29
                                    :ARG1 (d3 / disease
                                          :name (n / name
                                                :op1 ""coronavirus"")))
                              :op2 (c3 / collapse-01
                                    :ARG1 (t2 / thing
                                          :ARG2-of (p3 / price-01))))))
            :mod (f / final))
      :time (a2 / after
            :op1 (t3 / talk-01
                  :time (t4 / today))))"
"(a / agree-01
      :ARG0 (a2 / and
            :op1 (o / organization
                  :name (n / name
                        :op1 ""OPEC""))
            :op2 (a3 / ally
                  :ARG1-of (l / lead-02
                        :ARG0 (c / country
                              :name (n2 / name
                                    :op1 ""Russia"")))))
      :ARG1 (c2 / cut-01
            :ARG1 (o2 / output)
            :mod (r / record)
            :purpose (p / prop-up-01
                  :ARG0 a2
                  :ARG1 (p2 / price-01
                        :ARG1 (o3 / oil))
                  :time (p3 / pandemic
                        :mod (c3 / coronavirus))))
      :time (d / date-entity
            :weekday (s / sunday))
      :ARG1-of (c4 / cause-01
            :ARG0 (d2 / deal-01
                  :ARG0 a2
                  :ARG1 (n3 / nation
                        :mod (f / fellow)
                        :mod (o4 / oil)
                        :ARG2-of (ii / include-91
                              :ARG1 (c5 / country
                                    :name (n4 / name
                                          :op1 ""United""
                                          :op2 ""States""))))
                  :ARG2 (c6 / curb-01
                        :ARG0 n3
                        :ARG1 (s2 / supply-01
                              :ARG1 (o5 / oil)
                              :mod (g / globe))
                        :ARG2 (p4 / percentage-entity
                              :value 20)
                        :ARG1-of (p5 / possible-01))
                  :mod (p6 / precedent
                        :polarity -))))"
"(a / article
      :ARG1-of (w / write-01
            :ARG1-of (w2 / well-09))
      :topic (a2 / and
            :op1 (t / trend
                  :mod (p / person
                        :ARG0-of (c / consume-01))
                  :time (l / lock-down-06
                        :ARG0 (c2 / country
                              :name (n / name
                                    :op1 ""China""))))
            :op2 (l2 / lesson
                  :source l))
      :frequency (r / rate-entity-91
            :ARG3 (t2 / temporal-quantity
                  :quant 1
                  :unit (d / day))
            :duration (t3 / temporal-quantity
                  :quant 3
                  :unit (m / month)))
      :domain (t4 / this))"
"(d / decrease-01
      :ARG1 (p / price-01
            :ARG1 (l / lamb))
      :ARG1-of (s / significant-02)
      :ARG1-of (c / cause-01
            :ARG0 (p2 / possible-01
                  :polarity -
                  :ARG1 (k / keep-up-05
                        :ARG0 (c2 / chain
                              :mod (s2 / supply-01))
                        :ARG1 (d2 / demand-01
                              :ARG1 l)))))"
"(m / multi-sentence
      :snt1 (h / have-condition-91
            :ARG1 (d / depress-01
                  :ARG1 (w / we)
                  :duration (m2 / multiple
                        :op1 (t / temporal-quantity
                              :quant 1
                              :unit (y / year))))
            :ARG2 (ii / intervene-01
                  :polarity -))
      :snt2 (a / and
            :op1 (s / spend-01
                  :ARG0 (p / person
                        :ARG0-of (c / consume-01))
                  :ARG1-of (ii2 / include-91
                        :ARG2 (p2 / product
                              :ARG1-of (g / gross-03)
                              :mod (d2 / domestic))
                        :ARG3 (n / nearly
                              :op1 ""3/4"")))
            :op2 (d3 / drown-01
                  :ARG0 (a2 / and
                        :op1 (c2 / card
                              :mod (c3 / credit-01))
                        :op2 (m3 / medicine))
                  :ARG1 (p3 / person
                        :mod (c4 / country
                              :name (n2 / name
                                    :op1 ""America""))
                        :quant (o / over
                              :op1 1000000)
                        :ARG1-of (e / employ-01
                              :polarity -
                              :time (s2 / so-far)))
                  :time (g2 / go-02
                        :ARG0 p2
                        :name (n3 / name
                              :op1 ""Covid-19"")))))"
"(c / classify-01
      :ARG0 (s / state
            :quant (s2 / some))
      :ARG1 (p / person
            :ARG0-of (w / work-01
                  :ARG2 (s3 / store
                        :mod (g / grocery))))
      :ARG2 (p2 / person
            :ARG1-of (e / employ-01
                  :mod (e2 / emergency)))
      :time (n / now)
      :ARG0-of (m / make-02
            :ARG1 (q / qualify-02
                  :ARG1 p
                  :ARG2 (b / benefit
                        :mod (c2 / certain)))))"
"(m / multi-sentence
      :snt1 (w / work-01
            :location (h / home)
            :mod (p / product
                  :name (n / name
                        :op1 ""Digital""
                        :op2 ""Human""
                        :op3 ""CVID-19"")))
      :snt2 (m2 / meet-03
            :mod (c / conference)
            :mod (c2 / call-02))
      :snt3 (o / order-02
            :ARG1 (o2 / or
                  :op1 (t / take-01
                        :ARG3 (h2 / home))
                  :op2 (d / deliver-01
                        :ARG3 h2))
            :manner (t2 / telecommunication))
      :snt4 (s / shop-01
            :medium (o3 / online)
            :manner (l / live)))"
"(c / contrast-01
      :ARG1 (m / make-light-11
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (s / situation))
      :ARG2 (m2 / mechanism
            :ARG1-of (g / good-02)
            :purpose (c2 / cope-01)
            :domain (h / humor)
            :frequency (s2 / sometimes)))"
"(s / say-01
      :ARG0 (p / person
            :ARG0-of (g / grow-03)
            :ARG1-of (l / local-02))
      :ARG1 (r / recommend-01
            :ARG1 (b / buy-01
                  :ARG0 (p2 / person
                        :ARG0-of (s2 / shop-01))
                  :ARG1 (f / food
                        :source (c / country
                              :name (n / name
                                    :op1 ""Wales"")))
                  :ARG2 (c2 / company
                        :ARG0-of (s3 / supply-01))
                  :ARG1-of (d / direct-02)
                  :time (n2 / now)))
      :ARG1-of (c3 / cause-01
            :ARG0 (e / expose-01
                  :ARG0 (p3 / pandemic
                        :name (n3 / name
                              :op1 ""Coronavirus""))
                  :ARG1 (f2 / flaw-01
                        :ARG1 (c4 / chain
                              :mod (s4 / supply-01
                                    :ARG2 (s5 / supermarket))))))
      :medium (u / url-entity
            :value ""http://www.christianfarm.com""))"
"(n / need-01
      :ARG0 (ii / i)
      :ARG1 (r / roll
            :ARG0-of (c / contain-01
                  :ARG1 (p / paper
                        :purpose (t / toilet)))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (g / go-02
                  :ARG0 (ii / i)
                  :ARG4 (s / supermarket
                        :ARG1-of (l / local-02))
                  :time (d / date-entity
                        :dayperiod (a2 / afternoon)
                        :mod (t / today)))
            :op2 (f / find-01
                  :polarity -
                  :ARG1 (b / bread)))
      :snt2 (s2 / sure-02
            :ARG0 (ii2 / i)
            :ARG1 (o / out-06
                  :ARG1 (b2 / bread
                        :mod (t2 / this))
                  :ARG2 (d2 / date-entity)
                  :degree (w / well)
                  :condition (g2 / get-01
                        :ARG0 (w2 / we)
                        :ARG1 (s3 / situation
                              :mod (s4 / style
                                    :mod (c / country
                                          :name (n / name
                                                :op1 ""Italy""))))))))"
"(a / and
      :op1 (w / work-09
            :ARG1 (m / market
                  :mod (v / venture))
            :manner (a2 / amr-unknown))
      :op2 (r / recommend-01
            :ARG1 (e / expect-01
                  :ARG0 (w2 / we)
                  :ARG1 (a3 / amr-unknown)
                  :ARG1-of (c / cause-01
                        :ARG0 (a4 / and
                              :op1 (f / fall-01
                                    :ARG1 (p / price-01
                                          :ARG1 (o / oil)))
                              :op2 (c2 / crash-01
                                    :ARG1 (m2 / market
                                          :mod (s / stock)))))))
      :medium (c3 / company
            :name (n / name
                  :op1 ""Skype"")))"
"(u / update-01
      :ARG1 (s / site
            :poss (a / and
                  :op1 (p / person
                        :ARG0-of (c / consume-01))
                  :op2 (b / business
                        :mod (s2 / small))))
      :ARG2 (ii / information
            :ARG1-of (r / relevant-01)
            :topic (l / law
                  :name (n / name
                        :op1 ""COVID""
                        :op2 19))))"
"(h / hard-02
      :ARG1 (p / process-01
            :ARG1 (d / dichotomy
                  :domain (a / and
                        :op1 (w / work-01
                              :ARG0 (ii / i)
                              :location (h2 / home))
                        :op2 (d2 / deliver-01
                              :ARG0 ii
                              :ARG1 (w2 / webinar
                                    :topic (t / train-01
                                          :ARG1 (r / resource
                                                :mod (h3 / human))))
                              :mod (a2 / as-usual)))))
      :time (o / obligate-01
            :ARG1 ii
            :ARG2 (w3 / wear-01
                  :ARG0 ii
                  :ARG1 (a3 / and
                        :op1 (m / mask)
                        :op2 (g / glove))
                  :purpose (g2 / go-05
                        :ARG0 ii
                        :ARG1 (w4 / wait-01
                              :ARG1 ii
                              :ARG2 (l / line-up-02
                                    :ARG2 (f / food
                                          :ARG1-of (r2 / ration-01))
                                    :location (s / store
                                          :mod (g3 / grocery)
                                          :ARG1-of (s2 / stock-01
                                                :mod (u / under))
                                          :ARG1-of (l2 / local-02))))))
            :condition (n / need-01
                  :ARG0 ii
                  :ARG1 (o2 / or
                        :op1 (f2 / food)
                        :op2 (m2 / medicine)))))"
"(h / hold-04
      :ARG0 (o / organization
            :name (n / name
                  :op1 ""OPEC""))
      :ARG1 (m / meet-03
            :ARG0 o
            :ARG1 (a / and
                  :op1 (c / country
                        :name (n2 / name
                              :op1 ""Russia""))
                  :op2 (o2 / other))
            :topic (c2 / cut-02
                  :ARG1 (o3 / output))
            :mod (e / emergency)))"
"(m / multi-sentence
      :snt1 (c / cause-01
            :ARG1 (a / and
                  :op1 (b / buy-01
                        :ARG0 (c2 / company
                              :name (n / name
                                    :op1 ""Brookside""))
                        :ARG1 (m2 / milk
                              :quant (v / volume-quantity
                                    :quant 1
                                    :unit (l / liter)))
                        :ARG2 (p / person
                              :ARG0-of (f / farm-01))
                        :time (a2 / about
                              :op1 (a3 / age-01
                                    :ARG1 p
                                    :ARG2 a2
                                    :op1 (t / temporal-quantity
                                          :quant 35
                                          :unit (y / year))))))
            :op2 (r / remove-01
                  :ARG0 c2
                  :ARG1 (f2 / fat)
                  :purpose (m3 / make-01
                        :ARG0 c2
                        :ARG1 (b2 / butter
                              :mod (g / ghee))))
            :op3 (g2 / give-back-03
                  :ARG0 c2
                  :ARG1 (w / water
                        :quant (v2 / volume-quantity
                              :quant 1
                              :unit (l2 / liter)))
                  :ARG2 (y2 / you)))
      :snt2 (s / same-01
            :ARG1 (a4 / and
                  :op1 (m4 / maize)
                  :op2 (w2 / wheat)))
      :snt3 (c3 / conn
            :mod (c4 / country
                  :name (n2 / name
                        :op1 ""Kenya"")))
      :time (a5 / always)
      :condition (a6 / as-long-as
            :op1 (b3 / business
                  :prep-with (w3 / we)
                  :domain (p2 / person
                        :ARG0-of (l3 / lead-02
                              :ARG1 y2)))))"
"(h / have-degree-91
      :ARG1 (a / and
            :op1 (p / person
                  :ARG0-of (w / work-01
                        :ARG2 (g / government-organization
                              :name (n / name
                                    :op1 ""NHS""))))
            :op2 (p2 / person
                  :ARG0-of (w2 / work-01
                        :ARG2 (s / supermarket))))
      :ARG2 (v / value-01
            :ARG1 a)
      :ARG3 (m / most)
      :ARG5 (m2 / member
            :part-of (s2 / society)))"
(a / amr-empty)
"(a / and
      :op1 (r / reduce-01
            :ARG0 (c / company)
            :ARG1 (m / monetary-quantity
                  :ARG2-of (p / price-01
                        :ARG1 (p2 / product
                              :ARG0-of (s / sanitize-01
                                    :ARG1 (h / hand)))))
            :ARG1-of (f / follow-01
                  :ARG2 (d / directive
                        :source (g / government-organization
                              :ARG0-of (g2 / govern-01)))))
      :op2 (ii / increase-01
            :ARG0 c
            :ARG1 (p3 / produce-01
                  :ARG0 c)
            :mod (a2 / also)
            :purpose (m2 / meet-01
                  :ARG0 c
                  :ARG1 (s2 / spike-04
                        :ARG1 (d2 / demand-01
                              :ARG1 p2)
                        :manner (s3 / sudden)
                        :time (s4 / scare-01)))))"
"(a / and
      :op1 (w / wash-01
            :mode imperative
            :ARG0 (y / you
                  :part (h / hand))
            :ARG1 h)
      :op2 (o / or
            :op1 (h2 / hoard-01
                  :polarity -
                  :ARG0 y
                  :ARG1 (a2 / and
                        :op1 (f / food)
                        :op2 (p / paper
                              :purpose (t / toilet))))
            :op2 (s / stockpile-01
                  :polarity -
                  :ARG0 y
                  :ARG1 a2))
      :op3 (s2 / stay-01
            :ARG1 y
            :ARG3 (ii / inform-01
                  :ARG1 y
                  :ARG2 (c / coronavirus))))"
"(a / allow-01
      :ARG1 (g / go-02
            :ARG0 (y / you)
            :ARG4 (o / outside)
            :purpose (o2 / or
                  :op1 (r / run-02
                        :ARG0 y
                        :ARG1 (d / dog))
                  :op2 (h / hike-01
                        :ARG0 y
                        :ARG2 d)
                  :op3 (w / walk-01
                        :ARG0 y
                        :ARG1 d))))"
"(t / think-01
      :ARG0 (ii / i)
      :ARG1 (r / recommend-01
            :ARG1 (c / chain-01
                  :ARG0 (s / supermarket)
                  :ARG1 (t2 / trolley
                        :poss s)
                  :purpose (p / possible-01
                        :ARG1 (u / use-01
                              :ARG0 (p2 / person)
                              :ARG1 (b / basket)
                              :mod (o / only))
                        :purpose (s2 / stop-01
                              :ARG0 s
                              :ARG1 (b2 / buy-01
                                    :ARG0 p2
                                    :manner (p3 / panic-01)))))))"
"(a / and
      :op1 (c / change-01
            :ARG0 (s / shop-01
                  :mod (o / online))
            :ARG1 (b / behave-01
                  :ARG0 (s2 / shop-01
                        :mod (r / retail-01)))
            :duration (p / permanent))
      :op2 (b2 / benefit-01
            :ARG0 s
            :ARG1 (a2 / and
                  :op1 (c2 / company
                        :name (n / name
                              :op1 ""BZUN""))
                  :op2 (c3 / company
                        :name (n2 / name
                              :op1 ""JD""))
                  :op3 (c4 / company
                        :name (n3 / name
                              :op1 ""BABA"")))
            :time (r2 / run-13
                  :ARG1-of (l / long-03))))"
"(c / cause-01
      :ARG0 (a / amr-unknown)
      :ARG1 (h / have-degree-91
            :ARG1 (p / person)
            :ARG2 (c2 / confident-01
                  :ARG1 p
                  :ARG2 (r / rebound-01
                        :ARG1 (s / sentiment
                              :mod (p2 / person
                                    :ARG0-of (c3 / consume-01)))
                        :ARG4 (l / level
                              :time (p3 / previous))))
            :ARG3 (s2 / so)))"
"(m / multi-sentence
      :snt1 (s / see-01
            :ARG0 (ii / i)
            :ARG1 (a / and
                  :op1 (t / take-01
                        :ARG0 (b / boy
                              :age (o / or
                                    :op1 (t2 / temporal-quantity
                                          :quant 13
                                          :unit (y / year))
                                    :op2 (t3 / temporal-quantity
                                          :quant 14
                                          :unit (y2 / year))))
                        :ARG1 (a2 / and
                              :op1 (p / pasta)
                              :op2 (p2 / paper
                                    :purpose (t4 / toilet))
                              :mod (a3 / all))
                        :ARG2 (c / cart
                              :purpose (s2 / shop-01)
                              :poss (p3 / person
                                    :ARG0-of (h / have-rel-role-91
                                          :ARG1 b
                                          :ARG2 (m2 / mother)))))
                  :op2 (p4 / put-01
                        :ARG0 b
                        :ARG1 a2
                        :ARG2 (c2 / cart
                              :purpose (s3 / shop-01)
                              :poss (m3 / man
                                    :mod (t5 / transgender)
                                    :ARG1-of (d / disable-01)))))
            :time (j / just))
      :snt2 (t6 / tell-01
            :ARG0 (h2 / he)
            :ARG1 (t7 / think-01
                  :ARG0 (p5 / person
                        :ARG0-of (h3 / have-rel-role-91
                              :ARG1 h2
                              :ARG2 (m4 / mother)))
                  :ARG1 (o2 / other
                        :ARG0-of (n / need-01)))
            :ARG2 p5)
      :snt3 (a4 / applaud-01
            :ARG0 (s4 / supermarket
                  :mod (w / whole))))"
"(a / announce-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Amazon""))
      :ARG1 (p / plan-01
            :ARG0 c
            :ARG1 (a2 / add-02
                  :ARG0 c
                  :ARG1 (a3 / and
                        :quant 100000
                        :op1 (p2 / position
                              :mod (f / full-time))
                        :op2 (p3 / position
                              :mod (p4 / part-time)))
                  :location (a4 / across
                        :op1 (c2 / country
                              :name (n2 / name
                                    :op1 ""US"")))
                  :purpose (k / keep-up-05
                        :ARG0 c
                        :ARG1 (ii / increase-01
                              :ARG1 (a5 / and
                                    :op1 (c3 / commerce)
                                    :op2 (s / shop-01
                                          :medium (o / online)))
                              :manner (r / rapid))
                        :ARG1-of (c4 / cause-01
                              :ARG0 (l / limit-01
                                    :ARG0 (c5 / coronavirus)))))))"
"(s / see-01
      :ARG1 (m / maintain-01
            :ARG0 (p / person)
            :ARG1 (d / distance-01
                  :ARG1 p
                  :ARG2 (s2 / social))
            :location (q / queue
                  :location (o / outside
                        :op1 (s3 / supermarket
                              :ARG1-of (l / local-02)
                              :location (c / city
                                    :name (n / name
                                          :op1 ""Pune""))))))
      :ARG1-of (c2 / cause-01
            :ARG0 (o2 / outbreak-29
                  :ARG1 (d2 / disease
                        :name (n2 / name
                              :op1 ""coronavirus"")))))"
"(r / report-01
      :ARG0 (n / news
            :ARG1-of (l / local-02))
      :ARG1 (p / possible-01
            :ARG1 (ii / impact-01
                  :ARG0 (l2 / law
                        :name (n2 / name
                              :op1 ""COVID-19""))
                  :ARG1 (m / market
                        :mod (r2 / real-estate)))))"
"(m / multi-sentence
      :snt1 (s / senior
            :ARG1-of (ii / include-91
                  :ARG2 (p / person
                        :ARG1-of (c / come-01
                              :ARG4 (w / workplace
                                    :poss (ii2 / i))
                              :time (y / yesterday)))
                  :ARG3 (p2 / percentage-entity
                        :value 70)))
      :snt2 (s2 / see-01
            :ARG0 (ii3 / i)
            :ARG1 (s3 / senior
                  :ARG1-of (ii4 / include-91
                        :ARG2 (p3 / person
                              :location (t / there))
                        :ARG3 (a / about
                              :op1 (p4 / percentage-entity
                                    :value 50))))
            :time (g / go-02
                  :ARG0 ii3
                  :ARG4 (g2 / get-01
                        :ARG0 ii3
                        :ARG1 (t2 / thing
                              :ARG1-of (s4 / supply-01))
                        :location (s5 / store
                              :mod (g3 / grocery)
                              :location (b / beside
                                    :op1 (w2 / we))))
                  :time (a2 / after
                        :mod (r / right))))
      :snt3 (w3 / worry-02
            :ARG0 (t3 / they)
            :ARG1 (ii5 / i))
      :snt4 (p5 / publication
            :name (n / name
                  :op1 ""COVID2019""))
      :snt5 p5
      :name n
      :op1 ""californiacoron"")"
"(m / multi-sentence
      :snt1 (t / time
            :time-of (u / upgrade-02)
            :domain (ii / it))
      :snt2 (k / know-01
            :ARG0 (y / you)
            :ARG1 (t2 / thing
                  :location-of (f / find-01
                        :ARG0 y
                        :ARG1 (w / we)))))"
"(d / damage-01
      :ARG0 (a / and
            :op1 (p / price-01
                  :ARG1 (o / oil)
                  :ARG1-of (f / fall-01))
            :op2 (t / treaty
                  :name (n / name
                        :op1 ""COVID-19"")))
      :ARG1 (g / grow-01
            :ARG1 (w / world-region
                  :name (n2 / name
                        :op1 ""Caribbean""))))"
"(d / deliver-01
      :ARG0 (s / store
            :poss (p / person
                  :name (n / name
                        :op1 ""Brad""
                        :op2 ""Prisley""))
            :ARG1-of (f / free-03)
            :mod (g / grocery)
            :location (c / city
                  :name (n2 / name
                        :op1 ""Nashville"")))
      :ARG1 g
      :ARG2 (p2 / person
            :mod (e / elderly))
      :time (p3 / pandemic
            :name (n3 / name
                  :op1 ""COVID-19"")))"
"(f / feel-01
      :ARG0 (ii / i)
      :ARG1 (p / play-01
            :ARG0 ii
            :ARG1 (g / game
                  :name (n / name
                        :op1 ""Hunger""
                        :op2 ""Games"")))
      :ARG1-of (c / cause-01
            :ARG0 (f2 / form-01
                  :ARG1 (l / line)
                  :time (a / already)
                  :location (o / outside
                        :op1 (s / store
                              :mod (g2 / grocery))))))"
"(a / add-02
      :ARG0 (s / supermarket
            :name (n / name
                  :op1 ""Booths"")
            :location (l / location
                  :name (n2 / name
                        :op1 ""Hale""
                        :op2 ""Barns"")))
      :ARG1 (s2 / serve-01
            :ARG1 (a2 / and
                  :op1 (c / click-01)
                  :op2 (c2 / collect-01)))
      :time (w / week
            :mod (n3 / next))
      :ARG2-of (r / respond-01
            :ARG1 (l2 / law
                  :name (n4 / name
                        :op1 ""CODID""
                        :op2 19))))"
"(t / try-01
      :ARG0 (y / you)
      :ARG1 (s / say-01
            :ARG0 y
            :ARG1 (c / catch-01
                  :ARG0 (s2 / shop-01
                        :medium (o / online))
                  :ARG1 (s3 / sell-01
                        :ARG1 (p / product
                              :name (n / name
                                    :op1 ""Covid-19""))
                        :mod (a / all))))
      :polarity (a2 / amr-unknown))"
"(b / be-located-at-91
      :ARG1 (w / we)
      :ARG2 (t / this)
      :location (w2 / world))"
"(s / say-01
      :ARG1 (p / pick-01
            :ARG0 (y / you)
            :ARG1 (t / time
                  :ARG1-of (b / bad-07
                        :ARG2 (ii / increase-01
                              :ARG0 y
                              :ARG1 (p2 / price-01)))))
      :ARG2 (p3 / person
            :name (n / name
                  :op1 ""SkyUK"")))"
"(h / have-03
      :ARG0 (a / and
            :op1 (p / plant)
            :op2 (p2 / plant)
            :op3 (p3 / plant))
      :ARG1 (m / material
            :mod (r / raw)))"
"(m / multi-sentence
      :snt1 (m2 / mention-01
            :ARG0 (w / we)
            :ARG1 (t / thing
                  :manner-of (ii / impact-01
                        :ARG0 (t2 / thing
                              :name (n / name
                                    :op1 ""COVID2019""))
                        :ARG1 (s / shop
                              :mod (m3 / mom-and-pop))))
            :time (y / yesterday))
      :snt2 (c / confirm-01
            :ARG0 (c2 / company
                  :name (n2 / name
                        :op1 ""amazon"")
                  :mod (g / giant
                        :mod (e / e-commerce)))
            :ARG1 (d / drive-02
                  :ARG0 (v / virus
                        :name (n3 / name
                              :op1 ""coronavirus""))
                  :ARG1 (d2 / demand-01
                        :ARG1-of (h / high-02
                              :mod (u / usual
                                    :polarity -)))
                  :ARG0-of (c3 / cause-01
                        :ARG1 (h2 / hire-01
                              :ARG0 c2
                              :ARG1 (p / person
                                    :quant 100000
                                    :ARG1-of (e2 / employ-01)))))
            :time (t3 / today))
      :snt3 (g2 / good-02
            :ARG1 (n4 / news)
            :ARG2 (p2 / person
                  :ARG1-of (e3 / employ-01
                        :polarity -)
                  :ARG0-of (s2 / serve-01
                        :ARG1 (a / and
                              :op1 (h3 / hospitality)
                              :op2 (f / food))))))"
"(m / multi-sentence
      :snt1 (w / watch-01
            :ARG0 (ii / i)
            :ARG1 (b / broadcast-program
                  :name (n / name
                        :op1 ""Extreme""
                        :op2 ""Cheapskates""))
            :medium (c / company
                  :name (n2 / name
                        :op1 ""TLC"")))
      :snt2 (t / turn-out-11
            :ARG1 (p / person
                  :quant (s / some)
                  :mod (c2 / cheap-cheapskates)
                  :ARG0-of (c3 / cut-02
                        :ARG1 (m2 / monetary-quantity
                              :ARG2-of (c4 / cost-01
                                    :ARG1 (t2 / toiletpaper))))))
      :snt3 (u / use-01
            :ARG0 (t3 / they)
            :ARG1 (s2 / something
                  :mod (e / else)
                  :ARG2-of (e2 / except-01
                        :ARG1 (t4 / that)))
            :ARG1-of (w2 / word-01
                  :mod (o / other))))"
"(p / point
      :ARG2-of (t / tip-01
            :ARG1 (c / coronavirus))
      :domain (s / store
            :mod (g / grocery)))"
"(s / see-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Roundy's"")
            :ARG1-of (r / resemble-01
                  :ARG2 (c2 / company
                        :ARG0-of (o / operate-01
                              :ARG1 (s2 / supermarket))
                        :mod (o2 / other))))
      :ARG1 (s3 / surge-01
            :ARG1 (d / demand-01
                  :ARG0 (p / person
                        :ARG0-of (s4 / shop-01)
                        :ARG0-of (s5 / stock-up-02
                              :ARG1 (ii / item))))
            :ARG1-of (c3 / cause-01
                  :ARG0 (p2 / pandemic
                        :name (n2 / name
                              :op1 ""COVID-19"")))))"
(a / amr-empty)
"(c / cap-01
      :ARG0 (g / government-organization
            :ARG0-of (g2 / govern-01))
      :ARG1 (t / thing
            :ARG2-of (p / price-01
                  :ARG1 (b / bottle
                        :ARG0-of (s / sanitize-01
                              :ARG1 (h / hand))
                        :quant (v / volume-quantity
                              :quant 200
                              :unit (m / milliliter)))))
      :ARG2 (m2 / monetary-quantity
            :quant 100
            :unit (r / rupee))
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (b2 / buy-01
                        :manner (p2 / panic-01))
                  :op2 (t2 / thing
                        :ARG2-of (p3 / price-01)
                        :ARG1-of (r2 / rise-01)))))"
"(e / enforce-01
      :ARG0 (s / supermarket
            :quant (m / many))
      :ARG1 (p / policy-01
            :ARG0 s
            :ARG1 (l / limit-01
                  :ARG1 (r / rate-entity-91
                        :ARG1 (ii / item
                              :quant 2)
                        :ARG2 (p2 / purchase-01
                              :ARG0 (c / customer))))))"
"(l / look-02
      :polarity -
      :ARG0 (h / hike-02
            :ARG1 (p / price)
            :time (t / time
                  :ARG1-of (h2 / have-mod-91
                        :polarity -
                        :ARG2 (c / certain))
                  :mod (t2 / this)))
      :ARG1-of (g / good-02))"
"(b / begin-01
      :ARG1 (w / week
            :mod (t / trade-01))
      :ARG2 (l / lower-05
            :ARG1 (a / and
                  :op1 (m / monetary-quantity
                        :ARG2-of (p / price-01
                              :ARG1 (s / stock)))
                  :op2 (m2 / monetary-quantity
                        :ARG2-of (p2 / price-01
                              :ARG1 (b2 / bond)))
                  :mod (b3 / both)))
      :ARG1-of (c / cause-01
            :ARG0 (c2 / continue-01
                  :ARG1 (ii / impact-01
                        :ARG0 (f / fallout
                              :mod (c3 / coronavirus))
                        :ARG1 (m3 / market
                              :mod (f2 / financial)
                              :mod (c4 / country
                                    :name (n / name
                                          :op1 ""U.S."")))))))"
"(p / potential
      :domain (c / create-01
            :ARG0 (p2 / product
                  :name (n / name
                        :op1 ""COVID-19""))
            :ARG1 (c2 / change-01
                  :ARG0 p2
                  :ARG1 (a / and
                        :op1 (t / thing
                              :manner-of (s / shop-01
                                    :ARG0 (p3 / person)))
                        :op2 (t2 / thing
                              :manner-of (c3 / consume-01
                                    :ARG0 p3
                                    :ARG1 (m / media)))
                        :op3 (t3 / thing
                              :manner-of (r / regard-01
                                    :ARG0 p3
                                    :ARG1 (b / brand
                                          :ARG2-of (d / do-02
                                                :ARG0 p3
                                                :ARG1 (b2 / business))))))
                  :ARG2 (t4 / thing
                        :ARG1-of (b3 / behave-01)
                        :ARG1-of (h / have-degree-91
                              :ARG2 (p4 / permanent)
                              :ARG3 (m2 / more))))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (d / diary)
            :op2 (l / lockdown)
            :op3 (c / company
                  :name (n / name
                        :op1 ""Ocado""))
            :op4 (c2 / company
                  :name (n2 / name
                        :op1 ""Morrisons"")))
      :snt2 (a2 / available-02
            :polarity -
            :ARG1 (a3 / and
                  :op1 c
                  :op2 (c3 / company
                        :name (n3 / name
                              :op1 ""Morrisons"")))
            :ARG2 (s / slot
                  :mod (d2 / deliver-01)
                  :mod (a4 / any))
            :time (o / or
                  :op1 (d3 / date-entity
                        :month 3)
                  :op2 (d4 / date-entity
                        :month 4))
            :location (a5 / area
                  :mod (c4 / city
                        :name (n4 / name
                              :op1 ""Harrow"")))))"
"(c / contrast-01
      :ARG1 (r / report-01
            :ARG0 (c2 / company
                  :name (n / name
                        :op1 ""General""
                        :op2 ""Mills""))
            :ARG1 (d / demand-01
                  :ARG1 (p / product
                        :poss c2)
                  :ARG1-of (s / strong-02
                        :ARG2-of (h / have-degree-91
                              :ARG1 d
                              :ARG3 (m / more))))
            :ARG1-of (c3 / cause-01
                  :ARG0 (b / buy-01
                        :ARG0 (p2 / person
                              :ARG0-of (c4 / consume-01))
                        :ARG1 (f / food
                              :quant (m2 / more))
                        :purpose (p3 / prepare-02
                              :ARG0 p2
                              :ARG1 p2
                              :ARG2 (p4 / pandemic
                                    :mod (d2 / disease
                                          :name n
                                          :op1 ""coronavirus""))))))
      :ARG2 (s2 / say-01
            :ARG0 c2
            :ARG1 (k / know-01
                  :polarity -
                  :ARG0 c2
                  :ARG1 (t / temporal-quantity
                        :duration-of (o / order-01
                              :ARG1-of (h2 / have-degree-91
                                    :ARG2 (h3 / high-02
                                          :ARG1 o)
                                    :ARG3 (m3 / more)))))))"
"(m / multi-sentence
      :snt1 (s / stop-01
            :ARG0 (a / and
                  :op1 (p / person
                        :ARG0-of (h / have-org-role-91
                              :ARG1 (c / company
                                    :ARG1-of (h2 / hear-01
                                          :polarity -
                                          :ARG0 (ii / i)))
                              :ARG2 (o / officer
                                    :mod (e / executive)
                                    :mod (c2 / chief))))
                  :op2 (p2 / person
                        :ARG0-of (h3 / have-org-role-91
                              :ARG1 (c3 / company
                                    :ARG1-of (m2 / meet-02
                                          :polarity -
                                          :ARG0 ii))
                              :ARG2 (o2 / officer
                                    :mod (e2 / executive)
                                    :mod (c4 / chief))))
                  :mod (a2 / all))
            :ARG1 (e3 / email-01
                  :ARG0 a
                  :ARG2 ii
                  :mod (b / bloody))
            :polarity (a3 / amr-unknown))
      :snt2 (r / reduce-01
            :ARG0 (y / you)
            :ARG1 (m3 / monetary-quantity
                  :ARG2-of (p3 / price-01
                        :ARG0 y))
            :ARG1-of (ii2 / interest-01
                  :ARG0 (w / we)
                  :mod (a4 / all)))
      :snt3 (c5 / company
            :name (n / name
                  :op1 ""Coronavirus""))
      :snt4 (c6 / company
            :name (n2 / name
                  :op1 ""Covid19UK"")))"
"(m / multi-sentence
      :snt1 (g / go-02
            :ARG0 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (ii / i)
                        :ARG2 (w / wife)))
            :ARG4 (s / store
                  :mod (g2 / grocery))
            :purpose (g3 / get-01
                  :ARG0 p
                  :ARG1 (v / vegetable
                        :ARG1-of (f / fresh-04)
                        :quant (s2 / some)))
            :time (a / after
                  :op1 (w2 / work-01
                        :ARG0 p))
            :time (t / today))
      :snt2 (w3 / wear-01
            :ARG0 (s3 / she)
            :ARG1 (a2 / and
                  :op1 (s4 / scrubs
                        :poss s3)
                  :op2 (c / coat
                        :mod (l / lab)
                        :poss s3)))
      :snt3 (s5 / say-01
            :ARG0 s3
            :ARG1 (a3 / avoid-01
                  :ARG0 (p2 / person)
                  :ARG1 s3
                  :ARG1-of (r / resemble-01
                        :ARG2 (h2 / have-03
                              :ARG0 s3
                              :ARG1 (d / disease
                                    :name (n / name
                                          :op1 ""Plague"")))))))"
"(b / be-temporally-at-91
      :ARG2 (s / start-01
            :ARG0 (s2 / shop
                  :ARG1-of (l / local-02
                        :ARG2 (y / you)))
            :ARG1 (c / charge-01
                  :ARG0 s2
                  :ARG1 (p / price
                        :mod (e / exorbitant)))))"
"(h / help-01
      :ARG0 (t / thing
            :ARG1-of (d / donate-01)
            :mod (l / large)
            :mod (a / another)
            :location (p / point
                  :location-of (d2 / drop-off-03
                        :ARG1 (a2 / aid-01
                              :mod (m / mutual)))
                  :location (c / church
                        :name (n / name
                              :op1 ""St""
                              :op2 ""Mildred's"")
                        :location (r / road
                              :name (n2 / name
                                    :op1 ""Bingham""
                                    :op2 ""Road"")
                              :part-of (c2 / city
                                    :name (n3 / name
                                          :op1 ""Croydon""))))
                  :location (c3 / city
                        :name (n4 / name
                              :op1 ""Addiscombe""))))
      :ARG1 (r2 / replenish-01
            :ARG1 (s / stock-01
                  :ARG1 (b / bank
                        :mod (f / food)
                        :poss (o / organization
                              :name (n5 / name
                                    :op1 ""Salvation""
                                    :op2 ""Army""))
                        :location c2)
                  :ARG1-of (d3 / drop-01
                        :manner (c4 / considerable)
                        :time (w / week
                              :mod (l2 / last))))))"
"(h / have-03
      :ARG0 (ii / i)
      :ARG1 (p / pack
            :consist-of (p2 / paper
                  :purpose (t / toilet))
            :mod (l / last)
            :location (s / supermarket
                  :location (c / city
                        :name (n / name
                              :op1 ""Raccoon""
                              :op2 ""City"")))))"
"(p / punch-01
      :ARG0 (m / man
            :location (s / state
                  :name (n / name
                        :op1 ""California"")))
      :ARG1 (p2 / person
            :ARG0-of (h / have-rel-role-91
                  :ARG1 m
                  :ARG2 (m2 / mother)))
      :ARG1-of (c / cause-01
            :ARG0 (h2 / hide-01
                  :ARG0 m
                  :ARG1 (p3 / paper
                        :purpose (t / toilet))
                  :time (l / lock-down-06
                        :ARG3 (c2 / coronavirus)))))"
"(m / multi-sentence
      :snt1 (h / hurt-01
            :ARG1 (w / winery
                  :location (p / province
                        :name (n / name
                              :op1 ""Niagara"")))
            :time (e / epidemic))
      :snt2 (r / reduce-01
            :ARG1 (w2 / winery
                  :quant (m2 / majority
                        :mod (v / vast)))
            :ARG4 (s / sell-01
                  :ARG0 w2
                  :medium (o / online)
                  :mod (o2 / only)))
      :snt3 (l / list-01
            :ARG1 (t / thing
                  :manner-of (a / and
                        :op1 (b / buy-01
                              :ARG0 (y / you)
                              :ARG1 (w3 / wine
                                    :source p))
                        :op2 (k / keep-02
                              :ARG0 y
                              :ARG1 (v2 / viable
                                    :domain (ii / industry
                                          :mod p)))))
            :location (h2 / here))
      :snt4 (h3 / happy-01
            :mode expressive
            :ARG1 (s2 / shop-01)))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (s / scramble-01
                  :ARG0 (s2 / state
                        :name (n / name
                              :op1 ""Montana""))
                  :ARG1 (f / find-01
                        :ARG0 s2
                        :ARG1 (s3 / supply-01
                              :ARG1 (m2 / medicine)
                              :mod (b / basic))))
            :op2 (f2 / force-01
                  :ARG1 s2
                  :ARG2 (p / pay-01
                        :ARG0 s2
                        :ARG1 (p2 / price-01
                              :ARG1 s3
                              :mod (e / exorbitant)))
                  :ARG1-of (r / resemble-01
                        :ARG2 (s4 / state
                              :quant (m3 / many)
                              :mod (o / other)))))
      :snt2 (e2 / exemplify-01
            :ARG0 (s5 / sell-01
                  :ARG1 (m4 / mask
                        :mod (s6 / surgery-01)
                        :ARG1-of (c / cost-01
                              :ARG2 (m5 / monetary-quantity
                                    :quant 1
                                    :unit (d / dollar)
                                    :ARG1-of (m6 / mean-01
                                          :ARG2 (p3 / product-of
                                                :op1 5
                                                :op2 (m7 / monetary-quantity
                                                      :quant 1
                                                      :unit (d2 / dollar)))))
                              :time (u / use-03)))
                  :time (n2 / now))))"
(a / amr-empty)
"(a / and
      :op1 (l / leave-17
            :ARG1 (ii / item
                  :quant 1
                  :mod (o / only)
                  :ARG1-of (u / use-01
                        :ARG2 (w / wipe-01
                              :ARG1 (b / backside
                                    :part-of (y / you))
                              :ARG2 ii)
                        :ARG1-of (p / possible-01)))
            :location (s / store
                  :mod (g / grocery)))
      :op2 (c / choose-01
            :ARG0 (ii2 / i)
            :ARG1 ii
            :ord (o2 / ordinal-entity
                  :value 1)
            :manner (f / frank)))"
"(m / multi-sentence
      :snt1 (w / work-01
            :ARG0 (w2 / we)
            :ARG1 (r / restock-01
                  :ARG0 w2
                  :purpose (p / possible-01
                        :ARG1 (g / get-05
                              :ARG0 w2
                              :ARG1 (f / food
                                    :ARG1-of (h / have-quant-91
                                          :ARG2 (m2 / much)
                                          :ARG3 (e / equal)
                                          :ARG4 (p2 / possible-01
                                                :ARG1 (e2 / eat-01
                                                      :location (h2 / home
                                                            :quant (m3 / many))))))))
                  :ARG2 (c / company
                        :ARG0-of (s / supply-01)))
            :snt2 (c2 / contrast-01
                  :ARG2 (a / and
                        :op1 (e3 / experience-01
                              :ARG0 (w3 / we)
                              :ARG1 (d / demand-01
                                    :ARG1-of (h3 / high-02))
                              :time (c3 / current))
                        :op2 (a2 / apologize-01
                              :ARG0 w3
                              :ARG1 (r2 / receive-01
                                    :polarity -
                                    :ARG0 (y / you)
                                    :ARG1 (ii / item
                                          :mod (e4 / exact)
                                          :ARG1-of (o / order-02
                                                :ARG0 y))))))
            :snt3 (s2 / see-01
                  :mode imperative
                  :polite +
                  :ARG0 y)
            :ARG1 (p3 / person
                  :name (n / name
                        :op1 ""Kelsie""))
            :purpose (ii2 / information
                  :mod (m4 / more))))"
"(l / look-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (ii / impact-01
            :ARG0 (s / spend-01
                  :ARG0 (p / person
                        :ARG0-of (c / consume-01))
                  :location (c2 / country
                        :name (n / name
                              :op1 ""US""))))
      :ord (o / ordinal-entity
            :value 1))"
"(m / multi-sentence
      :snt1 (g / go-02
            :ARG0 (y / you)
            :ARG4 (p / pharmacy
                  :mod (a / any)
                  :mod (t / this))
            :purpose (f / find-out-03
                  :ARG0 y
                  :ARG1 (m2 / monetary-quantity
                        :ARG1-of (p2 / pay-01
                              :ARG0 p
                              :ARG3 (s / stock))))
            :polarity (a2 / amr-unknown))
      :snt2 (f2 / fuel-01
            :polarity -
            :mode imperative
            :polite +
            :ARG0 y
            :ARG1 (r / rumor-01)
            :time (b / before
                  :op1 (k / know-01
                        :ARG1 (f3 / fact)))
            :ARG1-of (c / cause-01
                  :ARG0 (h / hike-02
                        :ARG0 (c2 / company
                              :ARG0-of (w / wholesale-01)
                              :mod (a3 / all))
                        :ARG1 (p3 / price-01)
                        :ARG0-of c
                        :ARG1 (f4 / feasible
                              :polarity -
                              :domain (m3 / maintain-01
                                    :ARG1 (p4 / price-01
                                          :time b
                                          :op1 (l / law
                                                :name (n / name
                                                      :op1 ""CODID-19"")))))))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (o / obligate-01
                  :ARG1 (ii / i)
                  :ARG2 (u / use-01
                        :ARG0 ii
                        :ARG1 (c / card
                              :mod (c2 / credit)
                              :poss ii)
                        :ARG2 (b / buy-01
                              :ARG0 ii
                              :ARG1 (g / grocery)
                              :frequency (r / rate-entity-91
                                    :ARG3 (t / temporal-quantity
                                          :quant 1
                                          :unit (d / day)))
                              :purpose (p / possible-01
                                    :ARG1 (s / stock-up-02
                                          :ARG0 ii
                                          :ARG1 (f / food
                                                :mod (k / kind
                                                      :mod (s2 / some))))
                                    :mod (j / just)))))
            :op2 (o2 / obligate-01
                  :ARG1 ii
                  :ARG2 (s3 / seek-01
                        :ARG0 ii
                        :ARG1 (t2 / treat-03
                              :ARG1 ii
                              :ARG2 (p2 / problem
                                    :ARG1-of (r2 / relate-01
                                          :polarity -
                                          :ARG2 (l / law
                                                :name (n / name
                                                      :op1 ""COVID-19""))))
                              :mod (m2 / medicine)))))
      :snt2 (p3 / possible-01
            :ARG1 (u2 / use-01
                  :ARG0 (ii2 / i)
                  :ARG1 (a2 / and
                        :op1 (h / help-01)
                        :op2 (a3 / assist-01)
                        :mod (s4 / some))
                  :ARG1-of (r3 / real-04))))"
"(d / define-01
      :ARG1 (ii / insanity)
      :ARG2 (a / and
            :op1 (d2 / do-02
                  :ARG1 (t / thing
                        :ARG1-of (s / same-01))
                  :frequency (o / over-and-over))
            :op2 (e / expect-01
                  :ARG1 (t2 / thing
                        :ARG2-of (r / result-01)
                        :ARG1-of (d3 / differ-02)))))"
"(m / make-01
      :ARG0 (ii / i)
      :ARG1 (b / batch
            :ord (o / ordinal-entity
                  :value 1)
            :consist-of (s / sanitizer
                  :beneficiary (h / hospital
                        :mod (l / little)
                        :mod (r / rural)
                        :ARG2-of (w / work-01
                              :ARG0 ii))
                  :instrument (h2 / hand))))"
"(s / stop-03
      :polarity -
      :ARG0 (p / product
            :name (n / name
                  :op1 ""Covid-19""))
      :ARG1 (p2 / person
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (ii / i)
                  :ARG2 (w / wife)))
      :ARG2 (s2 / shop-01
            :ARG0 p2
            :medium (o / online)))"
"(p / possible-01
      :ARG1 (s / see-01
            :ARG0 (t / thing
                  :ARG2-of (p2 / price-01
                        :ARG1 (c / currency
                              :name (n / name
                                    :op1 ""Bitcoin""))))
            :ARG1 (p3 / pickup-05
                  :ARG1 (v / volatility)
                  :time (a / ahead
                        :op1 (h / halve-01
                              :time (d / date-entity
                                    :year 2020)))))
      :ARG1-of (c2 / cause-01
            :ARG0 (t2 / threaten-01
                  :ARG0 (p4 / pandemic
                        :mod (c3 / coronavirus))
                  :ARG1 (d2 / disrupt-01
                        :ARG0 p4
                        :ARG1 (o / operation
                              :mod (m / mine-01
                                    :ARG1 c
                                    :ARG0-of (c4 / cross-02
                                          :ARG1 (c5 / continent))))))))"
"(s / scramble-01
      :ARG0 (b / bank
            :mod (f / food)
            :ARG1-of (s2 / strain-01
                  :time (a / already)))
      :ARG1 (m / meet-01
            :ARG0 b
            :ARG1 (n / need-01
                  :ARG1-of (ii / increase-01)))
      :ARG1-of (c / cause-01
            :ARG0 (s3 / sideline-01
                  :ARG0 (t / thing
                        :ARG2-of (r / respond-01
                              :ARG0 (g / government-organization
                                    :name (n2 / name
                                          :op1 ""Congress""))
                              :ARG1 (l / law
                                    :name (n3 / name
                                          :op1 ""COVID""
                                          :op2 19))))
                  :ARG1 (p / program
                        :name (n4 / name
                              :op1 ""SNP""))
                  :mod (m2 / most)
                  :time (n5 / now))))"
"(p / possible-01
      :ARG1 (g / get-01
            :ARG0 (p2 / person
                  :mod (c / country
                        :name (n / name
                              :op1 ""America"")))
            :ARG1 (m / mask)
            :ARG2 (a / amr-unknown))
      :ARG1-of (c2 / cause-01
            :ARG0 (a2 / and
                  :op1 (s / supply-01
                        :ARG0 (s2 / store)
                        :ARG1 (m2 / mask)
                        :ARG2 (t / thing
                              :mod (c3 / close-to
                                    :op1 (t2 / thing
                                          :quant 0))))
                  :op2 (d / drive-02
                        :ARG0 (p3 / person
                              :ARG0-of (h / hoard-01))
                        :ARG1 (t3 / thing
                              :ARG2-of (p4 / price-01))
                        :ARG2 (u / up)))))"
"(g / go-02
      :ARG0 (ii / i)
      :ARG4 (s / supermarket))"
"(m / multi-sentence
      :snt1 (g / go-02
            :ARG0 (ii / i)
            :ARG4 (c / company
                  :name (n / name
                        :op1 ""Tesco""))
            :time (d / date-entity
                  :dayperiod (m2 / morning)
                  :mod (t / today))
            :purpose (t2 / take-advantage-02
                  :ARG0 ii
                  :ARG1 (o / open-01
                        :time (e / early)
                        :beneficiary (a / and
                              :op1 (s / staff-01
                                    :ARG0 (g2 / government-organization
                                          :name (n2 / name
                                                :op1 ""NHS"")))
                              :op2 (s2 / staff-01
                                    :ARG0 c)))))
      :snt2 (w / wonder-01
            :ARG0 (ii2 / i)
            :ARG1 (o2 / or
                  :op1 (h / hour
                        :ARG1-of (c2 / civilize-01)
                        :time-of (a2 / and
                              :op1 (s3 / stock-01
                                    :ARG1 (s4 / shelf)
                                    :degree (f / full))
                              :op2 (p / possible-01
                                    :ARG1 (w2 / walk-01
                                          :ARG0 (w3 / we)
                                          :ARG2 (a3 / around)
                                          :purpose (p2 / pick-up-04
                                                :ARG0 w3
                                                :ARG1 (t3 / thing
                                                      :ARG1-of (n3 / need-01
                                                            :ARG0 w3)))))))
                  :op2 (r / resemble-01
                        :ARG1 h
                        :ARG2 (s5 / sweep-01
                              :ARG2 (s6 / supermarket))))))"
"(p / possible-01
      :ARG1 (s / start-01
            :ARG0 (f / folk)
            :ARG1 (a / and
                  :op1 (t / take-01
                        :ARG0 f
                        :ARG1 (h / hostage))
                  :op2 (d / demand-01
                        :ARG0 f
                        :ARG1 (p2 / paper
                              :source (t2 / toilet)
                              :ARG3-of (r / ransom-01)))))
      :condition (g / get-03
            :ARG1 (t3 / thing)
            :ARG2 (d2 / despair-01
                  :ARG1 t3
                  :ARG2-of (h2 / have-degree-91
                        :ARG1 t3
                        :ARG3 (m / more
                              :mod (a2 / any))))))"
"(m / multi-sentence
      :snt1 (c / company
            :name (n / name
                  :op1 ""CVIDClassy""))
      :snt2 (d / donate-01
            :ARG0 c
            :ARG1 (t / tablet
                  :quant (m2 / multiple
                        :op1 1000000))
            :time (m3 / meanwhile)
            :purpose (f / fight-01
                  :ARG0 c
                  :ARG1 (c2 / criminal-organization
                        :name (n2 / name
                              :op1 ""COVID"")))
            :ARG1-of (ii / instead-of-91
                  :ARG2 (r / raise-01
                        :ARG0 c
                        :ARG1 (t2 / thing
                              :ARG2-of (p / price-01))))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (d / deem-01
                  :ARG1 (p / person
                        :ARG0-of (w / work-01)
                        :mod (e / essential)
                        :domain (ii / i)
                        :ARG2-of (h / have-org-role-91
                              :ARG1 (s / service
                                    :mod (m2 / medicine)
                                    :location (s2 / state
                                          :name (n / name
                                                :op1 ""Florida""))))))
            :op2 (g / go-01
                  :ARG1 (w2 / we)
                  :ARG3 (t / take-01
                        :ARG0 w2
                        :ARG1 (l / lunch)
                        :ARG3 (w3 / work-01))
                  :ARG4 (t2 / take-01
                        :ARG0 w2
                        :ARG1 (a2 / and
                              :op1 (g2 / glove)
                              :op2 (s3 / sanitize-01
                                    :ARG1 (h2 / hand)
                                    :mod (h3 / homemade))
                              :mod (f / feces
                                    :polarity -)))))
      :snt2 (n2 / need-01
            :ARG0 w2)
      :ARG1 (s4 / system
            :mod (d2 / distribute-01))
      :purpose (p2 / prioritize-01
            :ARG0 s4
            :ARG1 (b / business
                  :mod (e2 / essential)
                  :ARG0-of (g3 / get-01
                        :ARG1 (s5 / supply))))
      :ARG1-of (c / cause-01
            :ARG0 (o / out-05
                  :ARG1 w2
                  :mod (a3 / almost))))"
"(m / multi-sentence
      :snt1 (f / focus-01
            :ARG0 (s / supermarket)
            :ARG2 (p / product
                  :ARG1-of (k / key-02))
            :ARG1-of (ii / instead-of-91
                  :ARG2 (r / range-01
                        :ARG1-of (w / wide-02))))
      :snt2 (t / tell-01
            :ARG0 (s2 / supermarket
                  :quant 1)
            :ARG1 (c / cut-back-05
                  :ARG0 s2
                  :ARG1 (p2 / pasta
                        :mod (s3 / style))
                  :ARG3 (s4 / size
                        :quant 20)
                  :ARG4 s3
                  :quant 6))
      :ARG2 (n / newspaper
            :name (n2 / name
                  :op1 ""Guardian"")))"
"(s / slash-02
      :ARG0 (r / retailer
            :mod (o / online)
            :mod (c / country
                  :name (n / name
                        :op1 ""China"")))
      :ARG1 (t / thing
            :ARG2-of (p / price-01
                  :ARG1 (p2 / product
                        :name (n2 / name
                              :op1 ""iPhone""
                              :op2 11))))
      :time (r2 / recover-01
            :ARG1 c
            :ARG2 (v / virus
                  :mod (c2 / coronavirus))))"
"(e / expect-01
      :ARG0 (o / organization
            :name (n / name
                  :op1 ""Food""
                  :op2 ""Bank""))
      :ARG1 (a / and
            :op1 (ii / increase-01
                  :ARG1 (d / demand-01
                        :ARG1 (f / food)))
            :op2 (c / change-01
                  :ARG1 (m / method
                        :manner-of (d2 / distribute-01
                              :ARG1 f)))
            :ARG1-of (c2 / cause-01
                  :ARG0 (l / law
                        :name (n2 / name
                              :op1 ""COVID-19""))))
      :ARG1-of (s / say-01
            :ARG0 (p / publication
                  :name (n3 / name
                        :op1 ""Times""
                        :op2 ""Free""
                        :op3 ""Press""))
            :time (d3 / date-entity
                  :day 18
                  :month 3
                  :year 2020)))"
"(c / contrast-01
      :ARG1 (p / possible-01
            :ARG1 (s / see-01
                  :ARG0 (y / you)
                  :ARG1 (d / drop-01
                        :ARG1 (f / footfall
                              :mod (c2 / customer)
                              :location (s2 / store
                                    :mod (g / grocery)
                                    :poss y)))))
      :ARG2 (n / now
            :domain (t / time
                  :purpose (g2 / get-04
                        :ARG0 y
                        :ARG1 (d2 / deliver-01
                              :ARG1 (p2 / product
                                    :poss y)
                              :ARG2 s2
                              :manner (m / means
                                    :mod (d3 / digit)))))))"
(a / amr-empty)
"(h / have-manner-91
      :ARG1 (s / suppose-02
            :ARG1 (t / thing
                  :ARG2-of (p / price-01
                        :ARG1 (g / gas))
                  :ARG1-of (h2 / have-degree-91
                        :ARG2 (l / low-04
                              :ARG1 t)
                        :ARG3 (m / more)))
            :ARG2 (m2 / make-02
                  :ARG0 t
                  :ARG1 (f / feel-01
                        :ARG0 (w / we)
                        :ARG1 (g2 / good-02
                              :ARG2-of h2
                              :ARG1 f
                              :ARG3 m))))
      :time (a / and
            :op1 (j / job
                  :polarity -)
            :op2 (s2 / supply-01
                  :polarity -
                  :ARG1 (m3 / medicine))
            :op3 (m4 / money
                  :polarity -))
      :ARG2 (a2 / amr-unknown))"
"(l / look-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Niki"")
            :ARG0-of (h / have-org-role-91
                  :ARG1 (c / company
                        :name (n2 / name
                              :op1 ""Contentworks""))
                  :ARG2 (d / director)))
      :ARG1 (t / thing
            :manner-of (p2 / possible-01
                  :ARG1 (v / victim
                        :mod (n3 / next)
                        :domain (p3 / price-01
                              :ARG1 (o / oil)
                              :mod (g / globe))
                        :poss (a / and
                              :op1 (v2 / virus
                                    :name (n4 / name
                                          :op1 ""Coronavirus""))
                              :op2 (m / megalomaniac))))))"
"(c / cause-01
      :ARG0 (p / person
            :ARG1-of (c2 / come-01
                  :ARG3 (c3 / city
                        :name (n / name
                              :op1 ""Taftan"")))
            :ARG1-of (q / quarantine-01
                  :location (c4 / city
                        :name (n2 / name
                              :op1 ""Sukkkur""))))
      :ARG1 (s / spike-01
            :ARG1 (c5 / case-04
                  :ARG1 (d / disease
                        :name (n3 / name
                              :op1 ""Coronavirus""))
                  :location (c6 / country
                        :name (n4 / name
                              :op1 ""Pakistan""))))
      :mod (m / main))"
"(s / say-01
      :ARG0 (p / person
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (p2 / person
                        :name (n / name
                              :op1 ""Junior""))
                  :ARG2 (f / father)))
      :ARG1 (a / and
            :op1 (g / go-02
                  :mode imperative
                  :polite +
                  :ARG0 p2
                  :ARG4 (s2 / supermarket))
            :op2 (g2 / get-01
                  :mode imperative
                  :polite +
                  :ARG0 p2
                  :ARG1 (s3 / something)
                  :ARG4 p2))
      :ARG2 p2)"
"(ii / impact-01
      :ARG0 (p / portion
            :quant (s / several)
            :part-of (l / law
                  :name (n / name
                        :op1 ""CARESAct"")))
      :ARG1 (ii2 / institution
            :mod (f / financial)
            :ARG0-of (f2 / furnish-01
                  :ARG1 (a / agency
                        :ARG0-of (r / report-01
                              :ARG1 (c / credit)))
                  :ARG2 (ii3 / information
                        :source (p2 / person
                              :ARG0-of (c2 / consume-01)))
                  :prep-under (l2 / law
                        :name (n2 / name
                              :op1 ""FCRA"")))
            :ARG0-of (s2 / serve-02
                  :ARG1 (m / mortgage-01
                        :ARG1-of (b / back-01
                              :ARG0 (g / government-organization
                                    :name (n3 / name
                                          :op1 ""Federal""
                                          :op2 ""Reserve""
                                          :op3 ""System""))))))
      :ARG1-of (e / explain-01
            :ARG0 (a2 / and
                  :op1 (p3 / person
                        :name (n4 / name
                              :op1 ""ALHKeeney""))
                  :op2 (p4 / person
                        :name (n5 / name
                              :op1 ""Troy""
                              :op2 ""Mainzer""))))
      :ARG1-of (d / direct-02))"
"(s / say-01
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG1 (s2 / supermarket)
                  :ARG2 (b / boss)))
      :ARG1 (r / remain-01
            :ARG1 (l / limit-01
                  :ARG1 (b2 / buy-01))
            :time (n / now)))"
"(c / contrast-01
      :ARG1 (t / think-01
            :ARG0 (y / you)
            :ARG1 (h / hear-01
                  :ARG0 (p / person)
                  :ARG1 (a / and
                        :op1 (a2 / advise-01
                              :ARG2 (d / distance-01
                                    :mod (s / social)))
                        :op2 (s2 / stay-01
                              :ARG1 (s3 / save-02
                                    :ARG1 (l / life))))))
      :ARG2 (s4 / see-01
            :ARG0 y
            :ARG1 (s5 / shop
                  :poss y
                  :ARG1-of (l2 / local-02))
            :time (t2 / then)))"
"(a / and
      :op1 (m / make-01
            :ARG0 (c / company
                  :name (n / name
                        :op1 ""SpaceX""))
            :ARG1 (s / sanitizer
                  :beneficiary (h / hand)
                  :poss c))
      :op2 (b / build-01
            :ARG0 c
            :ARG1 (s2 / shield
                  :mod (f / face))
            :purpose (d / donate-01
                  :ARG0 c
                  :ARG2 (f2 / fight-01
                        :ARG1 (c2 / coronavirus)))))"
"(m / multi-sentence
      :snt1 (b / bottle
            :consist-of (p / product
                  :name (n / name
                        :op1 ""Eucalyptus""
                        :op2 ""Sanitizer""))
            :source (c / company
                  :name (n2 / name
                        :op1 ""OdoBan""))
            :domain (t / this))
      :snt2 (k / kill-01
            :ARG0 (ii / it)
            :ARG1 (g / germ
                  :ARG1-of (ii2 / include-91
                        :ARG2 (g2 / germ)
                        :ARG3 (p2 / percentage-entity
                              :value 99.99)))))"
"(a / and
      :op1 (c / condemn-01
            :ARG0 (w / we)
            :ARG1 (g / gouge-02
                  :ARG2 (p / price-01))
            :ARG1-of (s / strong-02))
      :op2 (p2 / price-01
            :ARG1 w
            :ARG1-of (p3 / post-01)
            :ARG1-of (n / normal-02)))"
(a / amr-empty)
"(s / say-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Nielsen""))
      :ARG1 (ii / identify-01
            :ARG1 (t / threshold
                  :ARG1-of (k / key-02)
                  :mod (b / behave-01
                        :ARG0 (p / person
                              :ARG0-of (c2 / consume-01))))
            :time (e / evolve-01
                  :ARG2 (o / outbreak-29
                        :ARG1 (c3 / coronavirus)))))"
"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (g / give-01
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""Rishi""
                              :op2 ""Sunak"")
                        :ARG0-of (h / have-org-role-91
                              :ARG2 (c2 / chancellor)))
                  :ARG1 (l / lifeline)
                  :ARG2 (p2 / person
                        :quant 5000000
                        :ARG0-of (w / work-01)
                        :ARG1-of (e / employ-01)
                        :ARG0-of e
                        :location (c3 / country
                              :name (n2 / name
                                    :op1 ""Britain""))))
            :ARG2 (h2 / have-quant-91
                  :ARG1 l
                  :ARG3 (e2 / enough)
                  :polarity (a / amr-unknown)))
      :snt2 (r / read-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (a2 / analyze-01
                  :ARG0 (w2 / we))
            :location (h3 / here)))"
(a / amr-empty)
"(a / ask-02
      :ARG0 (n / nurse
            :ARG0-of (c / care-03
                  :ARG1-of (c2 / critical-03)))
      :ARG1 (s / stop-01
            :ARG0 (p / person)
            :ARG1 (b / buy-01
                  :ARG0 p
                  :ARG1 (f / food
                        :mod (a2 / all))
                  :ARG2 (s2 / supermarket)))
      :ARG2 p
      :purpose (p2 / possible-01
            :ARG1 (b2 / buy-01
                  :ARG0 n
                  :ARG1 (t / thing
                        :ARG1-of (s3 / supply-01))
                  :ARG4 (f2 / family
                        :ARG1-of (h / have-org-role-91
                              :ARG0 n
                              :ARG2 (m / member))))))"
"(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""RaminToloui"")
            :ARG0-of (h / have-org-role-91
                  :ARG1 (o / organization
                        :name (n2 / name
                              :op1 ""SIEPR""))
                  :ARG2 (p2 / professor
                        :topic (p3 / practice-01))))
      :ARG1 (n3 / now
            :domain (t / time
                  :purpose (d / deploy-01
                        :ARG1 (r / range
                              :mod (f / full)
                              :mod (t2 / tool))
                        :purpose (a / address-02
                              :ARG1 (s2 / shock-01
                                    :ARG0 (l / liquidity)
                                    :ARG1-of (h2 / have-degree-91
                                          :ARG2 (a2 / abrupt)
                                          :ARG3 (m / most)
                                          :ARG5 (h3 / history
                                                :mod (c / country
                                                      :name (n4 / name
                                                            :op1 ""U.S.""))))))))))"
"(m / multi-sentence
      :snt1 (b / bring-01
            :ARG0 (ii / i)
            :ARG1 (f / flower)
            :ARG2 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 ii
                        :ARG2 (w / wife)))
            :time (a / anniversary
                  :poss (w2 / we))
            :time (b2 / before
                  :op1 (l / law
                        :name (n / name
                              :op1 ""COVID19""))))
      :snt2 (b3 / bring-01
            :ARG0 ii
            :ARG1 (p2 / paper
                  :purpose (t / toilet)
                  :poss (s / she))
            :ARG2 s
            :time (a2 / after
                  :op1 l)))"
"(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (s / send-01
                  :ARG0 (w / we)
                  :ARG1 (g / guide
                        :mod (r / resource)
                        :mod (t / this)
                        :location (u / university
                              :name (n / name
                                    :op1 ""UTAustin"")))
                  :ARG2 (p2 / person
                        :ARG0-of (s2 / study-01)
                        :quant (n2 / nearly
                              :op1 3000)))
            :ARG1-of (c / cause-01
                  :ARG0 (w2 / work-01
                        :ARG0 (p3 / person
                              :name (n3 / name
                                    :op1 ""Student""
                                    :op2 ""for""
                                    :op3 ""Transit""))
                        :ARG1 (o / organize-01
                              :ARG0 p3))))
      :snt2 (a / and
            :op1 (c2 / check-out-05
                  :mode imperative
                  :ARG0 (y / you)
                  :ARG1 (ii / it))
            :op2 (s3 / share-01
                  :mode imperative
                  :ARG0 y
                  :ARG1 ii
                  :ARG2 (p4 / person
                        :ARG0-of (s4 / study-01)
                        :ARG0-of (n4 / need-01
                              :ARG1 ii)))))"
"(m / multi-sentence
      :snt1 (k / kid-01
            :ARG0 (y / you)
            :polarity (a / amr-unknown))
      :snt2 (o / obvious-01
            :ARG1 (a2 / allow-01
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""Donald""
                              :op2 ""Trump""))
                  :ARG1 (g / gouge-02
                        :ARG0 (p2 / person
                              :ARG0-of (d / donate-01
                                    :ARG2 p))
                        :ARG1 (p3 / person
                              :mod (c / country
                                    :name (n2 / name
                                          :op1 ""America"")))
                        :time (p4 / pandemic
                              :mod (c2 / coronavirus)))
                  :ARG1-of (ii / instead-of-91
                        :ARG2 (a3 / activate-01
                              :ARG0 p
                              :ARG1 (g2 / government-organization
                                    :name (n3 / name
                                          :op1 ""Works""
                                          :op2 ""Progress""
                                          :op3 ""Administration"")
                                    :location-of (c3 / control-01
                                          :ARG1 (m2 / monetary-quantity
                                                :ARG2-of (p5 / price-01)))))))
            :degree (r / really)
            :time (n4 / now)))"
"(p / person
      :name (n / name
            :op1 ""Daniel""
            :op2 ""Dale"")
      :time (d / date-entity
            :day 28
            :month 5
            :year 2020))"
"(a / agree-01
      :ARG0 (ii / i)
      :ARG1 (s / state-01
            :ARG1 (r / recommend-01
                  :ARG1 (a2 / and
                        :op1 (a3 / avoid-01
                              :ARG0 (e / everyone)
                              :ARG1 (s2 / shop-01
                                    :ARG1-of (p / personal-02)))
                        :op2 (b / buy-01
                              :ARG0 e
                              :medium (o / online))
                        :purpose (s3 / stay-01
                              :ARG1 e
                              :ARG3 (s4 / safe-01
                                    :ARG2 (p2 / product
                                          :name (n / name
                                                :op1 ""COVID-19""))))))))"
(a / amr-empty)
"(s / shut-down-05
      :ARG1 (c / company
            :name (n / name
                  :op1 ""Ocado""))
      :time (u / until
            :op1 (d / date-entity
                  :weekday (s2 / saturday)))
      :ARG1-of (c2 / cause-01
            :ARG0 (a / amount
                  :quant-of (t / traffic)
                  :ARG0-of (s3 / stagger-02
                        :mod (s4 / simple)))))"
"(c / cause-01
      :ARG0 (a / amr-unknown)
      :ARG1 (a2 / and
            :op1 (b / bore-02
                  :ARG0 (s / shop-01
                        :ARG2 (s2 / supermarket))
                  :degree (s3 / so))
            :op2 (e / event
                  :polarity -
                  :domain s)
            :time (d / day
                  :mod (t / this))))"
"(g / get-01
      :ARG0 (a / and
            :op1 (p / person
                  :name (n / name
                        :op1 ""taradome22""))
            :op2 (ii / i))
      :ARG1 (b / basket
            :mod (e / egg)
            :poss (w / we)))"
"(m / multi-sentence
      :snt1 (h / hi
            :mode expressive)
      :snt2 (a / available-02
            :ARG2 (p / product
                  :ARG0-of (s / sanitize-01
                        :ARG1 (h2 / hand))
                  :mod (o / organic)
                  :poss (p2 / person
                        :ARG0-of (h3 / have-rel-role-91
                              :ARG1 (ii / i)
                              :ARG2 (w / wife))))
            :location (h4 / here)
            :time (n / now)))"
"(l / leave-behind-18
      :ARG0 (g / geek
            :ARG0-of (t / think-01
                  :manner (s / science)))
      :ARG1 (s2 / sense-02
            :mod (c / common))
      :time (s3 / sometimes))"
"(p / possible-01
      :polarity -
      :ARG1 (s / shop-01
            :ARG0 (p2 / person
                  :name (n / name
                        :op1 ""Dawn""
                        :op2 ""Bilbrough"")
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (n2 / nurse
                              :mod (c / care-03
                                    :ARG1-of (c2 / critical-03))))))
      :ARG1-of (c3 / cause-01
            :ARG0 (b / buy-01
                  :ARG0 p2
                  :ARG1-of (c4 / cause-01
                        :ARG0 (p3 / product
                              :name (n3 / name
                                    :op1 ""Covid19UK"")))
                  :manner (p4 / panic-01))))"
"(m / multi-sentence
      :snt1 (s / stand-up-07
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""John""))
            :time (d / day
                  :ord (o / ordinal-entity
                        :value 1)
                  :time-of (q / quarantine-01
                        :ARG1 p)))
      :snt2 (h / humor
            :purpose (h2 / help-01
                  :ARG1 (g / get-through-13
                        :ARG0 (w / we)
                        :ARG1 (t / time
                              :mod (d2 / difficult)
                              :mod (t2 / this)))
                  :ARG2 w)
            :ARG0-of h2
            :quant (l / little))
      :snt3 (s2 / stay-01
            :mode imperative
            :ARG1 (y / you)
            :ARG3 (s3 / safe-01
                  :ARG1 y)))"
"(p / publish-01
      :ARG0 (ii / i)
      :ARG1 (a / article
            :ARG1-of (n / new-01)
            :topic (s / struggle-02
                  :ARG0 (e / economy
                        :poss (c / country
                              :ARG0-of (h / have-org-role-91
                                    :ARG1 (o / organization
                                          :name (n2 / name
                                                :op1 ""GCC"")))))
                  :time (a2 / after
                        :op1 (g / go-08
                              :ARG1 (p2 / price-01
                                    :ARG1 (o2 / oil))
                              :ARG2 (p3 / person
                                    :name (n3 / name
                                          :op1 ""Corona""))))))
      :medium (p4 / publication
            :name (n4 / name
                  :op1 ""ispionline"")))"
"(b / be-temporally-at-91
      :ARG1 (s / start-01
            :ARG0 (f / family
                  :mod (w / whole)
                  :poss (y / you))
            :ARG1 (p / panic-01
                  :ARG0 f
                  :ARG1-of (c / cause-01
                        :polarity -
                        :ARG0 (f2 / food))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (b2 / be-located-at-91
                              :ARG1 (p2 / person
                                    :quant 1
                                    :ARG1-of (ii / include-91
                                          :ARG2 (p3 / person
                                                :ARG0-of (h / have-org-role-91
                                                      :ARG1 f
                                                      :ARG2 (m / member)))))
                              :ARG2 (f3 / frontline)
                              :destination (h2 / hospital
                                    :name (n / name
                                          :op1 ""Covid 19"")))))))"
"(r / result-01
      :ARG1 (b / buy-01
            :manner (p / panic-01))
      :ARG2 (c / contrast-01
            :ARG1 (g / gain-02
                  :ARG1 (f / food
                        :quant (s / some)))
            :ARG2 (l / lose-02
                  :ARG1 (s2 / state
                        :mod (m / mind)
                        :poss (o / one)))))"
"(o / offer-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Shopee""))
      :ARG1 (m / mask
            :mod (f / face)
            :consist-of (p / ply
                  :quant 3)
            :quant (v / volume-quantity
                  :quant 50
                  :unit (c2 / case))
            :ARG1-of (c3 / cost-01
                  :ARG2 (l / less-than
                        :op1 (m2 / monetary-quantity
                              :quant 100
                              :unit (p2 / pound)))))
      :time (p3 / pandemic
            :name (n2 / name
                  :op1 ""COVID""
                  :op2 19)))"
"(a / and
      :op1 (c / correct-01
            :ARG0 (m / monetary-quantity
                  :ARG2-of (p / price-01
                        :ARG1 (s / silver)))
            :ARG1 (l / low-04
                  :ARG1 m
                  :duration (t / temporal-quantity
                        :quant 11
                        :unit (y / year))))
      :op2 (e / enroute-00
            :ARG1 m
            :ARG2 (a2 / and
                  :op1 (l2 / level
                        :mod (r / rate-entity-91
                              :ARG1 (m2 / monetary-quantity
                                    :quant 8
                                    :unit (d / dollar))
                              :ARG2 (o / ounce)))
                  :op2 (l3 / low-04
                        :ARG1 m
                        :ARG1-of (s2 / see-01
                              :time (c2 / crisis
                                    :mod (f / finance)
                                    :mod (g / globe)
                                    :time (d2 / date-entity
                                          :year 2008)))))))"
"(m / multi-sentence
      :snt1 (d / disgust-01
            :ARG0 (a / allow-01
                  :ARG1 (r / resell-01
                        :ARG0 (p / person)
                        :ARG1 (p2 / paper
                              :purpose (t / toilet))
                        :ARG3 (c / company
                              :name (n / name
                                    :op1 ""eBay""))
                        :ARG4 (m2 / monetary-quantity
                              :ARG2-of (p3 / price-01)
                              :ARG1-of (ii / inflate-01)))))
      :snt2 (n2 / need-01
            :ARG1 (e / end-01
                  :ARG1 (t2 / this)
                  :time (n3 / now)
                  :time (b / before
                        :op1 (h / have-degree-91
                              :ARG2 (l / late)
                              :ARG3 (t3 / too)))))
      :snt3 (a2 / affect-01
            :ARG0 (t4 / this)
            :ARG1 (ii2 / item
                  :mod (s / supermarket)
                  :mod (o / other))
            :mod (a3 / as-well)))"
"(f / face-01
      :ARG0 (s / store
            :mod (g / grocery)
            :location (a / across
                  :op1 (c / country
                        :name (n / name
                              :op1 ""America""))))
      :ARG1 (s2 / shelf
            :ARG1-of (e / empty-02))
      :ARG1-of (c2 / cause-01
            :ARG0 (o / outbreak-29
                  :ARG1 (d / disease
                        :name (n2 / name
                              :op1 ""Covid-19"")))))"
"(a / allow-01
      :ARG0 (y / you)
      :ARG1 (b / boost-01
            :ARG0 (p / person)
            :ARG1 (p2 / price-01)
            :location (c / company
                  :name (n / name
                        :op1 ""Amazon""))
            :time (o / outbreak-29
                  :ARG1 (d / disease
                        :name (n2 / name
                              :op1 ""Coronavirus""))))
      :ARG1-of (c2 / cause-01
            :ARG0 (a2 / amr-unknown)))"
"(m / multi-sentence
      :snt1 (h / have-03
            :polarity -
            :ARG0 (s / store
                  :mod (g / grocery))
            :ARG1 (c / cream
                  :mod (s2 / sour)
                  :location (b / bottle
                        :ARG1-of (s3 / squeeze-01)))
            :time (t / today))
      :snt2 (h2 / have-03
            :ARG0 (t2 / they)
            :ARG1 (a / and
                  :op1 (c2 / cream
                        :ARG1-of (r / regular-03))
                  :op2 (c3 / cream
                        :ARG1-of (l / light-06))
                  :op3 (c4 / cream
                        :mod (c5 / chive)))
            :ARG1-of (c6 / contrast-01
                  :ARG2 (b2 / bottle
                        :polarity -
                        :ARG1-of (s4 / squeeze-01)
                        :mod (f / frickin)))))"
"(ii / increase-01
      :ARG1 (p / price-01
            :ARG1 (p2 / product
                  :mod (p3 / petroleum)))
      :time (a / after
            :op1 (s / series
                  :consist-of (r / roll-back-05
                        :ARG1-of (c / cause-01
                              :ARG0 (e / effect-03
                                    :ARG0 (l / law
                                          :name (n / name
                                                :op1 ""COVID-19""))))))))"
"(m / multi-sentence
      :snt1 (b / broadcast-program
            :name (n / name
                  :op1 ""ABCNews""))
      :snt2 (a / and
            :op1 (d / difficult
                  :domain (d2 / day
                        :part-of (l / life
                              :poss (p / person
                                    :ARG0-of (w / work-01
                                          :ARG2 (s / supermarket)))
                              :time (p2 / pandemic
                                    :mod (c / coronavirus)))))
            :op2 (t / tire-01
                  :ARG0 d2)))"
"(c / cause-01
      :ARG0 (c2 / close-01
            :ARG1 (b / border
                  :location (a / and
                        :op1 (s / state
                              :name (n / name
                                    :op1 ""Andhra""
                                    :op2 ""Pradesh""))
                        :op2 (s2 / state
                              :name (n2 / name
                                    :op1 ""Telangana"")))
                  :mod (ii / interstate)))
      :ARG1 (d / drop-01
            :ARG1 (p / price-01
                  :ARG1 (p2 / paddy)))
      :location s2)"
"(s / see-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (t / thing
            :ARG2-of (l / list-01
                  :ARG0 (w / we)))
      :topic (a / and
            :op1 (h / hour
                  :mod (s2 / store
                        :mod (g / grocery)
                        :ARG1-of (l2 / local-02)))
            :op2 (h2 / hour
                  :mod (s3 / senior)
                  :ARG1-of (r / reserve-01)))
      :medium (u / url-entity
            :value ""https://www.wral.com/coronavirus/grocery-stores-adjust-hours-to-allow-seniors-to-shop-in-peace/19482871/""))"
"(s / story
      :ARG0-of (ii / inquire-01
            :ARG1 (a / and
                  :op1 (t / truth-value
                        :polarity-of (p / possible-01
                              :ARG1 (l / live-01
                                    :ARG0 (c / coronavirus)
                                    :location (r / refrigerator)
                                    :duration (t2 / temporal-quantity
                                          :quant (a2 / amr-unknown)
                                          :op2-of a))))
                  :condition p)))"
"(a / and
      :op2 (s / store
            :name (n / name
                  :op1 ""TheApp_Store"")))"
"(a / ask-02
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG1 (s / state
                        :name (n / name
                              :op1 ""Utah""))
                  :ARG2 (g / governor)))
      :ARG1 (w / wear-01
            :ARG0 (p2 / person
                  :mod s)
            :ARG1 (m / mask
                  :ARG0-of (p3 / protect-01)
                  :ARG1-of (p4 / personal-02))
            :time (e / enter-01
                  :ARG0 p2
                  :ARG1 (s2 / store
                        :mod (r / retail-01))
                  :mod (a2 / any)))
      :ARG2 p2)"
"(s / say-01
      :ARG0 (o / organization
            :name (n / name
                  :op1 ""Trade""
                  :op2 ""Promotion""
                  :op3 ""Council""
                  :op4 ""of""
                  :op5 ""India""))
      :ARG1 (a / and
            :op1 (s2 / surge-01
                  :ARG1 (d / demand-01
                        :ARG1 (p / product
                              :mod (f / food))
                        :location (m / market
                              :mod (g / globe)))
                  :ARG1-of (c / cause-01
                        :ARG0 (o2 / outbreak-29
                              :ARG1 (c2 / coronavirus))))
            :op2 (t / tap-02
                  :ARG0 (c3 / country
                        :name (n2 / name
                              :op1 ""India""))
                  :ARG1 s2
                  :purpose (b / boost-01
                        :ARG0 c3
                        :ARG1 (e / export-01
                              :ARG0 c3))
                  :mod (p2 / potential)))
      :time (d2 / date-entity
            :weekday (m2 / monday)))"
"(m / multi-sentence
      :snt1 (t / tell-01
            :polarity -
            :ARG0 (d / data
                  :source (p / phone
                        :mod (c / cell)))
            :ARG1 (s / story
                  :mod (w / whole)))
      :snt2 (d2 / drive-01
            :ARG0 (ii / i)
            :ARG1 (s2 / store
                  :mod (g / grocery))
            :duration (t2 / temporal-quantity
                  :quant 15
                  :unit (m2 / minute))
            :location (s3 / state
                  :name (n / name
                        :op1 ""Virginia"")))
      :snt3 (d3 / drive-01
            :duration (t3 / temporal-quantity
                  :quant 25
                  :unit (m3 / minute))
            :destination (t4 / take-out-11
                  :location (r / restaurant)))
      :snt4 (d4 / drive-01
            :ARG0 (p2 / person
                  :mod (c2 / country
                        :name (n2 / name
                              :op1 ""America""))
                  :mod (r2 / rural))
            :medium (a / and
                  :op1 (p3 / publication
                        :name (n3 / name
                              :op1 ""smerconish""))
                  :op2 (p4 / publication
                        :name (n4 / name
                              :op1 ""CNN""))
                  :op3 (p5 / publication
                        :name (n5 / name
                              :op1 ""Covid_19""))
                  :op4 (p6 / publication
                        :name (n6 / name
                              :op1 ""Stayathome"")))))"
"(a / appropriate-02
      :polarity -
      :ARG1 (ii / inflate-01
            :ARG1 (p / price-01
                  :ARG1 (l / laptop))
            :time (c / crisis
                  :name (n / name
                        :op1 ""Corona""
                        :op2 ""Crisis""))))"
"(ii / impact-01
      :ARG0 (g / globalize-01)
      :ARG1 (s / sector
            :mod (g2 / good
                  :mod (p / person
                        :ARG0-of (c / consume-01)))))"
"(p / possible-01
      :ARG1 (f / find-01
            :ARG0 (ii / i)
            :ARG1 (s / soda
                  :mod (c / club))
            :time (f2 / final)
            :location (s2 / supermarket
                  :ARG1-of (l / local-02)))
      :ARG1-of (c2 / cause-01
            :ARG0 (p2 / party-01
                  :ARG0 (p3 / person
                        :location (a / area
                              :poss ii))
                  :mod (c3 / cocktail)
                  :time (n / no-longer))))"
"(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (e / expect-01
                  :ARG0 (o / one)
                  :ARG1 (r / rise-01
                        :ARG1 (t / terminate-01
                              :ARG1 (d / deal-01
                                    :ARG2 (a / and
                                          :op1 (c / company)
                                          :op2 (c2 / company))))
                        :ARG1-of (c3 / cause-01
                              :ARG0 (r2 / rout-02
                                    :ARG1 (m2 / market
                                          :mod (c4 / coronavirus))
                                    :ARG0-of (d2 / drop-01
                                          :ARG1 (p2 / price-01
                                                :ARG1 (s / stock
                                                      :poss (c5 / company)))))))))
      :snt2 (c6 / contrast-01
            :ARG2 (s2 / see-01
                  :polarity -
                  :ARG0 (w / we)
                  :ARG1 (t2 / that)
                  :time (y / yet))))"
"(r / rise-01
      :ARG1 (p / price-01
            :ARG1 (s / stock
                  :poss (g / group
                        :mod (w / watch
                              :mod (l / luxury)))))
      :time (s2 / slow-01
            :ARG1 (s3 / spread-02
                  :ARG1 (v / virus
                        :name (n / name
                              :op1 ""Coronavirus"")))))"
"(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Gantz""))
      :ARG1 (l / let-01
            :ARG0 (p2 / product
                  :name (n2 / name
                        :op1 ""Epidemic""
                        :op2 ""Safety""
                        :op3 ""Filter"")
                  :poss (c / company
                        :name (n3 / name
                              :op1 ""Comscore"")))
            :ARG1 (o / opt-01
                  :ARG0 (b / brand)
                  :ARG1 (o2 / out-06
                        :ARG1 b
                        :ARG2 (n4 / news
                              :mod (v / virus))))))"
"(c / cause-01
      :ARG0 (o / obligate-01
            :ARG1 (ii / i)
            :ARG2 (c2 / cancel-01
                  :ARG0 ii
                  :ARG1 (p / plan-01
                        :ARG0 ii
                        :ARG1 (h / holiday
                              :mod (b / big))
                        :mod (a / all))
                  :time (d / date-entity
                        :month 4))
            :ARG1-of (c3 / cause-01
                  :ARG0 (e / event
                        :name (n / name
                              :op1 ""Covid_19""))))
      :ARG1 (s / shop-01
            :ARG0 ii
            :medium (o2 / online)
            :quant (s2 / some)))"
"(t / tip-05
      :quant 5
      :ARG0 (p / psychologist
            :mod (p2 / person
                  :ARG0-of (c / consume-01)))
      :ARG2 (r / recommend-01
            :ARG1 (r2 / respond-01
                  :ARG0 (b / brand)
                  :ARG1 (c2 / coronavirus)))
      :location (h / here))"
"(k / keep-up-05
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (d / date-01
            :ARG1 (d2 / disrupt-01
                  :ARG0 (v / virus
                        :mod (c / coronavirus))
                  :ARG1 (a / and
                        :op1 (c2 / company
                              :ARG0-of (r / retail-01))
                        :op2 (c3 / chain
                              :ARG0-of (s / supply-01))
                        :op3 (c4 / company
                              :mod (g / good
                                    :mod (p / person
                                          :ARG0-of (c5 / consume-01)))))
                  :mod (l / last)))
      :manner (s2 / sign-up-03
            :ARG0 y
            :ARG3 (n / newsletter
                  :name (n2 / name
                        :op1 ""Consumers""
                        :op2 ""Edge""))))"
"(c / cause-01
      :ARG0 (ii / impact-01
            :ARG0 (t / thing
                  :name (n / name
                        :op1 ""COVID-19""))
            :ARG1 (ii2 / industry
                  :mod (a / auto)
                  :ARG0-of (c2 / consume-01
                        :ARG1 (s / steel
                              :ARG1-of (f / flat-06))
                        :ARG1-of (k / key-02)))
            :manner (h / heavy))
      :ARG1 (h2 / hit-01
            :ARG1 (s2 / steel
                  :ARG1-of f)
            :time (d / date-entity
                  :year 2020)
            :ARG1-of (h3 / have-degree-91
                  :ARG2 (h4 / hard-04
                        :ARG1 h2)
                  :ARG3 (m / more)
                  :ARG4 (s3 / steel
                        :ARG1-of (l / long-03)))))"
"(k / know-01
      :polarity -
      :ARG0 (w / we)
      :ARG1 (r / relate-01
            :ARG1 (d / donate-01
                  :ARG2 (c / collection
                        :mod (m / museum)
                        :poss w)
                  :time (b / before
                        :op1 (n / now)
                        :quant (m2 / multiple
                              :op1 (t / temporal-quantity
                                    :quant 1
                                    :unit (y / year)))))
            :ARG2 (ii / item
                  :ARG1-of (d2 / demand-01
                        :ARG1-of (h / high-02)
                        :time (p / pandemic
                              :mod (c2 / coronavirus)
                              :time (c3 / current))))))"
"(p / person
      :name (n / name
            :op1 ""Frank""
            :op2 ""McPherson"")
      :time (d / date-entity
            :day 15
            :month 5
            :year 2020))"
"(m / multi-sentence
      :snt1 (p / product
            :name (n / name
                  :op1 ""Clorox""
                  :op2 ""Scentiva""
                  :op3 ""Toilet""
                  :op4 ""Bowl""
                  :op5 ""Cleaner"")
            :domain (t / this)
            :quant (m2 / mass-quantity
                  :quant 24
                  :unit (o / ounce))
            :ARG1-of (s / scent-02
                  :ARG2 (l / lavender)))
      :snt2 (a / and
            :op1 (d / disinfectant)
            :op2 (s2 / sanitize-01)
            :domain (ii / it)))"
"(m / multi-sentence
      :snt1 (c / close-01
            :ARG1 (s / store
                  :ARG0-of (r / retail-01)
                  :poss (w / we))
            :time (u / until
                  :op1 (r2 / resolve-01
                        :ARG1 (ii / issue-02
                              :ARG0 (p / product
                                    :name (n / name
                                          :op1 ""CODID""
                                          :op2 19))))))
      :snt2 (p2 / possible-01
            :ARG1 (p3 / purchase-01
                  :ARG0 (y / you)
                  :mod (s2 / still)
                  :medium (o / online
                        :example (a / and
                              :op1 (u2 / url-entity
                                    :value ""https://t.co/TOT5rf758o"")
                              :op2 (u3 / url-entity
                                    :value ""https://t.co/xc3ISkm4cM""))))))"
"(r / report-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Tim_Dodson""))
      :ARG1 (f / flock-01
            :ARG0 (p2 / person)
            :destination (s / store
                  :location (a / area))
            :purpose (p3 / purchase-01
                  :ARG0 p2
                  :ARG1 (a2 / and
                        :op1 (s2 / supply-01
                              :ARG1 (c / clean-01))
                        :op2 (s3 / sanitizer
                              :mod (h / hand))
                        :op3 (f2 / food)
                        :op4 (p4 / paper
                              :mod (t / toilet))
                        :op5 (g / good
                              :mod (o / other))))
            :time (c2 / come-out-09
                  :ARG1 (n2 / news
                        :topic (c3 / case-04
                              :name (n3 / name
                                    :op1 ""COVID-19"")
                              :location (r2 / region)
                              :ARG1-of (c4 / confirm-01)
                              :ord (o2 / ordinal-entity
                                    :value 1)))
                  :source (c5 / county
                        :name (n4 / name
                              :op1 ""Sullivan""))
                  :time (w / week
                        :mod (l / last)))))"
"(a / and
      :op1 (n / name-01
            :ARG1 (ii / i)
            :ARG2 (p / person
                  :name (n2 / name
                        :op1 ""Bennett"")))
      :op2 (ii2 / involve-01
            :polarity -
            :ARG1 ii)
      :time (a2 / argue-02
            :ARG0 (p2 / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (y / you)
                        :ARG2 (f / friend)))
            :ARG1 (p3 / person
                  :ARG0-of (h2 / have-rel-role-91
                        :ARG1 p2
                        :ARG2 (g / girlfriend)))))"
(a / amr-empty)
"(d / distancing
      :polarity -
      :mod (s / social)
      :domain (s2 / stand-01
            :ARG1 (s3 / store
                  :mod (w / whole))
            :ARG2 (f / front
                  :mod (u / up))
            :purpose (w2 / wait-01
                  :ARG1 s3
                  :ARG2 (c / check-out-09
                        :ARG1 s3
                        :location (s4 / store
                              :ARG1-of (ii / include-91
                                    :ARG2 (s5 / store
                                          :poss (y / you)
                                          :ARG1-of (h / have-degree-91
                                                :ARG2 (b / busy-01
                                                      :ARG1 s5)
                                                :ARG3 (m / most))))
                              :ARG0-of (h2 / have-03
                                    :ARG1 (r / register
                                          :quant 4
                                          :ARG1-of (o / open-01)
                                          :mod (o2 / only))))))))"
"(a / and
      :op1 (c / cut-02
            :ARG0 (ii / i)
            :ARG1 (t / trip-03
                  :ARG0 ii
                  :mod (b / business))
            :ARG2 (s / short-07
                  :ARG1 t)
            :purpose (g / get-04
                  :polarity -
                  :ARG1 ii
                  :ARG2 (s2 / strand-01
                        :ARG1 ii
                        :location (r / relative-position
                              :op1 (h / home)
                              :quant (f / far)))))
      :op2 (p / pack-01
            :ARG1 (a2 / airport)))"
"(a / and
      :op1 (t / try-01
            :ARG0 (ii / i)
            :ARG1 (g / go-02
                  :ARG0 ii
                  :ARG4 (s / store
                        :mod (g2 / grocery))
                  :ARG1-of (q / quick-02
                        :ARG2-of (h / have-degree-91
                              :ARG1 g
                              :ARG3 (e / equal)
                              :ARG4 (p / possible-01
                                    :ARG1 g)))))
      :op2 (b / burn-01
            :ARG0 ii
            :ARG1 (e2 / everything
                  :ARG1-of (b2 / buy-01
                        :ARG0 ii
                        :mod (j / just)))
            :time (t2 / then)))"
"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (a / agree-01
                  :ARG0 (ii / i)
                  :ARG1 (r / recommend-01
                        :ARG1 (a2 / avoid-01
                              :ARG0 (w / we)
                              :ARG1 (h / hoard-01
                                    :ARG0 w
                                    :ARG1 (a3 / and
                                          :op1 (f / food)
                                          :op2 (t / thing
                                                :ARG1-of (n / need-01)))))))
            :ARG2 (t2 / trigger-01
                  :ARG0 (s / see-01
                        :ARG0 (y / you
                              :part (m2 / mind))
                        :ARG1 (s2 / shelf
                              :ARG1-of (e / empty-02)
                              :location (s3 / store
                                    :mod (g / grocery))))
                  :ARG1 (s4 / something)
                  :location m2))
      :snt2 (l / limit-01
            :ARG1 (ii2 / i
                  :mod (p / person
                        :ARG0-of (h2 / have-03
                              :ARG1 (a4 / and
                                    :op1 (d / disability)
                                    :op2 (c2 / car
                                          :polarity -)))))
            :ARG2 (b / buy-01
                  :ARG0 ii2
                  :ARG1 (t3 / thing
                        :ARG1-of (c3 / carry-01
                              :ARG0 ii2
                              :ARG1-of (p2 / possible-01))))
            :ARG1-of (c4 / cause-01
                  :ARG0 (p3 / possible-01))
            :snt3 p3
            :ARG1 (c5 / carry-01
                  :ARG0 (ii3 / i)
                  :ARG1 (f2 / food
                        :ARG1-of (w2 / worth-01
                              :ARG2 (t4 / temporal-quantity
                                    :quant 4
                                    :unit (d2 / day))))
                  :mod (o / only))))"
"(d / dismiss-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Trump""))
      :ARG1 (q / question-01
            :ARG1 (t / thing
                  :ARG2-of (p2 / price-01
                        :ARG1 (o / oil))))
      :time (p3 / possible-01
            :polarity -
            :ARG1 (n2 / name-01
                  :ARG0 (p4 / person
                        :ARG0-of (r / report-01))
                  :ARG1 (t2 / thing
                        :ARG2-of (p5 / price-01))
                  :medium (t3 / tweet-01)))
      :medium (t4 / tweet-01))"
"(m / multi-sentence
      :snt1 (j / join-04
            :polarity -
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (c / crowd
                  :consist-of (p / person
                        :ARG0-of (b / buy-01
                              :ARG1 (g / grocery)
                              :manner (p2 / panic-01)))))
      :snt2 (c2 / check-out-05
            :mode imperative
            :ARG0 (y2 / you)
            :ARG1 (s / store
                  :mod (g2 / grocery)
                  :mod (a / alternative)
                  :mod (t / this)
                  :ARG1-of (t2 / try-01
                        :ARG0 y2
                        :ARG1-of (p3 / possible-01)
                        :ARG1-of (ii / instead-of-91)))))"
"(m / multi-sentence
      :snt1 (t / talk-01
            :ARG0 (ii / i)
            :ARG2 (a / and
                  :op1 (p / person
                        :ARG0-of (o / operate-01
                              :ARG1 (t2 / till
                                    :mod (s / supermarket))))
                  :op2 (p2 / person
                        :ARG0-of (p3 / post-04)))
            :concession (o2 / occurrence
                  :ARG1-of (r / regular-02)))
      :snt2 (c / contrast-01
            :ARG1 (b / become-01
                  :ARG1 (y / you)
                  :ARG2 (u / use-02
                        :ARG0 y
                        :ARG1 (ii2 / isolate-01
                              :degree (l / level)))
                  :time (s2 / solo
                        :domain y))
            :ARG2 (m2 / make-02
                  :ARG0 (a2 / and
                        :op1 (p4 / person
                              :name (n / name
                                    :op1 ""Covid_19""))
                        :op2 (w / work-01
                              :ARG0 y
                              :location (h / home))
                        :op3 (d / distance-01
                              :ARG1 y
                              :ARG2 (s3 / society)))
                  :ARG1 (a3 / appreciate-02
                        :ARG0 y
                        :ARG1 (ii3 / interact-01
                              :ARG0 (h2 / human)
                              :mod (a4 / any))))))"
"(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Mr""
                  :op2 ""Bharat""
                  :op3 ""Bhushan""
                  :op4 ""Ashu"")
            :ARG0-of (h / have-org-role-91
                  :ARG2 (m / minister
                        :topic (a / and
                              :op1 (f / food)
                              :op2 (s2 / supply-01
                                    :mod (c / civil))
                              :op3 (a2 / affair-02
                                    :ARG2 (c2 / consume-01))))))
      :ARG1 (d / deliver-01
            :ARG1 (c3 / cylinder
                  :quant 1972605
                  :mod (g / gas
                        :mod (p2 / petroleum)))
            :location (s3 / state)
            :time (b / before
                  :op1 (n2 / now)
                  :duration (t / temporal-quantity
                        :quant 4
                        :unit (d2 / day))))
      :time (a3 / assure-01
            :ARG0 p
            :ARG2 (s4 / supply-01
                  :ARG1 (c4 / cylinder
                        :mod g)
                  :manner (d3 / door-to-door))))"
"(c / cost-01
      :ARG1 (s / slice-01
            :ARG1 (p / potato))
      :ARG2 (m / monetary-quantity
            :quant 20
            :unit (c2 / cent)))"
"(f / foresee-01
      :polarity -
      :ARG0 (o / organization
            :name (n / name
                  :op1 ""Nunavut""))
      :ARG1 (s / short-06
            :ARG2 (f2 / fuel)
            :mod (a / any))
      :ARG1-of (c / cause-01
            :ARG0 (p / pandemic
                  :name (n2 / name
                        :op1 ""COVID-19""))))"
"(m / multi-sentence
      :snt1 (c / close-01
            :ARG1 (s / shop
                  :location (h / high-street)
                  :poss (t / they)))
      :snt2 (b / build-01
            :ARG0 (c2 / company
                  :name (n / name
                        :op1 ""Redshift""))
            :ARG1 (t2 / thing
                  :ARG0-of (c3 / connect-01
                        :ARG1 (s2 / store)
                        :ARG2 (s3 / store))
                  :mod (o / online)
                  :ARG1-of (b2 / brilliant-01
                        :ARG2 (b3 / business
                              :mod (s4 / small)
                              :ARG0-of (s5 / seek-01
                                    :ARG1 (c4 / continue-01
                                          :ARG0 b3
                                          :ARG1 (t3 / trade-01
                                                :ARG0 b3)
                                          :time c)))))
            :time (r / recent)))"
"(m / multi-sentence
      :snt1 (c / change-01
            :ARG1 (b / behave-01
                  :ARG0 (p / person
                        :ARG0-of (c2 / consume-01)))
            :ARG2-of (r / result-01
                  :ARG1 (l / law
                        :name (n / name
                              :op1 ""COVID-19"")))
            :ARG1-of (c3 / cause-01
                  :ARG0 (s / shop-01
                        :ARG0 (p2 / person
                              :quant (n2 / number
                                    :ARG1-of (ii / increase-01)))
                        :medium (o / online)
                        :purpose (m2 / meet-01
                              :ARG0 p2
                              :ARG1 (n3 / need-01
                                    :ARG0 p2
                                    :frequency (r2 / rate-entity-91
                                          :ARG3 (t / temporal-quantity
                                                :quant 1
                                                :unit (d / day))))))))
      :snt2 (v / visualize-01
            :ARG0 (w / we)
            :ARG1 (c4 / consist-01
                  :ARG1 (b2 / basket
                        :mod (e / essential))
                  :ARG2 (t2 / thing))
            :ARG1-of (b3 / base-02
                  :ARG2 (d2 / data
                        :poss w))))"
"(c / contrast-01
      :ARG1 (n / need-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (s / skip-01
                  :ARG0 ii
                  :ARG1 (q / queue-01
                        :location (s2 / supermarket)))
            :ARG1-of (c2 / cause-01
                  :ARG0 (p / person
                        :ARG0-of (w / work-01)
                        :ARG1-of (k / key-02)
                        :domain ii)))
      :ARG2 (a / and
            :op1 (s3 / skip-01
                  :ARG0 (p2 / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 ii
                              :ARG2 (c3 / colleague))
                        :ARG0-of (s4 / shift-01))
                  :ARG1 q)
            :op2 (h2 / have-purpose-91
                  :ARG1 s3
                  :ARG2 s3)))"
"(l / lose-02
      :ARG0 (c / company
            :name (n / name
                  :op1 ""COCOBOD"")
            :ARG0-of (r / regulate-01
                  :ARG1 (s / sector
                        :mod (c2 / cocoa)
                        :location (c3 / country
                              :name (n2 / name
                                    :op1 ""Ghana"")))))
      :ARG1 (m / monetary-quantity
            :quant 1000000000
            :unit (d / dollar))
      :ARG1-of (c4 / cause-01
            :ARG0 (d2 / drop-01
                  :ARG1 (t / thing
                        :ARG2-of (p / price-01
                              :ARG1 (c5 / cocoa))))))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (e / evolve-01
                  :ARG1 (d / data
                        :mod (t / this))
                  :ARG1-of (q / quick-02)
                  :ARG0-of (c / cause-01
                        :ARG1 (p / provide-01
                              :ARG0 (w / we)
                              :ARG1 (u / update-02
                                    :ARG0 w
                                    :frequency (r / rate-entity-91
                                          :ARG3 (t2 / temporal-quantity
                                                :quant 1
                                                :unit (w2 / week)))))))
            :ARG2 (p2 / person
                  :name (n / name
                        :op1 ""CARAVAN_US"")))
      :snt2 (p3 / provide-01
            :ARG0 (l / link
                  :location (b / below))
            :ARG1 (ii2 / information
                  :ARG1-of (h / have-degree-91
                        :ARG2 (r2 / recent)
                        :ARG3 (m2 / most)))))"
"(ii / interview-01
      :ARG0 (y / you)
      :ARG1 (s / sanitize-01
            :ARG1 (h / hand))
      :polarity (a / amr-unknown)
      :time (d / date-entity
            :year 2020)
      :ARG1-of (c / cause-01
            :ARG0 (l / law
                  :name (n / name
                        :op1 ""COVID-19""))))"
"(a / and
      :op1 (s / see-01
            :ARG0 (ii / i)
            :ARG1 (h / he)
            :location (s2 / supermarket)
            :time (b / before
                  :op1 (n / now)
                  :quant (t / temporal-quantity
                        :quant 1
                        :unit (h2 / hour))))
      :op2 (k / kid-01
            :ARG0 ii
            :mod (j / just)))"
"(r / release-01
      :ARG0 (g / government-organization
            :name (n / name
                  :op1 ""Consumer""
                  :op2 ""Financial""
                  :op3 ""Protection""
                  :op4 ""Bureau""))
      :ARG1 (r2 / resource)
      :ARG2 (p / person
            :ARG0-of (c / consume-01))
      :time (p2 / pandemic
            :name (n2 / name
                  :op1 ""COVID-19"")))"
"(m / multi-sentence
      :snt1 (l / look-02
            :ARG0 (s / store)
            :ARG1 (g / good-02)
            :time (t / today))
      :snt2 m
      :snt3 (f / food
            :quant (p / plenty))
      :snt4 (l2 / limit-01
            :ARG1 (s2 / stock-01
                  :ARG1 (p2 / paper)))
      :snt5 (a / and
            :op1 (c / check-01
                  :polarity -
                  :ARG0 (ii / i)
                  :ARG1 (s3 / sanitizer
                        :mod (h / hand)))
            :op2 (m2 / make-01
                  :ARG0 (ii2 / i)
                  :ARG1 (s4 / sanitizer
                        :mod h)
                  :time (b / before
                        :quant (w / while))))
      :snt6 (p3 / part
            :mod (o / only)
            :ARG0-of (a2 / annoy-01)
            :domain (p4 / person
                  :quant (f2 / few)
                  :ARG1-of (g2 / get-03
                        :ARG2 (c2 / close-10
                              :ARG1 p4
                              :ARG2 ii2))))
      :snt7 (s5 / stay-01
            :mode imperative
            :ARG1 (y / you)
            :ARG3 (a3 / away)
            :mod (e / ew
                  :mode expressive)))"
"(a / and
      :op1 (p / produce-01
            :ARG0 (c / company
                  :location (c2 / county
                        :name (n / name
                              :op1 ""York"")))
            :ARG1 (s / sanitizer
                  :beneficiary (h / hand)))
      :op2 (d / donate-01
            :ARG0 c
            :ARG1 s
            :ARG2 (p2 / person
                  :ARG0-of (r / respond-01
                        :ord (o / ordinal-entity
                              :value 1)))))"
"(m / measure-02
      :ARG0 (g / government-organization
            :name (n / name
                  :op1 ""Ministry""
                  :op2 ""of""
                  :op3 ""Commerce""
                  :op4 ""and""
                  :op5 ""Industry"")
            :poss (c / country
                  :name (n2 / name
                        :op1 ""Qatar"")))
      :ARG1 (c2 / control-01
            :ARG0 g
            :ARG1 (t / thing
                  :ARG2-of (p / price-01
                        :ARG1 (a / and
                              :op1 (s / sanitizer
                                    :mod (h / hand))
                              :op2 (w / wipe
                                    :mod h)
                              :op3 (s2 / soap)))))
      :time (c3 / continue-01
            :ARG0 c
            :ARG1 (c4 / combat-01
                  :ARG0 c
                  :ARG1 (s3 / spread-02
                        :ARG1 (c5 / coronavirus
                              :name (n3 / name
                                    :op1 ""COVID-19"")
                              :mod (n4 / novel))))))"
"(s / soar-01
      :ARG1 (p / price-01
            :ARG1 (e / equipment
                  :ARG3-of (p2 / protect-01
                        :ARG1-of (p3 / personal-02))))
      :location (s2 / state
            :name (n / name
                  :op1 ""Anambra""))
      :ARG1-of (c / cause-01
            :ARG0 (l / law
                  :name (n2 / name
                        :op1 ""COVID-19""))))"
"(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""jatinahuja26""))
      :ARG1 (l / lead-03
            :ARG0 (l2 / lockdown
                  :location (n2 / nationwide))
            :ARG1 (c / company)
            :ARG2 (u / understand-01
                  :ARG0 c
                  :ARG1 (ii / important-01
                        :ARG1 (m / market-01
                              :ARG2 (c2 / consumer
                                    :mod (v / virtual))
                              :manner (e / experience-01))))))"
"(c / contrast-01
      :ARG1 (n / need-01
            :ARG0 (ii / i)
            :ARG1 (g / go-02
                  :ARG0 ii
                  :ARG4 (b / bathroom)))
      :ARG2 (h / have-03
            :polarity -
            :ARG0 ii
            :ARG1 (p / paper
                  :purpose (t / toilet)
                  :mod (a / any))))"
"(s / struggle-02
      :ARG0 (r / retailer
            :mod (c / commerce
                  :mod (e / electronics))
            :ARG1-of (h / have-degree-91
                  :ARG2 (l / large)
                  :ARG3 (m / most)))
      :ARG1 (k / keep-up-05
            :ARG0 r
            :ARG1 (d / demand-01
                  :ARG0 (p / person
                        :ARG0-of (c2 / consume-01))
                  :mod (p2 / precedent
                        :polarity -)))
      :time (p3 / pandemic
            :ARG1-of (g / go-on-15)))"
"(c / cause-01
      :ARG0 (a / allow-01
            :polarity -
            :ARG0 (ii / individualism
                  :mod (r / rugged)
                  :poss (c2 / country
                        :name (n / name
                              :op1 ""America"")))
            :ARG1 (p / put-01
                  :ARG0 (p2 / person
                        :mod (s / some))
                  :ARG1 (p3 / person
                        :mod (o / other))
                  :ARG2 (a2 / above
                        :op1 p2)))
      :ARG1 (e / end-up-03
            :ARG1 c2
            :ARG2 (o2 / outpace-01
                  :ARG0 c2
                  :ARG1 (a3 / and
                        :op1 (c3 / country
                              :name (n2 / name
                                    :op1 ""Italy""))
                        :op2 (c4 / country
                              :name (n3 / name
                                    :op1 ""China""))))))"
"(s / see-01
      :ARG0 (ii / i)
      :ARG1 (c / contrast-01
            :ARG1 (c2 / cry-02
                  :ARG0 (w / woman)
                  :ARG1 (l / let-01
                        :ARG0 (p / police)
                        :ARG1 (b / buy-01
                              :ARG0 w
                              :ARG1 (g / grocery)))
                  :ARG2 p)
            :ARG2 (a / and
                  :op1 (s2 / say-01
                        :ARG0 (o / officer)
                        :ARG1 (p2 / positive
                              :domain (p3 / person
                                    :ARG0-of (h / have-rel-role-91
                                          :ARG1 w
                                          :ARG2 (h2 / husband)))
                              :prep-for (p4 / product
                                    :name (n / name
                                          :op1 ""COVID-19""))))
                  :op2 (s3 / scream-01
                        :ARG0 w
                        :ARG1 (n2 / need-01
                              :ARG0 w
                              :ARG1 (e / eat-01
                                    :ARG0 w))))))"
"(h / have-03
      :ARG0 (p / person
            :mod (c / country
                  :name (n / name
                        :op1 ""America""))
            :ARG1-of (ii / include-91
                  :ARG3 (l / less-than
                        :op1 (p2 / percentage-entity
                              :value 30)))
            :ARG2-of ii)
      :ARG1 (j / job
            :ARG0-of (a / allow-01
                  :ARG1 (w / work-01
                        :ARG0 p
                        :location (h2 / home)))))"
"(m / multi-sentence
      :snt1 (o / obligate-01
            :ARG2 (b / be-located-at-91
                  :ARG1 (s / store)
                  :ARG2 (r / relative-position
                        :quant (d / distance-quantity
                              :quant 6
                              :unit (f / foot))
                        :direction (a / apart))))
      :snt2 (p / possible-01
            :ARG1 (g / go-02
                  :ARG0 (y / you)
                  :ARG4 s
                  :purpose (a2 / and
                        :op1 (g2 / grocery)
                        :op2 (g3 / gas)
                        :op3 (w / work-01)
                        :op4 (b2 / bank-01))))
      :snt3 (g4 / gather-03
            :polarity -
            :ARG0 (p2 / person)
            :location (o2 / outside
                  :op1 (h / household))
            :mod (j / just))
      :snt4 (w2 / wear-01
            :mode imperative
            :ARG0 y
            :ARG1 (a3 / and
                  :op1 (m2 / mask)
                  :op2 (p3 / protect-01
                        :ARG1 (e / eye)
                        :ARG2 (v / virus
                              :mod (c / coronavirus))))))"
"(u / use-01
      :ARG0 (p / person)
      :ARG1 (a / and
            :op1 (w / wipe)
            :op2 (t / t-shirt)
            :op3 (m / material
                  :mod (o / other)))
      :ARG2 (r / result
            :ARG1-of (p2 / predict-01
                  :ARG1-of (p3 / possible-01)))
      :ARG1-of (c / cause-01
            :ARG0 (s / short-06
                  :ARG2 (p4 / paper
                        :purpose (t2 / toilet)))))"
"(m / multi-sentence
      :snt1 (c / change-01
            :ARG0 (p / person
                  :ARG0-of (s / scam-01))
            :ARG1 (t / tactic
                  :poss p)
            :manner (c2 / constant))
      :snt2 (l / learn-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (t2 / thing
                  :manner-of (p2 / possible-01
                        :ARG1 (p3 / protect-01
                              :ARG0 y
                              :ARG1 y
                              :ARG2 (f / fall-07
                                    :ARG1 y
                                    :ARG2 (p4 / prey-01
                                          :ARG0 (s2 / scheme-01
                                                :ARG0 p)
                                          :ARG1 y)))))))"
"(s / study-01
      :ARG1 (ii / impact-01
            :ARG0 (p / program
                  :name (n / name
                        :op1 ""COVID""
                        :op2 19))
            :ARG1 (a / and
                  :op1 (s2 / sentiment
                        :mod (p2 / person
                              :ARG0-of (c / consume-01)))
                  :op2 (a2 / activity-06
                        :ARG0 p2)))
      :ARG0-of (s3 / shed-light-10
            :degree (v / very))
      :domain (t / this))"
"(ii / important-01
      :ARG1 (c / continue-01
            :ARG0 (w / we)
            :ARG1 (b / build-01
                  :ARG0 w
                  :ARG1 (r / relation-03
                        :ARG0 w
                        :ARG2 (p / person
                              :ARG0-of (c2 / consume-01)))
                  :time (p2 / period
                        :mod (t / this)
                        :time-of (ii2 / isolate-01
                              :ARG1 w))))
      :degree (r2 / really))"
"(r / release-01
      :ARG0 (g / government-organization
            :name (n / name
                  :op1 ""Federal""
                  :op2 ""Trade""
                  :op3 ""Commission""))
      :ARG1 (a / alert-01
            :ARG1 (p / person
                  :ARG0-of (c / consume-01))
            :ARG2 (s / scam-01
                  :ARG1-of (n2 / new-01)
                  :ARG1-of (r2 / relate-01
                        :ARG2 (l / law
                              :name (n3 / name
                                    :op1 ""COVID-19""))))))"
"(r / reduce-01
      :ARG0 (w / we)
      :ARG1 (c / cost-01
            :ARG1 (o / overage
                  :mod (d / data))
            :location (c2 / country
                  :name (n / name
                        :op1 ""Australia"")))
      :ARG3 (r2 / rate-entity-91
            :ARG1 (m / monetary-quantity
                  :quant 10
                  :unit (d2 / dollar))
            :ARG2 (v / volume-quantity
                  :quant 1
                  :unit (g / gigabyte)))
      :ARG4 (r3 / rate-entity-91
            :ARG1 (m2 / monetary-quantity
                  :quant 1
                  :unit (d3 / dollar))
            :ARG2 (o2 / or
                  :op1 (p / plan
                        :mod (p2 / phone
                              :mod (p3 / person
                                    :ARG0-of (c3 / consume-01))))
                  :op2 (c4 / customer
                        :mod (t / tablet))
                  :op3 (c5 / customer
                        :mod (b / broadband
                              :mod (m3 / mobile)))
                  :ARG0-of (h / have-03
                        :polarity -
                        :ARG1 (p4 / plan
                              :mod (d4 / data)
                              :ARG1-of (e / end-01
                                    :polarity -)))
                  :ARG0-of h
                  :ARG1 (p5 / plan
                        :ARG0-of (t2 / trigger-01
                              :ARG1 o
                              :mod (r4 / rate-entity-91
                                    :ARG1 (m4 / monetary-quantity
                                          :quant 10
                                          :unit (d5 / dollar))
                                    :ARG2 (v2 / volume-quantity
                                          :quant 1
                                          :unit (g2 / gigabyte))))))
            :time (c6 / current)))"
"(e / explore-01
      :ARG0 (s / series
            :mod (t / this))
      :ARG1 (t2 / topic
            :ARG0-of (d / drive-02
                  :ARG1 (c / change-01
                        :ARG1 (a / and
                              :op1 (a2 / attitude
                                    :poss (p / person
                                          :ARG0-of (c2 / consume-01)))
                              :op2 (b / behave-01
                                    :ARG0 p))
                        :ARG1-of (b2 / bring-on-06
                              :ARG0 (p2 / pandemic
                                    :name (n / name
                                          :op1 ""COVID-19"")))))
            :ARG2-of (ii / include-01
                  :ARG1 (a3 / and
                        :op1 (t3 / time
                              :time-of (e2 / expect-01
                                    :ARG0 (p3 / person
                                          :ARG0-of (c3 / consume-01)
                                          :mod (g / globe))
                                    :ARG1 (e3 / end-01
                                          :ARG1 p2
                                          :mod (t4 / this)))))
                  :op2 (t5 / thing
                        :ARG1-of (p4 / prioritize-01
                              :ARG0 p))
                  :op3 (a4 / approach-02
                        :ARG0 p
                        :ARG1 (f / finance
                              :poss p)
                        :manner (a5 / amr-unknown)))))"
"(m / multi-sentence
      :snt1 (h / have-03
            :ARG0 (m2 / mask
                  :mod (t / this))
            :ARG1 (d / date
                  :mod (e / expire-01
                        :ARG1 m2))
            :polarity (a / amr-unknown))
      :snt2 (p / possible-01
            :ARG1 (s / sanitize-01
                  :ARG0 (y / you)
                  :ARG1 (m3 / mask)
                  :manner (a2 / amr-unknown))
            :condition (b / buy-01
                  :ARG0 (e2 / everyone
                        :location (c / city
                              :poss y))
                  :ARG1 (p2 / product
                        :ARG0-of (s2 / sanitize-01
                              :ARG1 (h2 / hand))
                        :mod (a3 / all))))
      :snt3 (d2 / damage-01
            :ARG0 (b2 / bleach-01)
            :ARG1 (f / fiber)
            :polarity (a4 / amr-unknown)))"
"(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (r / run-out-05
                  :ARG1 (s / space
                        :purpose (s2 / store-01
                              :ARG0 (w / world)
                              :ARG1 (o / oil)))
                  :ARG2 w
                  :ARG0-of (c / cause-01
                        :ARG1 (p2 / plunge-01
                              :ARG0 r
                              :ARG1 (p3 / price-01)
                              :ARG4 (b / below
                                    :op1 (z / zero))
                              :ARG1-of (p4 / possible-01))))
            :time (s3 / soon))
      :snt2 (g / good-02
            :polarity -
            :ARG1 (t / this)))"
"(m / multi-sentence
      :snt1 (k / know-01
            :ARG0 (a / anyone)
            :ARG1 (o / or
                  :op1 (r / resource)
                  :op2 (b / benefit)
                  :beneficiary (p / person
                        :ARG0-of (w / work-01
                              :ARG2 (s / supermarket)))
                  :mod (e / extra))
            :polarity (a2 / amr-unknown))
      :snt2 (a3 / and
            :op1 (t / take-01
                  :ARG0 (p2 / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 (ii / i)
                              :ARG2 (c / colleague)))
                  :ARG1 (h2 / hit-01
                        :ARG1 (h3 / health
                              :mod (m2 / mental))
                        :ARG1-of (s2 / serious-02)))
            :op2 (a4 / and
                  :op1 (a5 / asthmatic
                        :domain ii)
                  :op2 (ii2 / isolate-01
                        :ARG0 ii
                        :ARG1 ii))))"
"(o / or
      :op1 (t / talk-01
            :polarity -
            :ARG0 (k / kid)
            :ARG1 (t2 / that))
      :op2 (b / behave-01
            :polarity -
            :ARG0 k
            :ARG1 t2))"
"(m / multi-sentence
      :snt1 (s / set-up-03
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""McCormick""))
            :ARG1 (a / area
                  :mod (ii / interactive)
                  :purpose (a2 / and
                        :op1 (w / write-01
                              :ARG0 (p2 / person
                                    :ARG0-of (c / consume-01)))
                        :op2 (g / get-01
                              :ARG0 p2
                              :ARG1 (a3 / answer-01
                                    :ARG1 (q / question-01)
                                    :mod (r / real-time)))))
            :time (a4 / after
                  :op1 (r2 / recognize-02
                        :ARG0 p
                        :ARG1 (f / force-01
                              :ARG0 (l / law
                                    :name (n2 / name
                                          :op1 ""COVID-19""))
                              :ARG1 (p3 / person
                                    :ARG0-of (c2 / cook-01)
                                    :quant (m2 / many))
                              :ARG2 (k / kitchen)))))
      :snt2 (s2 / show-01
            :ARG0 (d / data
                  :topic (s3 / sell-01))
            :ARG1 (ii2 / influence-01
                  :ARG0 (a5 / answer-01)
                  :ARG1 (b / buy-01
                        :ARG0 p2)
                  :manner (h / heavy))
            :time (n3 / now)))"
"(ii / inspect-01
      :ARG1 (s / screen
            :ARG0-of (p / protect-01))
      :mod (f / final)
      :time (b / before
            :op1 (f2 / fit-01
                  :ARG1 s
                  :ARG2 (s2 / supermarket
                        :location (c / city)))))"
"(w / wash-01
      :mode imperative
      :ARG0 (y / you
            :part (h / hand))
      :ARG1 h
      :ARG2 (a / and
            :op1 (s / soap)
            :op2 (w2 / water))
      :duration (a2 / at-least
            :op1 (t / temporal-quantity
                  :quant 20
                  :unit (s2 / second)))
      :time (o / or
            :op1 (a3 / after
                  :op1 (b / be-located-at-91
                        :ARG1 y
                        :ARG2 (p / place
                              :ARG1-of (p2 / public-02))))
            :op2 (a4 / after
                  :op1 (o2 / or
                        :op1 (b2 / blow-01
                              :ARG0 y
                              :ARG2 (n / nose))
                        :op2 (c / cough-01
                              :ARG0 y)
                        :op3 (s3 / sneeze-01
                              :ARG0 y))
                  :mod (e / especially))))"
"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (ii / isolate-01
                  :ARG1 (ii2 / i)
                  :location (c2 / city
                        :name (n / name
                              :op1 ""Bristol"")))
            :ARG2 (n2 / need-01
                  :ARG0 ii2
                  :ARG1 (g / get-01
                        :ARG0 ii2
                        :ARG1 (t / thing
                              :ARG1-of (s / supply-01))
                        :ARG4 (p / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG1 ii2
                                    :ARG2 (m2 / mum))
                              :age (t2 / temporal-quantity
                                    :quant 69
                                    :unit (y / year))
                              :ARG1-of (n3 / near-02
                                    :ARG2 (c3 / city
                                          :name (n4 / name
                                                :op1 ""Stroud"")))))))
      :snt2 (b / by-oneself
            :domain (s2 / she)
            :ARG1-of (c4 / cause-01
                  :ARG0 (d / die-01
                        :ARG1 (p2 / person
                              :ARG0-of (h2 / have-rel-role-91
                                    :ARG1 ii2
                                    :ARG2 (d2 / dad)))
                        :time (d3 / date-entity
                              :month 11)
                        :manner (s3 / sudden))))
      :snt3 (s4 / seem-01
            :ARG1 (f / full-09
                  :ARG1 (s5 / slot
                        :mod (s6 / supermarket)
                        :mod (a / all))))
      :snt4 (p3 / possible-01
            :ARG1 (h3 / help-01
                  :ARG0 (a2 / anyone))
            :polarity (a3 / amr-unknown)))"
"(f / find-02
      :ARG0 (g / group
            :mod (a / amr-unknown)
            :ARG0-of (c / consume-01))
      :ARG1 (p / price-01
            :ARG1 (a2 / and
                  :op1 (r / roll
                        :purpose (t / toilet))
                  :op2 (t2 / thermometer
                        :instrument-of (s / sanitize-01
                              :ARG1 (h / hand)))
                  :op3 (f2 / formula
                        :beneficiary (b / baby)))
            :ARG1-of (o / over-03)
            :ARG1-of (c2 / consistent-02))
      :concession (c3 / crack-down-06
            :ARG0 (a3 / and
                  :op1 (c4 / company
                        :name (n / name
                              :op1 ""Amazon""))
                  :op2 (c5 / company
                        :name (n2 / name
                              :op1 ""eBay"")))))"
"(m / multi-sentence
      :snt1 (r / reflex
            :domain (ii / it))
      :snt2 (p / paranoid
            :domain (e / everyone))
      :snt3 (p2 / possible-01
            :ARG1 (u / understand-01
                  :ARG0 (ii2 / i)
                  :manner (p3 / perspective
                        :mod (b / both))))
      :snt4 (g / give-01
            :ARG0 (v / virus
                  :name (n / name
                        :op1 ""Corvid19""))
            :ARG1 (n2 / name
                  :ARG1-of (b2 / bad-07))
            :ARG2 (d / disease
                  :name (n3 / name
                        :op1 ""Common""
                        :op2 ""Cold""))))"
"(a / and
      :op1 (c / conserve-01
            :ARG0 (ii / i)
            :ARG1 (w / water)
            :manner (s / skip-01
                  :ARG0 ii
                  :ARG1 (s2 / shower-01)))
      :op2 (s3 / start-01
            :ARG0 ii
            :ARG1 (m / make-01
                  :ARG0 ii
                  :ARG1 (a2 / alcohol
                        :poss ii)
                  :purpose (b / barter-01
                        :ARG0 ii
                        :ARG1 a2))
            :time (o / once
                  :op1 (g / go-08
                        :ARG1 (w2 / world)
                        :ARG2 (p / person
                              :name (n / name
                                    :op1 ""Mad""
                                    :op2 ""Max"")
                              :mod (a3 / all)))))
      :op3 (g2 / go-through-20
            :ARG0 ii
            :ARG1 (p2 / pile
                  :ARG1-of (ii2 / include-91
                        :ARG2 (f / food
                              :ARG1-of (s4 / stable-03
                                    :location (s5 / shelf)))
                        :ARG3 ""1/2"")
                  :ARG1-of (h / hoard-01
                        :ARG0 ii
                        :ARG1-of (t / try-01
                              :ARG0 ii))
                  :mod (s6 / stock))))"
"(p / possible-01
      :ARG1 (f / file-01
            :ARG1 (c / complain-01
                  :ARG1 (g / gouge-02
                        :ARG1 (t / thing
                              :ARG2-of (p2 / price-01))
                        :ARG1-of (r / relate-01
                              :ARG2 (c2 / coronavirus))))
            :ARG2 (o / or
                  :op1 (g2 / government-organization
                        :name (n / name
                              :op1 ""Attorney""
                              :op2 ""General's""
                              :op3 ""Office"")
                        :mod (s / state
                              :name (n2 / name
                                    :op1 ""Texas"")))
                  :op2 (p3 / page
                        :ARG0-of (p4 / protect-01
                              :ARG1 (p5 / person
                                    :ARG0-of (c3 / consume-01)))
                        :part-of (w / website
                              :poss g2)))))"
"(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (c / change-01
                  :ARG0 (p2 / product
                        :name (n / name
                              :op1 ""COVID-19""))
                  :ARG1 (a / and
                        :op1 (m2 / mindset
                              :mod (p3 / person
                                    :ARG0-of (c2 / consume-01)))
                        :op2 (s / system
                              :mod (v / value)
                              :ARG0-of (u / underlie-01
                                    :ARG1 (d / decide-01
                                          :ARG3 (b / buy-01)))))))
      :snt2 (t / thrive-01
            :ARG1 (f / firm
                  :ARG0-of (w / work-01
                        :ARG1 (a2 / and
                              :op1 (u2 / understand-01
                                    :ARG0 f
                                    :ARG1 (t2 / this))
                              :op2 (a3 / adapt-01
                                    :ARG0 f))))))"
"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (t / tweet-01
                  :ARG0 (y / you)
                  :ARG1 (s / stay-01
                        :ARG1 (s2 / store
                              :mod (r / retail-01)
                              :ARG1-of (e / essential-01
                                    :polarity -))
                        :ARG3 (o / open-09
                              :ARG1 s2)))
            :ARG2 (p / post-01
                  :ARG0 y
                  :ARG1 (s3 / story
                        :topic (a / and
                              :op1 (d / distance-01
                                    :ARG0 (o2 / organization
                                          :name (n / name
                                                :op1 ""COVID-19""))
                                    :mod (s4 / social))
                              :op2 (s5 / stay-01
                                    :ARG1 o2
                                    :location (h / home))))
                  :time (t2 / then)))
      :snt2 (d2 / decide-01
            :mode imperative
            :polite +
            :ARG0 (y2 / you)
            :ARG1 (s6 / side
                  :part-of (f / fence)
                  :location-of y2)))"
"(m / multi-sentence
      :snt1 (s / see-01
            :ARG0 (ii / i)
            :ARG1 (a / and
                  :op1 (s2 / scaremonger
                        :quant (l / lot))
                  :op2 (s3 / suggest-01
                        :ARG0 (p / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG1 ii
                                    :ARG2 (c / client))
                              :quant (s4 / some))
                        :ARG1 (p2 / possible-01
                              :ARG1 (d / drop-01
                                    :ARG1 (p3 / price-01
                                          :ARG1 (h2 / house))
                                    :ARG2 (u / up-to
                                          :op1 (p4 / percentage-entity
                                                :value 60)))))))
      :snt2 (t / think-01
            :ARG0 (ii2 / i)
            :ARG1 (h3 / highlight-01
                  :ARG0 (a2 / article
                        :mod (t2 / this))
                  :ARG1 (ii3 / impact-01
                        :ARG0 (c2 / coronavirus)
                        :ARG1 (m2 / market
                              :mod (p5 / property))
                        :ARG1-of (r / realistic-03))
                  :ARG1-of (g / good-02
                        :ARG2-of (h4 / have-degree-91
                              :ARG1 h3
                              :ARG3 (m3 / more
                                    :quant (m4 / much)))))))"
"(f / flex-01
      :ARG1 (g / go-02
            :ARG0 (y / you)
            :ARG4 (h / house
                  :poss (p / person
                        :ARG1-of (n / neighbor-01
                              :ARG2 y))
                  :location-of (p2 / paper-01
                        :ARG1 (t / toilet))))
      :time (n2 / now
            :mod (r / right))
      :ARG1-of (h2 / have-degree-91
            :ARG2 (b / big)
            :ARG3 (m / most)))"
"(h / have-concession-91
      :ARG1 (n / need-01
            :ARG0 (ii / i)
            :ARG1 (w / work-01
                  :ARG0 ii))
      :ARG2 (w2 / wish-01
            :ARG0 ii
            :ARG1 (p / possible-01
                  :ARG1 (h2 / hide-01
                        :ARG0 ii
                        :ARG1 ii
                        :location (u / under
                              :op1 (d / duvet))
                        :time (u2 / until
                              :op1 (d2 / date-entity
                                    :month 8))))))"
"(u / use-01
      :ARG1 (r / rabbi)
      :ARG2 (p / paper
            :purpose (t / toilet))
      :ARG1-of (c / cause-01
            :ARG0 (r2 / run-out-05
                  :ARG1 p
                  :ARG2 (p2 / person))))"
"(m / multi-sentence
      :snt1 (s / see-01
            :ARG0 (b / bank
                  :mod (f / food)
                  :location (a / across
                        :op1 (c / country
                              :name (n / name
                                    :op1 ""US"")))
                  :ARG1-of (l / local-02))
            :ARG1 (d / demand-01
                  :ARG1 (f2 / food)
                  :ARG1-of (ii / increase-01))
            :ARG1-of (c2 / cause-01
                  :ARG0 (o / or
                        :op1 (l2 / lose-02
                              :ARG0 (p / person)
                              :ARG1 (j / job
                                    :poss p))
                        :op2 (s2 / stock-up-02
                              :ARG0 p
                              :ARG1 (t / thing
                                    :ARG1-of (s3 / supply-01))
                              :ARG1-of (c3 / cause-01
                                    :ARG0 (p2 / pandemic
                                          :name (n2 / name
                                                :op1 ""COVID""
                                                :op2 19)))))))
      :snt2 (p3 / possible-01
            :ARG1 (d2 / donate-01
                  :ARG0 (y / you)
                  :ARG2 (b2 / bank
                        :mod (f3 / food)
                        :ARG1-of (l3 / local-02)
                        :poss y))
            :polarity (a2 / amr-unknown)))"
"(d / disappoint-01
      :ARG0 (s / sell-01
            :ARG1 (p / product
                  :name (n / name
                        :op1 ""COVID-19""))
            :mod (m / massive)
            :medium (o / online))
      :ARG1 (ii / i)
      :degree (h / high-02))"
"(d / donate-01
      :ARG0 (s / supermarket
            :name (n / name
                  :op1 ""Aldi"")
            :ARG0-of (d2 / discount-01))
      :ARG1 (e / egg
            :mod (f / festival
                  :name (n2 / name
                        :op1 ""Easter""))
            :quant (a / almost
                  :op1 500000)
            :mod (s2 / surplus))
      :ARG2 (a2 / and
            :op1 (c / charity)
            :op2 (b / bank
                  :mod (f2 / food))
            :location (a3 / across
                  :op1 (c2 / country
                        :name (n3 / name
                              :op1 ""UK"")))))"
"(t / take-advantage-02
      :ARG1 (p / pandemic
            :name (n / name
                  :op1 ""Coronavirus"")
            :ARG1-of (m / mean-01
                  :ARG2 (p2 / product
                        :name n
                        :op1 ""COVID-19"")))
      :ARG2 (c / con-03
            :ARG1 (p3 / person)
            :ARG2 (g / give-up-08
                  :ARG0 p3
                  :ARG1 (m2 / money
                        :poss p3))))"
"(c / contrast-01
      :ARG1 (p / possible-01
            :ARG1 (p2 / paranoid
                  :domain (ii / i
                        :mod (o / only)
                        :location (s / supermarket
                              :name (n / name
                                    :op1 ""Aldi""))
                        :time (d / date-entity
                              :dayperiod (a / afternoon)
                              :mod (t / today)))))
      :ARG2 (w / wear-01
            :ARG0 ii
            :ARG1 (a2 / and
                  :op1 (m / mask)
                  :op2 (g / glove)
                  :ARG3-of (p3 / protect-01)
                  :ARG1-of (f / fit-01
                        :ARG1-of (s2 / secure-02)))))"
"(c / cut-02
      :ARG0 (g / government-organization
            :name (n / name
                  :op1 ""Bank""
                  :op2 ""of""
                  :op3 ""England""))
      :ARG1 (r / rate
            :mod (ii / interest))
      :ARG4 (p / percentage-entity
            :value 0.1)
      :purpose (f / fight-01
            :ARG0 g
            :ARG1 (c2 / coronavirus)))"
"(m / mood
      :ARG1-of (b / bad-07)
      :domain (ii / i)
      :time (r / run-02
            :ARG0 (s / someone)
            :direction (b2 / behind
                  :op1 ii))
      :location (s2 / store
            :mod (g / grocery))
      :time (d / date-entity
            :dayperiod (m2 / morning)
            :mod (t / today)))"
"(s / say-01
      :ARG0 (p / person
            :ARG1-of (e / expert-01))
      :ARG1 (p2 / possible-01
            :ARG1 (r / remain-01
                  :ARG1 (p3 / price-01
                        :ARG1 (o / oil))
                  :ARG3 (l / low-04
                        :ARG1 p3
                        :ARG2-of (c / compare-01))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (d / decline-01
                              :ARG1 (d2 / demand-01
                                    :mod (g / globe))
                              :location (c3 / country
                                    :name (n / name
                                          :op1 ""US"")
                                    :mod (e2 / especially))
                              :time (s2 / situation
                                    :name (n2 / name
                                          :op1 ""COVID-19"")))))
            :concession (e3 / even-if
                  :op1 (r2 / reach-01
                        :ARG1 (c4 / consensus
                              :topic (c5 / cut-02
                                    :ARG1 (s3 / supply-01)))))))"
"(m / multi-sentence
      :snt1 (e / encourage-01
            :ARG0 (w / we)
            :ARG1 (y / you)
            :ARG2 (s / safe-01
                  :ARG1 y
                  :location (a / area
                        :mod (o / other))
                  :mod (a2 / also))
            :ARG1-of (c / cause-01
                  :ARG0 (d / diligent
                        :domain (p / person
                              :quant (m2 / many))
                        :topic (h / health
                              :poss p))))
      :snt2 (c2 / cause-01
            :ARG0 (b / become-01
                  :ARG1 (s2 / scam-01)
                  :ARG2 (p2 / prevail-02
                        :ARG1 s2
                        :ARG2-of (h2 / have-degree-91
                              :ARG1 s2
                              :ARG3 (m3 / more)))
                  :time (s3 / stress-02))
            :ARG1 (a3 / and
                  :op1 (c3 / check-out-05
                        :polite +
                        :mode imperative
                        :ARG0 y
                        :ARG1 (ii / information
                              :source (g / government-organization
                                    :name (n / name
                                          :op1 ""FTC""))
                              :topic (s4 / scam-01
                                    :mod (v / virus))))
                  :op2 (s5 / stay-01
                        :mode imperative
                        :ARG1 y
                        :ARG3 (s6 / safe-01
                              :ARG1 y)))))"
"(r / recommend-01
      :ARG1 (w / wear-01
            :polarity -
            :ARG0 (y / you)
            :ARG1 (g / glove)
            :location (s / supermarket)))"
"(m / multi-sentence
      :snt2 (c / continue-01
            :ARG0 (w / we)
            :ARG1 (a / accept-01
                  :ARG0 w
                  :ARG1 (t / thing
                        :ARG1-of (d / donate-01))
                  :time (h / hour
                        :ARG1-of (l / limit-01)
                        :time (d2 / date-entity
                              :time ""10:00""
                              :weekday (f / friday)
                              :day 20))
                  :time (u / until
                        :op1 (n / notice-03
                              :mod (f2 / further)))))
      :snt1 (r / respond-01
            :ARG0 (o / organization
                  :name (n2 / name
                        :op1 ""Goodwill""
                        :op2 ""of""
                        :op3 ""Central""
                        :op4 ""&""
                        :op5 ""Southern""
                        :op6 ""Indiana""))
            :ARG1 (p / pandemic
                  :name (n3 / name
                        :op1 ""COVID-19""))
            :ARG2 (c2 / close-01
                  :ARG1 (f3 / floor
                        :location (s / store
                              :mod (r2 / retail-01)))
                  :beneficiary (p2 / person
                        :ARG0-of (s2 / shop-01))
                  :ARG1-of (e / effect-03))))"
"(l / language
      :polarity -
      :name (n / name
            :op1 ""English"")
      :ARG1-of (s / standard-02)
      :domain (t / this))"
"(m / multi-sentence
      :snt1 (c / call-on-05
            :ARG0 (ii / i)
            :ARG1 (a / and
                  :op1 (p / person
                        :name (n / name
                              :op1 ""Trump"")
                        :ARG0-of (h / have-org-role-91
                              :ARG2 (p2 / president)))
                  :op2 (p3 / person
                        :name (n2 / name
                              :op1 ""Newsom"")
                        :ARG0-of (h2 / have-org-role-91
                              :ARG2 (g / governor))))
            :ARG2 (l / listen-01
                  :ARG0 a))
      :snt2 (r / recommend-01
            :ARG1 (r2 / reduce-01
                  :ARG1 (t / thing
                        :ARG2-of (p4 / price-01)
                        :location (s / store)
                        :mod (a2 / all))
                  :ARG2 (p5 / percentage-entity
                        :value 50))
            :ARG1-of (c2 / cause-01
                  :ARG0 (c3 / crisis
                        :mod (e / emergency)
                        :mod (n3 / nation)))))"
"(a / and
      :op1 (q / quit-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Guest766""))
            :ARG1 (p2 / publication
                  :name (n2 / name
                        :op1 ""IRC""))
            :time (d / date-entity
                  :time ""19:53""))
      :op2 (j / join-01
            :ARG0 p
            :ARG1 p2)
      :op3 (s / string-entity
            :value ""Guest766""))"
"(c / cause-01
      :ARG0 (a / available-02
            :ARG2 (ii / item
                  :mod (f / food)
                  :ARG1-of (n / need-01
                        :ARG0 (y / you))
                  :mod (e / every))
            :location (s / store
                  :mod (l / local)
                  :mod (k / kirana)
                  :poss y))
      :ARG1 (p / panic-01
            :polarity -
            :mode imperative
            :ARG0 y))"
"(c / cause-01
      :ARG0 (a / amr-unknown)
      :ARG1 (a2 / and
            :polarity -
            :op1 (l / lower-05
                  :ARG1 (p / price-01
                        :ARG1 (p2 / prepay-01
                              :ARG1 (v / value))))
            :op2 (d / donate-01
                  :ARG1 (p3 / proceeds
                        :quant (s / some)
                        :source p)
                  :ARG2 (e / effort-01
                        :ARG1 (r / relieve-01)
                        :mod (p4 / program
                              :name (n / name
                                    :op1 ""COVID""
                                    :op2 19))))))"
"(m / multi-sentence
      :snt1 (d / difficult
            :domain (d2 / distance-01
                  :ARG2 (s / society)
                  :time (w / work-01
                        :ARG1 (s2 / supermarket)))
            :degree (e / extreme))
      :snt2 (a / and
            :op1 (c / come-01
                  :ARG1 (f / family
                        :ARG0-of (h / have-03
                              :ARG1 (a2 / and
                                    :op1 (a3 / adult)
                                    :op2 (k / kid))))
                  :ARG4 (ii / inside))
            :op2 (w2 / walk-01
                  :ARG0 (p / person)
                  :ARG2 (y / you)
                  :direction (r / right)
                  :time h
                  :ARG0 p
                  :ARG1 (q / question-01
                        :ARG0 p)))
      :concession-of (g / glove
            :ARG1-of (h2 / have-quant-91
                  :polarity -
                  :ARG3 (e2 / enough)
                  :ARG6 (g2 / go-02
                        :ARG1 g
                        :direction (a4 / around))))
      :snt3 (m2 / meet-03
            :ARG0 p
            :ARG0-of (h3 / have-org-role-91
                  :ARG2 (s3 / staff)))
      :mod (s4 / still))"
"(ii / include-91
      :ARG1 (p / person
            :ARG1-of (e / employ-01
                  :ARG0 (s / store
                        :mod (g / grocery))))
      :ARG2 (h / hero
            :ARG1-of (r / real-04))
      :ARG3 (s2 / some)
      :time (n / now
            :mod (r2 / right)))"
"(m / multi-sentence
      :snt1 (b / be-located-at-91
            :ARG1 (w / we)
            :ARG2 (h / here)
            :purpose (h2 / help-01
                  :ARG0 w
                  :ARG2 (y / you)
                  :time (t / time
                        :mod (d / difficult)
                        :mod (t2 / this))))
      :snt2 (v / visit-01
            :mode imperative
            :ARG0 (y2 / you)
            :ARG1 (w2 / website
                  :poss (w3 / we))
            :purpose (a / and
                  :op1 (l / learn-01
                        :ARG0 y2
                        :ARG1 (r / right-05
                              :ARG1 y2))
                  :op2 (f / find-01
                        :ARG0 y2
                        :ARG1 (r2 / resource
                              :ARG2-of (a2 / available-02
                                    :ARG1 y2))))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (d / disable-01
                  :ARG1 (ii / i))
            :op2 (p / possible-01
                  :polarity -
                  :ARG1 (d2 / drive-01
                        :ARG0 ii))
            :op3 (c / cause-01
                  :ARG0 (p2 / panicker-01
                        :ARG0 (e / everyone))
                  :ARG1 (p3 / possible-01
                        :polarity -
                        :ARG1 (b / book-03
                              :ARG0 ii
                              :ARG1 (s / shop
                                    :medium (o / online))
                              :location (a2 / anywhere)))))
      :snt2 (s2 / survive-01
            :ARG0 (p4 / person
                  :ARG1-of (r / resemble-01
                        :ARG2 (ii2 / i))
                  :ARG0-of (r2 / rely-01
                        :ARG1 (d3 / deliver-01
                              :ARG1 (f / food)
                              :medium (o2 / online))))
            :ARG1 (a3 / amr-unknown)
            :time (p5 / possible-01
                  :ARG1 (g / get-01
                        :ARG0 (w / we)
                        :ARG1 (ii3 / item
                              :ARG1-of (e2 / essential-01)
                              :poss w)
                        :time (n / no-longer)))))"
"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (c2 / cause-01
                  :ARG0 (s / shift-01
                        :ARG1 (d / distribute-01)
                        :time (c3 / change-01
                              :ARG1 (d2 / demand-01)))
                  :ARG1 (p / part
                        :mod (l / large)
                        :part-of (s2 / shelf
                              :ARG1-of (e / empty-02)))
                  :mod (j / just))
            :ARG2 (c4 / concern-01
                  :ARG0 (f / factor
                        :mod (p2 / potential)
                        :mod (o / other))))
      :snt2 (h / have-concession-91
            :ARG1 (h2 / hear-01
                  :polarity -
                  :ARG0 (ii / i)
                  :ARG1 (m2 / much)
                  :ARG2 (t / this)
                  :time (r / recent))))"
"(t / turn-14
      :ARG0 (p / person)
      :ARG1 (c / commerce)
      :ARG1-of (c2 / cause-01
            :ARG0 (a / anxiety
                  :topic (l / law
                        :name (n / name
                              :op1 ""COVID-19"")))))"
"(h / happy-01
      :ARG0 (s / supply-01
            :ARG0 (w / we
                  :part-of (c / company
                        :name (n / name
                              :op1 ""EcoWater"")
                        :poss (p / person
                              :name (n2 / name
                                    :op1 ""McLeod""))))
            :ARG1 (p2 / peroxide
                  :mod (g / grade
                        :name (n3 / name
                              :op1 ""NSF""))
                  :ARG1-of (h2 / have-quant-91
                        :ARG3 (e / equal)
                        :ARG4 (n4 / need-01)))
            :ARG2 (s2 / sanitizer))
      :ARG1 w)"
"(s / seem-01
      :ARG1 (w / well-09
            :ARG1 (a / and
                  :op1 (s2 / sell-01
                        :ARG1 (c / cannabis))
                  :op2 (s3 / sell-01
                        :ARG2 (s4 / store
                              :mod (g / grocery))
                        :mod (r / robust)))
            :prep-under (o / outbreak-29
                  :name (n / name
                        :op1 ""COVID-19""))))"
"(p / possible-01
      :ARG1 (f / find-01
            :ARG1 (a / act-02
                  :ARG0 (c / company
                        :ARG0-of (r / retail-01)
                        :location (c2 / country
                              :name (n / name
                                    :op1 ""UK"")))
                  :topic (p2 / product
                        :name (n2 / name
                              :op1 ""COVID-19""))
                  :mod (l / last))
            :location (u / url-entity
                  :value ""https://www.supermarketmagazine.co.uk/coronavirus-covid-19-latest-actions-uk-retailers.html"")))"
"(m / multi-sentence
      :snt1 (n / need-01
            :ARG0 (p / person)
            :ARG1 (c / calm-down-02
                  :ARG1 p))
      :snt2 (a / and
            :op1 (w / work-01
                  :ARG0 (ii / i)
                  :ARG1 (s / store
                        :mod (g / grocery)))
            :op2 (m2 / madness
                  :domain w))
      :snt3 (c2 / contrast-01
            :ARG1 (n2 / need-01
                  :ARG0 (y / you)
                  :ARG1 (t / thing
                        :ARG1-of (h / have-quant-91
                              :ARG3 (e / enough)))
                  :duration (t2 / temporal-quantity
                        :quant 2
                        :unit (w2 / week))
                  :mod (o / only))
            :ARG2 (n3 / need-01
                  :polarity -
                  :ARG0 y
                  :ARG1 t
                  :duration (t3 / temporal-quantity
                        :quant 1
                        :unit (y2 / year))))
      :snt4 (h2 / have-03
            :ARG0 (w3 / we)
            :ARG1 (s2 / service
                  :ARG0-of (d / deliver-01)
                  :ARG0-of (d2 / deliver-01
                        :ARG2 y
                        :condition (r / run-out-05
                              :ARG1 (s3 / something)
                              :ARG2 y)))
            :mod (a2 / also)))"
"(m / multi-sentence
      :snt1 (ii / immense
            :domain (d / demand-01
                  :ARG1 (s / serve-01
                        :ARG0-of (p / profit-01
                              :polarity -)
                        :ARG2-of (ii2 / include-91
                              :ARG1 (a / and
                                    :op1 (f / food)
                                    :op2 (s2 / shelter-01)
                                    :mod (e / especially))))
                  :ARG1-of (ii3 / increase-01)))
      :snt2 (h / help-01
            :ARG0 (o / organization
                  :name (n / name
                        :op1 ""CODV""
                        :op2 19
                        :op3 ""Response""
                        :op4 ""Fund"")
                  :location (c / county
                        :name n
                        :op1 ""York""))))"
"(a / and
      :op1 (c / change-01
            :ARG1 (t / time)
            :degree (s / so))
      :op2 (c2 / change-01
            :ARG1 (p / price-01)
            :degree s))"
"(p / possible-01
      :ARG1 (a / and
            :op1 (g / go-02
                  :ARG0 (ii / i)
                  :ARG4 (b / beach)
                  :time (a2 / after))
            :op2 (t / try-01
                  :ARG0 ii
                  :ARG1 (f / find-01
                        :ARG0 ii
                        :ARG1 (g2 / gold
                              :quant (s / some
                                    :quant (m / more)))
                        :ARG2 (s2 / sand)))))"
"(a / and
      :op1 (w / warn-01
            :ARG0 (g / government-organization
                  :name (n / name
                        :op1 ""FTC""))
            :ARG1 (s / scam-01
                  :ARG1-of (r / relate-01
                        :ARG2 (c / coronavirus)))
            :ARG2 (p / person))
      :op2 (p2 / provide-01
            :ARG0 g
            :ARG1 (t / tip-05
                  :ARG2 (t2 / thing
                        :manner-of (a2 / avoid-01
                              :ARG0 p
                              :ARG1 s)))
            :ARG2 p))"
"(m / multi-sentence
      :snt1 (h / have-condition-91
            :ARG1 (a / and
                  :op1 (d / drop-05
                        :ARG0 (o / organization
                              :ARG0-of (h2 / have-03
                                    :ARG1 (o2 / or
                                          :op1 (s / set-up-03
                                                :ARG0 o
                                                :ARG1-of (s2 / slow-05
                                                      :mod (u / usual)))
                                          :op2 (p / process-02
                                                :ARG0 o
                                                :ARG1 (o3 / onboard-01
                                                      :ARG0 o)))))
                        :ARG1 (w / work-01
                              :ARG0 o
                              :mod (o4 / other)
                              :mod (a2 / all)))
                  :op2 (w2 / work-01
                        :ARG0 o
                        :time (w3 / weekend))
                  :purpose (g / get-04
                        :ARG0 o
                        :ARG1 (d2 / do-02
                              :ARG0 o
                              :ARG1 (s3 / stuff)
                              :ARG2 (y / you))))
            :ARG2 (w4 / work-01
                  :ARG0 y
                  :ARG1 (p2 / program
                        :name (n / name
                              :op1 ""COVID-19""))))
      :snt2 (a3 / ask-01
            :mode imperative
            :ARG0 y
            :mod (j / just)))"
"(t / thank-01
      :ARG1 (p / person
            :name (n / name
                  :op1 ""Brad""
                  :op2 ""Pisley""))
      :ARG2 (m / music
            :poss p))"
"(m / multi-sentence
      :snt1 (d / decide-01
            :ARG0 (ii / i)
            :ARG1 (w / wear-01
                  :ARG0 ii
                  :ARG1 (g / gear
                        :ARG3-of (p / protect-01
                              :degree (f / full)))
                  :location (s / store
                        :mod (g2 / grocery))
                  :purpose (a / and
                        :op1 (s2 / see-01
                              :ARG0 ii
                              :ARG1 (t / thing
                                    :manner-of (r / react-01
                                          :ARG0 (p2 / person))))
                        :op2 (s3 / see-01
                              :ARG0 ii
                              :ARG1 (p3 / possible-01
                                    :ARG1 (f2 / feel-01
                                          :ARG0 ii
                                          :ARG1 (s4 / safe-01
                                                :ARG1 ii)))))))
      :snt2 (l / let-01
            :ARG1 (p4 / person
                  :quant 10
                  :manner (o / one-by-one))
            :destination (s5 / store)))"
"(b / be-located-at-91
      :ARG1 (e / episode
            :ord (o / ordinal-entity
                  :value 12)
            :part-of (v / video
                  :name (n / name
                        :op1 ""Saudi""
                        :op2 ""Arabia""
                        :op3 ""#Coronavirus""
                        :op4 ""Vlog"")
                  :poss (ii / i)))
      :ARG2 (p / publication
            :name (n2 / name
                  :op1 ""YouTube""))
      :time (n3 / now))"
"(p / prepare-02
      :ARG0 (b / bank
            :mod (f / food)
            :location (s / state
                  :name (n / name
                        :op1 ""New""
                        :op2 ""Brunswick"")))
      :ARG2 (d / demand-01
            :ARG1 (a / assist-01
                  :ARG2 (f2 / food))
            :ARG1-of (h / have-quant-91
                  :ARG3 (t / times
                        :quant 2)))
      :time (b2 / break-out-30
            :name (n2 / name
                  :op1 ""COVID-19"")))"
"(a / alert-01
      :ARG1 (g / government-organization
            :name (n / name
                  :op1 ""Fijian""
                  :op2 ""Competition""
                  :op3 ""and""
                  :op4 ""Consumer""
                  :op5 ""Commission""))
      :ARG2 (d / defraud-01
            :mod (a2 / any)
            :ARG1-of (a3 / arise-02
                  :ARG1-of (p / possible-01)
                  :time (c / continue-01
                        :ARG1 (g2 / grow-01
                              :ARG1 (ii / impact-01
                                    :ARG0 (c2 / coronavirus))))))
      :ARG1-of (h / high-02))"
"(j / join-04
      :ARG0 (p / person
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (ii / i)
                  :ARG2 (s / son)))
      :ARG1 (r / rank
            :consist-of (h2 / hero
                  :ARG1-of (s2 / save-02
                        :polarity -)
                  :location (w / war-01
                        :ARG2 (v / virus
                              :mod (c / coronavirus)))))
      :time (t / today)
      :ARG1-of (c2 / cause-01
            :ARG0 (h3 / hire-01
                  :ARG1 p
                  :ARG2 (p2 / person
                        :ARG0-of (s3 / stock-01))
                  :location (s4 / store
                        :mod (g / grocery)
                        :ARG1-of (l / local-02)
                        :poss (w2 / we)))))"
"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (o / opine-01
                  :ARG1 (t / this)
                  :ARG1-of (p / popular-02
                        :polarity -))
            :ARG2 (ii / illustrate-01
                  :ARG0 (p2 / person
                        :name (n / name
                              :op1 ""Trump""))
                  :ARG1 (p3 / problem
                        :topic (c2 / carry-out-03
                              :ARG1 (b / brief-01
                                    :ARG1 (p4 / press)
                                    :mod (t2 / this))
                              :manner (l / live)))
                  :ARG1-of (p5 / perfect-02)
                  :mod (j / just)))
      :snt2 (c3 / contrast-01
            :ARG1 (a / ask-01
                  :ARG0 (y / you)
                  :ARG1 (t3 / thing
                        :ARG2-of (p6 / price-01
                              :ARG1 (o2 / oil))))
            :ARG2 (k / know-01
                  :polarity -
                  :ARG0 y
                  :ARG1 (t4 / thing
                        :ARG2-of (p7 / price-01
                              :ARG1 o2))))
      :snt3 (n2 / need-01
            :ARG0 y
            :ARG1 (d / doctor
                  :mod (m2 / medicine)
                  :ARG1-of (p8 / present-02))
            :ARG1-of (c4 / cause-01
                  :ARG0 (t5 / tee-up-02
                        :ARG0 d
                        :ARG1 (l2 / lie-08
                              :ARG1-of (c5 / check-08
                                    :polarity -))
                        :mod j)
                  :condition (h / have-polarity-91
                        :ARG1 n2
                        :ARG2 -)))
      :snt4 (v / virus
            :mod (c6 / coronavirus)))"
"(m / miss-01
      :ARG0 (s / shelf
            :part-of (s2 / supermarket
                  :poss (y / you)))
      :ARG1 (a / amr-unknown)
      :time (s3 / since
            :op1 (b / begin-01
                  :ARG1 (c / coronavirus))))"
"(c / contrast-01
      :ARG1 (p / possible-01
            :ARG1 (c2 / challenge-01
                  :ARG0 (w / work-01
                        :ARG2 (s / store
                              :mod (g / grocery))
                        :time (p2 / pandemic
                              :mod (c3 / coronavirus)))))
      :ARG2 (p3 / possible-01
            :ARG1 (d / do-02
                  :ARG0 (p4 / person
                        :ARG0-of (s2 / shop-01))
                  :ARG1 (t / thing
                        :quant (f / few))
                  :ARG2 (h / help-01
                        :ARG0 p4))))"
"(m / multi-sentence
      :snt1 (p / product
            :name (n / name
                  :op1 ""Disposable""
                  :op2 ""Medical""
                  :op3 ""Face""
                  :op4 ""Mask"")
            :source (c / company
                  :mod (g / group)
                  :ARG0-of (p2 / produce-01
                        :ARG1 (m2 / mask
                              :quant 1000000)
                        :frequency (r / rate-entity-91
                              :ARG3 (t / temporal-quantity
                                    :quant 1
                                    :unit (d / day))))))
      :snt2 (a / and
            :op1 (c2 / certify-01
                  :ARG0 (o / organization
                        :name (n2 / name
                              :op1 ""CE"")
                        :mod (c3 / continent
                              :name (n3 / name
                                    :op1 ""Europe"")))
                  :ARG1 (t2 / they))
            :op2 (c4 / certify-01
                  :ARG0 (o2 / organization
                        :name (n4 / name
                              :op1 ""FDA"")
                        :mod (c5 / country
                              :name (n5 / name
                                    :op1 ""America"")))
                  :ARG1 t2)))"
"(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Wayne""
                  :op2 ""Baskin"")
            :ARG0-of (h / have-org-role-91
                  :ARG1 (c / company
                        :name (n2 / name
                              :op1 ""Booktopia"")
                        :mod (o / online)
                        :mod (c2 / country
                              :name (n3 / name
                                    :op1 ""Australia"")))
                  :ARG2 (a / and
                        :op1 (o2 / officer
                              :mod (d / deputy)
                              :mod (c3 / chief))
                        :op2 (o3 / officer
                              :mod (c4 / chief)
                              :mod (t / technical)))))
      :ARG1 (h2 / hit-01
            :ARG0 c
            :ARG1 (t2 / target
                  :mod (b / budget)
                  :poss c)
            :ARG1-of (c5 / cause-01
                  :ARG0 (ii / increase-01
                        :ARG1 (d2 / demand-01
                              :ARG1 (b2 / book
                                    :quant (s2 / some)))))))"
(a / amr-empty)
"(c / cause-01
      :ARG0 (c2 / combine-01
            :ARG1 (o / or
                  :op1 (y / yield
                        :li 1
                        :ARG1-of (h / have-degree-91
                              :ARG2 (h2 / high-02
                                    :ARG1 y)
                              :ARG3 (m / more)))
                  :op2 (p / price
                        :li 2
                        :ARG1-of (h3 / have-degree-91
                              :ARG2 (h4 / high-02
                                    :ARG1 p)
                              :ARG3 (m2 / more)))
                  :op3 (a / aid-01
                        :li 3
                        :ARG0 (g / government-organization
                              :ARG0-of (g2 / govern-01))
                        :ARG1-of (r / resemble-01
                              :ARG2 (p2 / pay-01
                                    :ARG3 (p3 / program
                                          :name (n / name
                                                :op1 ""Market""
                                                :op2 ""Facialilitation""
                                                :op3 ""Program""))
                                    :time (b / before
                                          :op1 (n2 / now)
                                          :duration (t / temporal-quantity
                                                :quant 2
                                                :unit (y2 / year))))))))
      :ARG1 (p4 / possible-01
            :ARG1 (h5 / have-degree-91
                  :ARG1 (r2 / return-06)
                  :ARG2 (g3 / good-02
                        :ARG1 r2)
                  :ARG3 (m3 / more)
                  :ARG4 (p5 / project-02
                        :ARG1 r2
                        :time (c3 / current)
                        :location (b2 / budget
                              :mod (d / date-entity
                                    :year 2020))))))"
"(c / come-01
      :ARG1 (p / product
            :name (n / name
                  :op1 ""Hugh's""
                  :op2 ""Homemade""
                  :op3 ""Soda""))
      :ARG4 (s / supermarket
            :ARG1-of (n2 / near-02
                  :ARG2 (y / you)))
      :time (s2 / soon))"
"(a / article
      :mod (s / science)
      :topic (ii / ionize-01
            :ARG1 (a2 / and
                  :op1 (a3 / air)
                  :op2 (v / virus)))
      :domain (t / this))"
"(d / demand-01
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG1 (p2 / political-party
                        :name (n / name
                              :op1 ""Democratic""
                              :op2 ""Party""))))
      :ARG1 (a / at-least
            :op1 (m / monetary-quantity
                  :quant 500000000000
                  :ARG3-of (s / spend-01
                        :ARG1 (r / relieve-01
                              :ARG1 (d2 / disease
                                    :name (n2 / name
                                          :op1 ""Coronavirus"")
                                    :mod (e / emergency)))
                        :mod (a2 / additional))))
      :purpose (a3 / and
            :op1 (a4 / aid-01
                  :ARG1 (a5 / and
                        :op1 (h2 / hospital)
                        :op2 (g / government-organization
                              :ARG0-of (g2 / govern-01
                                    :ARG1 (s2 / state)))))
            :op2 (s3 / shore-up-01
                  :ARG1 (s4 / stamp
                        :purpose (f / food)))))"
"(p / possible-01
      :ARG1 (p2 / provide-01
            :ARG0 (y / you)
            :ARG1 (d / data
                  :topic (n / number
                        :quant-of (p3 / person
                              :ARG1-of (d2 / die-01
                                    :ARG1-of (c / cause-01
                                          :ARG0 (w / work-01
                                                :ARG0 p3
                                                :ARG1 (o / or
                                                      :op1 (s / supermarket)
                                                      :op2 (s2 / store
                                                            :mod (f / food))
                                                      :op3 (c2 / chemist))))
                                    :ARG1-of c
                                    :ARG0 (d3 / disease
                                          :name (n2 / name
                                                :op1 ""Covid-19"")))))))
      :polarity (a / amr-unknown))"
(a / amr-empty)
"(m / multi-sentence
      :snt1 (a / and
            :op1 (a2 / ask-01
                  :ARG0 (ii / i)
                  :ARG1 (t / thing
                        :manner-of (d / do-02
                              :ARG0 (g / guy
                                    :ARG0-of (c / check-out-02)
                                    :ARG2-of a2)))
                  :location (s / store
                        :mod (g2 / grocery)))
            :op2 (s2 / say-01
                  :ARG0 g
                  :ARG1 (t2 / terrible)))
      :snt2 (s3 / stupid
            :domain (ii2 / i)
            :topic (t3 / think-01
                  :ARG0 ii2
                  :ARG2 (s4 / support-01
                        :ARG0 (p / person
                              :mod (a3 / all)
                              :mod (t4 / that))
                        :ARG1 (w / we)
                        :time (a4 / and
                              :op1 (h / healthcare
                                    :mod (s5 / shelter-01))
                              :op2 (r / restaurant)
                              :op3 (f / fire)
                              :op4 (p2 / police)
                              :op5 (e / et-cetera)))))
      :snt3 (r2 / recommend-01
            :polarity -
            :ARG1 (a5 / ask-01
                  :ARG0 ii2
                  :mod (e2 / even))))"
"(m / multi-sentence
      :snt1 (s / set-08
            :ARG1 (s2 / stock)
            :ARG2 (o / open-02
                  :ARG1 s2
                  :ARG4 (h / high-02
                        :ARG1 s2
                        :degree (s3 / sharp)))
            :time (t / today))
      :snt2 (a / and
            :op1 (v / vote-01
                  :ARG1 (p / package
                        :ARG2-of (r / rescue-01
                              :ARG1 (v2 / virus
                                    :name (n / name
                                          :op1 ""Coronavirus"")))
                        :mod (m2 / monetary-quantity
                              :quant 2000000000000
                              :unit (d / dollar)))
                  :mod (a2 / another)
                  :ARG1-of (e / expect-01))
            :op2 (s4 / surge-01
                  :ARG1 (p2 / price-01
                        :ARG1 (g / gold))
                  :ARG2 (p3 / percentage-entity
                        :value 6)
                  :ARG4 h))
      :snt3 (s5 / sue-02
            :ARG0 (p4 / person
                  :ARG0-of (h2 / have-org-role-91
                        :ARG1 (p5 / publication
                              :name (n2 / name
                                    :op1 ""Bloomberg""))
                        :ARG2 (s6 / staff-01)
                        :time (f / former)))
            :ARG1 (c / campaign-01
                  :ARG1 (p6 / president)
                  :ARG1-of (f2 / fail-01))
            :time (m3 / meanwhile)))"
"(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (s / say-01
                  :ARG0 (n / no-one)
                  :ARG1 (t / thing
                        :location-of (c / contract-04
                              :ARG1 (t2 / they)
                              :ARG2 (v / virus)))
                  :ARG1-of (s2 / sure-02
                        :ARG0 n)))
      :snt2 (c2 / contrast-01
            :ARG1 (w / work-01
                  :ARG0 (ii / i)
                  :location (h / hospital))
            :ARG2 (m2 / mean-01
                  :polarity -
                  :ARG1 w
                  :ARG2 (g / get-01
                        :ARG0 ii
                        :ARG1 v
                        :location h)
                  :ARG1-of (n2 / need-01)))
      :snt3 (p2 / possible-01
            :ARG1 (p3 / pick-up-04
                  :ARG0 ii
                  :ARG1 (ii2 / it)
                  :ARG2 (a / anywhere
                        :example (o / or
                              :op1 (s3 / supermarket)
                              :op2 (s4 / station
                                    :mod (p4 / petrol))
                              :op3 (e / et-cetera)))))
      :snt4 (p5 / possible-01
            :ARG1 (u / understand-01
                  :ARG0 (y / you)
                  :ARG1 (t3 / that)
                  :ARG1-of s2))
      :polarity (a2 / amr-unknown))"
"(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (r / run-01
                  :ARG0 (l / load
                        :consist-of (c / coward
                              :ARG0-of (w / work-01
                                    :polarity -
                                    :duration (t / temporal-quantity
                                          :quant 1
                                          :unit (d / day)))
                              :ARG0-of (ii / isolate-01
                                    :mod (c2 / constant))
                              :ARG1-of ii))
                  :ARG1 (w2 / world)
                  :time (s / soon)))
      :snt2 (s2 / shop-01
            :ARG0 (y / you)
            :location (c3 / city
                  :mod (g / game
                        :name (n / name
                              :op1 ""Minecraft"")))
            :medium (o / online)
            :time (d2 / deliver-01
                  :ARG0 (d3 / drone)
                  :ARG1 (f / food))))"
"(a / and
      :op1 (r / run-out-05
            :ARG1 (f / food)
            :ARG2 (s / seagull
                  :location (c / country
                        :name (n / name
                              :op1 ""Spain"")))
            :ARG1-of (c2 / cause-01
                  :ARG0 (q / quarantine-01
                        :ARG0 (d / disease
                              :name (n2 / name
                                    :op1 ""coronavirus"")))))
      :op2 (f2 / follow-01
            :ARG0 s
            :ARG1 (p / person)
            :time (l / leave-11
                  :ARG0 p
                  :ARG1 (s2 / supermarket))))"
"(m / multi-sentence
      :snt1 (t / teach-01
            :ARG0 (t2 / treaty
                  :name (n / name
                        :op1 ""COVID""
                        :op2 19)
                  :mod (t3 / this))
            :ARG1 (a / and
                  :op1 (p / productive-03
                        :ARG0 (w / we))
                  :op2 (s / suffice-01
                        :ARG0 w
                        :ARG1 w))
            :ARG2 w)
      :snt2 (c / close-01
            :ARG0 (c2 / country
                  :name (n2 / name
                        :op1 ""Botswana""))
            :ARG1 (b / border
                  :poss c2)
            :purpose (p2 / protect-01
                  :ARG0 c2
                  :ARG1 (c3 / citizen
                        :poss c2))))"
"(l / let-01
      :ARG1 (p / pray-01
            :ARG0 (w / we
                  :mod (a / all)
                  :ARG1-of (a2 / affect-01
                        :ARG0 (d / disease
                              :name (n / name
                                    :op1 ""CODID-19"")))
                  :ARG2-of (ii / include-01
                        :ARG1 (a3 / and
                              :op1 (p2 / patient)
                              :op2 (p3 / person
                                    :ARG0-of (w2 / work-01
                                          :ARG2 (g / government-organization
                                                :name (n2 / name
                                                      :op1 ""NHS"")))
                                    :ARG0-of (b / brave-02)
                                    :ARG1-of (b2 / brilliant-01)
                                    :poss w)
                              :op3 (p4 / person
                                    :ARG0-of (c / care-03))
                              :op4 (p5 / person
                                    :ARG0-of (w3 / work-01
                                          :ARG2 (e / educate-01)))
                              :op5 (p6 / person
                                    :ARG0-of (d2 / drive-01
                                          :ARG1 (d3 / deliver-01)))
                              :op6 (p7 / person
                                    :ARG0-of (w4 / work-01
                                          :ARG2 (s / supermarket)))
                              :op7 (p8 / person
                                    :ARG1-of (ii2 / isolate-01)
                                    :ARG2-of ii2)
                              :op8 (p9 / person
                                    :ARG0-of (d4 / distancing-01
                                          :ARG2 (s2 / society))))))))"
"(p / possible-01
      :ARG1 (b / buy-01
            :ARG0 (y / you)
            :ARG1 (p2 / pack
                  :consist-of (m / mask
                        :quant 50
                        :mod (f / face)))
            :ARG3 (p3 / product
                  :name (n / name
                        :op1 ""Sydney""
                        :op2 400))
            :location (o / online))
      :polarity (a / amr-unknown))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (d / drive-01
                  :ARG0 (ii / i)
                  :path (p / past
                        :op1 (r / road
                              :name (n / name
                                    :op1 ""Golf""
                                    :op2 ""Links""
                                    :op3 ""Road""))))
            :op2 (d2 / disgust-01
                  :ARG1 ii))
      :snt2 (g / great
            :domain (b / be-located-at-91
                  :ARG1 (p2 / person
                        :name (n2 / name
                              :op1 ""GardaTraffic""))
                  :ARG2 (c / company
                        :name (n3 / name
                              :op1 ""Lidl"")))))"
"(t / thank-01
      :ARG1 (p / person
            :ARG0-of (t2 / teach-01
                  :ARG1 (s / school))
            :mod (a / all)
            :ARG0-of (w / work-01
                  :ARG1 (p2 / pandemic
                        :name (n / name
                              :op1 ""COVID-19"")))))"
"(m / multi-sentence
      :snt1 (t / think-01
            :ARG0 (y / you)
            :ARG1 (p / possible-01
                  :ARG1 (a / and
                        :op1 (a2 / accept-01
                              :ARG0 (p2 / person
                                    :ARG0-of (h / have-org-role-91
                                          :ARG1 (s / supermarket)
                                          :ARG2 (c / cashier))
                                    :ARG1-of (l / local-02))
                              :ARG1 (m2 / mask
                                    :mod (f / face)
                                    :ARG1-of (r / reuse-01
                                          :ARG1-of p))
                              :consist-of (f2 / fabric))
                        :ARG1-of (l2 / legal-02))
                  :op2 (w / wear-01
                        :ARG0 p2
                        :ARG1 m2)))
      :polarity (a3 / amr-unknown)
      :condition (s2 / sew-01
            :ARG0 (ii / i)
            :ARG1 m2
            :ARG4 p2)
      :snt2 (w2 / want-01
            :ARG0 (t2 / they)
            :ARG1 m2
            :polarity (a4 / amr-unknown)))"
"(b / be-located-at-91
      :ARG2 (h / home)
      :time (m / meanwhile))"
"(r / rise-01
      :ARG1 (s / share
            :mod (c / continent
                  :name (n / name
                        :op1 ""Asia"")))
      :ARG1-of (c2 / cause-01
            :ARG0 (h / hope-01
                  :ARG1 (a / and
                        :op1 (n2 / near-01
                              :ARG1 (p / pandemic
                                    :name (n3 / name
                                          :op1 ""COVID""
                                          :op2 19))
                              :ARG2 (p2 / peak-01
                                    :ARG1 p))
                        :op2 (r2 / roll-out-02
                              :ARG0 (g / government-organization
                                    :ARG0-of (g2 / govern-01))
                              :ARG1 (s2 / stimulus
                                    :mod (m / more)))
                        :op3 (b / bolster-01
                              :ARG0 (e / expect-01
                                    :ARG1 (c3 / cut-02
                                          :ARG1 (p3 / produce-01
                                                :ARG1 (o / oil))))
                              :ARG1 (t / thing
                                    :ARG2-of (p4 / price-01
                                          :ARG1 o))))))
      :ARG1-of (h2 / have-degree-91
            :ARG2 (h3 / high-02
                  :ARG1 s)
            :ARG3 m))"
"(s / show-01
      :ARG0 (w / website
            :mod (t / this))
      :ARG1 (t2 / temporal-quantity
            :duration-of (r / roll-01
                  :ARG1 (p / paper
                        :purpose (t3 / toilet))
                  :poss (y / you)))
      :ARG2 y)"
"(f / fall-01
      :ARG1 (p / price-01
            :ARG1 (o / oil))
      :ARG1-of (c / cause-01
            :ARG0 (g / grow-01
                  :ARG1 (d / doubt-01
                        :ARG1 (d2 / deal-01
                              :ARG2 (c2 / cut-02
                                    :ARG1 (o2 / output)))))))"
"(m / multi-sentence
      :snt1 (s / sweep-06
            :ARG0 (ii / i)
            :ARG1 (s2 / supermarket)
            :location (c / city
                  :name (n / name
                        :op1 ""Alaldi""))
            :frequency (r / rate-entity-91
                  :ARG3 (t / temporal-quantity
                        :quant 1
                        :unit (w / week)))
            :prep-with (s3 / sun
                  :mod (c2 / cape)
                  :ARG1-of (h / have-quant-91
                        :polarity -
                        :ARG2 (m2 / many)
                        :ARG3 (s4 / so)
                        :ARG1-of (p / possible-01))))
      :snt2 (v / virus
            :mod (c3 / city
                  :name (n2 / name
                        :op1 ""Corona"")))
      :snt3 (v2 / virus
            :mod c3)
      :snt4 (p2 / product
            :name (n3 / name
                  :op1 ""Covid-19""))
      :snt5 (ii2 / isolate-01
            :ARG1 (s5 / self))
      :snt6 s
      :ARG0 (s6 / supermarket)
      :snt7 (u / update-02
            :ARG2 (v3 / virus
                  :mod c3))
      :snt8 (c4 / city
            :name (n4 / name
                  :op1 ""Corona""))
      :snt9 (s7 / state
            :name (n5 / name
                  :op1 ""NH"")))"
"(c / contrast-01
      :ARG1 (m / make-05
            :ARG0 (p / person
                  :ARG0-of (w / work-01
                        :ARG1 (g / grocery))
                  :location (s / state
                        :name (n / name
                              :op1 ""Michigan""))
                  :ARG0-of (s2 / serve-02
                        :ARG1 (c2 / customer)
                        :time (p2 / pandemic
                              :mod (c3 / coronavirus))))
            :ARG1 (m2 / money
                  :quant (l / lot))
            :ARG2 (o / overtime))
      :ARG2 (w2 / wonder-01
            :ARG0 p
            :ARG1 (t / truth-value
                  :polarity-of (p3 / put-03
                        :ARG0 (j / job
                              :poss p)
                        :ARG1 p
                        :ARG2 (r / risk-01
                              :ARG0 p
                              :ARG2 (g2 / get-01
                                    :ARG0 p
                                    :ARG1 (v / virus))))
                  :mod (a / also))))"
"(ii / increase-01
      :ARG1 (d / demand-01
            :ARG1 (ii2 / item
                  :mod (s / staple)
                  :example (a / and
                        :op1 (g / grain)
                        :op2 (m / milk)
                        :op3 (ii3 / item
                              :consist-of (p / paper))))
            :location (s2 / store
                  :mod (g2 / grocery)
                  :location (c / country
                        :name (n / name
                              :op1 ""US""))))
      :time (s3 / since
            :op1 (d2 / declare-01
                  :ARG0 (o / organization
                        :name (n2 / name
                              :op1 ""World""
                              :op2 ""Health""
                              :op3 ""Organization""))
                  :ARG2 (p2 / pandemic))))"
"(a / and
      :op1 (w / work-01
            :ARG0 (ii / i)
            :ARG1 (r / repair-01)
            :location (a2 / around
                  :op1 (r2 / room
                        :poss ii))
            :ARG2-of (ii2 / include-01
                  :ARG1 (f / fix-02
                        :ARG0 ii
                        :ARG1 (f2 / frame
                              :part-of (b / bed
                                    :poss ii)))))
      :op2 (f3 / finish-01
            :ARG0 ii
            :ARG1 (s / season
                  :ord (o / ordinal-entity
                        :value 1)
                  :part-of (b2 / broadcast-program
                        :name (n / name
                              :op1 ""Cloak""
                              :op2 ""and""
                              :op3 ""Dagger""))))
      :op3 (s2 / shop-01
            :ARG0 ii
            :ARG1 (c / computer
                  :mod (d / desktop))
            :ARG2 (w2 / window)
            :medium (o2 / online)
            :mod (s3 / some))
      :time (d2 / day
            :mod 25))"
"(d / dip-01
      :ARG1 (ii / inflation
            :mod (r / retail-01))
      :ARG2 (p / percentage-entity
            :value 5.91
            :time (d2 / date-entity
                  :month 3))
      :ARG3 (p2 / percentage-entity
            :value 6.58
            :time (d3 / date-entity
                  :month 2))
      :ARG1-of (l / likely-01
            :ARG1 (c / cause-01
                  :ARG0 (p3 / price-01
                        :ARG1 (a / and
                              :op1 (f / food)
                              :op2 (f2 / fuel))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (s / soft-02
                                    :ARG1 p3)
                              :ARG3 (m / more))
                        :ARG1-of (c2 / cause-01
                              :ARG0 (d4 / drop-01
                                    :ARG1 (d5 / demand-01
                                          :ARG1-of (s2 / slow-01
                                                :time (a2 / already)))
                                    :ARG1-of (l2 / likely-01)
                                    :ARG1-of (c3 / cause-01
                                          :ARG0 (l3 / lock-down-06
                                                :location (n / nationwide)
                                                :duration (t / temporal-quantity
                                                      :quant 21
                                                      :unit (d6 / day))
                                                :purpose (c4 / curb-01
                                                      :ARG1 (s3 / spread-02
                                                            :ARG1 (d7 / disease
                                                                  :name (n2 / name
                                                                        :op1 ""Covid-19""))))))))))))"
"(p / possible-01
      :ARG1 (h / help-01
            :ARG0 (y / you)
            :ARG1 (w / we)
            :time (n / now
                  :mod (r / right))
            :manner (w2 / way
                  :mod (b / big))))"
"(t / test-01
      :ARG1 (p / person
            :ARG1-of (e / employ-01
                  :ARG0 (l / location
                        :location (a / and
                              :op1 (l2 / location
                                    :name (n / name
                                          :op1 ""Westminster""))
                              :op2 (l3 / location
                                    :name (n2 / name
                                          :op1 ""Rutherford""))))))
      :ARG2 (p2 / positive)
      :ARG3 (p3 / percentage-entity
            :value 19))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (s / surgery-01
                  :ARG1 (ii / i)
                  :time (y / yesterday))
            :op2 (o / obligate-01
                  :ARG1 ii
                  :ARG2 (s2 / stand-01
                        :ARG2 (ii2 / in-line-04)
                        :purpose (g / get-05
                              :ARG1 ii
                              :ARG2 (s3 / store
                                    :mod (g2 / grocery))
                              :mod (j / just)))
                  :ARG1-of (c / cause-01
                        :ARG0 (b / buy-01
                              :mod (p / panic-01)
                              :mod (a2 / all)))
                  :time (n / now)))
      :snt2 (s4 / swell-01
            :ARG1 (p2 / person)
            :ARG1-of (s5 / sure-02)))"
"(m / multi-sentence
      :snt1 (r / recommend-01
            :ARG1 (h / have-03
                  :ARG0 (p / person
                        :ARG0-of (h2 / have-org-role-91
                              :ARG2 (m2 / minister
                                    :mod (p2 / prime)))
                        :poss (w / we))
                  :ARG1 (c / courage
                        :purpose (t / take-01
                              :polarity -
                              :ARG0 p
                              :ARG1 (b / bill-01
                                    :ARG3 (a / and
                                          :op1 (e / electricity)
                                          :op2 (g / gas)))
                              :ARG2 (p3 / province
                                    :ARG1-of (l / lock-down-03))))
                  :mod (a2 / at-least)))
      :snt2 (d / down-03
            :ARG1 (p4 / price-01
                  :ARG1 (p5 / petrol))
            :extent (w2 / way)
            :mod (t2 / too))
      :snt3 (d2 / die-01
            :ARG1 (b2 / business)
            :mod (a3 / also)
            :time (r2 / regime
                  :poss (y / you))))"
"(m / multi-sentence
      :snt1 (s / step-up-03
            :ARG0 (ii / industry
                  :mod (r / retail-01)
                  :location (c / country
                        :name (n / name
                              :op1 ""UK"")))
            :ARG1 (r2 / respond-01
                  :ARG0 ii
                  :ARG1 (l / law
                        :name (n2 / name
                              :op1 ""COVID-19"")))
            :ARG1-of (c2 / cause-01
                  :ARG0 (c3 / choose-01
                        :ARG0 (s2 / store
                              :quant (m2 / many))
                        :ARG1 (c4 / close-01
                              :ARG1 s2))))
      :snt2 (l2 / let-know-07
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (w / we)
            :ARG2 (n3 / notice-01
                  :ARG0 y
                  :ARG1 (c5 / close-01
                        :ARG1 (s3 / store)
                        :quant (a / any)
                        :location (o / or
                              :op1 (s4 / street
                                    :ARG1-of (h / high-02)
                                    :poss y)
                              :op2 (t / town
                                    :poss y)
                              :op3 (c6 / city
                                    :poss y)))
                  :polarity (a2 / amr-unknown))))"
"(n / news
      :mod (t / top)
      :topic (t2 / thing
            :manner-of (a / avoid-01
                  :ARG1 (c / criminal-organization
                        :name (n2 / name
                              :op1 ""COVID-19""))
                  :location (s / supermarket))))"
"(s / see-01
      :ARG0 (ii / i)
      :ARG1 (c / cart
            :quant 2
            :ARG1-of (f / full-09
                  :ARG2 (p / product
                        :name (n / name
                              :op1 ""Desperados""))))
      :location (s2 / store
            :mod (g / grocery))
      :time (y / yesterday))"
"(m / multi-sentence
      :snt1 (w / wear-01
            :ARG0 (ii / i)
            :ARG1 (m2 / mask
                  :ARG1-of (m3 / make-01
                        :ARG0 ii))
            :location (s / store
                  :mod (g / grocery))
            :time (t / today))
      :snt2 (t2 / think-01
            :ARG0 (ii2 / i)
            :ARG1 (w2 / wear-01
                  :ARG0 (p / person
                        :quant 2
                        :mod (o / other))
                  :ARG1 (m4 / mask)
                  :mod (t3 / too)))
      :snt3 (f / feel-01
            :ARG0 (ii3 / i)
            :ARG1 (c / contrast-01
                  :ARG1 (f2 / foolish
                        :degree (b / bit)
                        :domain ii3)
                  :ARG2 (s2 / safe-01
                        :ARG0 ii3
                        :mod (a / also)
                        :ARG2-of (h / have-degree-91
                              :ARG1 ii3
                              :ARG3 (m5 / more))))
            :ARG1-of (c2 / cause-01
                  :ARG0 (p2 / practice-01
                        :polarity -
                        :ARG0 (p3 / person)
                        :ARG1 (d / distance-01
                              :ARG1 p3
                              :ARG2 (s3 / society))
                        :mod (a2 / as-usual)))))"
"(r / recommend-01
      :ARG1 (t / thank-01
            :ARG1 (c / chain
                  :mod (s / supermarket)
                  :poss (w / we))
            :ARG2 (a / and
                  :op1 (p / plan-01
                        :ARG0 c
                        :ARG1 (e / emergency))
                  :op2 (s2 / support-01
                        :ARG0 c
                        :ARG1 (a2 / and
                              :op1 (g / group
                                    :ARG1-of (v / vulnerable-01))
                              :op2 (p2 / person
                                    :ARG2-of (s3 / staff-01
                                          :ARG0 (g2 / government-organization
                                                :name (n / name
                                                      :op1 ""NHS"")))))))))"
"(t / threaten-01
      :ARG0 (c / combine-01
            :ARG1 (c2 / coronavirus
                  :ARG1-of (n / new-01))
            :ARG2 (p / price-01
                  :ARG1 (o / oil)
                  :ARG1-of (f / fall-01)))
      :ARG2 (c3 / country
            :name (n2 / name
                  :op1 ""Iraq"")))"
"(p / possible-01
      :ARG1 (ii / interest-01
            :ARG2 (t / this)))"
"(s / say-01
      :ARG1 (t / talk-01
            :mode imperative
            :ARG0 (w / we)
            :ARG1 (c / coronavirus))
      :ARG2 (p / person
            :name (n / name
                  :op1 ""Flattenthecurve"")))"
"(m / multi-sentence
      :snt1 (m2 / madness
            :domain (t / this))
      :snt2 (l / likely-01
            :ARG1 (c / contagious
                  :domain (p / person
                        :ARG1-of (c2 / confirm-01
                              :ARG2 (h / have-03
                                    :ARG0 p
                                    :ARG1 (d / disease
                                          :name (n / name
                                                :op1 ""COVID-19""))))))
            :mod (s / still)
            :concession-of (p2 / possible-01
                  :ARG1 (t2 / think-01
                        :ARG0 p
                        :ARG1 (o / okay-04
                              :ARG1 (o2 / or
                                    :op1 (s2 / see-01
                                          :ARG0 p
                                          :ARG1 (p3 / person
                                                :ARG0-of (h2 / have-rel-role-91
                                                      :ARG1 p
                                                      :ARG2 (k / kid))))
                                    :op2 (g / go-02
                                          :ARG0 p
                                          :ARG4 (s3 / supermarket))))))))"
"(t / turn-02
      :ARG1 (p / palliative
            :mod (t2 / this)
            :ARG1-of (p2 / propose-01))
      :ARG2 (p3 / palliative
            :mod (s / sordid))
      :time (e / eventual))"
"(r / refuse-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Kroger""))
      :ARG1 (g / give-01
            :ARG0 c
            :ARG1 (l / leave-15
                  :ARG1-of (p / pay-01)
                  :ARG1-of (s / sick-05))
            :ARG2 (p2 / person
                  :ARG1-of (e / employ-01
                        :ARG0 c)
                  :mod (a / all)))
      :concession (b / be-located-at-91
            :ARG1 c
            :ARG2 (l2 / line
                  :mod (f / front)
                  :poss (p3 / pandemic
                        :mod (t / this)))))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (w / work-01
                  :ARG0 (ii / i)
                  :location (s / school
                        :ARG1-of (s2 / special-02))
                  :time (d / day
                        :mod (a2 / all)))
            :op2 (t / tell-01
                  :ARG1 (o / obligate-01
                        :ARG2 (r / remain-01
                              :ARG1 ii
                              :location (s3 / school)
                              :time (a3 / after
                                    :op1 (c / close-01
                                          :ARG1 s3))))
                  :ARG2 ii))
      :snt2 (a4 / and
            :op1 (b / be-located-at-91
                  :ARG1 (w2 / we)
                  :ARG2 (p / point
                        :mod (b2 / break-01
                              :ARG1 w2)))
            :op2 (c2 / come-01
                  :ARG1 w2
                  :ARG4 (h / home)
                  :time (t2 / try-01
                        :ARG0 w2
                        :ARG1 (b3 / buy-01
                              :ARG0 w2
                              :ARG1 (f / food)))))
      :snt3 (l / limit-01
            :polarity -
            :ARG0 (c3 / company
                  :name (n / name
                        :op1 ""Sainsburys""))
            :ARG1 (p2 / purchase-01))
      :snt4 (a5 / and
            :op1 (t3 / test-01
                  :ARG0 ii))
      :op2 (g / get-01
            :ARG0 ii
            :ARG1 (w3 / water
                  :quant (v / volume-quantity
                        :quant 6
                        :unit (b4 / bottle)
                        :mod (f2 / fizzy)))))"
"(p / possible-01
      :ARG1 (l / lead-03
            :ARG0 (s / system
                  :mod (f / food)
                  :ARG1-of (f2 / fragment-01)
                  :time (c / crisis))
            :ARG2 (s2 / shelf
                  :mod (s3 / supermarket)
                  :ARG1-of (e / empty-02)
                  :location (a / and
                        :op1 (c2 / country
                              :name (n / name
                                    :op1 ""Italy""))
                        :op2 (c3 / country
                              :name (n2 / name
                                    :op1 ""Spain""))))))"
"(c / cause-01
      :ARG0 (p / possible-01
            :ARG1 (a / anything))
      :ARG1 (p2 / possible-01
            :polarity -
            :ARG1 (t / tell-02
                  :ARG0 (ii / i)
                  :ARG1 (t2 / truth-value
                        :polarity-of (r / raise-01
                              :ARG0 (t3 / they)
                              :ARG1 (p3 / price-01)
                              :ARG1-of (c2 / cause-01
                                    :ARG0 (l / law
                                          :name (n / name
                                                :op1 ""CODID""
                                                :op2 19))))))))"
"(o / order-01
      :ARG0 (c / city
            :name (n / name
                  :op1 ""Miami""
                  :op2 ""Beach""))
      :ARG2 (r / require-01
            :ARG0 c
            :ARG1 (w / wear-01
                  :ARG0 (a / and
                        :op1 (p / person
                              :ARG1-of (e / employ-01
                                    :ARG2 (a2 / and
                                          :op1 (s / store
                                                :mod (g / grocery))
                                          :op2 (p2 / pharmacy)
                                          :op3 (r2 / restaurant)))
                              :mod (a3 / all)
                              :part (n2 / nose)
                              :part (m / mouth))
                        :op2 (p3 / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG1 a
                                    :ARG2 (c2 / customer))))
                  :ARG1 (c3 / cover-01
                        :ARG1 (f / face)
                        :purpose-of w)
                  :ARG1 (a4 / and
                        :op1 n2
                        :op2 m))
            :purpose (c4 / curb-01
                  :ARG0 a
                  :ARG1 (s2 / spread-02
                        :ARG1 (c5 / coronavirus))))
      :mod (e2 / emergency)
      :time (t / today))"
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG1 (n / need-01
                  :ARG0 (p / person
                        :mod (t / that)
                        :ARG1-of (ii / include-91
                              :ARG2 (y / you))
                        :ARG0-of (s2 / stockpile-01))
                  :ARG1 (s3 / stop-01
                        :ARG0 p
                        :ARG1 s2))
            :ARG2 p)
      :snt2 (p2 / possible-01
            :polarity -
            :ARG1 (g / get-01
                  :ARG0 (p3 / person
                        :ARG0-of (w / work-01)
                        :ARG0-of (t2 / try-01
                              :ARG1 (t3 / treat-03
                                    :ARG0 p3
                                    :ARG1 (p4 / person
                                          :ARG1-of (v / victimize-01
                                                :ARG0 (ii2 / incident
                                                      :name (n2 / name
                                                            :op1 ""Covid-19"")))))))
                  :ARG1 (f / food
                        :ARG1-of (f2 / fresh-04))
                  :mod (e / even))
            :ARG1-of (c / cause-01
                  :ARG0 (t4 / take-01
                        :ARG0 (y2 / you)
                        :ARG1 (e2 / everything)))))"
"(s / strange
      :domain (r / realize-01
            :ARG0 (p / planet
                  :mod (w / whole))
            :ARG1 (h / have-degree-91
                  :ARG1 (a / and
                        :op1 (d / doctor)
                        :op2 (n / nurse)
                        :op3 (p2 / person
                              :ARG0-of (k / keep-01
                                    :ARG1 (s2 / shop)))
                        :op4 (p3 / person
                              :ARG0-of (t / teach-01))
                        :op5 (p4 / person
                              :ARG2-of (s3 / staff-01
                                    :ARG1 (s4 / supermarket)))
                        :op6 (p5 / person
                              :ARG0-of (d2 / drive-01
                                    :ARG1 (d3 / deliver-01))))
                  :ARG2 (ii / important-01
                        :ARG1 a)
                  :ARG3 (m / more
                        :quant (f / far))
                  :ARG4 (a2 / and
                        :op1 (p6 / person
                              :ARG0-of (p7 / play-01
                                    :ARG1 (f2 / football)))
                        :op2 (p8 / person
                              :ARG0-of (a3 / act-01))
                        :op3 (c / celebrity)))
            :duration (t2 / temporal-quantity
                  :quant 1
                  :unit (w2 / week)
                  :mod (j / just))))"
"(e / edition
      :consist-of (p / paper
            :purpose (t / toilet))
      :domain (t2 / this))"
"(m / multi-sentence
      :snt1 (s / sing-01
            :ARG0 (ii / i)
            :ARG1 (r / remix
                  :mod (t / this))
            :time (g / go-02
                  :ARG0 ii
                  :ARG1 (s2 / store
                        :mod (g2 / grocery))
                  :time (b / before))
            :beneficiary (f / fan
                  :mod (a / all)
                  :mod (c / company
                        :name (n / name
                              :op1 ""Hustle""
                              :op2 ""&""
                              :op3 ""Flow""))
                  :location (o / out-there)
                  :poss ii))
      :snt2 (b2 / buy-up-02
            :ARG0 (a2 / amr-unknown)
            :ARG1 (s3 / steak
                  :mod (a3 / all))
            :ARG2-of (s4 / serious-01))
      :snt3 (g3 / get-03
            :ARG2 (r2 / real-04
                  :ARG1 (s5 / shop-01
                        :ARG3 (p / product
                              :name (n2 / name
                                    :op1 ""Coronavirus""))
                        :mod (t2 / this)))))"
"(r / recommend-01
      :ARG1 (t / take-down-22
            :ARG0 (p / platform
                  :mod (m / media
                        :mod (s / social)))
            :ARG1 (a / account
                  :ARG0-of (p2 / promote-02
                        :ARG1 (h / hysteria
                              :degree (m2 / mass))))))"
"(l / lock-down-06
      :ARG1 (c / country
            :name (n / name
                  :op1 ""UK""))
      :purpose (s / save-01
            :ARG1 (l2 / life)))"
"(m / multi-sentence
      :snt1 (a / and
            :op1 (c / cause-01
                  :ARG0 (p / price-01
                        :ARG1 (o / oil)
                        :ARG1-of (l / low-04))
                  :ARG1 (b / benefit-01
                        :ARG1 (g / government-organization
                              :ARG0-of (g2 / govern-01
                                    :ARG1 (c2 / country
                                          :name (n / name
                                                :op1 ""India""))))))
            :op2 (m2 / mean-01
                  :ARG1 b
                  :ARG2 (s / save-01
                        :ARG1 (m3 / monetary-quantity
                              :ARG1-of (b2 / bill-01
                                    :ARG3 (ii / import-01))))))
      :snt2 (p2 / possible-01
            :ARG1 (b3 / benefit-01
                  :ARG1 (m4 / monetary-quantity
                        :quant 1700000000
                        :unit (r / rupee))
                  :time (a2 / after
                        :op1 (n2 / now)
                        :duration (t / temporal-quantity
                              :quant 6
                              :unit (m5 / month)
                              :mod (a3 / alone)))))
      :snt3 (p3 / possible-01
            :ARG1 (u / use-01
                  :ARG0 (g3 / government-organization
                        :ARG0-of (g4 / govern-01
                              :ARG1 c2))
                  :ARG1 (ii2 / it)
                  :ARG2 (t2 / thing))
            :condition (s2 / save-01
                  :ARG1 (m6 / monetary-quantity
                        :ARG1-of (b4 / bill-01
                              :ARG3 (ii3 / import-01)))
                  :mod (k / kind
                        :mod (t3 / that)))))"
"(r / reiterate-01
      :ARG0 (o / organization
            :name (n / name
                  :op1 ""Dubai""
                  :op2 ""Economy""))
      :ARG1 (s / suffice-01
            :ARG0 (s2 / stock-01
                  :ARG1 (a / and
                        :op1 (c / commodity
                              :mod (f / food))
                        :op2 (c2 / commodity
                              :mod (f2 / food
                                    :polarity -)))
                  :location (a2 / across
                        :op1 (o2 / outlet
                              :location (c3 / city
                                    :name (n2 / name
                                          :op1 ""Dubai"")))))
            :ARG1 (m / meet-01
                  :ARG0 s2
                  :ARG1 (r2 / require-01
                        :ARG0 (p / person
                              :ARG0-of (r3 / reside-01))
                        :time (t / term
                              :ARG1-of (n3 / near-02)
                              :ARG1-of (h / have-degree-91
                                    :ARG2 (l / long-03
                                          :ARG1 t)
                                    :ARG3 (m2 / more)))))))"
"(t / thank-01
      :ARG1 (a / and
            :op1 (p / person
                  :ARG0-of (w / work-01
                        :ARG1 (m / medicine))
                  :poss (w2 / we))
            :op2 (p2 / person
                  :ARG1-of (e / employ-01
                        :ARG0 (s / store
                              :mod (g / grocery))))
            :op3 (p3 / person
                  :ARG0-of (d / drive-01
                        :ARG1 (t2 / truck)))
            :op4 (p4 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (m2 / military
                              :name (n / name
                                    :op1 ""National""
                                    :op2 ""Guard"")))))
      :ARG2 (a2 / and
            :op1 (k / keep-02
                  :ARG1 (t3 / turn-01
                        :ARG1 (w3 / wheel
                              :part-of (c / country
                                    :poss w2))))
            :op2 (s2 / step-up-03
                  :ARG1 (c2 / call-11
                        :ARG1 (d2 / duty)))
            :time (o / outbreak-29
                  :ARG1 (d3 / disease
                        :name n
                        :op1 ""coronavirus""))
            :mod (t4 / this)
            :ARG1-of (ii / include-91
                  :ARG2 (a3 / and
                        :op1 (o2 / organization
                              :name n
                              :op1 ""COVID19""
                              :op2-of ii)))))"
"(m / multi-sentence
      :snt1 (r / right-06
            :ARG1 (w / we)
            :ARG2 (n / need-01
                  :ARG0 w
                  :ARG1 (g / get-back-10
                        :ARG1 (p / process-01
                              :ARG1 (m2 / meat
                                    :poss w))
                        :ARG2 (c / country
                              :name (n2 / name
                                    :op1 ""USA"")))))
      :snt2 (ii / issue-01
            :ARG0 (c2 / company
                  :name (n3 / name
                        :op1 ""Smithfield"")
                  :ARG1-of (ii2 / include-91
                        :ARG2 (c3 / company
                              :ARG0-of (p2 / produce-01
                                    :ARG1 (m3 / meat))
                              :ARG1-of (h / have-degree-91
                                    :ARG2 (l / large)
                                    :ARG3 (m4 / most)
                                    :ARG5 (c4 / country
                                          :name (n4 / name
                                                :op1 ""America""))))))
            :ARG1 (w2 / warn-01
                  :ARG0 c2
                  :ARG1 (p3 / potential
                        :domain (ii3 / impact-01
                              :ARG0 (c5 / coronavirus)
                              :ARG1 (s / supply-01
                                    :ARG2 (s2 / store
                                          :mod (g2 / grocery))))))))"
"(c / cause-01
      :ARG0 (a / amr-unknown)
      :ARG1 (h / high-02
            :ARG1 (t / thing
                  :ARG2-of (p / price-01
                        :ARG1 (g / gas)))
            :degree (s / so)
            :location (a2 / area
                  :name (n / name
                        :op1 ""Crestview""))))"
"(d / do-02
      :ARG0 (y / you)
      :ARG1 (a / amr-unknown)
      :ARG2 (h / help-01
            :ARG0 y
            :ARG1 (p / person
                  :mod (t / this)
                  :ARG1-of (v / vulnerable-01)
                  :mod (e / elderly)
                  :ARG0-of (r / rely-01
                        :ARG1 (s / shop-01
                              :ARG0 p
                              :medium (o / online))
                        :ARG1-of (c / contrast-01
                              :ARG2 (g / get-01
                                    :ARG0 p
                                    :ARG1 (s2 / slot
                                          :quant (a2 / any))
                                    :ARG1-of (p2 / possible-01
                                          :polarity -)))))))"
"(m / multi-sentence
      :snt1 (p / provide-01
            :ARG0 (g / government-organization
                  :name (n / name
                        :op1 ""White""
                        :op2 ""House""
                        :op3 ""Coronavirus""
                        :op4 ""Task""
                        :op5 ""Force""))
            :ARG1 (u / update-02
                  :ARG1 (p2 / product
                        :name (n2 / name
                              :op1 ""COVID-19"")))
            :time (b / brief))
      :snt2 (p3 / possible-01
            :ARG1 (w / watch-01
                  :ARG0 (y / you)
                  :ARG1 u)
            :location (u2 / url-entity
                  :value ""https://www.whitehouse.gov/live/"")))"
(a / amr-empty)
"(m / multi-sentence
      :snt1 (s / say-01
            :ARG1 (h / hi)
            :ARG2 (p / person
                  :name (n / name
                        :op1 ""Simon"")))
      :snt2 (c / contrast-01
            :ARG1 (p2 / plan-01
                  :ARG0 (w / we)
                  :ARG1 (t / trip-03
                        :ARG0 w
                        :ARG1 (c2 / country
                              :name (n2 / name
                                    :op1 ""New""
                                    :op2 ""Zealand""))
                        :time (d / date-entity
                              :month 2
                              :year 2021)))
            :ARG2 (p3 / put-on-hold-09
                  :ARG0 w
                  :ARG1 t
                  :ARG1-of (c3 / cause-01
                        :ARG0 (l / law
                              :name (n3 / name
                                    :op1 ""CODID-19"")))))
      :snt3 (f / feel-02
            :ARG0 (ii / i)
            :ARG1 (r / risk-01
                  :ARG0 (y / you)
                  :ARG2 (b / book-03
                        :ARG0 y)
                  :time (n4 / now))
            :mod (g / gut))
      :snt4 (l2 / look-02
            :ARG1 (a / and
                  :op1 (t2 / take-01
                        :ARG0 (c4 / company)
                        :ARG1 (b2 / book-03)
                        :mod (a2 / again))
                  :op2 (s2 / start-01
                        :ARG1 (c5 / creep-01
                              :ARG1 (p4 / price-01
                                    :ARG1 (f2 / fly-01))
                              :direction (u / up))))
            :time (n5 / now)))"
"(r / recipe
      :mod (s / secret)
      :ARG1-of (e / experience-01
            :ARG0 (ii / i))
      :domain (t / treat-03
            :ARG2 (d / disease
                  :name (n / name
                        :op1 ""Covid-19""))
            :mod (f / food)
            :location (s2 / supermarket)
            :condition (a / as-long-as
                  :op1 (t2 / take-01
                        :frequency 1
                        :ARG0 ii
                        :ARG1 (ii2 / it))
                  :op2 (a2 / and
                        :op1 (d2 / disappear-01
                              :ARG1 (p / phlegm))
                        :op2 (r2 / recover-01
                              :ARG1 (b / breathe-01)
                              :ARG1-of (s3 / smooth-04))))))"
"(c / confront-01
      :ARG0 (s / see-01
            :ARG1 (d / distance
                  :extent-of (p / possible-01
                        :ARG1 (t / travel-01
                              :ARG0 (c2 / cough-01
                                    :ARG0 (p2 / person))
                              :time (ii / infect-01
                                    :ARG1 p2))))))"
"(p / possible-01
      :ARG1 (c / change-01
            :ARG0 (s / sanitizer
                  :instrument-of (h / hand))
            :ARG1 (l / level
                  :mod (p2 / ph)
                  :mod (s2 / skin))
            :ARG0-of (m / make-02
                  :ARG1 (h2 / have-degree-91
                        :ARG1 (y / you)
                        :ARG2 (v / vulnerable-01
                              :ARG1 y
                              :ARG2 (c2 / coronavirus))
                        :ARG3 (m2 / more))))
      :polarity (a / amr-unknown))"
"(f / find-01
      :ARG0 (ii / i)
      :ARG1 (p / paper
            :purpose (t / toilet)
            :mod (s / square))
      :location (c / company
            :name (n / name
                  :op1 ""eBay"")))"
